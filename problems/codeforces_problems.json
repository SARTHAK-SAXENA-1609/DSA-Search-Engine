[
  {
    "title": "Like the Bitset",
    "url": "https://codeforces.com/problemset/problem/2136/B",
    "description": "  You are given a binary string∗^{\\text{∗}} ss of length nn, as well as an integer kk.Aquawave wants to construct a permutation†^{\\text{†}} pp of length nn, so that for each 1≤i≤n1\\le i\\le n, where si=1s_i=\\mathtt{1}, the following holds:  For each interval [l,r][l, r] (1≤l≤r≤n1\\le l\\le r\\le n) whose length is at least kk (i.e. r−l+1≥kr - l + 1 \\geq k), if it covers position ii (i.e. l≤i≤rl \\leq i \\leq r), then the maximum element among pl,pl+1,…,prp_l, p_{l+1}, \\ldots, p_r is not pip_i. Note that there are no such constraints on indices with si=0s_i = \\mathtt{0}.You have to find such a permutation, or determine that such permutations do not exist.∗^{\\text{∗}}A binary string is a string where each character is either 0\\mathtt{0} or 1\\mathtt{1}.†^{\\text{†}}A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array). "
  },
  {
    "title": "In the Dream",
    "url": "https://codeforces.com/problemset/problem/2136/A",
    "description": "Two football teams, the RiOI team and the KDOI team, are about to have a football match. A football match consists of two halves — the first half and the second half. At the beginning of the match, both teams have a score of $$$0$$$.As a fan of both teams, Aquawave knows that the two teams have similar levels, so neither team will score three consecutive goals in the same half.Aquawave had a dream the night before the match, in which:  The score at the end of the first half was $$$a:b$$$, where $$$a$$$ is the score of the RiOI team, and $$$b$$$ is the score of the KDOI team;  And, the score at the end of the second half was $$$c:d$$$, where $$$c$$$ is the score of the RiOI team, and $$$d$$$ is the score of the KDOI team. You have to determine whether Aquawave's dream can come true according to the above information."
  },
  {
    "title": "To the Infinity",
    "url": "https://codeforces.com/problemset/problem/2135/F",
    "description": "    You are given a full binary tree$$$^{\\text{∗}}$$$ of $$$n$$$ nodes, rooted at node $$$1$$$. For each node $$$u$$$ ($$$1\\le u\\le n$$$), we define function $$$f_u : \\mathbb R_+ \\to \\mathbb R_+$$$ as follows:  If $$$u$$$ is a leaf$$$^{\\text{†}}$$$, then $$$f_u(x)=x$$$;  Otherwise, denote the left child of $$$u$$$ as $$$l_u$$$ and the right child of $$$u$$$ as $$$r_u$$$, then $$$f_u(x)=(f_{l_u}(x))^{f_{r_u}(x)}$$$. For two nodes $$$u$$$ and $$$v$$$, we say $$$u\\prec v$$$ if and only if one of the following holds:  $$$f_{u}(x)<f_{v}(x)$$$ when $$$x\\to\\infty$$$;  $$$u<v$$$, and $$$f_{u}(x)=f_{v}(x)$$$ when $$$x\\to\\infty$$$$$$^{\\text{‡}}$$$. It can be shown that for any two distinct nodes $$$u$$$ and $$$v$$$, either $$$u\\prec v$$$ or $$$v\\prec u$$$ holds. You have to sort the nodes by order $$$\\prec$$$. Formally, you need to find a permutation$$$^{\\text{§}}$$$ $$$p$$$ of length $$$n$$$, such that for every $$$1\\le i<n$$$, $$$p_i\\prec p_{i+1}$$$.$$$^{\\text{∗}}$$$A full binary tree is a rooted tree, in which each node has $$$0$$$ or $$$2$$$ children. $$$^{\\text{†}}$$$A leaf is any vertex without children. $$$^{\\text{‡}}$$$Here, $$$f_u(x) < f_v(x)$$$ when $$$x\\to\\infty$$$ is equivalent to the following description: there exists a positive number $$$N$$$ such that for all $$$x > N$$$, $$$f_u(x) < f_v(x)$$$ holds. The same is defined for $$$f_u(x) = f_v(x)$$$ when $$$x\\to \\infty$$$.$$$^{\\text{§}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Beyond the Palindrome (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2135/E2",
    "description": "   This is the hard version of the problem. The difference between the versions is that in this version, $$$n\\le 2\\cdot 10^7$$$, and the sum of $$$n$$$ over all test cases does not exceed $$$10^8$$$. You can hack only if you solved all versions of this problem. For a binary string$$$^{\\text{∗}}$$$ $$$r$$$, we define $$$f(r)$$$ as the result of the following process: Delete all $$$\\texttt{10}$$$ substrings$$$^{\\text{†}}$$$ simultaneously from $$$r$$$;  Repeat the above operation until there are no $$$\\texttt{10}$$$ substrings in $$$r$$$.For example, $$$f(\\mathtt{100110001})=\\mathtt{001}$$$ because $$$r$$$ changes as follows: $$$\\mathtt{\\underline{10}01\\underline{10}001}\\to \\mathtt{0\\underline{10}01}\\to\\mathtt{001}$$$.We call a binary string $$$s$$$ almost-palindrome if and only if $$$f(s)=f(\\mathrm{rev}(s))$$$$$$^{\\text{‡}}$$$.Aquawave has given you an integer $$$n$$$. You have to help him find the number of distinct almost-palindrome binary strings of length $$$n$$$, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A binary string is a string where each character is either $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. $$$^{\\text{‡}}$$$$$$\\mathrm{rev}(s)$$$ is the string obtained by writing $$$s$$$ from right to left. For example, $$$\\mathrm{rev(\\mathtt{10100})=\\mathtt{00101}}$$$."
  },
  {
    "title": "Beyond the Palindrome (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2135/E1",
    "description": "   This is the easy version of the problem. The difference between the versions is that in this version, $$$n\\le 10^6$$$, and the sum of $$$n$$$ over all test cases does not exceed $$$10^6$$$. You can hack only if you solved all versions of this problem. For a binary string$$$^{\\text{∗}}$$$ $$$r$$$, we define $$$f(r)$$$ as the result of the following process: Delete all $$$\\texttt{10}$$$ substrings$$$^{\\text{†}}$$$ simultaneously from $$$r$$$;  Repeat the above operation until there are no $$$\\texttt{10}$$$ substrings in $$$r$$$.For example, $$$f(\\mathtt{100110001})=\\mathtt{001}$$$ because $$$r$$$ changes as follows: $$$\\mathtt{\\underline{10}01\\underline{10}001}\\to \\mathtt{0\\underline{10}01}\\to\\mathtt{001}$$$.We call a binary string $$$s$$$ almost-palindrome if and only if $$$f(s)=f(\\mathrm{rev}(s))$$$$$$^{\\text{‡}}$$$.Aquawave has given you an integer $$$n$$$. You have to help him find the number of distinct almost-palindrome binary strings of length $$$n$$$, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A binary string is a string where each character is either $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. $$$^{\\text{‡}}$$$$$$\\mathrm{rev}(s)$$$ is the string obtained by writing $$$s$$$ from right to left. For example, $$$\\mathrm{rev(\\mathtt{10100})=\\mathtt{00101}}$$$."
  },
  {
    "title": "From the Unknown (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2135/D2",
    "description": "   This is the hard version of the problem. The difference between the versions is that in this version, the sum of the lengths of the articles over all queries must not exceed $$$2.5\\cdot 10^4$$$. You can hack only if you solved all versions of this problem. This is an interactive problem. The RiOI Team has recently developed a text editor named RiOI Editor. The editor works with exactly one integer parameter $$$W$$$ — the width of each line. It is known that $$$1 \\leq W \\leq 10^5$$$.As you cannot understand the RiOI Language, from your point of view, words differ from each other only by their length. Hence, an article of length $$$n$$$ is defined as a sequence $$$a$$$ consisting of $$$n$$$ positive integers, where $$$a_i$$$ is the length of the $$$i$$$-th word in the article. The RiOI Editor displays the article $$$[a_1, a_2,\\ldots, a_n]$$$ on screen as follows:  If $$$\\max(a_1, a_2, \\ldots, a_n) > W$$$, the editor is unable to display the article;  Otherwise, the editor is able to display the article by the following process:   Initially, $$$l = 1$$$, and $$$s = 0$$$. During the whole process, $$$l$$$ always denotes the current number of lines in the editor, and $$$s$$$ always denotes the sum of lengths of words in the last line;  Then, for each $$$1\\le i\\le n$$$:   If $$$s + a_i \\leq W$$$, the word is inserted at the end of the current line. Thus, $$$l$$$ remains unchanged, and $$$s$$$ gets increased by $$$a_i$$$.  Otherwise, the word is inserted into a new line. Thus, $$$l$$$ becomes $$$l + 1$$$, and $$$s$$$ becomes $$$a_i$$$.   The number of lines needed to display the article is the final value of $$$l$$$.  You are very interested in the editor, so you decide to find out the value of $$$W$$$ by inputting some articles into the editor and observing the number of lines needed to display each article. Formally, you can query the jury at most $$$2$$$ times. In each query, you input an article $$$[a_1, a_2, \\ldots, a_n]$$$ ($$$1\\leq n \\leq 10^5$$$) to the editor, and the jury will respond to you with:  The number of lines needed to display the article, if the editor is able to display it;  $$$0$$$, if the editor is unable to display the article. Additional constraint in this version: the sum of the lengths of the articles (i.e., $$$n$$$) over all queries must not exceed $$$2.5\\cdot 10^4$$$."
  },
  {
    "title": "From the Unknown (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2135/D1",
    "description": "   This is the easy version of the problem. The difference between the versions is that in this version, there are no constraints on the sum of the lengths of the articles over all queries. You can hack only if you solved all versions of this problem. This is an interactive problem. The RiOI Team has recently developed a text editor named RiOI Editor. The editor works with exactly one integer parameter $$$W$$$ — the width of each line. It is known that $$$1 \\leq W \\leq 10^5$$$.As you cannot understand the RiOI Language, from your point of view, words differ from each other only by their length. Hence, an article of length $$$n$$$ is defined as a sequence $$$a$$$ consisting of $$$n$$$ positive integers, where $$$a_i$$$ is the length of the $$$i$$$-th word in the article. The RiOI Editor displays the article $$$[a_1, a_2,\\ldots, a_n]$$$ on screen as follows:  If $$$\\max(a_1, a_2, \\ldots, a_n) > W$$$, the editor is unable to display the article;  Otherwise, the editor is able to display the article by the following process:   Initially, $$$l = 1$$$, and $$$s = 0$$$. During the whole process, $$$l$$$ always denotes the current number of lines in the editor, and $$$s$$$ always denotes the sum of lengths of words in the last line;  Then, for each $$$1\\le i\\le n$$$:   If $$$s + a_i \\leq W$$$, the word is inserted at the end of the current line. Thus, $$$l$$$ remains unchanged, and $$$s$$$ gets increased by $$$a_i$$$.  Otherwise, the word is inserted into a new line. Thus, $$$l$$$ becomes $$$l + 1$$$, and $$$s$$$ becomes $$$a_i$$$.   The number of lines needed to display the article is the final value of $$$l$$$.  You are very interested in the editor, so you decide to find out the value of $$$W$$$ by inputting some articles into the editor and observing the number of lines needed to display each article. Formally, you can query the jury at most $$$2$$$ times. In each query, you input an article $$$[a_1, a_2, \\ldots, a_n]$$$ ($$$1\\leq n \\leq 10^5$$$) to the editor, and the jury will respond to you with:  The number of lines needed to display the article, if the editor is able to display it;  $$$0$$$, if the editor is unable to display the article. "
  },
  {
    "title": "By the Assignment",
    "url": "https://codeforces.com/problemset/problem/2135/C",
    "description": " For an undirected connected graph of $$$n$$$ vertices, where the $$$i$$$-th vertex has a weight of $$$v_i$$$, we define the value of a simple path$$$^{\\text{∗}}$$$ $$$l_1, l_2, \\ldots, l_m$$$ as $$$v_{l_1}\\oplus v_{l_2}\\oplus\\cdots\\oplus v_{l_m}$$$$$$^{\\text{†}}$$$. We call the graph balanced if and only if:  For every $$$1\\le p<q\\le n$$$, all simple paths from $$$p$$$ to $$$q$$$ have the same value. Aquawave has given you an undirected connected graph of $$$n$$$ vertices and $$$m$$$ edges, and the $$$i$$$-th vertex in the graph has a weight of $$$a_i$$$. However, some of the weights are missing, represented by $$$-1$$$.Aquawave wants to assign an integer weight between $$$0$$$ and $$$V-1$$$ to each vertex with $$$a_i=-1$$$, so that the graph will be balanced.You have to help Aquawave find the number of ways to assign weights to achieve the goal, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A simple path from $$$c$$$ to $$$d$$$ is a sequence of vertices $$$l_1, l_2, \\ldots, l_m$$$, where $$$l_1=c$$$, $$$l_m=d$$$, such that there is an edge between $$$l_i$$$ and $$$l_{i+1}$$$ for every $$$1\\le i\\le m-1$$$, and there are no repeated vertices, i.e. $$$l_i\\ne l_j$$$ for $$$1\\le i<j\\le n$$$. $$$^{\\text{†}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. "
  },
  {
    "title": "For the Champion",
    "url": "https://codeforces.com/problemset/problem/2135/B",
    "description": " This is an interactive problem.The RiOI team is hosting a robot championship! This time, your robot is teleported into an infinite 2D plane with the Cartesian coordinate system on it. There are $$$n$$$ anchor points on the plane, and the coordinates of the $$$i$$$-th anchor point are $$$(x_i, y_i)$$$ ($$$-10^9\\le x_i,y_i\\le 10^9$$$). These are given to your robot by the jury as soon as it is teleported into the plane. However, your robot doesn't know its initial coordinates at first.To test the IQ of your robot, the RiOI team has come up with an interesting game. Your robot needs to find out the initial coordinates $$$(X, Y)$$$ ($$$-10^9\\le X, Y\\le 10^9$$$) by making the following moves.In one move, assuming that its current coordinates are $$$(a,b)$$$, your robot can choose a non-negative integer $$$k$$$ ($$$0\\le k\\le 10^9$$$) and do one of the following four types of operations:  Move up by $$$k$$$ units, i.e., your robot will move to $$$(a,b+k)$$$;  Move down by $$$k$$$ units, i.e., your robot will move to $$$(a,b-k)$$$;  Move left by $$$k$$$ units, i.e., your robot will move to $$$(a-k,b)$$$;  Move right by $$$k$$$ units, i.e., your robot will move to $$$(a+k,b)$$$. After each move, the jury will give the minimum Manhattan Distance between the current coordinates of your robot and any anchor point. More formally, assuming that the coordinates of your robot are $$$(c,d)$$$ after the move, the jury will output$$$$$$ \\min_{1\\le i\\le n}\\left ( \\left|x_i-c\\right|+\\left|y_i-d\\right|\\right ). $$$$$$To win the prize, you must prove that your robot has a high IQ. So you have to write a program for your robot to find its initial coordinates $$$(X, Y)$$$ in no more than $$$10$$$ moves."
  },
  {
    "title": "Against the Difference",
    "url": "https://codeforces.com/problemset/problem/2135/A",
    "description": "  We define that a block is an array where all elements in it are equal to the length of the array. For example, $$$[3, 3, 3]$$$, $$$[1]$$$, and $$$[4, 4, 4, 4]$$$ are blocks, while $$$[1, 1, 1]$$$ and $$$[2, 3, 3]$$$ are not.An array is called neat if it can be obtained by the concatenation of an arbitrary number of blocks (possibly zero). Note that an empty array is always neat.You are given an array $$$a$$$ consisting of $$$n$$$ integers. Find the length of its longest neat subsequence$$$^{\\text{∗}}$$$. $$$^{\\text{∗}}$$$A sequence $$$c$$$ is a subsequence of a sequence $$$a$$$ if $$$c$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Permutation Oddness",
    "url": "https://codeforces.com/problemset/problem/2134/F",
    "description": "  You are given four positive integers $$$c_0$$$, $$$c_1$$$, $$$c_2$$$, and $$$c_3$$$.Let $$$n = c_0 + c_1 + c_2 + c_3$$$. Consider an array $$$a$$$ of $$$n$$$ integers with $$$x$$$ ($$$0\\le x\\le 3$$$) appearing $$$c_x$$$ times. For any distinct permutation$$$^{\\text{∗}}$$$ $$$b$$$ of the array $$$a$$$, define its oddness as$$$^{\\text{†}}$$$$$$^{\\text{‡}}$$$:$$$$$$\\sum_{i = 1}^{n-1} \\text{lowbit}(b_i \\oplus b_{i+1})$$$$$$Your task is to count, for each integer $$$k$$$ from $$$0$$$ to $$$2 \\cdot (n-1)$$$ (inclusive), the number of distinct permutations of $$$a$$$ with an oddness equal to $$$k$$$.Since the numbers might be too large, you are only required to find them modulo $$$10^9 + 7$$$.$$$^{\\text{∗}}$$$A permutation of the array is an arrangement of its elements into any order. For example, $$$[1,2,2]$$$ is a permutation of $$$[2,2,1]$$$, but $$$[1,1,2]$$$ is not. Two permutations are considered distinct if they differ in at least one position.$$$^{\\text{†}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. $$$^{\\text{‡}}$$$$$$\\text{lowbit}(x)$$$ is the value of the lowest binary bit of $$$x$$$, e.g. $$$\\text{lowbit}(12)=4$$$, $$$\\text{lowbit}(8)=8$$$. Specifically, we define $$$\\text{lowbit}(0) = 0$$$."
  },
  {
    "title": "Power Boxes",
    "url": "https://codeforces.com/problemset/problem/2134/E",
    "description": " This is an interactive problem.You are given $$$n$$$ boxes, indexed from $$$1$$$ to $$$n$$$. The boxes look identical, but each one has a hidden power value $$$a_i$$$, which is either $$$1$$$ or $$$2$$$.You want to determine the power value of each box. To do so, you conduct the following experiment. Initially, the $$$i$$$-th box is placed at coordinate $$$i$$$ on a number line ($$$1 \\le i \\le n$$$).You are allowed to perform the following two types of queries:  \"swap $$$x$$$\" ($$$1 \\le x \\le n - 1$$$): Swap the boxes currently located at coordinates $$$x$$$ and $$$x + 1$$$. Note that this change is permanent and affects all subsequent queries.  \"throw $$$x$$$\" ($$$1 \\le x \\le n$$$): Throw a ball at the box located at coordinate $$$x$$$. The ball travels $$$p$$$ units forward to coordinate $$$x + p$$$ if the power value of the box is $$$p$$$. If there is a box at the new coordinate, the ball jumps again using the power of that box. This continues until the ball lands on a coordinate without a box. As a response, you are given the total number of jumps the ball made before stopping. Your task is to determine the power value of each box using no more than $$$\\left\\lceil \\frac{3n}{2} \\right\\rceil$$$ queries in total, counting both swap and throw queries."
  },
  {
    "title": "Sliding Tree",
    "url": "https://codeforces.com/problemset/problem/2134/D",
    "description": "  You are given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$. You can modify its structure using the following multi-step operation, called a sliding operation:  Choose three distinct vertices $$$a$$$, $$$b$$$, and $$$c$$$ such that $$$b$$$ is directly connected to both $$$a$$$ and $$$c$$$.  Then, for every neighbor $$$d$$$ of $$$b$$$ (excluding $$$a$$$ and $$$c$$$), remove the edge between $$$b$$$ and $$$d$$$, and instead connect $$$d$$$ directly to $$$c$$$. For example, the figure below illustrates this operation with $$$a = 4$$$, $$$b = 3$$$, and $$$c = 5$$$ in the leftmost tree.  It can be proved that after a sliding operation, the resulting graph is still a tree.Your task is to find a sequence of sliding operations that transforms the tree into a path graph$$$^{\\text{†}}$$$, while minimizing the total number of operations. You only need to output the first sliding operation in an optimal sequence if at least one operation is required. It can be proved that it is possible to transform the tree into a path graph using a finite number of operations.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$A path graph is a tree where every vertex has a degree of at most $$$2$$$. Note that a graph with only $$$1$$$ vertex and no edges is also a path graph."
  },
  {
    "title": "Even Larger",
    "url": "https://codeforces.com/problemset/problem/2134/C",
    "description": "  An array is called good if, for every subarray$$$^{\\text{∗}}$$$ of length at least $$$2$$$, the sum of the elements at even indices (with respect to the original array) is greater than or equal to the sum of the elements at odd indices. Array indexing starts from $$$1$$$.For example, the arrays $$$[3,8,4,4]$$$ and $$$[2,3,1,4,2]$$$ are good. The array $$$[0,2,4,1]$$$ is not because, in the subarray $$$[2,4,1]$$$, the elements at even indices in the original array are $$$2$$$ (index $$$2$$$) and $$$1$$$ (index $$$4$$$), while the only element at an odd index is $$$4$$$ (index $$$3$$$). Since $$$2 + 1 < 4$$$, the condition does not hold for this subarray.You are given an array of $$$n$$$ non-negative integers $$$a_1,a_2,\\ldots,a_n$$$. In one operation, you can decrease any element in the array by $$$1$$$, but all elements must remain non-negative. Your task is to find the minimum number of operations needed to make the array $$$a$$$ good. It can be proved that it is possible to make the array good using a finite number of operations.$$$^{\\text{∗}}$$$An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Add 0 or K",
    "url": "https://codeforces.com/problemset/problem/2134/B",
    "description": " You are given an array of $$$n$$$ positive integers $$$a_1, a_2, \\ldots, a_n$$$ and a positive integer $$$k$$$.In one operation, you may add either $$$0$$$ or $$$k$$$ to each $$$a_i$$$, i.e., choose another array of $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ where each $$$b_i$$$ is either $$$0$$$ or $$$k$$$, and update $$$a_i$$$ to $$$a_i + b_i$$$ for $$$1 \\le i \\le n$$$. Note that you can choose different values for each element of the array $$$b$$$.Your task is to perform at most $$$k$$$ such operations to make $$$\\gcd(a_1, a_2, \\ldots, a_n) > 1$$$ $$$^{\\text{∗}}$$$. It can be proved that this is always possible.Output the final array after the operations. You do not have to output the operations themselves.$$$^{\\text{∗}}$$$$$$\\gcd(a_1, a_2, \\ldots, a_n)$$$ denotes the greatest common divisor (GCD) of $$$a_1, a_2, \\ldots, a_n$$$."
  },
  {
    "title": "Painting With Two Colors",
    "url": "https://codeforces.com/problemset/problem/2134/A",
    "description": "You are given three positive integers $$$n$$$, $$$a$$$, and $$$b$$$ ($$$1\\leq a,b \\leq n$$$).Consider a row of $$$n$$$ cells, initially all white and indexed from $$$1$$$ to $$$n$$$. You will perform the following two steps in order:  Choose an integer $$$x$$$ such that $$$1 \\le x \\le n - a + 1$$$, and paint the $$$a$$$ consecutive cells $$$x, x+1, \\ldots, x+a-1$$$ red.  Choose an integer $$$y$$$ such that $$$1 \\le y \\le n - b + 1$$$, and paint the $$$b$$$ consecutive cells $$$y, y+1, \\ldots, y+b-1$$$ blue. If a cell is painted both red and blue, its final color is blue.A coloring of the grid is considered symmetric if, for every integer $$$i$$$ from $$$1$$$ to $$$n$$$ (inclusive), the color of cell $$$i$$$ is the same as the color of cell $$$(n+1-i)$$$. Your task is to determine whether there exist integers $$$x$$$ and $$$y$$$ such that the final coloring of the grid is symmetric."
  },
  {
    "title": "Flint and Steel",
    "url": "https://codeforces.com/problemset/problem/2133/F",
    "description": " Steve's creeper farm has overflowed and there are creepers everywhere! There are $$$n$$$ creepers standing in a line, with the $$$i$$$-th creeper having explosive power $$$e_i$$$. Steve needs to kill all of them in order to get past.To do this, he can use his trusty Flint and Steel to detonate creepers. Detonating the creeper at position $$$i$$$ kills all creepers at positions $$$j$$$ such that $$$|i - j| < e_i$$$. Dead creepers cannot be detonated. Some creepers may be particularly weak and have explosive power $$$0$$$, meaning they cannot be detonated either.With the Great Hog hot on his tail, there is no time to waste. Find a sequence of detonations that kills all the creepers with as few detonations as possible, or report it is impossible."
  },
  {
    "title": "I Yearned For The Mines",
    "url": "https://codeforces.com/problemset/problem/2133/E",
    "description": "  As a child, Steve yearned for the mines! His mine can be represented as a tree$$$^{\\text{∗}}$$$ of $$$n$$$ nodes.Unfortunately, Steve's mine has been infiltrated by his greatest nemesis, Herobrine! At any time, Herobrine is hiding in exactly one node; initially, he may be in any of them. Steve can perform the following operations:  $$$1\\,\\,x$$$ — Check if Herobrine is currently in node $$$x$$$. If he is, Steve catches him. Otherwise, Herobrine may or may not move to any adjacent node (except the one you just checked).  $$$2\\,\\,x$$$ — Destroy all edges connected to node $$$x$$$; Herobrine will no longer be able to use them. Afterwards, Herobrine may or may not move to any adjacent node. Find a sequence of at most $$$\\left\\lfloor \\frac{5}{4} \\cdot n \\right\\rfloor$$$ operations that will guarantee Steve catches Herobrine, regardless of Herobrine's initial location and moves. We have a proof that, under the given constraints, this is always possible.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. "
  },
  {
    "title": "Chicken Jockey",
    "url": "https://codeforces.com/problemset/problem/2133/D",
    "description": " Steve made the foolish decision to mine at night, and came across a monstrous creature: the chicken jockey$$$^n$$$!A chicken jockey$$$^n$$$ consists of $$$n$$$ mobs stacked in order on top of each other, with mob $$$1$$$ at the bottom and mob $$$n$$$ at the top. Mob $$$i$$$ initially has $$$h_i$$$ health.In one attack, Steve can deal $$$1$$$ damage to any mob. If any mob reaches $$$0$$$ or less health, it dies, and all the mobs on top of it fall down and form a new stack. The bottom mob in the new stack takes $$$1$$$ fall damage for every mob it was on top of before falling (i.e. the number of mobs below it in the previous stack, including the one that just died). This may kill it as well, in which case all mobs on top of it fall down again and the process repeats.For example, consider a chicken jockey$$$^6$$$ with initial mob healths $$$[1, 2, 1, 3, 5, 2]$$$. If Steve damages the third mob in the stack, it dies and the mobs with health $$$[3, 5, 2]$$$ fall down in a new stack. The bottom mob takes $$$3$$$ units of fall damage so it also dies, and the mobs with health $$$[5, 2]$$$ fall down in a new stack. The bottom mob takes $$$1$$$ unit of fall damage. As a result, after Steve's first attack, there will be two stacks with healths $$$[1, 2]$$$ and $$$[4, 2]$$$.Steve's sword's durability is low, so he wishes to know the minimum attacks required to kill all the mobs."
  },
  {
    "title": "The Nether",
    "url": "https://codeforces.com/problemset/problem/2133/C",
    "description": "   This is an interactive problem. Having recently discovered The Nether, Steve has built a network of $$$n$$$ nether portals, each at a different location in his world.Each portal is connected in one direction to some number (possibly zero) of other portals. To avoid getting lost, Steve has carefully built the network of portals so that there is no sequence of jumps through portals that will bring you from a location back to itself; formally, the network forms a directed acyclic graph.Steve refuses to tell you which portals are connected to which, but he will allow you to ask queries. In each query, you give Steve a set of locations $$$S = \\{s_1, s_2, \\ldots, s_k\\}$$$ and a starting location $$$x \\in S$$$. Steve will figure out the longest path starting at $$$x$$$ that only passes through locations in $$$S$$$ and tell you the number of locations in it. (If it is impossible to reach any other location in $$$S$$$ from $$$x$$$, Steve will reply with $$$1$$$.)As you are looking to obtain the achievement \"Hot Tourist Destinations\", you want to find any path that visits as many locations as possible. Steve is feeling particularly generous and will give you $$$2 \\cdot n$$$ queries to find it."
  },
  {
    "title": "Villagers",
    "url": "https://codeforces.com/problemset/problem/2133/B",
    "description": " Steve lives in a village with $$$n$$$ other villagers. Unfortunately, due to disputes over the distribution of emeralds, none of those villagers are friends with any other villager. Furthermore, villager $$$i$$$ initially has a grumpiness of $$$g_i$$$.Steve can perform the following operation any number of times:  Select two villagers $$$i$$$ and $$$j$$$ and give them $$$\\text{max}(g_i, g_j)$$$ emeralds to share. Both of their grumpinesses decrease by $$$\\text{min}(g_i, g_j)$$$, and they become friends with each other if they weren't already. Steve wishes to make every villager friends with every other villager (possibly through some intermediate friendships); that is, from any villager, you can follow a path of friendships to reach any other villager. Since he does not want to inflate the village economy too much, calculate the minimum number of emeralds he must give away to accomplish this."
  },
  {
    "title": "Redstone?",
    "url": "https://codeforces.com/problemset/problem/2133/A",
    "description": " Steve stumbled upon a collection of $$$n$$$ gears, where gear $$$i$$$ has $$$a_i$$$ teeth, and he wants to arrange them into a row.After he arranges them, Steve will spin the leftmost gear at a speed of $$$1$$$ revolution per second. For each of the other gears, let $$$x$$$ be the number of teeth it has, $$$y$$$ be the number of teeth of the gear to its left, and $$$z$$$ be the speed the gear to its left spins at. Then, its speed will be $$$\\frac{y}{x} \\cdot z$$$ revolutions per second.Steve considers the contraption satisfactory if the rightmost gear spins at a speed of $$$1$$$ revolution per second. Determine whether Steve can rearrange the gears into a satisfactory contraption."
  },
  {
    "title": "Famous Choreographer",
    "url": "https://codeforces.com/problemset/problem/2132/G",
    "description": "As all programmers know, there are $$$n \\times m$$$ ballerinas performing in a ballet, and their arrangement can be represented as a table with $$$n$$$ rows and $$$m$$$ columns. Each ballerina performs one of $$$26$$$ movements, which can be described by one of the English letters.Choreographer Vadim wants to dispel this myth. To do this, he wants to stage a show in which all the ballerinas gracefully move to the opposite side of the stage from their starting positions. Programmers will find it easier to understand this movement as a $$$180^{\\circ}$$$ rotation of the table. To maintain the sequence of visual storytelling in the ballet, the ballerinas perform this movement instantaneously, without stopping their movements, and the final arrangement is identical to the initial one.Unfortunately, Vadim understands that with the current performance and the already planned arrangement of the ballerinas, such a maneuver will not be possible. Therefore, he is ready to invite more ballerinas to the performance. They can perform any movement and occupy any position, but they cannot stand between those already participating in a ballet. The most important thing is that in the end, a rectangular table is formed, possibly larger than the original one. Additionally, it is essential that at least one ballerina from the original arrangement moves to the position of one of the other ballerinas from the original arrangement or remains in her place. Please advise Vadim on the smallest number of ballerinas he will need to invite."
  },
  {
    "title": "Rada and the Chamomile Valley",
    "url": "https://codeforces.com/problemset/problem/2132/F",
    "description": "Yesterday, Rada found a portal that can transport her to the Chamomile Valley and back. Rada's happiness knew no bounds, but it didn't last long — she suddenly realized that she didn't know where and when any of the Smeshariki would be.The Chamomile Valley consists of $$$n$$$ houses and $$$m$$$ lanes connecting the houses. The lanes are numbered from $$$1$$$ to $$$m$$$. You can walk along the lanes in both directions. It is known that from any house, you can reach any other house via the lanes, and there is no lane connecting a house to itself. Moreover, any two houses are connected by at most one lane.Rada knows that the Smeshariki walk every day from house number $$$1$$$ to house number $$$n$$$, but she doesn't know which specific lanes they will take. Rada will be in the Chamomile Valley on each of the next $$$q$$$ days. On the $$$k$$$-th day, she will be at house number $$$c_k$$$.Since Rada does not know which specific lanes the Smeshariki will take, she is only interested in those lanes that they will definitely use. To ensure she does not miss any of them, she wants to know the index of the nearest such lane on each day. Rada is too busy strolling through the Chamomile Valley, so she asks you to help her determine the required lane indices.The distance from house $$$c$$$ to the lane connecting houses $$$a$$$ and $$$b$$$ is defined as the minimum of $$$\\rho(a, c)$$$ and $$$\\rho(b, c)$$$, where $$$\\rho(a, b)$$$ is the minimum number of lanes needed to reach house number $$$b$$$ starting from house number $$$a$$$."
  },
  {
    "title": "Arithmetics Competition",
    "url": "https://codeforces.com/problemset/problem/2132/E",
    "description": "In the arithmetic competition, participants need to achieve the highest possible sum from the cards they have. In the team \"fst_ezik\", Vadim has $$$n$$$ cards with numbers $$$a_i$$$, and Kostya has $$$m$$$ cards with numbers $$$b_i$$$. In each of the $$$q$$$ rounds, they want to win, but this time the rules of the competition are slightly different from the usual ones.In each round, the participants are given three numbers $$$x_i$$$, $$$y_i$$$, and $$$z_i$$$. The team \"fst_ezik\" must choose exactly $$$z_i$$$ cards from all the cards they have, but Vadim can choose no more than $$$x_i$$$ cards from his set, and Kostya can choose no more than $$$y_i$$$ cards from his set. Help them find the highest possible sum for each of the $$$q$$$ rounds."
  },
  {
    "title": "From 1 to Infinity",
    "url": "https://codeforces.com/problemset/problem/2132/D",
    "description": "Vadim wanted to understand the infinite sequence of digits that consists of the positive integers written consecutively from $$$1$$$ to infinity. That is, this sequence looks like $$$123456789101112131415 \\ldots$$$To avoid looking into infinity, Vadim cut this sequence at the $$$k$$$-th digit and discarded everything after it. Thus, exactly $$$k$$$ digits remained in the sequence. Help him find the sum of the digits in the remaining sequence."
  },
  {
    "title": "The Cunning Seller (hard version)",
    "url": "https://codeforces.com/problemset/problem/2132/C2",
    "description": "This is the hard version of the problem. The easy version differs from the hard one in that it requires determining the minimum cost with the least number of deals, while the hard version requires determining the minimum cost with a limited number of deals.After the cunning seller sold three watermelons instead of one, he decided to increase his profit — namely, he bought even more watermelons. Now he can sell $$$3^x$$$ watermelons for $$$3^{x+1} + x \\cdot 3^{x-1}$$$ coins, where $$$x$$$ is a non-negative integer. Such a sale is called a deal.A calculating buyer came to him, but he has little time, so the buyer can make no more than $$$k$$$ deals and plans to buy exactly $$$n$$$ watermelons.The buyer is in a hurry and has therefore turned to you to determine the minimum number of coins he must pay the seller for $$$n$$$ watermelons if he makes no more than $$$k$$$ deals. If it is impossible to buy exactly $$$n$$$ watermelons while making no more than $$$k$$$ deals, output $$$-1$$$."
  },
  {
    "title": "The Cunning Seller (easy version)",
    "url": "https://codeforces.com/problemset/problem/2132/C1",
    "description": "This is the easy version of the problem. The easy version differs from the hard one in that it requires determining the minimum cost with the least number of deals, while the hard version requires determining the minimum cost with a limited number of deals.After the cunning seller sold three watermelons instead of one, he decided to increase his profit — namely, he bought even more watermelons. Now he can sell $$$3^x$$$ watermelons for $$$3^{x+1} + x \\cdot 3^{x-1}$$$ coins, where $$$x$$$ is a non-negative integer. Such a sale is called a deal.A calculating buyer came to him, but he has critically little time. Because of this, he wants to buy exactly $$$n$$$ watermelons, making the least possible number of deals.The buyer is in a hurry and has therefore turned to you to determine the minimum number of coins he must pay the seller for $$$n$$$ watermelons, considering that he will make the least possible number of deals."
  },
  {
    "title": "The Secret Number",
    "url": "https://codeforces.com/problemset/problem/2132/B",
    "description": "Vadim has thought of a number $$$x$$$. To ensure that no one can guess it, he appended a positive number of zeros to the right of it, thus obtaining a new number $$$y$$$. However, as a precaution, Vadim decided to spread the number $$$n = x + y$$$. Find all suitable $$$x$$$ that Vadim could have thought of for the given $$$n$$$."
  },
  {
    "title": "Homework",
    "url": "https://codeforces.com/problemset/problem/2132/A",
    "description": "Vlad and Dima have been assigned a task in school for their English class. They were given two strings $$$a$$$ and $$$b$$$ and asked to append all characters from $$$b$$$ to string $$$a$$$ in any order. The guys decided to divide the work between themselves and, after lengthy negotiations, determined who would add each character from string $$$b$$$ to $$$a$$$.Due to his peculiarities, Vlad can only add characters to the beginning of the word, while Dima can only add them to the end. They add characters in the order they appear in string $$$b$$$. Your task is to determine what string Vlad and Dima will end up with."
  },
  {
    "title": "Sea, You & copriMe",
    "url": "https://codeforces.com/problemset/problem/2131/H",
    "description": " Umi is given an array $$$a$$$ of length $$$n$$$, whose elements are integers between $$$1$$$ and $$$m$$$. She loves coprime integers and wants to find four distinct indices $$$p, q, r, s$$$ ($$$1 \\le p, q, r, s \\le n$$$), such that $$$\\gcd(a_p, a_q) = 1$$$ and $$$\\gcd(a_r, a_s) = 1$$$$$$^{\\text{∗}}$$$.If there are multiple solutions, you may output any one of them.$$$^{\\text{∗}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. "
  },
  {
    "title": "Wafu!",
    "url": "https://codeforces.com/problemset/problem/2131/G",
    "description": " To help improve her math, Kudryavka is given a set $$$S$$$ that consists of $$$n$$$ distinct positive integers. Initially, her score is $$$1$$$. She can perform an arbitrary number of the following operations on the set if it is not empty:  Let the minimum value of $$$S$$$ be $$$m$$$.  Multiply her score by $$$m$$$.  Remove $$$m$$$ from $$$S$$$.  For every integer $$$i$$$ such that $$$1 \\le i < m$$$, add $$$i$$$ to the set $$$S$$$. It can be shown that no duplicates are added during this step. She is addicted to performing operations, but after $$$k$$$ operations, she realizes she forgot her score. Please help her determine her score, modulo $$$10^9+7$$$."
  },
  {
    "title": "Unjust Binary Life",
    "url": "https://codeforces.com/problemset/problem/2131/F",
    "description": " Yuri is given two binary strings $$$a$$$ and $$$b$$$, both of which are of length $$$n$$$. The two strings dynamically define an $$$n \\times n$$$ grid. Let $$$(i, j)$$$ denote the cell in the $$$i$$$-th row and $$$j$$$-th column. The initial value of cell $$$(i, j)$$$ has the value of $$$a_i \\oplus b_j$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. .Yuri's journey always starts at cell $$$(1, 1)$$$. From a cell $$$(i, j)$$$, she can only move down to $$$(i + 1, j)$$$ or right to $$$(i, j + 1)$$$. Her journey is possible if there exists a valid path such that all cells on the path, including $$$(1, 1)$$$, have a value of 0.Before her departure, she can do the following operation for any number of times:  Choose one index $$$1 \\le i \\le n$$$, and flip the value of either $$$a_i$$$ or $$$b_i$$$ ($$$0$$$ becomes $$$1$$$, and $$$1$$$ becomes $$$0$$$). The grid will also change accordingly. Let $$$f(x, y)$$$ denote the minimum required operations so that Yuri can make her journey to the cell $$$(x,y)$$$. You must determine the sum of $$$f(x, y)$$$ over all $$$1 \\leq x, y \\leq n$$$.Note that each of these $$$n^2$$$ cases is independent, meaning you need to assume the grid is in its original state in each case (i.e., no actual operations are performed)."
  },
  {
    "title": "Adjacent XOR",
    "url": "https://codeforces.com/problemset/problem/2131/E",
    "description": "  You're given an array $$$a$$$ of length $$$n$$$. For each index $$$i$$$ such that $$$1 \\le i < n$$$, you can perform the following operation at most once:  Assign $$$a_i := a_i \\oplus a_{i+1}$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. . You can choose indices and perform the operations in any sequential order.Given another array $$$b$$$ of length $$$n$$$, determine if it is possible to transform $$$a$$$ to $$$b$$$."
  },
  {
    "title": "Arboris Contractio",
    "url": "https://codeforces.com/problemset/problem/2131/D",
    "description": " Kagari is preparing to archive a tree, and she knows the cost of doing so will depend on its diameter$$$^{\\text{∗}}$$$. To keep the expense down, her goal is to shrink the diameter as much as possible first. She can perform the following operation on the tree:  Choose two vertices $$$s$$$ and $$$t$$$. Let the sequence of vertices on the simple path$$$^{\\text{†}}$$$ from $$$s$$$ to $$$t$$$ be $$$v_0, v_1, \\dots, v_k$$$, where $$$v_0 = s$$$ and $$$v_k = t$$$.  Remove all edges along the path. In other words, remove edges $$$(v_0, v_1), (v_1, v_2), \\dots, (v_{k-1}, v_k)$$$.  Connect vertices $$$v_1, v_2, \\dots, v_k$$$ directly to $$$v_0$$$. In other words, add edges $$$(v_0, v_1), (v_0, v_2), \\dots, (v_0, v_k)$$$. It can be shown that the graph is still a tree after the operation.Help her determine the minimum number of operations required to achieve the minimal diameter.$$$^{\\text{∗}}$$$The diameter of a tree is the longest possible distance between any pair of vertices. The distance itself is measured by the number of edges on the unique simple path connecting them.$$$^{\\text{†}}$$$A simple path is a path between two vertices in a tree that does not visit any vertex more than once. It can be shown that the simple path between any two vertices is always unique."
  },
  {
    "title": "Make it Equal",
    "url": "https://codeforces.com/problemset/problem/2131/C",
    "description": "Given two multisets $$$S$$$ and $$$T$$$ of size $$$n$$$ and a positive integer $$$k$$$, you may perform the following operations any number (including zero) of times on $$$S$$$:   Select an element $$$x$$$ in $$$S$$$, and remove one occurrence of $$$x$$$ in $$$S$$$. Then, either insert $$$x+k$$$ into $$$S$$$, or insert $$$|x-k|$$$ into $$$S$$$. Determine if it is possible to make $$$S$$$ equal to $$$T$$$. Two multisets $$$S$$$ and $$$T$$$ are equal if every element appears the same number of times in $$$S$$$ and $$$T$$$."
  },
  {
    "title": "Alternating Series",
    "url": "https://codeforces.com/problemset/problem/2131/B",
    "description": "  You are given an integer $$$n$$$. Call an array $$$a$$$ of length $$$n$$$ good if:  For all $$$1 \\le i < n$$$, $$$a_i \\cdot a_{i+1} < 0$$$ (i.e., the product of adjacent elements is negative).  For all subarrays$$$^{\\text{∗}}$$$ with length at least $$$2$$$, the sum of all elements in the subarray is positive$$$^{\\text{†}}$$$. Additionally, we say a good array $$$a$$$ of length $$$n$$$ is better than another good array $$$b$$$ of length $$$n$$$ if $$$[|a_1|, |a_2|, \\ldots, |a_n|]$$$ is lexicographically smaller$$$^{\\text{‡}}$$$ than $$$[|b_1|, |b_2|, \\ldots, |b_n|]$$$. Note that $$$|z|$$$ denotes the absolute value of integer $$$z$$$.Output a good array of length $$$n$$$ such that it is better than every other good array of length $$$n$$$.$$$^{\\text{∗}}$$$An array $$$c$$$ is a subarray of an array $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{†}}$$$An integer $$$x$$$ is positive if $$$x > 0$$$.$$$^{\\text{‡}}$$$A sequence $$$a$$$ is lexicographically smaller than a sequence $$$b$$$ if and only if one of the following holds:   $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$; or  in the first position where $$$a$$$ and $$$b$$$ differ, the sequence $$$a$$$ has a smaller element than the corresponding element in $$$b$$$.  "
  },
  {
    "title": "Lever",
    "url": "https://codeforces.com/problemset/problem/2131/A",
    "description": "In Divergent Universe, The Lever iterates itself given two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$. In each iteration, The Lever will do the following:  Choose a random index $$$i$$$ such that $$$a_i > b_i$$$. Then, decrease $$$a_i$$$ by $$$1$$$. If there does not exist such $$$i$$$, ignore this step.  Choose a random index $$$i$$$ such that $$$a_i < b_i$$$. Then, increase $$$a_i$$$ by $$$1$$$. If there does not exist such $$$i$$$, ignore this step. After each iteration, the Lever will check if step $$$1$$$ is ignored, and if so, it will end its iteration.You're given the two arrays. Find the number of iterations that the Lever does. It can be shown this number is fixed over all possibilities of random indices that The Lever can choose for each step."
  },
  {
    "title": "Pathless",
    "url": "https://codeforces.com/problemset/problem/2130/B",
    "description": "There is an array $$$a_1, a_2, \\ldots, a_n$$$ consisting of values $$$0$$$, $$$1$$$, and $$$2$$$, and an integer $$$s$$$. It is guaranteed that $$$a_1, a_2, \\ldots, a_n$$$ contains at least one $$$0$$$, one $$$1$$$, and one $$$2$$$.Alice wants to start from index $$$1$$$ and perform steps of length $$$1$$$ to the right or to the left, and reach index $$$n$$$ at the end. While Alice moves, she calculates the sum of the values she is visiting, and she wants the sum to be exactly $$$s$$$.Formally, Alice wants to find a sequence $$$[i_1, i_2, \\ldots, i_m]$$$ of indices, such that:  $$$i_1 = 1$$$, $$$i_m = n$$$.  $$$1 \\leq i_j \\leq n$$$ for all $$$1 \\le j \\le m$$$.  $$$|i_{j} - i_{j+1}| = 1$$$ for all $$$1 \\leq j < m$$$.  $$$a_{i_1} + a_{i_2} + \\ldots + a_{i_m} = s$$$. However, Bob wants to rearrange $$$a_1, a_2, \\ldots, a_n$$$ to prevent Alice from achieving her target. Determine whether it is possible to rearrange $$$a_1, a_2, \\ldots, a_n$$$ such that Alice cannot find her target sequence (even if Alice is smart enough). If it is possible, you also need to output the rearranged array $$$a_1, a_2, \\ldots, a_n$$$."
  },
  {
    "title": "Submission is All You Need",
    "url": "https://codeforces.com/problemset/problem/2130/A",
    "description": "For a multiset $$$T$$$ consisting of non-negative integers, we define:  $$$\\text{sum}(T)$$$ is the sum of all elements in $$$T$$$. For example, if $$$T = \\{0,1, 1, 3\\}$$$, then $$$\\text{sum}(T)= 0+1+1+3=5$$$.  $$$\\text{mex}(T)$$$ is the smallest non-negative integer not in $$$T$$$. For example, if $$$T = \\{0,1, 1, 3\\}$$$, then $$$\\text{mex}(T) = 2$$$ because $$$2$$$ is the smallest non-negative integer not present in $$$T$$$. You are given a multiset $$$S$$$ of size $$$n$$$ consisting of non-negative integers. At first, your score is $$$0$$$. You can perform the following operations any number of times in any order (possibly zero):  Select a subset $$$S' \\subseteq S$$$ (i.e., $$$S'$$$ contains some of the elements currently in $$$S$$$), add $$$\\text{sum}(S')$$$ to your score, and then remove $$$S'$$$ from $$$S$$$.  Select a subset $$$S' \\subseteq S$$$, add $$$\\text{mex}(S')$$$ to your score, and then remove $$$S'$$$ from $$$S$$$. Find the maximum possible score that can be obtained."
  },
  {
    "title": "Top-K Tracker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2129/F2",
    "description": "This is an interactive problem.This is the hard version of the problem. The only difference is that $$$n \\le 890$$$ in this version. You can make hacks only if all versions of the problem are solved.There is a hidden permutation $$$p$$$, which is a permutation of $$$\\{1,2,\\ldots,n\\}$$$. Let $$$pos_i$$$ denote the position of the value $$$i$$$ in $$$p$$$, i.e., $$$pos_{p_i} = i$$$.To find this permutation, you can ask four types of queries:  \"$$$1\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, \\ldots, p_{i_m}]$$$ in increasing order.  \"$$$2\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order.  \"$$$3\\ m\\ i_1\\ i_2\\ ...\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ ...,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, ..., p_{i_m}]$$$ in increasing order.  \"$$$4\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order. Let $$$c_i$$$ be the usage count of queries of type $$$i$$$ $$$(1 \\le i \\le 4)$$$. Your query count must satisfy the following constraints:  $$$c_1+c_2+c_3+c_4 \\le 30.$$$  $$$c_3+c_4 \\le 1.$$$ "
  },
  {
    "title": "Top-K Tracker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2129/F1",
    "description": "This is an interactive problem.This is the easy version of the problem. The only difference is that $$$n \\le 845$$$ in this version. You can make hacks only if all versions of the problem are solved.There is a hidden permutation $$$p$$$, which is a permutation of $$$\\{1,2,\\ldots,n\\}$$$. Let $$$pos_i$$$ denote the position of the value $$$i$$$ in $$$p$$$, i.e., $$$pos_{p_i} = i$$$.To find this permutation, you can ask four types of queries:  \"$$$1\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, \\ldots, p_{i_m}]$$$ in increasing order.  \"$$$2\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order.  \"$$$3\\ m\\ i_1\\ i_2\\ ...\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ ...,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, ..., p_{i_m}]$$$ in increasing order.  \"$$$4\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order. Let $$$c_i$$$ be the usage count of queries of type $$$i$$$ $$$(1 \\le i \\le 4)$$$. Your query count must satisfy the following constraints:  $$$c_1+c_2+c_3+c_4 \\le 30.$$$  $$$c_3+c_4 \\le 1.$$$ "
  },
  {
    "title": "Induced Subgraph Queries",
    "url": "https://codeforces.com/problemset/problem/2129/E",
    "description": "You are given an unweighted, undirected graph $$$G$$$ with $$$n$$$ nodes and $$$m$$$ edges. The graph $$$G$$$ contains no self-loops or multiple edges.We denote the node set of $$$G$$$ as $$$V$$$. For any node subset $$$V' \\subseteq V$$$, the corresponding induced subgraph, denoted by $$$G[V']$$$, is defined as follows:  $$$G[V']$$$ is the graph whose node set is $$$V'$$$, and whose edge set consists of all edges in $$$G$$$ with both endpoints in $$$V'$$$. Your task is to answer $$$q$$$ queries. Each query provides three integers $$$l$$$, $$$r$$$, and $$$k$$$. Denoting $$$V'=\\{l,l+1,\\ldots,r\\}$$$, you need to find the $$$k$$$-th smallest value among $$$f(l,G[V'])$$$, $$$f(l+1,G[V'])$$$, $$$\\ldots$$$ , $$$f(r,G[V'])$$$ (i.e., the $$$k$$$-th value in increasing order; repeated values are counted multiple times).Here, $$$f(u,G[V'])=\\bigoplus_{(u,v)\\in G[V']}v$$$. In other words, it is the bitwise XOR value of the labels of all adjacent nodes of node $$$u$$$ in graph $$$G[V']$$$.You might want to read the notes for a better understanding."
  },
  {
    "title": "Permutation Blackhole",
    "url": "https://codeforces.com/problemset/problem/2129/D",
    "description": "For a permutation $$$p_1, p_2, \\ldots, p_n$$$ of length $$$n$$$, the corresponding coloring sequence $$$s$$$ can be obtained by the following coloring process:  Initially, there are $$$n$$$ white cells indexed from $$$1$$$ to $$$n$$$ from left to right. At second $$$0$$$, the score of each cell is $$$0$$$.  At second $$$i$$$ ($$$1 \\le i \\le n$$$),   If $$$i > 1$$$, find the nearest black cell to the cell $$$p_i$$$, and increase the score of that cell by $$$1$$$. In case there are multiple nearest black cells, choose the cell with the lowest index. Cell $$$y$$$ is called the nearest black cell to cell $$$x$$$ only if cell $$$y$$$ is black and there is no black cell $$$z$$$ satisfying $$$|x-z|<|x-y|$$$.  Color the cell $$$p_i$$$ black.  After all cells are colored black, denoting $$$s_i$$$ as the score of cell $$$i$$$ ($$$1 \\le i \\le n$$$), we get the coloring sequence $$$s$$$.You might want to read the notes for a better understanding.You are given an incomplete coloring sequence $$$s$$$, where some $$$s_i$$$ are already fixed, while others are not yet determined. Count how many different permutations $$$p$$$ can produce this coloring sequence. Since the answer may be large, you need to output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Interactive RBS (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C3",
    "description": "This is an interactive problem.This is the hard version of the problem. The only difference is the limit on the number of queries. You can make hacks only if all versions of the problem are solved.There is a hidden bracket sequence $$$s$$$ of length $$$n$$$, where $$$s$$$ only contains $$$\\texttt{'('}$$$ and $$$\\texttt{')'}$$$. It is guaranteed that $$$s$$$ contains at least one $$$\\texttt{'('}$$$ and one $$$\\texttt{')'}$$$.To find this bracket sequence, you can ask queries. Each query has the following form: you pick an integer $$$k$$$ and arbitrary indices $$$i_1, i_2, \\ldots, i_k$$$ ($$$1 \\le k \\le 1000$$$, $$$1 \\le i_1, i_2, \\ldots, i_k \\le n$$$). Note that the indices can be equal. Next, you receive an integer $$$f(s_{i_1}s_{i_2}\\ldots s_{i_k})$$$ calculated by the jury.For a bracket sequence $$$t$$$, $$$f(t)$$$ is the number of non-empty regular bracket substrings in $$$t$$$ (the substrings must be contiguous). For example, $$$f(\\texttt{\"()())\"}) = 3$$$.A bracket sequence is called regular if it can be constructed in the following way.   The empty sequence $$$\\varnothing$$$ is regular.  If the bracket sequence $$$A$$$ is regular, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also regular.  If the bracket sequences $$$A$$$ and $$$B$$$ are regular, then the concatenated sequence $$$A B$$$ is also regular. For example, the sequences $$$\\texttt{\"(())()\"}$$$, $$$\\texttt{\"()\"}$$$ are regular, while $$$\\texttt{\"(()\"}$$$ and $$$\\texttt{\"())(\"}$$$ are not.Find the sequence $$$s$$$ using no more than $$$100$$$ queries."
  },
  {
    "title": "Interactive RBS (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C2",
    "description": "This is an interactive problem.This is the medium version of the problem. The only difference is the limit on the number of queries. You can make hacks only if all versions of the problem are solved.There is a hidden bracket sequence $$$s$$$ of length $$$n$$$, where $$$s$$$ only contains $$$\\texttt{'('}$$$ and $$$\\texttt{')'}$$$. It is guaranteed that $$$s$$$ contains at least one $$$\\texttt{'('}$$$ and one $$$\\texttt{')'}$$$.To find this bracket sequence, you can ask queries. Each query has the following form: you pick an integer $$$k$$$ and arbitrary indices $$$i_1, i_2, \\ldots, i_k$$$ ($$$1 \\le k \\le 1000$$$, $$$1 \\le i_1, i_2, \\ldots, i_k \\le n$$$). Note that the indices can be equal. Next, you receive an integer $$$f(s_{i_1}s_{i_2}\\ldots s_{i_k})$$$ calculated by the jury.For a bracket sequence $$$t$$$, $$$f(t)$$$ is the number of non-empty regular bracket substrings in $$$t$$$ (the substrings must be contiguous). For example, $$$f(\\texttt{\"()())\"}) = 3$$$.A bracket sequence is called regular if it can be constructed in the following way.   The empty sequence $$$\\varnothing$$$ is regular.  If the bracket sequence $$$A$$$ is regular, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also regular.  If the bracket sequences $$$A$$$ and $$$B$$$ are regular, then the concatenated sequence $$$A B$$$ is also regular. For example, the sequences $$$\\texttt{\"(())()\"}$$$, $$$\\texttt{\"()\"}$$$ are regular, while $$$\\texttt{\"(()\"}$$$ and $$$\\texttt{\"())(\"}$$$ are not.Find the sequence $$$s$$$ using no more than $$$200$$$ queries."
  },
  {
    "title": "Interactive RBS (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C1",
    "description": "This is an interactive problem.This is the easy version of the problem. The only difference is the limit on the number of queries. You can make hacks only if all versions of the problem are solved.There is a hidden bracket sequence $$$s$$$ of length $$$n$$$, where $$$s$$$ only contains $$$\\texttt{'('}$$$ and $$$\\texttt{')'}$$$. It is guaranteed that $$$s$$$ contains at least one $$$\\texttt{'('}$$$ and one $$$\\texttt{')'}$$$.To find this bracket sequence, you can ask queries. Each query has the following form: you pick an integer $$$k$$$ and arbitrary indices $$$i_1, i_2, \\ldots, i_k$$$ ($$$1 \\le k \\le 1000$$$, $$$1 \\le i_1, i_2, \\ldots, i_k \\le n$$$). Note that the indices can be equal. Next, you receive an integer $$$f(s_{i_1}s_{i_2}\\ldots s_{i_k})$$$ calculated by the jury.For a bracket sequence $$$t$$$, $$$f(t)$$$ is the number of non-empty regular bracket substrings in $$$t$$$ (the substrings must be contiguous). For example, $$$f(\\texttt{\"()())\"}) = 3$$$.A bracket sequence is called regular if it can be constructed in the following way.   The empty sequence $$$\\varnothing$$$ is regular.  If the bracket sequence $$$A$$$ is regular, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also regular.  If the bracket sequences $$$A$$$ and $$$B$$$ are regular, then the concatenated sequence $$$A B$$$ is also regular. For example, the sequences $$$\\texttt{\"(())()\"}$$$, $$$\\texttt{\"()\"}$$$ are regular, while $$$\\texttt{\"(()\"}$$$ and $$$\\texttt{\"())(\"}$$$ are not.Find the sequence $$$s$$$ using no more than $$$550$$$ queries."
  },
  {
    "title": "Stay or Mirror",
    "url": "https://codeforces.com/problemset/problem/2129/B",
    "description": " You are given a permutation $$$p_1, p_2, \\ldots, p_n$$$ of length $$$n$$$.You have to build an array $$$a_1, a_2, \\ldots, a_n$$$ in the following way:  for each $$$1 \\leq i \\leq n$$$, set either $$$a_i = p_i$$$ or $$$a_i = 2n - p_i$$$. Find the minimum possible number of inversions in the array $$$a_1, a_2, \\ldots, a_n$$$.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). An inversion in the array $$$a_1, a_2, \\ldots, a_n$$$ is a pair of indices $$$(i, j)$$$ such that $$$1 \\leq i<j \\leq n$$$ and $$$a_i>a_j$$$."
  },
  {
    "title": "Double Perspective",
    "url": "https://codeforces.com/problemset/problem/2129/A",
    "description": "For a set of pairs $$$S = \\{(a_1, b_1), (a_2, b_2), \\ldots, (a_m, b_m)\\}$$$, where $$$a_i < b_i$$$ for all $$$1 \\le i \\le m$$$, we define $$$f(S)$$$ and $$$g(S)$$$ as follows:  Treating each $$$(a_i, b_i)$$$ as a segment on the number line, $$$f(S)$$$ is the length of their union. Formally, $$$f(S)$$$ is the number of integers $$$x$$$ such that there exists an $$$i$$$ ($$$1 \\leq i \\leq m$$$) where $$$[x, x+1] \\subseteq [a_i, b_i]$$$.  Treating each $$$(a_i, b_i)$$$ as an undirected edge in a graph, $$$g(S)$$$ is the number of nodes that lie on at least one simple cycle with at least $$$3$$$ edges. Formally, $$$g(S)$$$ is the number of nodes $$$x_1$$$ such that there exists a path $$$x_1 \\to x_2 \\to \\ldots \\to x_k \\to x_1$$$ in the graph, where $$$k \\geq 3$$$ and all $$$x_1, x_2, \\ldots, x_k$$$ are distinct. For example, $$$S = \\{(1,2), (2,4), (1,4), (4,5),(6,7)\\}$$$, we can get $$$f(S) = 5$$$ and $$$g(S) = 3$$$.You are given $$$n$$$ distinct pairs. Your task is to select a subset $$$S'$$$ of these pairs such that $$$f(S') - g(S')$$$ is maximized. You need to output the indices of the selected pairs."
  },
  {
    "title": "Strict Triangle",
    "url": "https://codeforces.com/problemset/problem/2128/F",
    "description": "You are given an undirected connected graph with $$$n$$$ nodes and $$$m$$$ edges. The weight $$$w_i$$$ of the $$$i$$$-th edge is not yet decided and must be a real number between $$$l_i$$$ and $$$r_i$$$.You are given a node $$$k$$$. Determine if there exists a valid assignment of weights $$$(w_1, \\ldots, w_m)$$$ such that:   $$$l_i \\leq w_i \\leq r_i$$$ for all $$$i$$$, and  $$$\\mathrm{dist}_w(1, n) \\neq \\mathrm{dist}_w(1, k) + \\mathrm{dist}_w(k, n)$$$$$$^{\\text{∗}}$$$. $$$^{\\text{∗}}$$$Given an assignment of weights $$$w$$$, $$$\\mathrm{dist}_w(u, v)$$$ is the minimum value of $$$w_{e_1} + w_{e_2} + \\ldots + w_{e_p}$$$ over all sequences of $$$p$$$ edges $$$(e_1, e_2, \\ldots, e_p)$$$ that form a path from $$$u$$$ to $$$v$$$."
  },
  {
    "title": "Submedians (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2128/E2",
    "description": "This is the hard version of the problem. The only difference is that in this version, you are asked to find a subarray for all submedians.You can make hacks only if both versions of the problem are solved.An integer $$$v$$$ is a median of an array $$$b$$$ of length $$$m$$$ if and only if:   $$$v$$$ is greater than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array, and  $$$v$$$ is less than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array.  For instance:   the only median of $$$[9, 3, 7]$$$ is $$$7$$$,  the medians of $$$[5, 3, 7, 9]$$$ are $$$5$$$, $$$6$$$, and $$$7$$$, and  the only median of $$$[2, 2, 2]$$$ is $$$2$$$. You're given an integer $$$k$$$ and an array $$$a_1, \\ldots, a_n$$$ of integers between $$$1$$$ and $$$n$$$.An integer $$$v$$$ from $$$1$$$ to $$$n$$$ is said to be a submedian if there exists at least one pair of indices $$$(l, r)$$$ such that   $$$1 \\leq l \\leq r \\leq n$$$,  $$$r - l + 1 \\geq k$$$,  $$$v$$$ is a median of the subarray $$$[a_l, \\ldots, a_r]$$$. Find all submedians and for each of them, find any corresponding pair of indices $$$(l, r)$$$."
  },
  {
    "title": "Submedians (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2128/E1",
    "description": "This is the easy version of the problem. The only difference is that in this version, you are asked to find a subarray only for the maximum submedian.You can make hacks only if both versions of the problem are solved.An integer $$$v$$$ is a median of an array $$$b$$$ of length $$$m$$$ if and only if:   $$$v$$$ is greater than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array, and  $$$v$$$ is less than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array.  For instance:   the only median of $$$[9, 3, 7]$$$ is $$$7$$$,  the medians of $$$[5, 3, 7, 9]$$$ are $$$5$$$, $$$6$$$, and $$$7$$$, and  the only median of $$$[2, 2, 2]$$$ is $$$2$$$. You're given an integer $$$k$$$ and an array $$$a_1, \\ldots, a_n$$$ of integers between $$$1$$$ and $$$n$$$.An integer $$$v$$$ from $$$1$$$ to $$$n$$$ is said to be a submedian if there exists at least one pair of indices $$$(l, r)$$$ such that   $$$1 \\leq l \\leq r \\leq n$$$,  $$$r - l + 1 \\geq k$$$,  $$$v$$$ is a median of the subarray $$$[a_l, \\ldots, a_r]$$$. It can be proven that there always exists at least one submedian. Find the maximum submedian $$$v_\\max$$$ and any corresponding pair of indices $$$(l, r)$$$."
  },
  {
    "title": "Sum of LDS",
    "url": "https://codeforces.com/problemset/problem/2128/D",
    "description": " You're given a permutation$$$^{\\text{∗}}$$$ $$$p_1, \\ldots, p_n$$$ such that $$$\\max(p_i, p_{i+1}) > p_{i+2}$$$ for all $$$1 \\leq i \\leq n-2$$$.Compute the sum of the length of the longest decreasing subsequence$$$^{\\text{†}}$$$ of the subarray $$$[p_l, p_{l+1}, \\ldots, p_r]$$$ over all pairs $$$1 \\leq l \\leq r \\leq n$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$Given an array $$$b$$$ of size $$$|b|$$$, a decreasing subsequence of length $$$k$$$ is a sequence of indices $$$i_1, \\ldots, i_k$$$ such that:  $$$1 \\leq i_1 < i_2 < \\ldots < i_k \\leq |b|$$$  $$$b_{i_1} > b_{i_2} > \\ldots > b_{i_k}$$$ "
  },
  {
    "title": "Leftmost Below",
    "url": "https://codeforces.com/problemset/problem/2128/C",
    "description": "Consider an array $$$a_1, \\ldots, a_n$$$. Initially, $$$a_i = 0$$$ for every $$$i$$$.You can do operations of the following form.   You choose an integer $$$x$$$ greater than $$$\\min(a)$$$.  Then, $$$i$$$ is defined as the minimum index such that $$$a_i < x$$$. In other words, $$$i$$$ is the unique integer between $$$1$$$ and $$$n$$$ inclusive such that $$$a_i < x$$$ and $$$a_j \\geq x$$$ for every $$$1 \\leq j \\leq i-1$$$.  Finally, $$$a_i$$$ is incremented by $$$x$$$. For example, if $$$a = [6, 8, 2, 1]$$$ and you choose $$$x = 6$$$, then $$$i$$$ will be equal to $$$3$$$ (since $$$a_1 \\geq 6$$$, $$$a_2 \\geq 6$$$, and $$$a_3 < 6$$$) and $$$a$$$ will become $$$[6, 8, 8, 1]$$$.You can do as many operations as you want. Can you reach a target array $$$b_1, \\ldots, b_n$$$?"
  },
  {
    "title": "Deque Process",
    "url": "https://codeforces.com/problemset/problem/2128/B",
    "description": " We say that an array $$$a$$$ of size $$$n$$$ is bad if and only if there exists $$$1 \\leq i \\leq n - 4$$$ such that one of the following conditions holds:  $$$a_i < a_{i+1} < a_{i+2} < a_{i+3} < a_{i+4}$$$  $$$a_i > a_{i+1} > a_{i+2} > a_{i+3} > a_{i+4}$$$ An array is good if and only if it's not bad. For example:   $$$a = [3, \\color{red}{1, 2, 4, 5, 6}]$$$ is bad because $$$a_2 < a_3 < a_4 < a_5 < a_6$$$.  $$$a = [\\color{red}{7, 6, 5, 4, 1}, 2, 3]$$$ is bad because $$$a_1 > a_2 > a_3 > a_4 > a_5$$$.  $$$a = [7, 6, 5, 1, 2, 3, 4]$$$ is good. You're given a permutation$$$^{\\text{∗}}$$$ $$$p_1, p_2, \\ldots, p_n$$$.You must perform $$$n$$$ turns. At each turn, you must remove either the leftmost or the rightmost remaining element in $$$p$$$. Let $$$q_i$$$ be the element removed at the $$$i$$$-th turn.Choose which element to remove at each turn so that the resulting array $$$q$$$ is good. We can show that under the given constraints, it's always possible.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Recycling Center",
    "url": "https://codeforces.com/problemset/problem/2128/A",
    "description": "In the recycling center, there are $$$n$$$ trash bags, the $$$i$$$-th bag has a weight of $$$a_i$$$. At each second, two actions will happen successively:   First, you must choose a trash bag and destroy it. It will cost $$$1$$$ coin if the weight of the trash bag is strictly greater than $$$c$$$, and it will cost $$$0$$$ coins otherwise.  Then, the weight of each remaining trash bag will get multiplied by two.  What is the minimum number of coins you have to spend to get rid of all trash bags?"
  },
  {
    "title": "23 Rises Again",
    "url": "https://codeforces.com/problemset/problem/2127/H",
    "description": " Kiarash is picking strawberries to take home...A graph is called candy if and only if the degree of every vertex in it is at most $$$2$$$.You are given a simple, undirected, and connected graph $$$G$$$ of $$$n\\le 30$$$ vertices, with a special property: each vertex belongs to at most $$$5$$$ simple cycles$$$^{\\text{∗}}$$$.What is the maximum number of edges among all subgraphs$$$^{\\text{†}}$$$ of $$$G$$$ that are candy?$$$^{\\text{∗}}$$$A simple cycle is a connected subgraph such that each vertex has a degree of exactly $$$2$$$$$$^{\\text{†}}$$$A subgraph of $$$G$$$ is a graph whose vertices and edges are subsets of $$$G$$$."
  },
  {
    "title": "Inter Active (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2127/G2",
    "description": "     This is the hard version of the problem. The difference between the versions is that in this version, you can make at most $$$10\\cdot n$$$ queries. You can hack only if you solved all versions of this problem. Ali loved Bahamin's gift (from problem E) so much that he illegally traveled from Qazvin to Liverpool to have the gift signed by football players. Now Interpol is searching for him, but they've offered a deal: solve a problem, and he can stay in Liverpool. But since he's currently at the stadium, he can't solve it — so he asked you to do it.This is an interactive problem. There is a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n\\ge 4$$$, where $$$p_i \\neq i$$$ for each $$$1 \\leq i \\leq n$$$.Initially, you should give the jury a positive integer $$$k\\le n$$$, which will be constant through future queries. Then you need to find permutation $$$p$$$ using some queries.In each query, you give a permutation $$$q_1, q_2, \\ldots, q_n$$$ to the jury. In response, you will receive the number of pairs $$$(i, j)$$$ such that all of the following conditions hold:  $$$i \\lt j$$$;  $$$p_{q_i} = q_j$$$;  $$$i \\neq k$$$. ($$$k$$$ is the constant you have given to the jury) You are given $$$n$$$, and you need to find the permutation $$$p$$$ in at most $$$10\\cdot n$$$ queries.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Inter Active (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2127/G1",
    "description": "     This is the easy version of the problem. The difference between the versions is that in this version, you can make at most $$$15\\cdot n$$$ queries. You can hack only if you solved all versions of this problem. Ali loved Bahamin's gift (from problem E) so much that he illegally traveled from Qazvin to Liverpool to have the gift signed by football players. Now Interpol is searching for him, but they've offered a deal: solve a problem, and he can stay in Liverpool. But since he's currently at the stadium, he can't solve it — so he asked you to do it.This is an interactive problem. There is a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n\\ge 4$$$, where $$$p_i \\neq i$$$ for each $$$1 \\leq i \\leq n$$$.Initially, you should give the jury a positive integer $$$k\\le n$$$, which will be constant through future queries. Then you need to find permutation $$$p$$$ using some queries.In each query, you give a permutation $$$q_1, q_2, \\ldots, q_n$$$ to the jury. In response, you will receive the number of pairs $$$(i, j)$$$ such that all of the following conditions hold:  $$$i \\lt j$$$;  $$$p_{q_i} = q_j$$$;  $$$i \\neq k$$$. ($$$k$$$ is the constant you have given to the jury) You are given $$$n$$$, and you need to find the permutation $$$p$$$ in at most $$$15\\cdot n$$$ queries.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Hamed and AghaBalaSar",
    "url": "https://codeforces.com/problemset/problem/2127/F",
    "description": " Hamid wrote $$$3014$$$ lines of code for the a+b problem and gave $$$10$$$ lines of it to Hamed; then the following problem came to Hamed's mind.You are given two integers $$$n$$$ and $$$m$$$.An array $$$a_1,a_2,\\ldots,a_n$$$ is called snake if and only if all of the following conditions hold:   All elements in $$$a$$$ are integers between $$$0$$$ and $$$m$$$;  $$$a_1 + a_2 + \\cdots + a_n = m$$$;  $$$a_n=\\max\\left([a_1, a_2, \\ldots, a_n]\\right)$$$. We define $$$f(a)$$$ as in the following pseudocode:function f(array a):    pos := 1    res := 0    let nxt[x] be an array such that nxt[x] is the smallest index y such that                                    y > x and a[y] > a[x],                              or undefined if no such y exists    while pos < n:        if a[pos] < a[n]:            res += a[nxt[pos]] - a[pos]            pos := nxt[pos]        else:            pos += 1    return resFind the sum of $$$f(a)$$$ over all snake arrays $$$a_1,a_2,\\ldots,a_n$$$, modulo $$$10^9+7$$$."
  },
  {
    "title": "Ancient Tree",
    "url": "https://codeforces.com/problemset/problem/2127/E",
    "description": "   Bahamin came from the past to visit Ali — who came from the future. He also brought an ancient tree as a gift for Ali. He noticed some of its vertices have lost their color. Bahamin needs to repaint these vertices, but he is very busy with fixing his time machine. Fortunately (or unfortunately), dinosaurs now handle such tasks — for a fee, of course. He needs your help to find the coloring with minimum cost. So he gives you the problem as follows.You are given a rooted tree$$$^{\\text{∗}}$$$ of $$$n$$$ vertices, where vertex $$$1$$$ is the root. Each vertex has an integer weight $$$w_i$$$ and a color $$$c_i$$$, where the colors are integers between $$$1$$$ and $$$k$$$. However, some vertices have lost their colors, represented by $$$c_i = 0$$$.We call vertex $$$v$$$ cutie if there exists two vertices $$$x$$$ and $$$y$$$, such that  $$$\\operatorname{lca}(x, y)$$$$$$^{\\text{†}}$$$ $$$= v$$$,  $$$c_x = c_y$$$, and  $$$c_x \\neq c_v$$$. The cost of the tree is the sum of weights of all cutie vertices.You have to assign colors between $$$1$$$ and $$$k$$$ to all the vertices which have lost their colors. Find the minimum possible cost among all valid colorings and provide a coloring with the minimum possible cost.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles.  A rooted tree is a tree where one vertex is special and called the root. $$$^{\\text{†}}$$$$$$\\operatorname{lca}(x, y)$$$ denotes the lowest common ancestor (LCA) of $$$x$$$ and $$$y$$$."
  },
  {
    "title": "Root was Built by Love, Broken by Destiny",
    "url": "https://codeforces.com/problemset/problem/2127/D",
    "description": "Heartfall River runs horizontally through Destinyland and divides it into the northern and southern sides.Engineer Root wants to build $$$n$$$ houses along the river, numbered from $$$1$$$ to $$$n$$$. All houses on the northern side and all houses on the southern side must lie along straight lines parallel to Heartfall River.There will be $$$m$$$ bridges, with the $$$i$$$-th bridge connecting house $$$u_i$$$ and house $$$v_i$$$ ($$$u_i \\ne v_i$$$). It is guaranteed that all $$$n$$$ houses are connected by these bridges, that is, you can travel from any house to any other by crossing bridges. Also, there are no two bridges connecting the same pair of houses.Root wants to know how many ways there are to arrange the $$$n$$$ houses along the river, modulo $$$10^9+7$$$, such that the following conditions hold for the planned $$$m$$$ bridges:  For every bridge, the two houses it connects lie on opposite sides of the river;  The bridges do not cross when drawn as straight lines between the houses.   A possible arrangement of the houses when $$$n=5$$$. Two arrangements are considered different if at least one of the following conditions holds:  There exists a house that lies on a different side in each arrangement;  There exist two houses $$$a$$$ and $$$b$$$ that are on the same side in both arrangements, but $$$a$$$ comes before $$$b$$$ in one arrangement and $$$b$$$ comes before $$$a$$$ in the other. Since Root is distracted by his ex, whom destiny separated from him, he asks you to calculate the number of ways to arrange the houses along the river, modulo $$$10^9+7$$$."
  },
  {
    "title": "Trip Shopping",
    "url": "https://codeforces.com/problemset/problem/2127/C",
    "description": " Ali and Bahamin decided to spend their summer vacation on the beautiful southern coasts of Iran. They also agreed to do some shopping during the trip — but instead of setting a fixed budget, they decided to determine how much they would spend by playing a game.The game is played on two arrays $$$a$$$ and $$$b$$$, each containing $$$n$$$ integers.The game will last for $$$k$$$ rounds. In one round:   First, Ali selects two indices $$$i$$$ and $$$j$$$ ($$$1 \\leq i < j \\leq n$$$);  Then, Bahamin rearranges the four integers $$$a_i$$$, $$$a_j$$$, $$$b_i$$$, and $$$b_j$$$ arbitrarily. Note that Bahamin can swap numbers between two arrays. He can also keep the two arrays unchanged.  After all the $$$k$$$ rounds, the value of the game is defined as $$$v=\\sum\\limits_{i=1}^{n} |a_i-b_i|$$$. Ali and Bahamin will spend exactly $$$v$$$ coins during their trip.However, their goals are quite different:   Ali wants to spend as little as possible, that is, to minimize $$$v$$$;  Bahamin wants to spend as much as possible, that is, to maximize $$$v$$$. You have to find the final amount of coins they will spend if both Ali and Bahamin play optimally."
  },
  {
    "title": "Hamiiid, Haaamid..",
    "url": "https://codeforces.com/problemset/problem/2127/B",
    "description": " Mani has locked Hamid in a $$$1 \\times n$$$ grid. Initially, some cells of the grid contain walls and the rest are empty, and Hamid is in an empty cell.In each day, the following events happen in order: Mani selects an empty cell and builds a wall in that cell. Note that he can not build a wall in the cell which Hamid currently is at;  Hamid selects a direction (left or right), then If there are no walls in that direction, he will escape the grid;  Otherwise, he will move to the nearest wall in that direction and destroy that wall. Hamid is at the position of the destroyed wall after this day.Here is an example of a possible sequence of actions when $$$n=6$$$:   Hamid is always aware of where the walls are. He wants to minimize the number of days that he needs to escape the grid, while Mani wants to maximize it.You have to determine the number of days Hamid needs to escape the grid if they both act optimally."
  },
  {
    "title": "Mix Mex Max",
    "url": "https://codeforces.com/problemset/problem/2127/A",
    "description": " You are given an array $$$a$$$ consisting of $$$n$$$ non-negative integers. However, some elements of $$$a$$$ are missing, and they are represented by $$$−1$$$.We define that the array $$$a$$$ is good if and only if the following holds for every $$$1 \\leq i \\leq n-2$$$:$$$$$$ \\operatorname{mex}([a_i, a_{i+1}, a_{i+2}]) = \\max([a_i, a_{i+1}, a_{i+2}]) - \\min([a_i, a_{i+1}, a_{i+2}]), $$$$$$where $$$\\operatorname{mex}(b)$$$ denotes the minimum excluded (MEX)$$$^{\\text{∗}}$$$ of the integers in $$$b$$$. You have to determine whether you can make $$$a$$$ good after replacing each $$$-1$$$ in $$$a$$$ with a non-negative integer.$$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$b_1, b_2, \\ldots, b_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$b$$$.  For example, $$$\\operatorname{mex}([2,2,1])=0$$$ because $$$0$$$ does not belong to the array, and $$$\\operatorname{mex}([0,3,1,2])=4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ appear in the array, but $$$4$$$ does not."
  },
  {
    "title": "Big Wins! (hard version)",
    "url": "https://codeforces.com/problemset/problem/2126/G2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version $$$a_i \\leq n$$$.You are given an array of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$.Your task is to find a subarray $$$a[l, r]$$$ (a continuous sequence of elements $$$a_l, a_{l + 1}, \\dots, a_r$$$) for which the value of the expression $$$\\text{med}(a[l, r]) - \\min(a[l, r])$$$ is maximized.Here:   $$$\\text{med}$$$ is the median of the subarray, that is, the element at position $$$\\left\\lceil \\frac{k + 1}{2} \\right\\rceil$$$ after sorting the subarray, where $$$k$$$ is its length;  $$$\\min$$$ is the minimum element of this subarray. For example, consider the array $$$a=[1, 4, 1, 5, 3, 3]$$$ and choose the subarray $$$a[2, 5] = [4, 1, 5, 3]$$$. In sorted form, it looks like $$$[1, 3, 4, 5]$$$.  $$$\\text{med}(a[2, 5]) = 4$$$, since $$$\\left\\lceil \\frac{4 + 1}{2} \\right\\rceil = $$$ the third element in the sorted subarray is $$$4$$$;  $$$\\min(a[2, 5]) = 1$$$, since the minimum element is $$$1$$$. In this example, the value $$$\\text{med} - \\min = 4 - 1 = 3$$$."
  },
  {
    "title": "Big Wins! (easy version)",
    "url": "https://codeforces.com/problemset/problem/2126/G1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version $$$a_i \\leq \\min(n,100)$$$.You are given an array of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$.Your task is to find a subarray $$$a[l, r]$$$ (a continuous sequence of elements $$$a_l, a_{l + 1}, \\dots, a_r$$$) for which the value of the expression $$$\\text{med}(a[l, r]) - \\min(a[l, r])$$$ is maximized.Here:   $$$\\text{med}$$$ — the median of the subarray, which is the element at position $$$\\left\\lceil \\frac{k + 1}{2} \\right\\rceil$$$ after sorting the subarray, where $$$k$$$ is its length;  $$$\\min$$$ — the minimum element of this subarray. For example, consider the array $$$a=[1, 4, 1, 5, 3, 3]$$$ and choose the subarray $$$a[2, 5] = [4, 1, 5, 3]$$$. In sorted form, it looks like $$$[1, 3, 4, 5]$$$.  $$$\\text{med}(a[2, 5]) = 4$$$, since $$$\\left\\lceil \\frac{4 + 1}{2} \\right\\rceil = $$$ the third element in the sorted subarray is $$$4$$$;  $$$\\min(a[2, 5]) = 1$$$, since the minimum element is $$$1$$$. In this example, the value $$$\\text{med} - \\min = 4 - 1 = 3$$$."
  },
  {
    "title": "1-1-1, Free Tree!",
    "url": "https://codeforces.com/problemset/problem/2126/F",
    "description": "Given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$. Each vertex has an initial color $$$a_i$$$.Each edge of the tree is defined by three numbers: $$$u_i$$$, $$$v_i$$$, and $$$c_i$$$, where $$$u_i$$$ and $$$v_i$$$ are the endpoints of the edge, and $$$c_i$$$ is the edge parameter. The cost of the edge is defined as follows: if the colors of vertices $$$u_i$$$ and $$$v_i$$$ are the same, the cost is $$$0$$$; otherwise, the cost is $$$c_i$$$.You are also given $$$q$$$ queries. Each query has the form: repaint vertex $$$v$$$ to color $$$x$$$. The queries depend on each other (after each query, the color change is preserved). After each query, you need to output the sum of the costs of all edges in the tree.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. "
  },
  {
    "title": "G-C-D, Unlucky!",
    "url": "https://codeforces.com/problemset/problem/2126/E",
    "description": "Two arrays $$$p$$$ and $$$s$$$ of length $$$n$$$ are given, where $$$p$$$ is the prefix GCD$$$^{\\text{∗}}$$$ of some array $$$a$$$, and $$$s$$$ is the suffix GCD of the same array $$$a$$$. In other words, if the array $$$a$$$ existed, then for each $$$1 \\le i \\le n$$$, the following equalities would hold both:   $$$p_i = \\gcd(a_1, a_2, \\dots, a_i)$$$  $$$s_i = \\gcd(a_i, a_{i+1}, \\dots, a_n)$$$.  Determine whether there exists such an array $$$a$$$ for which the given arrays $$$p$$$ and $$$s$$$ can be obtained.$$$^{\\text{∗}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. "
  },
  {
    "title": "This Is the Last Time",
    "url": "https://codeforces.com/problemset/problem/2126/D",
    "description": "You are given $$$n$$$ casinos, numbered from $$$1$$$ to $$$n$$$. Each casino is described by three integers: $$$l_i$$$, $$$r_i$$$, and $$$real_i$$$ ($$$l_i \\le real_i \\le r_i$$$). You initially have $$$k$$$ coins.You can play at casino $$$i$$$ only if the current number of coins $$$x$$$ satisfies $$$l_i \\le x \\le r_i$$$. After playing, your number of coins becomes $$$real_i$$$.You can visit the casinos in any order and are not required to visit all of them. Each casino can be visited no more than once.Your task is to find the maximum final number of coins you can obtain."
  },
  {
    "title": "I Will Definitely Make It",
    "url": "https://codeforces.com/problemset/problem/2126/C",
    "description": "You are given $$$n$$$ towers, numbered from $$$1$$$ to $$$n$$$. Tower $$$i$$$ has a height of $$$h_i$$$. At time $$$0$$$, you are on the tower with index $$$k$$$, and the current water level is $$$1$$$.Every second, the water level rises by $$$1$$$ unit. At any moment, if the water level becomes strictly greater than the height of the tower you are on, you perish.You have a magical ability: at moment $$$x$$$, you can start teleporting from tower $$$i$$$ to tower $$$j$$$, which will take $$$\\lvert h_i - h_j \\rvert$$$ seconds. That is, until moment $$$x + \\lvert h_i - h_j \\rvert$$$, you will be on tower $$$i$$$, and at moment $$$x + \\lvert h_i - h_j \\rvert$$$, you will move to tower $$$j$$$. You can start a new teleportation at the same moment you just arrived at tower $$$j$$$.For example, if $$$n=k=4$$$, $$$h=[4, 4, 4, 2]$$$, then if you start teleporting from tower $$$4$$$ to tower $$$1$$$ at moment $$$0$$$, the movement will look as follows:   Note that if the height of tower $$$1$$$ were $$$5$$$, you would not be able to teleport to it immediately, as you would be submerged at moment $$$2$$$.Your goal is to reach any tower with the maximum height before the water covers you.Determine if this is possible."
  },
  {
    "title": "No Casino in the Mountains",
    "url": "https://codeforces.com/problemset/problem/2126/B",
    "description": "You are given an array $$$a$$$ of $$$n$$$ numbers and a number $$$k$$$. The value $$$a_i$$$ describes the weather on the $$$i$$$-th day: if it rains on the $$$i$$$-th day, then $$$a_i = 1$$$; otherwise, if the weather is good on the $$$i$$$-th day, then $$$a_i = 0$$$.Jean wants to visit as many peaks as possible. One hike to a peak takes exactly $$$k$$$ days, and during each of these days, the weather must be good ($$$a_i = 0$$$). That is, formally, he can start a hike on day $$$i$$$ only if all $$$a_j = 0$$$ for all $$$j$$$ $$$(i \\leq j \\leq i + k - 1)$$$.After each hike, before starting the next one, Jean must take a break of at least one day, meaning that on the day following a hike, he cannot go on another hike.Find the maximum number of peaks that Jean can visit."
  },
  {
    "title": "Only One Digit",
    "url": "https://codeforces.com/problemset/problem/2126/A",
    "description": "You are given an integer $$$x$$$. You need to find the smallest non-negative integer $$$y$$$ such that the numbers $$$x$$$ and $$$y$$$ share at least one common digit. In other words, there must exist a decimal digit $$$d$$$ that appears in both the representation of the number $$$x$$$ and the number $$$y$$$."
  },
  {
    "title": "Timofey and Docker",
    "url": "https://codeforces.com/problemset/problem/2125/F",
    "description": "Not so long ago, a certain Timofey learned about docker and now wants to present a report about it at a conference. He has already prepared the text $$$s$$$.There are $$$n$$$ people attending the conference. The $$$i$$$-th attendee will understand Timofey's report if the number of occurrences of the word \"docker\" as a contiguous substring in the text is not less than $$$l_i$$$ and not greater than $$$r_i$$$.To ensure that as many people as possible learn about docker, Timofey can change characters in his text.Help Timofey determine the minimum number of characters that need to be changed so that the topic is understood by the maximum possible number of attendees."
  },
  {
    "title": "Sets of Complementary Sums",
    "url": "https://codeforces.com/problemset/problem/2125/E",
    "description": "We call a set of integers $$$Q$$$ a set of complementary sums if it can be obtained through the following actions:  choose an array $$$a$$$ consisting of $$$m$$$ positive integers ($$$m$$$ is any positive integer);  calculate the sum $$$s$$$ of all elements in the array $$$a$$$;  for each element $$$a_{i}$$$ in the array, add the number $$$s - a_{i}$$$ to the set, more formally the set $$$Q = \\{s - a_{i}\\;|\\; 1 \\le i \\le m\\}$$$. Note that $$$Q$$$ is not a multiset, meaning each number in it is unique. For example, if the array $$$a = [1, 3, 3, 7]$$$ was chosen, then $$$s = 14$$$ and $$$Q = \\{7, 11, 13\\}$$$.Your task is to count the number of distinct sets of complementary sums for which the following holds:  the set contains exactly $$$n$$$ elements;  each element of the set is an integer from $$$1$$$ to $$$x$$$. Two sets are considered different if there exists an element in the first set that is not included in the second set.Since the answer can be huge, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Segments Covering",
    "url": "https://codeforces.com/problemset/problem/2125/D",
    "description": "There is a linear strip divided into $$$m$$$ cells, numbered from $$$1$$$ to $$$m$$$ from left to right.You are given $$$n$$$ segments. Each segment is defined by four numbers: $$$l$$$, $$$r$$$, $$$p$$$ and $$$q$$$ — the segment covers cells from $$$l$$$ to $$$r$$$ inclusively and exists with probability $$$\\frac{p}{q}$$$ (independently).Your task is to calculate the probability that each cell is covered by exactly one segment."
  },
  {
    "title": "Count Good Numbers",
    "url": "https://codeforces.com/problemset/problem/2125/C",
    "description": "A prime number is a positive integer that has exactly two divisors: $$$1$$$ and itself. The first several prime numbers are $$$2, 3, 5, 7, 11, \\dots$$$.Prime factorization of a positive integer is representing it as a product of prime numbers. For example:  the prime factorization of $$$111$$$ is $$$3 \\cdot 37$$$;  the prime factorization of $$$43$$$ is $$$43$$$;  the prime factorization of $$$12$$$ is $$$2 \\cdot 2 \\cdot 3$$$. For every positive integer, its prime factorization is unique (if you don't consider the order of primes in the product).We call a positive integer good if all primes in its factorization consist of at least two digits. For example:  $$$343 = 7 \\cdot 7 \\cdot 7$$$ is not good;  $$$111 = 3 \\cdot 37$$$ is not good;  $$$1111 = 11 \\cdot 101$$$ is good;  $$$43 = 43$$$ is good. You have to calculate the number of good integers from $$$l$$$ to $$$r$$$ (endpoints included)."
  },
  {
    "title": "Left and Down",
    "url": "https://codeforces.com/problemset/problem/2125/B",
    "description": "There is a robot located in the cell $$$(a,b)$$$ of an infinite grid. Misha wants to move it to the cell $$$(0,0)$$$. To do this, he has fixed some integer $$$k$$$.Misha can perform the following operation: choose two integers $$$dx$$$ and $$$dy$$$ (both from $$$0$$$ to $$$k$$$ inclusive) and move the robot $$$dx$$$ cells to the left (in the direction of decreasing $$$x$$$ coordinate) and $$$dy$$$ cells down (in the direction of decreasing $$$y$$$ coordinate). In other words, move the robot from $$$(x,y)$$$ to $$$(x - dx, y - dy)$$$.The cost of the operation is:   $$$1$$$, if the chosen pair $$$(dx,dy)$$$ is used for the first time;  $$$0$$$, if the pair $$$(dx,dy)$$$ has been chosen before. Note that if $$$dx \\ne dy$$$, the pairs $$$(dx, dy)$$$ and $$$(dy, dx)$$$ are considered different.Help Misha bring the robot to the cell $$$(0,0)$$$ with minimum total cost. Note that you don't have to minimize the number of operations."
  },
  {
    "title": "Difficult Contest",
    "url": "https://codeforces.com/problemset/problem/2125/A",
    "description": "It is known that a contest can be represented by a string $$$s$$$, consisting of uppercase Latin letters that denote problems. It is also known that a contest is difficult if it contains \"FFT\" or \"NTT\" as a contiguous substring.Your task is to rearrange the problem in contest $$$s$$$ in such a way that this contest is not difficult. If the initial contest is not difficult, you may leave it as it is."
  },
  {
    "title": "Lexicographic Partition",
    "url": "https://codeforces.com/problemset/problem/2124/I",
    "description": "   Given an array $$$a$$$, define $$$f(a)$$$ as follows:   Let $$$k$$$ be an integer with $$$1 \\leq k \\leq n$$$.  Partition $$$a$$$ into $$$k$$$ subarrays$$$^{\\text{∗}}$$$ $$$s_1,s_2,\\ldots,s_k$$$ such that $$$s_1+s_2+\\ldots+s_k=a$$$. Here, $$$+$$$ represents array concatenation.  Let $$$b$$$ be an empty array. For each $$$i$$$ from $$$1$$$ to $$$k$$$ in order, append the minimum element of $$$s_i$$$ to the end of $$$b$$$.  Over all possible $$$k$$$ and partitions, $$$f(a)$$$ is the value of $$$k$$$ such that there exists a partition that produces the lexicographically largest $$$b$$$$$$^{\\text{†}}$$$. You are given $$$n$$$ integers $$$x_1,x_2,\\ldots,x_n$$$. Please determine if there exists a permutation$$$^{\\text{‡}}$$$ $$$a$$$ such that $$$f([a_1,a_2,\\ldots,a_i])=x_i$$$ for each $$$1 \\leq i \\leq n$$$. If there is a permutation, print one. If there are multiple possible answers, you may output any one.$$$^{\\text{∗}}$$$An array $$$c$$$ is a subarray of an array $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{†}}$$$An array $$$c$$$ is lexicographically smaller than an array $$$d$$$ if and only if one of the following holds:   $$$c$$$ is a prefix of $$$d$$$, but $$$c \\ne d$$$; or  in the first position where $$$c$$$ and $$$d$$$ differ, the array $$$c$$$ has a smaller element than the corresponding element in $$$d$$$.  $$$^{\\text{‡}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Longest Good Subsequence",
    "url": "https://codeforces.com/problemset/problem/2124/H",
    "description": "  Call an array $$$b$$$ of size $$$m$$$ good if the following conditions hold:   $$$1 \\leq b_i \\leq i$$$ for each $$$1 \\leq i \\leq m$$$.  There exists a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of size $$$m$$$ such that for each $$$1 \\leq i \\leq m$$$, $$$b_i$$$ is the smallest integer where $$$\\min(p_{b_i}, p_{b_i+1}, \\ldots, p_i)=p_i$$$. For example, the array $$$[1,1,3,3,5]$$$ is good (where the permutation $$$p=[2,1,5,3,4]$$$ satisfies the second requirement), but the array $$$[1,1,2]$$$ isn't.Note the empty array is considered to be good.You are given an array $$$a$$$ of size $$$n$$$. Find the length of the longest good subsequence$$$^{\\text{†}}$$$ of $$$a$$$.$$$^{\\text{∗}}$$$A permutation of length $$$m$$$ is an array consisting of $$$m$$$ distinct integers from $$$1$$$ to $$$m$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$m=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$A sequence $$$c$$$ is a subsequence of a sequence $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Maximise Sum",
    "url": "https://codeforces.com/problemset/problem/2124/G",
    "description": "This problem differs from problem B. In this problem, you must output the maximum sum of prefix minimums over all operations that cost at least $$$x$$$ for each integer $$$x$$$ from $$$0$$$ to $$$n-1$$$.You are given an array $$$a$$$ of length $$$n$$$, with elements satisfying $$$\\boldsymbol{0 \\le a_i \\le n}$$$. You can perform the following operation at most once:  Choose two indices $$$i$$$ and $$$j$$$ such that $$$i < j$$$. Set $$$a_i := a_i + a_j$$$. Then, set $$$a_j = 0$$$. Let the cost of one operation be the value of $$$j-i$$$. The cost of not performing an operation is $$$0$$$.For each integer $$$x$$$ from $$$0$$$ to $$$n-1$$$ inclusive, output the maximum possible value of $$$\\min(a_1) + \\min(a_1,a_2) + \\ldots + \\min(a_1, a_2, \\ldots, a_n)$$$ over all possible operations that have a cost of at least $$$x$$$."
  },
  {
    "title": "Appending Permutations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2124/F2",
    "description": " This is the hard version of the problem. The difference between the versions is that in this version, $$$n \\leq 5000$$$. You can hack only if you solved all versions of this problem. You are given an initially empty array $$$a$$$. You may perform the following operation any number of times:  Choose an integer $$$s \\ge 1$$$ and append a cyclic shift of the array $$$[1, 2, \\ldots, s]$$$ to the end of $$$a$$$. Formally, select integers $$$s$$$ and $$$r$$$ such that $$$1 \\le r \\le s$$$, and append the array $$$$$$ [r, r+1, \\ldots, s, 1, 2, \\ldots, r-1] $$$$$$ to the end of $$$a$$$.  You are also given an integer $$$n$$$ and $$$m$$$ restrictions of the form $$$a_i \\ne x$$$. That is, for each of the $$$m$$$ restrictions, the value at position $$$i$$$ in the final array must not be equal to $$$x$$$.Your task is to count the number of distinct arrays of length exactly $$$n$$$ that can be constructed using the allowed operation and satisfy all of the given restrictions. Two arrays are considered different if they differ at any position from $$$1$$$ to $$$n$$$.Print the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Appending Permutations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2124/F1",
    "description": " This is the easy version of the problem. The difference between the versions is that in this version, $$$n \\leq 100$$$. You can hack only if you solved all versions of this problem. You are given an initially empty array $$$a$$$. You may perform the following operation any number of times:  Choose an integer $$$s \\ge 1$$$ and append a cyclic shift of the array $$$[1, 2, \\ldots, s]$$$ to the end of $$$a$$$. Formally, select integers $$$s$$$ and $$$r$$$ such that $$$1 \\le r \\le s$$$, and append the array $$$$$$ [r, r+1, \\ldots, s, 1, 2, \\ldots, r-1] $$$$$$ to the end of $$$a$$$.  You are also given an integer $$$n$$$ and $$$m$$$ restrictions of the form $$$a_i \\ne x$$$. That is, for each of the $$$m$$$ restrictions, the value at position $$$i$$$ in the final array must not be equal to $$$x$$$.Your task is to count the number of distinct arrays of length exactly $$$n$$$ that can be constructed using the allowed operation and satisfy all of the given restrictions. Two arrays are considered different if they differ at any position from $$$1$$$ to $$$n$$$.Print the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Make it Zero",
    "url": "https://codeforces.com/problemset/problem/2124/E",
    "description": "You are given an array $$$a$$$, consisting of $$$n$$$ positive integers. You are allowed to do the following operation:   Select an array $$$b$$$ of size $$$n$$$ such that the following properties hold:  $$$0 \\leq b_i \\leq a_i$$$ for each $$$1 \\leq i \\leq n$$$  There exists an index $$$1\\leq i < n$$$ such that $$$b_1+b_2+\\ldots+b_i=b_{i+1}+b_{i+2}+\\ldots+b_n$$$. That is, the sum of the prefix of length $$$i$$$ is equal to the sum of the suffix of length $$$n-i$$$.   Then, subtract $$$b_i$$$ from $$$a_i$$$ for each $$$1 \\leq i \\leq n$$$. Your task is to change all the elements to $$$0$$$. Find the minimum number of operations required. Then, output a way to perform the operations. If it is impossible to change all the elements of $$$a$$$ to $$$0$$$ no matter how many operations are used, print $$$-1$$$ instead. It can be shown that under the constraints of this problem, the smallest number of operations required is at most $$$17$$$."
  },
  {
    "title": "Make a Palindrome",
    "url": "https://codeforces.com/problemset/problem/2124/D",
    "description": "You are given an array $$$a$$$ of size $$$n$$$, and an integer $$$k$$$. You may perform the following operation any number of times:   Select two integers $$$l$$$ and $$$r$$$ $$$(1 \\le l \\le r \\le |a|)$$$ such that $$$r-l+1 \\geq k$$$.  Then, select an index $$$i$$$ such that $$$l\\leq i \\leq r$$$ where $$$a_i$$$ is the $$$k$$$-th smallest number out of the subarray $$$[a_l,a_{l+1},\\ldots,a_r]$$$. If there are multiple possible $$$i$$$, you may select any. For example, consider $$$a = [1, 2, 2, 1, 3], l = 1, r = 5$$$ and $$$k = 3$$$, the possible candidates of $$$i$$$ are indices $$$2$$$ and $$$3$$$.  Then, delete $$$a_i$$$ from $$$a$$$, concatenating the remaining parts of the array. Determine if it is possible to get an array that is a palindrome$$$^{\\text{∗}}$$$ after any number of operations. Note that an empty array is considered a palindrome. $$$^{\\text{∗}}$$$An array $$$b=[b_1,b_2,\\ldots,b_m]$$$ is a palindrome if for each $$$1 \\leq i \\leq m$$$, $$$b_i=b_{m+1-i}$$$."
  },
  {
    "title": "Subset Multiplication",
    "url": "https://codeforces.com/problemset/problem/2124/C",
    "description": "Alice has an array $$$a$$$, consisting of $$$n$$$ positive integers. The array satisfies the beautiful property that $$$a_i$$$ divides $$$a_{i+1}$$$ for each $$$1 \\leq i \\leq n - 1$$$. Bob sees Alice's beautiful array and is jealous. To sabotage her, Bob first creates an array $$$b$$$ of size $$$n$$$ such that $$$b_i=a_i$$$ for each $$$1 \\leq i \\leq n$$$. Then, he chooses a positive integer $$$x$$$ and multiplies some (possibly none, possibly all) elements in $$$b$$$ by $$$x$$$. Formally, he chooses a (possibly-empty) subset $$$S\\subseteq\\{1,2,\\ldots,n\\}$$$, and for each $$$i\\in S$$$, he sets $$$b_i:=b_i\\cdot x$$$. You are given an array $$$b$$$, but you don't know array $$$a$$$ and the chosen number $$$x$$$. Please output any integer $$$x$$$ that Bob could choose, so that multiplying some subset of elements of the correct array $$$a$$$ by $$$x$$$ would result in array $$$b$$$. It is guaranteed that the answer exists. If there are multiple possible integers, you can output any of them."
  },
  {
    "title": "Minimise Sum",
    "url": "https://codeforces.com/problemset/problem/2124/B",
    "description": "This problem differs from problem G. In this problem, you must output the minimum sum of prefix minimums after at most one operation.You are given an array $$$a$$$ of length $$$n$$$, with elements satisfying $$$\\boldsymbol{0 \\le a_i \\le n}$$$. You can perform the following operation at most once:  Choose two indices $$$i$$$ and $$$j$$$ such that $$$i < j$$$. Set $$$a_i := a_i + a_j$$$. Then, set $$$a_j = 0$$$. Output the minimum possible value of $$$\\min(a_1) + \\min(a_1,a_2) + \\ldots + \\min(a_1, a_2, \\ldots, a_n)$$$ that you can get."
  },
  {
    "title": "Deranged Deletions",
    "url": "https://codeforces.com/problemset/problem/2124/A",
    "description": "Call an array $$$b$$$ of length $$$m$$$ a derangement if the following property holds:  Let $$$c$$$ be an array of length $$$m$$$ such that $$$c_i = b_i$$$ over all $$$1 \\leq i \\leq m$$$.  Sort $$$c$$$ in non-decreasing order.  If $$$b_i\\neq c_i$$$ over all $$$1\\leq i \\leq m$$$, then $$$b$$$ is a derangement. For example,  If $$$b = [4,8,3,1]$$$, then $$$c = [1, 3, 4, 8]$$$ after getting sorted. Since $$$b_i \\neq c_i$$$ in all positions, $$$b$$$ is a derangement.  If $$$b = [3,2,1]$$$, then $$$c = [1, 2, 3]$$$ after getting sorted. Since $$$b_2 = c_2$$$, $$$b$$$ is not a derangement. You are given an array $$$a$$$ of length $$$n$$$. In one operation, you can delete an element from $$$a$$$. The order of the remaining elements is preserved after each deletion.Output whether it is possible to perform some (possibly none) operations such that the remaining elements form a derangement. If it is possible, output any possible remaining array. The remaining array must be non-empty."
  },
  {
    "title": "Modular Sorting",
    "url": "https://codeforces.com/problemset/problem/2123/G",
    "description": "You are given an integer $$$m$$$ ($$$2\\leq m\\leq 5\\cdot 10^5$$$) and an array $$$a$$$ consisting of nonnegative integers smaller than $$$m$$$.Answer queries of the following form:   $$$1$$$ $$$i$$$ $$$x$$$: assign $$$a_i := x$$$  $$$2$$$ $$$k$$$: in one operation, you may choose an element $$$a_i$$$ and assign $$$a_i := (a_i + k) \\pmod m$$$$$$^{\\text{∗}}$$$ — determine if there exists some sequence of (possibly zero) operations to make $$$a$$$ nondecreasing$$$^{\\text{†}}$$$. Note that instances of query $$$2$$$ are independent; that is, no actual operations are taking place. Instances of query $$$1$$$ are persistent.$$$^{\\text{∗}}$$$$$$a\\pmod m$$$ is defined as the unique integer $$$b$$$ such that $$$0\\leq b<m$$$ and $$$a-b$$$ is an integer multiple of $$$m$$$.$$$^{\\text{†}}$$$An array $$$a$$$ of size $$$n$$$ is called nondecreasing if and only if $$$a_i\\leq a_{i+1}$$$ for all $$$1\\leq i<n$$$."
  },
  {
    "title": "Minimize Fixed Points",
    "url": "https://codeforces.com/problemset/problem/2123/F",
    "description": "Call a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$ good if $$$\\gcd(p_i, i)$$$$$$^{\\text{†}}$$$ $$$ > 1$$$ for all $$$2 \\leq i \\leq n$$$. Find a good permutation with the minimum number of fixed points$$$^{\\text{‡}}$$$ across all good permutations of length $$$n$$$. If there are multiple such permutations, print any of them.$$$^{\\text{∗}}$$$ A permutation of length $$$n$$$ is an array that contains every integer from $$$1$$$ to $$$n$$$ exactly once, in any order. $$$^{\\text{†}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of $$$x$$$ and $$$y$$$.$$$^{\\text{‡}}$$$A fixed point of a permutation $$$p$$$ is an index $$$j$$$ ($$$1\\leq j\\leq n$$$) such that $$$p_j = j$$$."
  },
  {
    "title": "MEX Count",
    "url": "https://codeforces.com/problemset/problem/2123/E",
    "description": "Define the $$$\\mathrm{MEX}$$$ (minimum excluded value) of an array to be the smallest nonnegative integer not present in the array. For example,  $$$\\mathrm{MEX}([2, 2, 1]) = 0$$$ because $$$0$$$ is not in the array.  $$$\\mathrm{MEX}([3, 1, 0, 1]) = 2$$$ because $$$0$$$ and $$$1$$$ are in the array but $$$2$$$ is not.  $$$\\mathrm{MEX}([0, 3, 1, 2]) = 4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ are in the array but $$$4$$$ is not. You are given an array $$$a$$$ of size $$$n$$$ of nonnegative integers.For all $$$k$$$ ($$$0\\leq k \\leq n$$$), count the number of possible values of $$$\\mathrm{MEX}(a)$$$ after removing exactly $$$k$$$ values from $$$a$$$."
  },
  {
    "title": "Binary String Battle",
    "url": "https://codeforces.com/problemset/problem/2123/D",
    "description": "Alice and Bob are given a binary string $$$s$$$ of length $$$n$$$, and an integer $$$k$$$ ($$$1\\leq k < n$$$).Alice wins if she is able to transform all characters of $$$s$$$ into zeroes. If Alice is unable to win in a finite number of moves, then Bob wins.Alice and Bob take turns, with Alice going first.   On Alice's turn, she may choose any subsequence$$$^{\\text{∗}}$$$ of length $$$k$$$ in $$$s$$$, then set all characters in that subsequence to zero.  On Bob's turn, he may choose any substring$$$^{\\text{†}}$$$ of length $$$k$$$ in $$$s$$$, then set all characters in that substring to one. Note that Alice wins if the string consists of all zeros at any point during the game, including in between Alice's and Bob's turns.Determine who wins with optimal play.$$$^{\\text{∗}}$$$A subsequence of a string $$$s$$$ is a set of characters in $$$s$$$. Note that these characters do not have to be adjacent.$$$^{\\text{†}}$$$A substring of a string $$$s$$$ is a contiguous group of characters in $$$s$$$. Note that these characters must be adjacent."
  },
  {
    "title": "Prefix Min and Suffix Max",
    "url": "https://codeforces.com/problemset/problem/2123/C",
    "description": "You are given an array $$$a$$$ of distinct integers.In one operation, you may either:   choose a nonempty prefix$$$^{\\text{∗}}$$$ of $$$a$$$ and replace it with its minimum value, or  choose a nonempty suffix$$$^{\\text{†}}$$$ of $$$a$$$ and replace it with its maximum value. Note that you may choose the entire array $$$a$$$.For each element $$$a_i$$$, determine if there exists some sequence of operations to transform $$$a$$$ into $$$[a_i]$$$; that is, make the array $$$a$$$ consist of only one element, which is $$$a_i$$$. Output your answer as a binary string of length $$$n$$$, where the $$$i$$$-th character is $$$1$$$ if there exists a sequence to transform $$$a$$$ into $$$[a_i]$$$, and $$$0$$$ otherwise.$$$^{\\text{∗}}$$$A prefix of an array is a subarray consisting of the first $$$k$$$ elements of the array, for some integer $$$k$$$.$$$^{\\text{†}}$$$A suffix of an array is a subarray consisting of the last $$$k$$$ elements of the array, for some integer $$$k$$$."
  },
  {
    "title": "Tournament",
    "url": "https://codeforces.com/problemset/problem/2123/B",
    "description": "You are given an array of integers $$$a_1,a_2,\\dots,a_n$$$. A tournament is held with $$$n$$$ players. Player $$$i$$$ has strength $$$a_i$$$.While more than $$$k$$$ players remain,   Two remaining players are chosen at random;  Then the chosen player with the lower strength is eliminated. If the chosen players have the same strength, one is eliminated at random. Given integers $$$j$$$ and $$$k$$$ ($$$1 \\leq j,k \\leq n$$$), determine if there is any way for player $$$j$$$ to be one of the last $$$k$$$ remaining players."
  },
  {
    "title": "Blackboard Game",
    "url": "https://codeforces.com/problemset/problem/2123/A",
    "description": "Initially, the integers from $$$0$$$ to $$$n-1$$$ are written on a blackboard.In one round,   Alice chooses an integer $$$a$$$ on the blackboard and erases it;  then Bob chooses an integer $$$b$$$ on the blackboard such that $$$a+b \\equiv 3 \\pmod 4$$$$$$^{\\text{∗}}$$$ and erases it. Rounds take place in succession until a player is unable to make a move — the first player who is unable to make a move loses. Determine who wins with optimal play. $$$^{\\text{∗}}$$$We define that $$$x\\equiv y\\pmod m$$$ whenever $$$x-y$$$ is an integer multiple of $$$m$$$."
  },
  {
    "title": "Tree Parking",
    "url": "https://codeforces.com/problemset/problem/2122/G",
    "description": " Consider the following problem statement: You are given a tree with $$$n$$$ vertices rooted at $$$1$$$. For each $$$1 \\leq i \\leq n$$$, a car will enter the root at time $$$l_i$$$. It will then instantaneously travel from the root to vertex $$$i$$$ through the unique simple path and park there. It will leave through the same path in the other direction at time $$$r_i$$$.During the time when a car is parked in a vertex, it blocks other cars from traveling through that vertex. The tree is called valid if and only if all cars are able to enter and leave the tree at their desired times.Count the number of pairs of sequences $$$l$$$, $$$r$$$ such that $$$l_i < r_i$$$, their concatenation is a permutation of $$$1 \\ldots 2n$$$, and the tree is valid. Calculate the sum of the answers to the problem over all labeled trees$$$^{\\text{∗}}$$$ with $$$n$$$ vertices and $$$k$$$ leaves. The root is not considered a leaf. Since the answer may be large, calculate it modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$Two labeled trees are considered different if and only if their edge sets are different."
  },
  {
    "title": "Colorful Polygon",
    "url": "https://codeforces.com/problemset/problem/2122/F",
    "description": "You are given an array $$$a_1, a_2, \\ldots, a_n$$$, where $$$n \\leq 8$$$ and $$$a_1 + a_2 + \\cdots + a_n \\leq 100$$$.Construct a simple polygon$$$^{\\text{∗}}$$$ with at most $$$333$$$ vertices that has exactly $$$$$$\\frac{(a_1 + a_2 + \\cdots + a_n)!}{a_1! a_2! \\cdots a_n!}$$$$$$ different triangulations$$$^{\\text{†}}$$$. It can be proven that such a polygon always exists.$$$^{\\text{∗}}$$$A simple polygon is a polygon that does not intersect itself and has no holes. In other words, no two non-consecutive edges can have common points, and consecutive edges must have exactly one common point — the vertex between them. Consecutive edges may be collinear.$$$^{\\text{†}}$$$A triangulation of a polygon with $$$m$$$ vertices is a set of $$$m-3$$$ diagonals that intersect only at vertices. A diagonal is a segment between two vertices which lies inside the polygon and has exactly two common points with the polygon sides — the vertices it connects."
  },
  {
    "title": "Greedy Grid Counting",
    "url": "https://codeforces.com/problemset/problem/2122/E",
    "description": "A path in a grid is called greedy if it starts at the top-left cell and moves only to the right or downward, always moving to its neighbor with the greater value (or either if the values are equal).The value of a path is the sum of the values of the cells it visits, including the start and end.Given a partially filled $$$2 \\times n$$$ grid of integers between $$$1$$$ and $$$k$$$, count the number of ways to fill the empty cells such that in every subgrid$$$^{\\text{∗}}$$$, there exists a greedy path that achieves the maximum value out of all down/right paths. Since the answer may be large, calculate it modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$ A subgrid of a $$$2 \\times n$$$ grid $$$a_{i,j}$$$ is a grid formed from all cells $$$a_{x,y}$$$ such that $$$l_x \\leq x \\leq r_x$$$, $$$l_y \\leq y \\leq r_y$$$ for some $$$1 \\leq l_x \\leq r_x \\leq 2$$$, $$$1 \\leq l_y \\leq r_y \\leq n$$$. "
  },
  {
    "title": "Traffic Lights",
    "url": "https://codeforces.com/problemset/problem/2122/D",
    "description": " You are given a simple undirected connected graph of $$$n$$$ vertices and $$$m$$$ edges.There is a token in vertex $$$1$$$. We consider the initial time to be at $$$0$$$ seconds. After $$$t$$$ seconds, if the token is in vertex $$$u$$$, you must do exactly one of the following:  wait one second,  move the token through the $$$(t \\bmod \\mathrm{deg}(u) + 1)$$$$$$^{\\text{∗}}$$$-th edge of $$$u$$$, which takes one second. The order of edges of a vertex is the order that they appear in the input.Calculate the minimum time required to move the token from vertex $$$1$$$ to vertex $$$n$$$, and the minimum time spent waiting that can be achieved while minimizing the total time.$$$^{\\text{∗}}$$$$$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$. "
  },
  {
    "title": "Like the Bitset",
    "url": "https://codeforces.com/problemset/problem/2136/B",
    "description": "  You are given a binary string$$$^{\\text{∗}}$$$ $$$s$$$ of length $$$n$$$, as well as an integer $$$k$$$.Aquawave wants to construct a permutation$$$^{\\text{†}}$$$ $$$p$$$ of length $$$n$$$, so that for each $$$1\\le i\\le n$$$, where $$$s_i=\\mathtt{1}$$$, the following holds:  For each interval $$$[l, r]$$$ ($$$1\\le l\\le r\\le n$$$) whose length is at least $$$k$$$ (i.e. $$$r - l + 1 \\geq k$$$), if it covers position $$$i$$$ (i.e. $$$l \\leq i \\leq r$$$), then the maximum element among $$$p_l, p_{l+1}, \\ldots, p_r$$$ is not $$$p_i$$$. Note that there are no such constraints on indices with $$$s_i = \\mathtt{0}$$$.You have to find such a permutation, or determine that such permutations do not exist.$$$^{\\text{∗}}$$$A binary string is a string where each character is either $$$\\mathtt{0}$$$ or $$$\\mathtt{1}$$$.$$$^{\\text{†}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "In the Dream",
    "url": "https://codeforces.com/problemset/problem/2136/A",
    "description": "Two football teams, the RiOI team and the KDOI team, are about to have a football match. A football match consists of two halves — the first half and the second half. At the beginning of the match, both teams have a score of $$$0$$$.As a fan of both teams, Aquawave knows that the two teams have similar levels, so neither team will score three consecutive goals in the same half.Aquawave had a dream the night before the match, in which:  The score at the end of the first half was $$$a:b$$$, where $$$a$$$ is the score of the RiOI team, and $$$b$$$ is the score of the KDOI team;  And, the score at the end of the second half was $$$c:d$$$, where $$$c$$$ is the score of the RiOI team, and $$$d$$$ is the score of the KDOI team. You have to determine whether Aquawave's dream can come true according to the above information."
  },
  {
    "title": "To the Infinity",
    "url": "https://codeforces.com/problemset/problem/2135/F",
    "description": "    You are given a full binary tree$$$^{\\text{∗}}$$$ of $$$n$$$ nodes, rooted at node $$$1$$$. For each node $$$u$$$ ($$$1\\le u\\le n$$$), we define function $$$f_u : \\mathbb R_+ \\to \\mathbb R_+$$$ as follows:  If $$$u$$$ is a leaf$$$^{\\text{†}}$$$, then $$$f_u(x)=x$$$;  Otherwise, denote the left child of $$$u$$$ as $$$l_u$$$ and the right child of $$$u$$$ as $$$r_u$$$, then $$$f_u(x)=(f_{l_u}(x))^{f_{r_u}(x)}$$$. For two nodes $$$u$$$ and $$$v$$$, we say $$$u\\prec v$$$ if and only if one of the following holds:  $$$f_{u}(x)<f_{v}(x)$$$ when $$$x\\to\\infty$$$;  $$$u<v$$$, and $$$f_{u}(x)=f_{v}(x)$$$ when $$$x\\to\\infty$$$$$$^{\\text{‡}}$$$. It can be shown that for any two distinct nodes $$$u$$$ and $$$v$$$, either $$$u\\prec v$$$ or $$$v\\prec u$$$ holds. You have to sort the nodes by order $$$\\prec$$$. Formally, you need to find a permutation$$$^{\\text{§}}$$$ $$$p$$$ of length $$$n$$$, such that for every $$$1\\le i<n$$$, $$$p_i\\prec p_{i+1}$$$.$$$^{\\text{∗}}$$$A full binary tree is a rooted tree, in which each node has $$$0$$$ or $$$2$$$ children. $$$^{\\text{†}}$$$A leaf is any vertex without children. $$$^{\\text{‡}}$$$Here, $$$f_u(x) < f_v(x)$$$ when $$$x\\to\\infty$$$ is equivalent to the following description: there exists a positive number $$$N$$$ such that for all $$$x > N$$$, $$$f_u(x) < f_v(x)$$$ holds. The same is defined for $$$f_u(x) = f_v(x)$$$ when $$$x\\to \\infty$$$.$$$^{\\text{§}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Beyond the Palindrome (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2135/E2",
    "description": "   This is the hard version of the problem. The difference between the versions is that in this version, $$$n\\le 2\\cdot 10^7$$$, and the sum of $$$n$$$ over all test cases does not exceed $$$10^8$$$. You can hack only if you solved all versions of this problem. For a binary string$$$^{\\text{∗}}$$$ $$$r$$$, we define $$$f(r)$$$ as the result of the following process: Delete all $$$\\texttt{10}$$$ substrings$$$^{\\text{†}}$$$ simultaneously from $$$r$$$;  Repeat the above operation until there are no $$$\\texttt{10}$$$ substrings in $$$r$$$.For example, $$$f(\\mathtt{100110001})=\\mathtt{001}$$$ because $$$r$$$ changes as follows: $$$\\mathtt{\\underline{10}01\\underline{10}001}\\to \\mathtt{0\\underline{10}01}\\to\\mathtt{001}$$$.We call a binary string $$$s$$$ almost-palindrome if and only if $$$f(s)=f(\\mathrm{rev}(s))$$$$$$^{\\text{‡}}$$$.Aquawave has given you an integer $$$n$$$. You have to help him find the number of distinct almost-palindrome binary strings of length $$$n$$$, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A binary string is a string where each character is either $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. $$$^{\\text{‡}}$$$$$$\\mathrm{rev}(s)$$$ is the string obtained by writing $$$s$$$ from right to left. For example, $$$\\mathrm{rev(\\mathtt{10100})=\\mathtt{00101}}$$$."
  },
  {
    "title": "Beyond the Palindrome (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2135/E1",
    "description": "   This is the easy version of the problem. The difference between the versions is that in this version, $$$n\\le 10^6$$$, and the sum of $$$n$$$ over all test cases does not exceed $$$10^6$$$. You can hack only if you solved all versions of this problem. For a binary string$$$^{\\text{∗}}$$$ $$$r$$$, we define $$$f(r)$$$ as the result of the following process: Delete all $$$\\texttt{10}$$$ substrings$$$^{\\text{†}}$$$ simultaneously from $$$r$$$;  Repeat the above operation until there are no $$$\\texttt{10}$$$ substrings in $$$r$$$.For example, $$$f(\\mathtt{100110001})=\\mathtt{001}$$$ because $$$r$$$ changes as follows: $$$\\mathtt{\\underline{10}01\\underline{10}001}\\to \\mathtt{0\\underline{10}01}\\to\\mathtt{001}$$$.We call a binary string $$$s$$$ almost-palindrome if and only if $$$f(s)=f(\\mathrm{rev}(s))$$$$$$^{\\text{‡}}$$$.Aquawave has given you an integer $$$n$$$. You have to help him find the number of distinct almost-palindrome binary strings of length $$$n$$$, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A binary string is a string where each character is either $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. $$$^{\\text{‡}}$$$$$$\\mathrm{rev}(s)$$$ is the string obtained by writing $$$s$$$ from right to left. For example, $$$\\mathrm{rev(\\mathtt{10100})=\\mathtt{00101}}$$$."
  },
  {
    "title": "From the Unknown (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2135/D2",
    "description": "   This is the hard version of the problem. The difference between the versions is that in this version, the sum of the lengths of the articles over all queries must not exceed $$$2.5\\cdot 10^4$$$. You can hack only if you solved all versions of this problem. This is an interactive problem. The RiOI Team has recently developed a text editor named RiOI Editor. The editor works with exactly one integer parameter $$$W$$$ — the width of each line. It is known that $$$1 \\leq W \\leq 10^5$$$.As you cannot understand the RiOI Language, from your point of view, words differ from each other only by their length. Hence, an article of length $$$n$$$ is defined as a sequence $$$a$$$ consisting of $$$n$$$ positive integers, where $$$a_i$$$ is the length of the $$$i$$$-th word in the article. The RiOI Editor displays the article $$$[a_1, a_2,\\ldots, a_n]$$$ on screen as follows:  If $$$\\max(a_1, a_2, \\ldots, a_n) > W$$$, the editor is unable to display the article;  Otherwise, the editor is able to display the article by the following process:   Initially, $$$l = 1$$$, and $$$s = 0$$$. During the whole process, $$$l$$$ always denotes the current number of lines in the editor, and $$$s$$$ always denotes the sum of lengths of words in the last line;  Then, for each $$$1\\le i\\le n$$$:   If $$$s + a_i \\leq W$$$, the word is inserted at the end of the current line. Thus, $$$l$$$ remains unchanged, and $$$s$$$ gets increased by $$$a_i$$$.  Otherwise, the word is inserted into a new line. Thus, $$$l$$$ becomes $$$l + 1$$$, and $$$s$$$ becomes $$$a_i$$$.   The number of lines needed to display the article is the final value of $$$l$$$.  You are very interested in the editor, so you decide to find out the value of $$$W$$$ by inputting some articles into the editor and observing the number of lines needed to display each article. Formally, you can query the jury at most $$$2$$$ times. In each query, you input an article $$$[a_1, a_2, \\ldots, a_n]$$$ ($$$1\\leq n \\leq 10^5$$$) to the editor, and the jury will respond to you with:  The number of lines needed to display the article, if the editor is able to display it;  $$$0$$$, if the editor is unable to display the article. Additional constraint in this version: the sum of the lengths of the articles (i.e., $$$n$$$) over all queries must not exceed $$$2.5\\cdot 10^4$$$."
  },
  {
    "title": "From the Unknown (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2135/D1",
    "description": "   This is the easy version of the problem. The difference between the versions is that in this version, there are no constraints on the sum of the lengths of the articles over all queries. You can hack only if you solved all versions of this problem. This is an interactive problem. The RiOI Team has recently developed a text editor named RiOI Editor. The editor works with exactly one integer parameter $$$W$$$ — the width of each line. It is known that $$$1 \\leq W \\leq 10^5$$$.As you cannot understand the RiOI Language, from your point of view, words differ from each other only by their length. Hence, an article of length $$$n$$$ is defined as a sequence $$$a$$$ consisting of $$$n$$$ positive integers, where $$$a_i$$$ is the length of the $$$i$$$-th word in the article. The RiOI Editor displays the article $$$[a_1, a_2,\\ldots, a_n]$$$ on screen as follows:  If $$$\\max(a_1, a_2, \\ldots, a_n) > W$$$, the editor is unable to display the article;  Otherwise, the editor is able to display the article by the following process:   Initially, $$$l = 1$$$, and $$$s = 0$$$. During the whole process, $$$l$$$ always denotes the current number of lines in the editor, and $$$s$$$ always denotes the sum of lengths of words in the last line;  Then, for each $$$1\\le i\\le n$$$:   If $$$s + a_i \\leq W$$$, the word is inserted at the end of the current line. Thus, $$$l$$$ remains unchanged, and $$$s$$$ gets increased by $$$a_i$$$.  Otherwise, the word is inserted into a new line. Thus, $$$l$$$ becomes $$$l + 1$$$, and $$$s$$$ becomes $$$a_i$$$.   The number of lines needed to display the article is the final value of $$$l$$$.  You are very interested in the editor, so you decide to find out the value of $$$W$$$ by inputting some articles into the editor and observing the number of lines needed to display each article. Formally, you can query the jury at most $$$2$$$ times. In each query, you input an article $$$[a_1, a_2, \\ldots, a_n]$$$ ($$$1\\leq n \\leq 10^5$$$) to the editor, and the jury will respond to you with:  The number of lines needed to display the article, if the editor is able to display it;  $$$0$$$, if the editor is unable to display the article. "
  },
  {
    "title": "By the Assignment",
    "url": "https://codeforces.com/problemset/problem/2135/C",
    "description": " For an undirected connected graph of $$$n$$$ vertices, where the $$$i$$$-th vertex has a weight of $$$v_i$$$, we define the value of a simple path$$$^{\\text{∗}}$$$ $$$l_1, l_2, \\ldots, l_m$$$ as $$$v_{l_1}\\oplus v_{l_2}\\oplus\\cdots\\oplus v_{l_m}$$$$$$^{\\text{†}}$$$. We call the graph balanced if and only if:  For every $$$1\\le p<q\\le n$$$, all simple paths from $$$p$$$ to $$$q$$$ have the same value. Aquawave has given you an undirected connected graph of $$$n$$$ vertices and $$$m$$$ edges, and the $$$i$$$-th vertex in the graph has a weight of $$$a_i$$$. However, some of the weights are missing, represented by $$$-1$$$.Aquawave wants to assign an integer weight between $$$0$$$ and $$$V-1$$$ to each vertex with $$$a_i=-1$$$, so that the graph will be balanced.You have to help Aquawave find the number of ways to assign weights to achieve the goal, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A simple path from $$$c$$$ to $$$d$$$ is a sequence of vertices $$$l_1, l_2, \\ldots, l_m$$$, where $$$l_1=c$$$, $$$l_m=d$$$, such that there is an edge between $$$l_i$$$ and $$$l_{i+1}$$$ for every $$$1\\le i\\le m-1$$$, and there are no repeated vertices, i.e. $$$l_i\\ne l_j$$$ for $$$1\\le i<j\\le n$$$. $$$^{\\text{†}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. "
  },
  {
    "title": "For the Champion",
    "url": "https://codeforces.com/problemset/problem/2135/B",
    "description": " This is an interactive problem.The RiOI team is hosting a robot championship! This time, your robot is teleported into an infinite 2D plane with the Cartesian coordinate system on it. There are $$$n$$$ anchor points on the plane, and the coordinates of the $$$i$$$-th anchor point are $$$(x_i, y_i)$$$ ($$$-10^9\\le x_i,y_i\\le 10^9$$$). These are given to your robot by the jury as soon as it is teleported into the plane. However, your robot doesn't know its initial coordinates at first.To test the IQ of your robot, the RiOI team has come up with an interesting game. Your robot needs to find out the initial coordinates $$$(X, Y)$$$ ($$$-10^9\\le X, Y\\le 10^9$$$) by making the following moves.In one move, assuming that its current coordinates are $$$(a,b)$$$, your robot can choose a non-negative integer $$$k$$$ ($$$0\\le k\\le 10^9$$$) and do one of the following four types of operations:  Move up by $$$k$$$ units, i.e., your robot will move to $$$(a,b+k)$$$;  Move down by $$$k$$$ units, i.e., your robot will move to $$$(a,b-k)$$$;  Move left by $$$k$$$ units, i.e., your robot will move to $$$(a-k,b)$$$;  Move right by $$$k$$$ units, i.e., your robot will move to $$$(a+k,b)$$$. After each move, the jury will give the minimum Manhattan Distance between the current coordinates of your robot and any anchor point. More formally, assuming that the coordinates of your robot are $$$(c,d)$$$ after the move, the jury will output$$$$$$ \\min_{1\\le i\\le n}\\left ( \\left|x_i-c\\right|+\\left|y_i-d\\right|\\right ). $$$$$$To win the prize, you must prove that your robot has a high IQ. So you have to write a program for your robot to find its initial coordinates $$$(X, Y)$$$ in no more than $$$10$$$ moves."
  },
  {
    "title": "Against the Difference",
    "url": "https://codeforces.com/problemset/problem/2135/A",
    "description": "  We define that a block is an array where all elements in it are equal to the length of the array. For example, $$$[3, 3, 3]$$$, $$$[1]$$$, and $$$[4, 4, 4, 4]$$$ are blocks, while $$$[1, 1, 1]$$$ and $$$[2, 3, 3]$$$ are not.An array is called neat if it can be obtained by the concatenation of an arbitrary number of blocks (possibly zero). Note that an empty array is always neat.You are given an array $$$a$$$ consisting of $$$n$$$ integers. Find the length of its longest neat subsequence$$$^{\\text{∗}}$$$. $$$^{\\text{∗}}$$$A sequence $$$c$$$ is a subsequence of a sequence $$$a$$$ if $$$c$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Permutation Oddness",
    "url": "https://codeforces.com/problemset/problem/2134/F",
    "description": "  You are given four positive integers $$$c_0$$$, $$$c_1$$$, $$$c_2$$$, and $$$c_3$$$.Let $$$n = c_0 + c_1 + c_2 + c_3$$$. Consider an array $$$a$$$ of $$$n$$$ integers with $$$x$$$ ($$$0\\le x\\le 3$$$) appearing $$$c_x$$$ times. For any distinct permutation$$$^{\\text{∗}}$$$ $$$b$$$ of the array $$$a$$$, define its oddness as$$$^{\\text{†}}$$$$$$^{\\text{‡}}$$$:$$$$$$\\sum_{i = 1}^{n-1} \\text{lowbit}(b_i \\oplus b_{i+1})$$$$$$Your task is to count, for each integer $$$k$$$ from $$$0$$$ to $$$2 \\cdot (n-1)$$$ (inclusive), the number of distinct permutations of $$$a$$$ with an oddness equal to $$$k$$$.Since the numbers might be too large, you are only required to find them modulo $$$10^9 + 7$$$.$$$^{\\text{∗}}$$$A permutation of the array is an arrangement of its elements into any order. For example, $$$[1,2,2]$$$ is a permutation of $$$[2,2,1]$$$, but $$$[1,1,2]$$$ is not. Two permutations are considered distinct if they differ in at least one position.$$$^{\\text{†}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. $$$^{\\text{‡}}$$$$$$\\text{lowbit}(x)$$$ is the value of the lowest binary bit of $$$x$$$, e.g. $$$\\text{lowbit}(12)=4$$$, $$$\\text{lowbit}(8)=8$$$. Specifically, we define $$$\\text{lowbit}(0) = 0$$$."
  },
  {
    "title": "Power Boxes",
    "url": "https://codeforces.com/problemset/problem/2134/E",
    "description": " This is an interactive problem.You are given $$$n$$$ boxes, indexed from $$$1$$$ to $$$n$$$. The boxes look identical, but each one has a hidden power value $$$a_i$$$, which is either $$$1$$$ or $$$2$$$.You want to determine the power value of each box. To do so, you conduct the following experiment. Initially, the $$$i$$$-th box is placed at coordinate $$$i$$$ on a number line ($$$1 \\le i \\le n$$$).You are allowed to perform the following two types of queries:  \"swap $$$x$$$\" ($$$1 \\le x \\le n - 1$$$): Swap the boxes currently located at coordinates $$$x$$$ and $$$x + 1$$$. Note that this change is permanent and affects all subsequent queries.  \"throw $$$x$$$\" ($$$1 \\le x \\le n$$$): Throw a ball at the box located at coordinate $$$x$$$. The ball travels $$$p$$$ units forward to coordinate $$$x + p$$$ if the power value of the box is $$$p$$$. If there is a box at the new coordinate, the ball jumps again using the power of that box. This continues until the ball lands on a coordinate without a box. As a response, you are given the total number of jumps the ball made before stopping. Your task is to determine the power value of each box using no more than $$$\\left\\lceil \\frac{3n}{2} \\right\\rceil$$$ queries in total, counting both swap and throw queries."
  },
  {
    "title": "Sliding Tree",
    "url": "https://codeforces.com/problemset/problem/2134/D",
    "description": "  You are given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$. You can modify its structure using the following multi-step operation, called a sliding operation:  Choose three distinct vertices $$$a$$$, $$$b$$$, and $$$c$$$ such that $$$b$$$ is directly connected to both $$$a$$$ and $$$c$$$.  Then, for every neighbor $$$d$$$ of $$$b$$$ (excluding $$$a$$$ and $$$c$$$), remove the edge between $$$b$$$ and $$$d$$$, and instead connect $$$d$$$ directly to $$$c$$$. For example, the figure below illustrates this operation with $$$a = 4$$$, $$$b = 3$$$, and $$$c = 5$$$ in the leftmost tree.  It can be proved that after a sliding operation, the resulting graph is still a tree.Your task is to find a sequence of sliding operations that transforms the tree into a path graph$$$^{\\text{†}}$$$, while minimizing the total number of operations. You only need to output the first sliding operation in an optimal sequence if at least one operation is required. It can be proved that it is possible to transform the tree into a path graph using a finite number of operations.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$A path graph is a tree where every vertex has a degree of at most $$$2$$$. Note that a graph with only $$$1$$$ vertex and no edges is also a path graph."
  },
  {
    "title": "Even Larger",
    "url": "https://codeforces.com/problemset/problem/2134/C",
    "description": "  An array is called good if, for every subarray$$$^{\\text{∗}}$$$ of length at least $$$2$$$, the sum of the elements at even indices (with respect to the original array) is greater than or equal to the sum of the elements at odd indices. Array indexing starts from $$$1$$$.For example, the arrays $$$[3,8,4,4]$$$ and $$$[2,3,1,4,2]$$$ are good. The array $$$[0,2,4,1]$$$ is not because, in the subarray $$$[2,4,1]$$$, the elements at even indices in the original array are $$$2$$$ (index $$$2$$$) and $$$1$$$ (index $$$4$$$), while the only element at an odd index is $$$4$$$ (index $$$3$$$). Since $$$2 + 1 < 4$$$, the condition does not hold for this subarray.You are given an array of $$$n$$$ non-negative integers $$$a_1,a_2,\\ldots,a_n$$$. In one operation, you can decrease any element in the array by $$$1$$$, but all elements must remain non-negative. Your task is to find the minimum number of operations needed to make the array $$$a$$$ good. It can be proved that it is possible to make the array good using a finite number of operations.$$$^{\\text{∗}}$$$An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Add 0 or K",
    "url": "https://codeforces.com/problemset/problem/2134/B",
    "description": " You are given an array of $$$n$$$ positive integers $$$a_1, a_2, \\ldots, a_n$$$ and a positive integer $$$k$$$.In one operation, you may add either $$$0$$$ or $$$k$$$ to each $$$a_i$$$, i.e., choose another array of $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ where each $$$b_i$$$ is either $$$0$$$ or $$$k$$$, and update $$$a_i$$$ to $$$a_i + b_i$$$ for $$$1 \\le i \\le n$$$. Note that you can choose different values for each element of the array $$$b$$$.Your task is to perform at most $$$k$$$ such operations to make $$$\\gcd(a_1, a_2, \\ldots, a_n) > 1$$$ $$$^{\\text{∗}}$$$. It can be proved that this is always possible.Output the final array after the operations. You do not have to output the operations themselves.$$$^{\\text{∗}}$$$$$$\\gcd(a_1, a_2, \\ldots, a_n)$$$ denotes the greatest common divisor (GCD) of $$$a_1, a_2, \\ldots, a_n$$$."
  },
  {
    "title": "Painting With Two Colors",
    "url": "https://codeforces.com/problemset/problem/2134/A",
    "description": "You are given three positive integers $$$n$$$, $$$a$$$, and $$$b$$$ ($$$1\\leq a,b \\leq n$$$).Consider a row of $$$n$$$ cells, initially all white and indexed from $$$1$$$ to $$$n$$$. You will perform the following two steps in order:  Choose an integer $$$x$$$ such that $$$1 \\le x \\le n - a + 1$$$, and paint the $$$a$$$ consecutive cells $$$x, x+1, \\ldots, x+a-1$$$ red.  Choose an integer $$$y$$$ such that $$$1 \\le y \\le n - b + 1$$$, and paint the $$$b$$$ consecutive cells $$$y, y+1, \\ldots, y+b-1$$$ blue. If a cell is painted both red and blue, its final color is blue.A coloring of the grid is considered symmetric if, for every integer $$$i$$$ from $$$1$$$ to $$$n$$$ (inclusive), the color of cell $$$i$$$ is the same as the color of cell $$$(n+1-i)$$$. Your task is to determine whether there exist integers $$$x$$$ and $$$y$$$ such that the final coloring of the grid is symmetric."
  },
  {
    "title": "Flint and Steel",
    "url": "https://codeforces.com/problemset/problem/2133/F",
    "description": " Steve's creeper farm has overflowed and there are creepers everywhere! There are $$$n$$$ creepers standing in a line, with the $$$i$$$-th creeper having explosive power $$$e_i$$$. Steve needs to kill all of them in order to get past.To do this, he can use his trusty Flint and Steel to detonate creepers. Detonating the creeper at position $$$i$$$ kills all creepers at positions $$$j$$$ such that $$$|i - j| < e_i$$$. Dead creepers cannot be detonated. Some creepers may be particularly weak and have explosive power $$$0$$$, meaning they cannot be detonated either.With the Great Hog hot on his tail, there is no time to waste. Find a sequence of detonations that kills all the creepers with as few detonations as possible, or report it is impossible."
  },
  {
    "title": "I Yearned For The Mines",
    "url": "https://codeforces.com/problemset/problem/2133/E",
    "description": "  As a child, Steve yearned for the mines! His mine can be represented as a tree$$$^{\\text{∗}}$$$ of $$$n$$$ nodes.Unfortunately, Steve's mine has been infiltrated by his greatest nemesis, Herobrine! At any time, Herobrine is hiding in exactly one node; initially, he may be in any of them. Steve can perform the following operations:  $$$1\\,\\,x$$$ — Check if Herobrine is currently in node $$$x$$$. If he is, Steve catches him. Otherwise, Herobrine may or may not move to any adjacent node (except the one you just checked).  $$$2\\,\\,x$$$ — Destroy all edges connected to node $$$x$$$; Herobrine will no longer be able to use them. Afterwards, Herobrine may or may not move to any adjacent node. Find a sequence of at most $$$\\left\\lfloor \\frac{5}{4} \\cdot n \\right\\rfloor$$$ operations that will guarantee Steve catches Herobrine, regardless of Herobrine's initial location and moves. We have a proof that, under the given constraints, this is always possible.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. "
  },
  {
    "title": "Chicken Jockey",
    "url": "https://codeforces.com/problemset/problem/2133/D",
    "description": " Steve made the foolish decision to mine at night, and came across a monstrous creature: the chicken jockey$$$^n$$$!A chicken jockey$$$^n$$$ consists of $$$n$$$ mobs stacked in order on top of each other, with mob $$$1$$$ at the bottom and mob $$$n$$$ at the top. Mob $$$i$$$ initially has $$$h_i$$$ health.In one attack, Steve can deal $$$1$$$ damage to any mob. If any mob reaches $$$0$$$ or less health, it dies, and all the mobs on top of it fall down and form a new stack. The bottom mob in the new stack takes $$$1$$$ fall damage for every mob it was on top of before falling (i.e. the number of mobs below it in the previous stack, including the one that just died). This may kill it as well, in which case all mobs on top of it fall down again and the process repeats.For example, consider a chicken jockey$$$^6$$$ with initial mob healths $$$[1, 2, 1, 3, 5, 2]$$$. If Steve damages the third mob in the stack, it dies and the mobs with health $$$[3, 5, 2]$$$ fall down in a new stack. The bottom mob takes $$$3$$$ units of fall damage so it also dies, and the mobs with health $$$[5, 2]$$$ fall down in a new stack. The bottom mob takes $$$1$$$ unit of fall damage. As a result, after Steve's first attack, there will be two stacks with healths $$$[1, 2]$$$ and $$$[4, 2]$$$.Steve's sword's durability is low, so he wishes to know the minimum attacks required to kill all the mobs."
  },
  {
    "title": "The Nether",
    "url": "https://codeforces.com/problemset/problem/2133/C",
    "description": "   This is an interactive problem. Having recently discovered The Nether, Steve has built a network of $$$n$$$ nether portals, each at a different location in his world.Each portal is connected in one direction to some number (possibly zero) of other portals. To avoid getting lost, Steve has carefully built the network of portals so that there is no sequence of jumps through portals that will bring you from a location back to itself; formally, the network forms a directed acyclic graph.Steve refuses to tell you which portals are connected to which, but he will allow you to ask queries. In each query, you give Steve a set of locations $$$S = \\{s_1, s_2, \\ldots, s_k\\}$$$ and a starting location $$$x \\in S$$$. Steve will figure out the longest path starting at $$$x$$$ that only passes through locations in $$$S$$$ and tell you the number of locations in it. (If it is impossible to reach any other location in $$$S$$$ from $$$x$$$, Steve will reply with $$$1$$$.)As you are looking to obtain the achievement \"Hot Tourist Destinations\", you want to find any path that visits as many locations as possible. Steve is feeling particularly generous and will give you $$$2 \\cdot n$$$ queries to find it."
  },
  {
    "title": "Villagers",
    "url": "https://codeforces.com/problemset/problem/2133/B",
    "description": " Steve lives in a village with $$$n$$$ other villagers. Unfortunately, due to disputes over the distribution of emeralds, none of those villagers are friends with any other villager. Furthermore, villager $$$i$$$ initially has a grumpiness of $$$g_i$$$.Steve can perform the following operation any number of times:  Select two villagers $$$i$$$ and $$$j$$$ and give them $$$\\text{max}(g_i, g_j)$$$ emeralds to share. Both of their grumpinesses decrease by $$$\\text{min}(g_i, g_j)$$$, and they become friends with each other if they weren't already. Steve wishes to make every villager friends with every other villager (possibly through some intermediate friendships); that is, from any villager, you can follow a path of friendships to reach any other villager. Since he does not want to inflate the village economy too much, calculate the minimum number of emeralds he must give away to accomplish this."
  },
  {
    "title": "Redstone?",
    "url": "https://codeforces.com/problemset/problem/2133/A",
    "description": " Steve stumbled upon a collection of $$$n$$$ gears, where gear $$$i$$$ has $$$a_i$$$ teeth, and he wants to arrange them into a row.After he arranges them, Steve will spin the leftmost gear at a speed of $$$1$$$ revolution per second. For each of the other gears, let $$$x$$$ be the number of teeth it has, $$$y$$$ be the number of teeth of the gear to its left, and $$$z$$$ be the speed the gear to its left spins at. Then, its speed will be $$$\\frac{y}{x} \\cdot z$$$ revolutions per second.Steve considers the contraption satisfactory if the rightmost gear spins at a speed of $$$1$$$ revolution per second. Determine whether Steve can rearrange the gears into a satisfactory contraption."
  },
  {
    "title": "Famous Choreographer",
    "url": "https://codeforces.com/problemset/problem/2132/G",
    "description": "As all programmers know, there are $$$n \\times m$$$ ballerinas performing in a ballet, and their arrangement can be represented as a table with $$$n$$$ rows and $$$m$$$ columns. Each ballerina performs one of $$$26$$$ movements, which can be described by one of the English letters.Choreographer Vadim wants to dispel this myth. To do this, he wants to stage a show in which all the ballerinas gracefully move to the opposite side of the stage from their starting positions. Programmers will find it easier to understand this movement as a $$$180^{\\circ}$$$ rotation of the table. To maintain the sequence of visual storytelling in the ballet, the ballerinas perform this movement instantaneously, without stopping their movements, and the final arrangement is identical to the initial one.Unfortunately, Vadim understands that with the current performance and the already planned arrangement of the ballerinas, such a maneuver will not be possible. Therefore, he is ready to invite more ballerinas to the performance. They can perform any movement and occupy any position, but they cannot stand between those already participating in a ballet. The most important thing is that in the end, a rectangular table is formed, possibly larger than the original one. Additionally, it is essential that at least one ballerina from the original arrangement moves to the position of one of the other ballerinas from the original arrangement or remains in her place. Please advise Vadim on the smallest number of ballerinas he will need to invite."
  },
  {
    "title": "Rada and the Chamomile Valley",
    "url": "https://codeforces.com/problemset/problem/2132/F",
    "description": "Yesterday, Rada found a portal that can transport her to the Chamomile Valley and back. Rada's happiness knew no bounds, but it didn't last long — she suddenly realized that she didn't know where and when any of the Smeshariki would be.The Chamomile Valley consists of $$$n$$$ houses and $$$m$$$ lanes connecting the houses. The lanes are numbered from $$$1$$$ to $$$m$$$. You can walk along the lanes in both directions. It is known that from any house, you can reach any other house via the lanes, and there is no lane connecting a house to itself. Moreover, any two houses are connected by at most one lane.Rada knows that the Smeshariki walk every day from house number $$$1$$$ to house number $$$n$$$, but she doesn't know which specific lanes they will take. Rada will be in the Chamomile Valley on each of the next $$$q$$$ days. On the $$$k$$$-th day, she will be at house number $$$c_k$$$.Since Rada does not know which specific lanes the Smeshariki will take, she is only interested in those lanes that they will definitely use. To ensure she does not miss any of them, she wants to know the index of the nearest such lane on each day. Rada is too busy strolling through the Chamomile Valley, so she asks you to help her determine the required lane indices.The distance from house $$$c$$$ to the lane connecting houses $$$a$$$ and $$$b$$$ is defined as the minimum of $$$\\rho(a, c)$$$ and $$$\\rho(b, c)$$$, where $$$\\rho(a, b)$$$ is the minimum number of lanes needed to reach house number $$$b$$$ starting from house number $$$a$$$."
  },
  {
    "title": "Arithmetics Competition",
    "url": "https://codeforces.com/problemset/problem/2132/E",
    "description": "In the arithmetic competition, participants need to achieve the highest possible sum from the cards they have. In the team \"fst_ezik\", Vadim has $$$n$$$ cards with numbers $$$a_i$$$, and Kostya has $$$m$$$ cards with numbers $$$b_i$$$. In each of the $$$q$$$ rounds, they want to win, but this time the rules of the competition are slightly different from the usual ones.In each round, the participants are given three numbers $$$x_i$$$, $$$y_i$$$, and $$$z_i$$$. The team \"fst_ezik\" must choose exactly $$$z_i$$$ cards from all the cards they have, but Vadim can choose no more than $$$x_i$$$ cards from his set, and Kostya can choose no more than $$$y_i$$$ cards from his set. Help them find the highest possible sum for each of the $$$q$$$ rounds."
  },
  {
    "title": "From 1 to Infinity",
    "url": "https://codeforces.com/problemset/problem/2132/D",
    "description": "Vadim wanted to understand the infinite sequence of digits that consists of the positive integers written consecutively from $$$1$$$ to infinity. That is, this sequence looks like $$$123456789101112131415 \\ldots$$$To avoid looking into infinity, Vadim cut this sequence at the $$$k$$$-th digit and discarded everything after it. Thus, exactly $$$k$$$ digits remained in the sequence. Help him find the sum of the digits in the remaining sequence."
  },
  {
    "title": "The Cunning Seller (hard version)",
    "url": "https://codeforces.com/problemset/problem/2132/C2",
    "description": "This is the hard version of the problem. The easy version differs from the hard one in that it requires determining the minimum cost with the least number of deals, while the hard version requires determining the minimum cost with a limited number of deals.After the cunning seller sold three watermelons instead of one, he decided to increase his profit — namely, he bought even more watermelons. Now he can sell $$$3^x$$$ watermelons for $$$3^{x+1} + x \\cdot 3^{x-1}$$$ coins, where $$$x$$$ is a non-negative integer. Such a sale is called a deal.A calculating buyer came to him, but he has little time, so the buyer can make no more than $$$k$$$ deals and plans to buy exactly $$$n$$$ watermelons.The buyer is in a hurry and has therefore turned to you to determine the minimum number of coins he must pay the seller for $$$n$$$ watermelons if he makes no more than $$$k$$$ deals. If it is impossible to buy exactly $$$n$$$ watermelons while making no more than $$$k$$$ deals, output $$$-1$$$."
  },
  {
    "title": "The Cunning Seller (easy version)",
    "url": "https://codeforces.com/problemset/problem/2132/C1",
    "description": "This is the easy version of the problem. The easy version differs from the hard one in that it requires determining the minimum cost with the least number of deals, while the hard version requires determining the minimum cost with a limited number of deals.After the cunning seller sold three watermelons instead of one, he decided to increase his profit — namely, he bought even more watermelons. Now he can sell $$$3^x$$$ watermelons for $$$3^{x+1} + x \\cdot 3^{x-1}$$$ coins, where $$$x$$$ is a non-negative integer. Such a sale is called a deal.A calculating buyer came to him, but he has critically little time. Because of this, he wants to buy exactly $$$n$$$ watermelons, making the least possible number of deals.The buyer is in a hurry and has therefore turned to you to determine the minimum number of coins he must pay the seller for $$$n$$$ watermelons, considering that he will make the least possible number of deals."
  },
  {
    "title": "The Secret Number",
    "url": "https://codeforces.com/problemset/problem/2132/B",
    "description": "Vadim has thought of a number $$$x$$$. To ensure that no one can guess it, he appended a positive number of zeros to the right of it, thus obtaining a new number $$$y$$$. However, as a precaution, Vadim decided to spread the number $$$n = x + y$$$. Find all suitable $$$x$$$ that Vadim could have thought of for the given $$$n$$$."
  },
  {
    "title": "Homework",
    "url": "https://codeforces.com/problemset/problem/2132/A",
    "description": "Vlad and Dima have been assigned a task in school for their English class. They were given two strings $$$a$$$ and $$$b$$$ and asked to append all characters from $$$b$$$ to string $$$a$$$ in any order. The guys decided to divide the work between themselves and, after lengthy negotiations, determined who would add each character from string $$$b$$$ to $$$a$$$.Due to his peculiarities, Vlad can only add characters to the beginning of the word, while Dima can only add them to the end. They add characters in the order they appear in string $$$b$$$. Your task is to determine what string Vlad and Dima will end up with."
  },
  {
    "title": "Sea, You & copriMe",
    "url": "https://codeforces.com/problemset/problem/2131/H",
    "description": " Umi is given an array $$$a$$$ of length $$$n$$$, whose elements are integers between $$$1$$$ and $$$m$$$. She loves coprime integers and wants to find four distinct indices $$$p, q, r, s$$$ ($$$1 \\le p, q, r, s \\le n$$$), such that $$$\\gcd(a_p, a_q) = 1$$$ and $$$\\gcd(a_r, a_s) = 1$$$$$$^{\\text{∗}}$$$.If there are multiple solutions, you may output any one of them.$$$^{\\text{∗}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. "
  },
  {
    "title": "Wafu!",
    "url": "https://codeforces.com/problemset/problem/2131/G",
    "description": " To help improve her math, Kudryavka is given a set $$$S$$$ that consists of $$$n$$$ distinct positive integers. Initially, her score is $$$1$$$. She can perform an arbitrary number of the following operations on the set if it is not empty:  Let the minimum value of $$$S$$$ be $$$m$$$.  Multiply her score by $$$m$$$.  Remove $$$m$$$ from $$$S$$$.  For every integer $$$i$$$ such that $$$1 \\le i < m$$$, add $$$i$$$ to the set $$$S$$$. It can be shown that no duplicates are added during this step. She is addicted to performing operations, but after $$$k$$$ operations, she realizes she forgot her score. Please help her determine her score, modulo $$$10^9+7$$$."
  },
  {
    "title": "Unjust Binary Life",
    "url": "https://codeforces.com/problemset/problem/2131/F",
    "description": " Yuri is given two binary strings $$$a$$$ and $$$b$$$, both of which are of length $$$n$$$. The two strings dynamically define an $$$n \\times n$$$ grid. Let $$$(i, j)$$$ denote the cell in the $$$i$$$-th row and $$$j$$$-th column. The initial value of cell $$$(i, j)$$$ has the value of $$$a_i \\oplus b_j$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. .Yuri's journey always starts at cell $$$(1, 1)$$$. From a cell $$$(i, j)$$$, she can only move down to $$$(i + 1, j)$$$ or right to $$$(i, j + 1)$$$. Her journey is possible if there exists a valid path such that all cells on the path, including $$$(1, 1)$$$, have a value of 0.Before her departure, she can do the following operation for any number of times:  Choose one index $$$1 \\le i \\le n$$$, and flip the value of either $$$a_i$$$ or $$$b_i$$$ ($$$0$$$ becomes $$$1$$$, and $$$1$$$ becomes $$$0$$$). The grid will also change accordingly. Let $$$f(x, y)$$$ denote the minimum required operations so that Yuri can make her journey to the cell $$$(x,y)$$$. You must determine the sum of $$$f(x, y)$$$ over all $$$1 \\leq x, y \\leq n$$$.Note that each of these $$$n^2$$$ cases is independent, meaning you need to assume the grid is in its original state in each case (i.e., no actual operations are performed)."
  },
  {
    "title": "Adjacent XOR",
    "url": "https://codeforces.com/problemset/problem/2131/E",
    "description": "  You're given an array $$$a$$$ of length $$$n$$$. For each index $$$i$$$ such that $$$1 \\le i < n$$$, you can perform the following operation at most once:  Assign $$$a_i := a_i \\oplus a_{i+1}$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. . You can choose indices and perform the operations in any sequential order.Given another array $$$b$$$ of length $$$n$$$, determine if it is possible to transform $$$a$$$ to $$$b$$$."
  },
  {
    "title": "Arboris Contractio",
    "url": "https://codeforces.com/problemset/problem/2131/D",
    "description": " Kagari is preparing to archive a tree, and she knows the cost of doing so will depend on its diameter$$$^{\\text{∗}}$$$. To keep the expense down, her goal is to shrink the diameter as much as possible first. She can perform the following operation on the tree:  Choose two vertices $$$s$$$ and $$$t$$$. Let the sequence of vertices on the simple path$$$^{\\text{†}}$$$ from $$$s$$$ to $$$t$$$ be $$$v_0, v_1, \\dots, v_k$$$, where $$$v_0 = s$$$ and $$$v_k = t$$$.  Remove all edges along the path. In other words, remove edges $$$(v_0, v_1), (v_1, v_2), \\dots, (v_{k-1}, v_k)$$$.  Connect vertices $$$v_1, v_2, \\dots, v_k$$$ directly to $$$v_0$$$. In other words, add edges $$$(v_0, v_1), (v_0, v_2), \\dots, (v_0, v_k)$$$. It can be shown that the graph is still a tree after the operation.Help her determine the minimum number of operations required to achieve the minimal diameter.$$$^{\\text{∗}}$$$The diameter of a tree is the longest possible distance between any pair of vertices. The distance itself is measured by the number of edges on the unique simple path connecting them.$$$^{\\text{†}}$$$A simple path is a path between two vertices in a tree that does not visit any vertex more than once. It can be shown that the simple path between any two vertices is always unique."
  },
  {
    "title": "Make it Equal",
    "url": "https://codeforces.com/problemset/problem/2131/C",
    "description": "Given two multisets $$$S$$$ and $$$T$$$ of size $$$n$$$ and a positive integer $$$k$$$, you may perform the following operations any number (including zero) of times on $$$S$$$:   Select an element $$$x$$$ in $$$S$$$, and remove one occurrence of $$$x$$$ in $$$S$$$. Then, either insert $$$x+k$$$ into $$$S$$$, or insert $$$|x-k|$$$ into $$$S$$$. Determine if it is possible to make $$$S$$$ equal to $$$T$$$. Two multisets $$$S$$$ and $$$T$$$ are equal if every element appears the same number of times in $$$S$$$ and $$$T$$$."
  },
  {
    "title": "Alternating Series",
    "url": "https://codeforces.com/problemset/problem/2131/B",
    "description": "  You are given an integer $$$n$$$. Call an array $$$a$$$ of length $$$n$$$ good if:  For all $$$1 \\le i < n$$$, $$$a_i \\cdot a_{i+1} < 0$$$ (i.e., the product of adjacent elements is negative).  For all subarrays$$$^{\\text{∗}}$$$ with length at least $$$2$$$, the sum of all elements in the subarray is positive$$$^{\\text{†}}$$$. Additionally, we say a good array $$$a$$$ of length $$$n$$$ is better than another good array $$$b$$$ of length $$$n$$$ if $$$[|a_1|, |a_2|, \\ldots, |a_n|]$$$ is lexicographically smaller$$$^{\\text{‡}}$$$ than $$$[|b_1|, |b_2|, \\ldots, |b_n|]$$$. Note that $$$|z|$$$ denotes the absolute value of integer $$$z$$$.Output a good array of length $$$n$$$ such that it is better than every other good array of length $$$n$$$.$$$^{\\text{∗}}$$$An array $$$c$$$ is a subarray of an array $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{†}}$$$An integer $$$x$$$ is positive if $$$x > 0$$$.$$$^{\\text{‡}}$$$A sequence $$$a$$$ is lexicographically smaller than a sequence $$$b$$$ if and only if one of the following holds:   $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$; or  in the first position where $$$a$$$ and $$$b$$$ differ, the sequence $$$a$$$ has a smaller element than the corresponding element in $$$b$$$.  "
  },
  {
    "title": "Lever",
    "url": "https://codeforces.com/problemset/problem/2131/A",
    "description": "In Divergent Universe, The Lever iterates itself given two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$. In each iteration, The Lever will do the following:  Choose a random index $$$i$$$ such that $$$a_i > b_i$$$. Then, decrease $$$a_i$$$ by $$$1$$$. If there does not exist such $$$i$$$, ignore this step.  Choose a random index $$$i$$$ such that $$$a_i < b_i$$$. Then, increase $$$a_i$$$ by $$$1$$$. If there does not exist such $$$i$$$, ignore this step. After each iteration, the Lever will check if step $$$1$$$ is ignored, and if so, it will end its iteration.You're given the two arrays. Find the number of iterations that the Lever does. It can be shown this number is fixed over all possibilities of random indices that The Lever can choose for each step."
  },
  {
    "title": "Pathless",
    "url": "https://codeforces.com/problemset/problem/2130/B",
    "description": "There is an array $$$a_1, a_2, \\ldots, a_n$$$ consisting of values $$$0$$$, $$$1$$$, and $$$2$$$, and an integer $$$s$$$. It is guaranteed that $$$a_1, a_2, \\ldots, a_n$$$ contains at least one $$$0$$$, one $$$1$$$, and one $$$2$$$.Alice wants to start from index $$$1$$$ and perform steps of length $$$1$$$ to the right or to the left, and reach index $$$n$$$ at the end. While Alice moves, she calculates the sum of the values she is visiting, and she wants the sum to be exactly $$$s$$$.Formally, Alice wants to find a sequence $$$[i_1, i_2, \\ldots, i_m]$$$ of indices, such that:  $$$i_1 = 1$$$, $$$i_m = n$$$.  $$$1 \\leq i_j \\leq n$$$ for all $$$1 \\le j \\le m$$$.  $$$|i_{j} - i_{j+1}| = 1$$$ for all $$$1 \\leq j < m$$$.  $$$a_{i_1} + a_{i_2} + \\ldots + a_{i_m} = s$$$. However, Bob wants to rearrange $$$a_1, a_2, \\ldots, a_n$$$ to prevent Alice from achieving her target. Determine whether it is possible to rearrange $$$a_1, a_2, \\ldots, a_n$$$ such that Alice cannot find her target sequence (even if Alice is smart enough). If it is possible, you also need to output the rearranged array $$$a_1, a_2, \\ldots, a_n$$$."
  },
  {
    "title": "Submission is All You Need",
    "url": "https://codeforces.com/problemset/problem/2130/A",
    "description": "For a multiset $$$T$$$ consisting of non-negative integers, we define:  $$$\\text{sum}(T)$$$ is the sum of all elements in $$$T$$$. For example, if $$$T = \\{0,1, 1, 3\\}$$$, then $$$\\text{sum}(T)= 0+1+1+3=5$$$.  $$$\\text{mex}(T)$$$ is the smallest non-negative integer not in $$$T$$$. For example, if $$$T = \\{0,1, 1, 3\\}$$$, then $$$\\text{mex}(T) = 2$$$ because $$$2$$$ is the smallest non-negative integer not present in $$$T$$$. You are given a multiset $$$S$$$ of size $$$n$$$ consisting of non-negative integers. At first, your score is $$$0$$$. You can perform the following operations any number of times in any order (possibly zero):  Select a subset $$$S' \\subseteq S$$$ (i.e., $$$S'$$$ contains some of the elements currently in $$$S$$$), add $$$\\text{sum}(S')$$$ to your score, and then remove $$$S'$$$ from $$$S$$$.  Select a subset $$$S' \\subseteq S$$$, add $$$\\text{mex}(S')$$$ to your score, and then remove $$$S'$$$ from $$$S$$$. Find the maximum possible score that can be obtained."
  },
  {
    "title": "Top-K Tracker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2129/F2",
    "description": "This is an interactive problem.This is the hard version of the problem. The only difference is that $$$n \\le 890$$$ in this version. You can make hacks only if all versions of the problem are solved.There is a hidden permutation $$$p$$$, which is a permutation of $$$\\{1,2,\\ldots,n\\}$$$. Let $$$pos_i$$$ denote the position of the value $$$i$$$ in $$$p$$$, i.e., $$$pos_{p_i} = i$$$.To find this permutation, you can ask four types of queries:  \"$$$1\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, \\ldots, p_{i_m}]$$$ in increasing order.  \"$$$2\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order.  \"$$$3\\ m\\ i_1\\ i_2\\ ...\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ ...,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, ..., p_{i_m}]$$$ in increasing order.  \"$$$4\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order. Let $$$c_i$$$ be the usage count of queries of type $$$i$$$ $$$(1 \\le i \\le 4)$$$. Your query count must satisfy the following constraints:  $$$c_1+c_2+c_3+c_4 \\le 30.$$$  $$$c_3+c_4 \\le 1.$$$ "
  },
  {
    "title": "Top-K Tracker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2129/F1",
    "description": "This is an interactive problem.This is the easy version of the problem. The only difference is that $$$n \\le 845$$$ in this version. You can make hacks only if all versions of the problem are solved.There is a hidden permutation $$$p$$$, which is a permutation of $$$\\{1,2,\\ldots,n\\}$$$. Let $$$pos_i$$$ denote the position of the value $$$i$$$ in $$$p$$$, i.e., $$$pos_{p_i} = i$$$.To find this permutation, you can ask four types of queries:  \"$$$1\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, \\ldots, p_{i_m}]$$$ in increasing order.  \"$$$2\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(60, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order.  \"$$$3\\ m\\ i_1\\ i_2\\ ...\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ ...,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[p_{i_1}, p_{i_2}, ..., p_{i_m}]$$$ in increasing order.  \"$$$4\\ m\\ i_1\\ i_2\\ \\ldots\\ i_m$$$\" ($$$1 \\leq m \\leq n$$$, $$$i_1,\\ i_2,\\ \\ldots,\\ i_m$$$ must be distinct). Let $$$k = \\min(300, m)$$$. The jury will return the top $$$k$$$ largest number(s) in $$$[pos_{i_1}, pos_{i_2}, \\ldots, pos_{i_m}]$$$ in increasing order. Let $$$c_i$$$ be the usage count of queries of type $$$i$$$ $$$(1 \\le i \\le 4)$$$. Your query count must satisfy the following constraints:  $$$c_1+c_2+c_3+c_4 \\le 30.$$$  $$$c_3+c_4 \\le 1.$$$ "
  },
  {
    "title": "Induced Subgraph Queries",
    "url": "https://codeforces.com/problemset/problem/2129/E",
    "description": "You are given an unweighted, undirected graph $$$G$$$ with $$$n$$$ nodes and $$$m$$$ edges. The graph $$$G$$$ contains no self-loops or multiple edges.We denote the node set of $$$G$$$ as $$$V$$$. For any node subset $$$V' \\subseteq V$$$, the corresponding induced subgraph, denoted by $$$G[V']$$$, is defined as follows:  $$$G[V']$$$ is the graph whose node set is $$$V'$$$, and whose edge set consists of all edges in $$$G$$$ with both endpoints in $$$V'$$$. Your task is to answer $$$q$$$ queries. Each query provides three integers $$$l$$$, $$$r$$$, and $$$k$$$. Denoting $$$V'=\\{l,l+1,\\ldots,r\\}$$$, you need to find the $$$k$$$-th smallest value among $$$f(l,G[V'])$$$, $$$f(l+1,G[V'])$$$, $$$\\ldots$$$ , $$$f(r,G[V'])$$$ (i.e., the $$$k$$$-th value in increasing order; repeated values are counted multiple times).Here, $$$f(u,G[V'])=\\bigoplus_{(u,v)\\in G[V']}v$$$. In other words, it is the bitwise XOR value of the labels of all adjacent nodes of node $$$u$$$ in graph $$$G[V']$$$.You might want to read the notes for a better understanding."
  },
  {
    "title": "Permutation Blackhole",
    "url": "https://codeforces.com/problemset/problem/2129/D",
    "description": "For a permutation $$$p_1, p_2, \\ldots, p_n$$$ of length $$$n$$$, the corresponding coloring sequence $$$s$$$ can be obtained by the following coloring process:  Initially, there are $$$n$$$ white cells indexed from $$$1$$$ to $$$n$$$ from left to right. At second $$$0$$$, the score of each cell is $$$0$$$.  At second $$$i$$$ ($$$1 \\le i \\le n$$$),   If $$$i > 1$$$, find the nearest black cell to the cell $$$p_i$$$, and increase the score of that cell by $$$1$$$. In case there are multiple nearest black cells, choose the cell with the lowest index. Cell $$$y$$$ is called the nearest black cell to cell $$$x$$$ only if cell $$$y$$$ is black and there is no black cell $$$z$$$ satisfying $$$|x-z|<|x-y|$$$.  Color the cell $$$p_i$$$ black.  After all cells are colored black, denoting $$$s_i$$$ as the score of cell $$$i$$$ ($$$1 \\le i \\le n$$$), we get the coloring sequence $$$s$$$.You might want to read the notes for a better understanding.You are given an incomplete coloring sequence $$$s$$$, where some $$$s_i$$$ are already fixed, while others are not yet determined. Count how many different permutations $$$p$$$ can produce this coloring sequence. Since the answer may be large, you need to output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Interactive RBS (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C3",
    "description": "This is an interactive problem.This is the hard version of the problem. The only difference is the limit on the number of queries. You can make hacks only if all versions of the problem are solved.There is a hidden bracket sequence $$$s$$$ of length $$$n$$$, where $$$s$$$ only contains $$$\\texttt{'('}$$$ and $$$\\texttt{')'}$$$. It is guaranteed that $$$s$$$ contains at least one $$$\\texttt{'('}$$$ and one $$$\\texttt{')'}$$$.To find this bracket sequence, you can ask queries. Each query has the following form: you pick an integer $$$k$$$ and arbitrary indices $$$i_1, i_2, \\ldots, i_k$$$ ($$$1 \\le k \\le 1000$$$, $$$1 \\le i_1, i_2, \\ldots, i_k \\le n$$$). Note that the indices can be equal. Next, you receive an integer $$$f(s_{i_1}s_{i_2}\\ldots s_{i_k})$$$ calculated by the jury.For a bracket sequence $$$t$$$, $$$f(t)$$$ is the number of non-empty regular bracket substrings in $$$t$$$ (the substrings must be contiguous). For example, $$$f(\\texttt{\"()())\"}) = 3$$$.A bracket sequence is called regular if it can be constructed in the following way.   The empty sequence $$$\\varnothing$$$ is regular.  If the bracket sequence $$$A$$$ is regular, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also regular.  If the bracket sequences $$$A$$$ and $$$B$$$ are regular, then the concatenated sequence $$$A B$$$ is also regular. For example, the sequences $$$\\texttt{\"(())()\"}$$$, $$$\\texttt{\"()\"}$$$ are regular, while $$$\\texttt{\"(()\"}$$$ and $$$\\texttt{\"())(\"}$$$ are not.Find the sequence $$$s$$$ using no more than $$$100$$$ queries."
  },
  {
    "title": "Interactive RBS (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C2",
    "description": "This is an interactive problem.This is the medium version of the problem. The only difference is the limit on the number of queries. You can make hacks only if all versions of the problem are solved.There is a hidden bracket sequence $$$s$$$ of length $$$n$$$, where $$$s$$$ only contains $$$\\texttt{'('}$$$ and $$$\\texttt{')'}$$$. It is guaranteed that $$$s$$$ contains at least one $$$\\texttt{'('}$$$ and one $$$\\texttt{')'}$$$.To find this bracket sequence, you can ask queries. Each query has the following form: you pick an integer $$$k$$$ and arbitrary indices $$$i_1, i_2, \\ldots, i_k$$$ ($$$1 \\le k \\le 1000$$$, $$$1 \\le i_1, i_2, \\ldots, i_k \\le n$$$). Note that the indices can be equal. Next, you receive an integer $$$f(s_{i_1}s_{i_2}\\ldots s_{i_k})$$$ calculated by the jury.For a bracket sequence $$$t$$$, $$$f(t)$$$ is the number of non-empty regular bracket substrings in $$$t$$$ (the substrings must be contiguous). For example, $$$f(\\texttt{\"()())\"}) = 3$$$.A bracket sequence is called regular if it can be constructed in the following way.   The empty sequence $$$\\varnothing$$$ is regular.  If the bracket sequence $$$A$$$ is regular, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also regular.  If the bracket sequences $$$A$$$ and $$$B$$$ are regular, then the concatenated sequence $$$A B$$$ is also regular. For example, the sequences $$$\\texttt{\"(())()\"}$$$, $$$\\texttt{\"()\"}$$$ are regular, while $$$\\texttt{\"(()\"}$$$ and $$$\\texttt{\"())(\"}$$$ are not.Find the sequence $$$s$$$ using no more than $$$200$$$ queries."
  },
  {
    "title": "Interactive RBS (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2129/C1",
    "description": "This is an interactive problem.This is the easy version of the problem. The only difference is the limit on the number of queries. You can make hacks only if all versions of the problem are solved.There is a hidden bracket sequence $$$s$$$ of length $$$n$$$, where $$$s$$$ only contains $$$\\texttt{'('}$$$ and $$$\\texttt{')'}$$$. It is guaranteed that $$$s$$$ contains at least one $$$\\texttt{'('}$$$ and one $$$\\texttt{')'}$$$.To find this bracket sequence, you can ask queries. Each query has the following form: you pick an integer $$$k$$$ and arbitrary indices $$$i_1, i_2, \\ldots, i_k$$$ ($$$1 \\le k \\le 1000$$$, $$$1 \\le i_1, i_2, \\ldots, i_k \\le n$$$). Note that the indices can be equal. Next, you receive an integer $$$f(s_{i_1}s_{i_2}\\ldots s_{i_k})$$$ calculated by the jury.For a bracket sequence $$$t$$$, $$$f(t)$$$ is the number of non-empty regular bracket substrings in $$$t$$$ (the substrings must be contiguous). For example, $$$f(\\texttt{\"()())\"}) = 3$$$.A bracket sequence is called regular if it can be constructed in the following way.   The empty sequence $$$\\varnothing$$$ is regular.  If the bracket sequence $$$A$$$ is regular, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also regular.  If the bracket sequences $$$A$$$ and $$$B$$$ are regular, then the concatenated sequence $$$A B$$$ is also regular. For example, the sequences $$$\\texttt{\"(())()\"}$$$, $$$\\texttt{\"()\"}$$$ are regular, while $$$\\texttt{\"(()\"}$$$ and $$$\\texttt{\"())(\"}$$$ are not.Find the sequence $$$s$$$ using no more than $$$550$$$ queries."
  },
  {
    "title": "Stay or Mirror",
    "url": "https://codeforces.com/problemset/problem/2129/B",
    "description": " You are given a permutation $$$p_1, p_2, \\ldots, p_n$$$ of length $$$n$$$.You have to build an array $$$a_1, a_2, \\ldots, a_n$$$ in the following way:  for each $$$1 \\leq i \\leq n$$$, set either $$$a_i = p_i$$$ or $$$a_i = 2n - p_i$$$. Find the minimum possible number of inversions in the array $$$a_1, a_2, \\ldots, a_n$$$.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). An inversion in the array $$$a_1, a_2, \\ldots, a_n$$$ is a pair of indices $$$(i, j)$$$ such that $$$1 \\leq i<j \\leq n$$$ and $$$a_i>a_j$$$."
  },
  {
    "title": "Double Perspective",
    "url": "https://codeforces.com/problemset/problem/2129/A",
    "description": "For a set of pairs $$$S = \\{(a_1, b_1), (a_2, b_2), \\ldots, (a_m, b_m)\\}$$$, where $$$a_i < b_i$$$ for all $$$1 \\le i \\le m$$$, we define $$$f(S)$$$ and $$$g(S)$$$ as follows:  Treating each $$$(a_i, b_i)$$$ as a segment on the number line, $$$f(S)$$$ is the length of their union. Formally, $$$f(S)$$$ is the number of integers $$$x$$$ such that there exists an $$$i$$$ ($$$1 \\leq i \\leq m$$$) where $$$[x, x+1] \\subseteq [a_i, b_i]$$$.  Treating each $$$(a_i, b_i)$$$ as an undirected edge in a graph, $$$g(S)$$$ is the number of nodes that lie on at least one simple cycle with at least $$$3$$$ edges. Formally, $$$g(S)$$$ is the number of nodes $$$x_1$$$ such that there exists a path $$$x_1 \\to x_2 \\to \\ldots \\to x_k \\to x_1$$$ in the graph, where $$$k \\geq 3$$$ and all $$$x_1, x_2, \\ldots, x_k$$$ are distinct. For example, $$$S = \\{(1,2), (2,4), (1,4), (4,5),(6,7)\\}$$$, we can get $$$f(S) = 5$$$ and $$$g(S) = 3$$$.You are given $$$n$$$ distinct pairs. Your task is to select a subset $$$S'$$$ of these pairs such that $$$f(S') - g(S')$$$ is maximized. You need to output the indices of the selected pairs."
  },
  {
    "title": "Strict Triangle",
    "url": "https://codeforces.com/problemset/problem/2128/F",
    "description": "You are given an undirected connected graph with $$$n$$$ nodes and $$$m$$$ edges. The weight $$$w_i$$$ of the $$$i$$$-th edge is not yet decided and must be a real number between $$$l_i$$$ and $$$r_i$$$.You are given a node $$$k$$$. Determine if there exists a valid assignment of weights $$$(w_1, \\ldots, w_m)$$$ such that:   $$$l_i \\leq w_i \\leq r_i$$$ for all $$$i$$$, and  $$$\\mathrm{dist}_w(1, n) \\neq \\mathrm{dist}_w(1, k) + \\mathrm{dist}_w(k, n)$$$$$$^{\\text{∗}}$$$. $$$^{\\text{∗}}$$$Given an assignment of weights $$$w$$$, $$$\\mathrm{dist}_w(u, v)$$$ is the minimum value of $$$w_{e_1} + w_{e_2} + \\ldots + w_{e_p}$$$ over all sequences of $$$p$$$ edges $$$(e_1, e_2, \\ldots, e_p)$$$ that form a path from $$$u$$$ to $$$v$$$."
  },
  {
    "title": "Submedians (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2128/E2",
    "description": "This is the hard version of the problem. The only difference is that in this version, you are asked to find a subarray for all submedians.You can make hacks only if both versions of the problem are solved.An integer $$$v$$$ is a median of an array $$$b$$$ of length $$$m$$$ if and only if:   $$$v$$$ is greater than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array, and  $$$v$$$ is less than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array.  For instance:   the only median of $$$[9, 3, 7]$$$ is $$$7$$$,  the medians of $$$[5, 3, 7, 9]$$$ are $$$5$$$, $$$6$$$, and $$$7$$$, and  the only median of $$$[2, 2, 2]$$$ is $$$2$$$. You're given an integer $$$k$$$ and an array $$$a_1, \\ldots, a_n$$$ of integers between $$$1$$$ and $$$n$$$.An integer $$$v$$$ from $$$1$$$ to $$$n$$$ is said to be a submedian if there exists at least one pair of indices $$$(l, r)$$$ such that   $$$1 \\leq l \\leq r \\leq n$$$,  $$$r - l + 1 \\geq k$$$,  $$$v$$$ is a median of the subarray $$$[a_l, \\ldots, a_r]$$$. Find all submedians and for each of them, find any corresponding pair of indices $$$(l, r)$$$."
  },
  {
    "title": "Submedians (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2128/E1",
    "description": "This is the easy version of the problem. The only difference is that in this version, you are asked to find a subarray only for the maximum submedian.You can make hacks only if both versions of the problem are solved.An integer $$$v$$$ is a median of an array $$$b$$$ of length $$$m$$$ if and only if:   $$$v$$$ is greater than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array, and  $$$v$$$ is less than or equal to at least $$$\\lceil \\frac{m}{2} \\rceil$$$ elements of the array.  For instance:   the only median of $$$[9, 3, 7]$$$ is $$$7$$$,  the medians of $$$[5, 3, 7, 9]$$$ are $$$5$$$, $$$6$$$, and $$$7$$$, and  the only median of $$$[2, 2, 2]$$$ is $$$2$$$. You're given an integer $$$k$$$ and an array $$$a_1, \\ldots, a_n$$$ of integers between $$$1$$$ and $$$n$$$.An integer $$$v$$$ from $$$1$$$ to $$$n$$$ is said to be a submedian if there exists at least one pair of indices $$$(l, r)$$$ such that   $$$1 \\leq l \\leq r \\leq n$$$,  $$$r - l + 1 \\geq k$$$,  $$$v$$$ is a median of the subarray $$$[a_l, \\ldots, a_r]$$$. It can be proven that there always exists at least one submedian. Find the maximum submedian $$$v_\\max$$$ and any corresponding pair of indices $$$(l, r)$$$."
  },
  {
    "title": "Sum of LDS",
    "url": "https://codeforces.com/problemset/problem/2128/D",
    "description": " You're given a permutation$$$^{\\text{∗}}$$$ $$$p_1, \\ldots, p_n$$$ such that $$$\\max(p_i, p_{i+1}) > p_{i+2}$$$ for all $$$1 \\leq i \\leq n-2$$$.Compute the sum of the length of the longest decreasing subsequence$$$^{\\text{†}}$$$ of the subarray $$$[p_l, p_{l+1}, \\ldots, p_r]$$$ over all pairs $$$1 \\leq l \\leq r \\leq n$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$Given an array $$$b$$$ of size $$$|b|$$$, a decreasing subsequence of length $$$k$$$ is a sequence of indices $$$i_1, \\ldots, i_k$$$ such that:  $$$1 \\leq i_1 < i_2 < \\ldots < i_k \\leq |b|$$$  $$$b_{i_1} > b_{i_2} > \\ldots > b_{i_k}$$$ "
  },
  {
    "title": "Leftmost Below",
    "url": "https://codeforces.com/problemset/problem/2128/C",
    "description": "Consider an array $$$a_1, \\ldots, a_n$$$. Initially, $$$a_i = 0$$$ for every $$$i$$$.You can do operations of the following form.   You choose an integer $$$x$$$ greater than $$$\\min(a)$$$.  Then, $$$i$$$ is defined as the minimum index such that $$$a_i < x$$$. In other words, $$$i$$$ is the unique integer between $$$1$$$ and $$$n$$$ inclusive such that $$$a_i < x$$$ and $$$a_j \\geq x$$$ for every $$$1 \\leq j \\leq i-1$$$.  Finally, $$$a_i$$$ is incremented by $$$x$$$. For example, if $$$a = [6, 8, 2, 1]$$$ and you choose $$$x = 6$$$, then $$$i$$$ will be equal to $$$3$$$ (since $$$a_1 \\geq 6$$$, $$$a_2 \\geq 6$$$, and $$$a_3 < 6$$$) and $$$a$$$ will become $$$[6, 8, 8, 1]$$$.You can do as many operations as you want. Can you reach a target array $$$b_1, \\ldots, b_n$$$?"
  },
  {
    "title": "Deque Process",
    "url": "https://codeforces.com/problemset/problem/2128/B",
    "description": " We say that an array $$$a$$$ of size $$$n$$$ is bad if and only if there exists $$$1 \\leq i \\leq n - 4$$$ such that one of the following conditions holds:  $$$a_i < a_{i+1} < a_{i+2} < a_{i+3} < a_{i+4}$$$  $$$a_i > a_{i+1} > a_{i+2} > a_{i+3} > a_{i+4}$$$ An array is good if and only if it's not bad. For example:   $$$a = [3, \\color{red}{1, 2, 4, 5, 6}]$$$ is bad because $$$a_2 < a_3 < a_4 < a_5 < a_6$$$.  $$$a = [\\color{red}{7, 6, 5, 4, 1}, 2, 3]$$$ is bad because $$$a_1 > a_2 > a_3 > a_4 > a_5$$$.  $$$a = [7, 6, 5, 1, 2, 3, 4]$$$ is good. You're given a permutation$$$^{\\text{∗}}$$$ $$$p_1, p_2, \\ldots, p_n$$$.You must perform $$$n$$$ turns. At each turn, you must remove either the leftmost or the rightmost remaining element in $$$p$$$. Let $$$q_i$$$ be the element removed at the $$$i$$$-th turn.Choose which element to remove at each turn so that the resulting array $$$q$$$ is good. We can show that under the given constraints, it's always possible.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Recycling Center",
    "url": "https://codeforces.com/problemset/problem/2128/A",
    "description": "In the recycling center, there are $$$n$$$ trash bags, the $$$i$$$-th bag has a weight of $$$a_i$$$. At each second, two actions will happen successively:   First, you must choose a trash bag and destroy it. It will cost $$$1$$$ coin if the weight of the trash bag is strictly greater than $$$c$$$, and it will cost $$$0$$$ coins otherwise.  Then, the weight of each remaining trash bag will get multiplied by two.  What is the minimum number of coins you have to spend to get rid of all trash bags?"
  },
  {
    "title": "23 Rises Again",
    "url": "https://codeforces.com/problemset/problem/2127/H",
    "description": " Kiarash is picking strawberries to take home...A graph is called candy if and only if the degree of every vertex in it is at most $$$2$$$.You are given a simple, undirected, and connected graph $$$G$$$ of $$$n\\le 30$$$ vertices, with a special property: each vertex belongs to at most $$$5$$$ simple cycles$$$^{\\text{∗}}$$$.What is the maximum number of edges among all subgraphs$$$^{\\text{†}}$$$ of $$$G$$$ that are candy?$$$^{\\text{∗}}$$$A simple cycle is a connected subgraph such that each vertex has a degree of exactly $$$2$$$$$$^{\\text{†}}$$$A subgraph of $$$G$$$ is a graph whose vertices and edges are subsets of $$$G$$$."
  },
  {
    "title": "Inter Active (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2127/G2",
    "description": "     This is the hard version of the problem. The difference between the versions is that in this version, you can make at most $$$10\\cdot n$$$ queries. You can hack only if you solved all versions of this problem. Ali loved Bahamin's gift (from problem E) so much that he illegally traveled from Qazvin to Liverpool to have the gift signed by football players. Now Interpol is searching for him, but they've offered a deal: solve a problem, and he can stay in Liverpool. But since he's currently at the stadium, he can't solve it — so he asked you to do it.This is an interactive problem. There is a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n\\ge 4$$$, where $$$p_i \\neq i$$$ for each $$$1 \\leq i \\leq n$$$.Initially, you should give the jury a positive integer $$$k\\le n$$$, which will be constant through future queries. Then you need to find permutation $$$p$$$ using some queries.In each query, you give a permutation $$$q_1, q_2, \\ldots, q_n$$$ to the jury. In response, you will receive the number of pairs $$$(i, j)$$$ such that all of the following conditions hold:  $$$i \\lt j$$$;  $$$p_{q_i} = q_j$$$;  $$$i \\neq k$$$. ($$$k$$$ is the constant you have given to the jury) You are given $$$n$$$, and you need to find the permutation $$$p$$$ in at most $$$10\\cdot n$$$ queries.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Inter Active (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2127/G1",
    "description": "     This is the easy version of the problem. The difference between the versions is that in this version, you can make at most $$$15\\cdot n$$$ queries. You can hack only if you solved all versions of this problem. Ali loved Bahamin's gift (from problem E) so much that he illegally traveled from Qazvin to Liverpool to have the gift signed by football players. Now Interpol is searching for him, but they've offered a deal: solve a problem, and he can stay in Liverpool. But since he's currently at the stadium, he can't solve it — so he asked you to do it.This is an interactive problem. There is a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n\\ge 4$$$, where $$$p_i \\neq i$$$ for each $$$1 \\leq i \\leq n$$$.Initially, you should give the jury a positive integer $$$k\\le n$$$, which will be constant through future queries. Then you need to find permutation $$$p$$$ using some queries.In each query, you give a permutation $$$q_1, q_2, \\ldots, q_n$$$ to the jury. In response, you will receive the number of pairs $$$(i, j)$$$ such that all of the following conditions hold:  $$$i \\lt j$$$;  $$$p_{q_i} = q_j$$$;  $$$i \\neq k$$$. ($$$k$$$ is the constant you have given to the jury) You are given $$$n$$$, and you need to find the permutation $$$p$$$ in at most $$$15\\cdot n$$$ queries.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Hamed and AghaBalaSar",
    "url": "https://codeforces.com/problemset/problem/2127/F",
    "description": " Hamid wrote $$$3014$$$ lines of code for the a+b problem and gave $$$10$$$ lines of it to Hamed; then the following problem came to Hamed's mind.You are given two integers $$$n$$$ and $$$m$$$.An array $$$a_1,a_2,\\ldots,a_n$$$ is called snake if and only if all of the following conditions hold:   All elements in $$$a$$$ are integers between $$$0$$$ and $$$m$$$;  $$$a_1 + a_2 + \\cdots + a_n = m$$$;  $$$a_n=\\max\\left([a_1, a_2, \\ldots, a_n]\\right)$$$. We define $$$f(a)$$$ as in the following pseudocode:function f(array a):    pos := 1    res := 0    let nxt[x] be an array such that nxt[x] is the smallest index y such that                                    y > x and a[y] > a[x],                              or undefined if no such y exists    while pos < n:        if a[pos] < a[n]:            res += a[nxt[pos]] - a[pos]            pos := nxt[pos]        else:            pos += 1    return resFind the sum of $$$f(a)$$$ over all snake arrays $$$a_1,a_2,\\ldots,a_n$$$, modulo $$$10^9+7$$$."
  },
  {
    "title": "Ancient Tree",
    "url": "https://codeforces.com/problemset/problem/2127/E",
    "description": "   Bahamin came from the past to visit Ali — who came from the future. He also brought an ancient tree as a gift for Ali. He noticed some of its vertices have lost their color. Bahamin needs to repaint these vertices, but he is very busy with fixing his time machine. Fortunately (or unfortunately), dinosaurs now handle such tasks — for a fee, of course. He needs your help to find the coloring with minimum cost. So he gives you the problem as follows.You are given a rooted tree$$$^{\\text{∗}}$$$ of $$$n$$$ vertices, where vertex $$$1$$$ is the root. Each vertex has an integer weight $$$w_i$$$ and a color $$$c_i$$$, where the colors are integers between $$$1$$$ and $$$k$$$. However, some vertices have lost their colors, represented by $$$c_i = 0$$$.We call vertex $$$v$$$ cutie if there exists two vertices $$$x$$$ and $$$y$$$, such that  $$$\\operatorname{lca}(x, y)$$$$$$^{\\text{†}}$$$ $$$= v$$$,  $$$c_x = c_y$$$, and  $$$c_x \\neq c_v$$$. The cost of the tree is the sum of weights of all cutie vertices.You have to assign colors between $$$1$$$ and $$$k$$$ to all the vertices which have lost their colors. Find the minimum possible cost among all valid colorings and provide a coloring with the minimum possible cost.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles.  A rooted tree is a tree where one vertex is special and called the root. $$$^{\\text{†}}$$$$$$\\operatorname{lca}(x, y)$$$ denotes the lowest common ancestor (LCA) of $$$x$$$ and $$$y$$$."
  },
  {
    "title": "Root was Built by Love, Broken by Destiny",
    "url": "https://codeforces.com/problemset/problem/2127/D",
    "description": "Heartfall River runs horizontally through Destinyland and divides it into the northern and southern sides.Engineer Root wants to build $$$n$$$ houses along the river, numbered from $$$1$$$ to $$$n$$$. All houses on the northern side and all houses on the southern side must lie along straight lines parallel to Heartfall River.There will be $$$m$$$ bridges, with the $$$i$$$-th bridge connecting house $$$u_i$$$ and house $$$v_i$$$ ($$$u_i \\ne v_i$$$). It is guaranteed that all $$$n$$$ houses are connected by these bridges, that is, you can travel from any house to any other by crossing bridges. Also, there are no two bridges connecting the same pair of houses.Root wants to know how many ways there are to arrange the $$$n$$$ houses along the river, modulo $$$10^9+7$$$, such that the following conditions hold for the planned $$$m$$$ bridges:  For every bridge, the two houses it connects lie on opposite sides of the river;  The bridges do not cross when drawn as straight lines between the houses.   A possible arrangement of the houses when $$$n=5$$$. Two arrangements are considered different if at least one of the following conditions holds:  There exists a house that lies on a different side in each arrangement;  There exist two houses $$$a$$$ and $$$b$$$ that are on the same side in both arrangements, but $$$a$$$ comes before $$$b$$$ in one arrangement and $$$b$$$ comes before $$$a$$$ in the other. Since Root is distracted by his ex, whom destiny separated from him, he asks you to calculate the number of ways to arrange the houses along the river, modulo $$$10^9+7$$$."
  },
  {
    "title": "Trip Shopping",
    "url": "https://codeforces.com/problemset/problem/2127/C",
    "description": " Ali and Bahamin decided to spend their summer vacation on the beautiful southern coasts of Iran. They also agreed to do some shopping during the trip — but instead of setting a fixed budget, they decided to determine how much they would spend by playing a game.The game is played on two arrays $$$a$$$ and $$$b$$$, each containing $$$n$$$ integers.The game will last for $$$k$$$ rounds. In one round:   First, Ali selects two indices $$$i$$$ and $$$j$$$ ($$$1 \\leq i < j \\leq n$$$);  Then, Bahamin rearranges the four integers $$$a_i$$$, $$$a_j$$$, $$$b_i$$$, and $$$b_j$$$ arbitrarily. Note that Bahamin can swap numbers between two arrays. He can also keep the two arrays unchanged.  After all the $$$k$$$ rounds, the value of the game is defined as $$$v=\\sum\\limits_{i=1}^{n} |a_i-b_i|$$$. Ali and Bahamin will spend exactly $$$v$$$ coins during their trip.However, their goals are quite different:   Ali wants to spend as little as possible, that is, to minimize $$$v$$$;  Bahamin wants to spend as much as possible, that is, to maximize $$$v$$$. You have to find the final amount of coins they will spend if both Ali and Bahamin play optimally."
  },
  {
    "title": "Hamiiid, Haaamid..",
    "url": "https://codeforces.com/problemset/problem/2127/B",
    "description": " Mani has locked Hamid in a $$$1 \\times n$$$ grid. Initially, some cells of the grid contain walls and the rest are empty, and Hamid is in an empty cell.In each day, the following events happen in order: Mani selects an empty cell and builds a wall in that cell. Note that he can not build a wall in the cell which Hamid currently is at;  Hamid selects a direction (left or right), then If there are no walls in that direction, he will escape the grid;  Otherwise, he will move to the nearest wall in that direction and destroy that wall. Hamid is at the position of the destroyed wall after this day.Here is an example of a possible sequence of actions when $$$n=6$$$:   Hamid is always aware of where the walls are. He wants to minimize the number of days that he needs to escape the grid, while Mani wants to maximize it.You have to determine the number of days Hamid needs to escape the grid if they both act optimally."
  },
  {
    "title": "Mix Mex Max",
    "url": "https://codeforces.com/problemset/problem/2127/A",
    "description": " You are given an array $$$a$$$ consisting of $$$n$$$ non-negative integers. However, some elements of $$$a$$$ are missing, and they are represented by $$$−1$$$.We define that the array $$$a$$$ is good if and only if the following holds for every $$$1 \\leq i \\leq n-2$$$:$$$$$$ \\operatorname{mex}([a_i, a_{i+1}, a_{i+2}]) = \\max([a_i, a_{i+1}, a_{i+2}]) - \\min([a_i, a_{i+1}, a_{i+2}]), $$$$$$where $$$\\operatorname{mex}(b)$$$ denotes the minimum excluded (MEX)$$$^{\\text{∗}}$$$ of the integers in $$$b$$$. You have to determine whether you can make $$$a$$$ good after replacing each $$$-1$$$ in $$$a$$$ with a non-negative integer.$$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$b_1, b_2, \\ldots, b_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$b$$$.  For example, $$$\\operatorname{mex}([2,2,1])=0$$$ because $$$0$$$ does not belong to the array, and $$$\\operatorname{mex}([0,3,1,2])=4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ appear in the array, but $$$4$$$ does not."
  },
  {
    "title": "Big Wins! (hard version)",
    "url": "https://codeforces.com/problemset/problem/2126/G2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version $$$a_i \\leq n$$$.You are given an array of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$.Your task is to find a subarray $$$a[l, r]$$$ (a continuous sequence of elements $$$a_l, a_{l + 1}, \\dots, a_r$$$) for which the value of the expression $$$\\text{med}(a[l, r]) - \\min(a[l, r])$$$ is maximized.Here:   $$$\\text{med}$$$ is the median of the subarray, that is, the element at position $$$\\left\\lceil \\frac{k + 1}{2} \\right\\rceil$$$ after sorting the subarray, where $$$k$$$ is its length;  $$$\\min$$$ is the minimum element of this subarray. For example, consider the array $$$a=[1, 4, 1, 5, 3, 3]$$$ and choose the subarray $$$a[2, 5] = [4, 1, 5, 3]$$$. In sorted form, it looks like $$$[1, 3, 4, 5]$$$.  $$$\\text{med}(a[2, 5]) = 4$$$, since $$$\\left\\lceil \\frac{4 + 1}{2} \\right\\rceil = $$$ the third element in the sorted subarray is $$$4$$$;  $$$\\min(a[2, 5]) = 1$$$, since the minimum element is $$$1$$$. In this example, the value $$$\\text{med} - \\min = 4 - 1 = 3$$$."
  },
  {
    "title": "Big Wins! (easy version)",
    "url": "https://codeforces.com/problemset/problem/2126/G1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version $$$a_i \\leq \\min(n,100)$$$.You are given an array of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$.Your task is to find a subarray $$$a[l, r]$$$ (a continuous sequence of elements $$$a_l, a_{l + 1}, \\dots, a_r$$$) for which the value of the expression $$$\\text{med}(a[l, r]) - \\min(a[l, r])$$$ is maximized.Here:   $$$\\text{med}$$$ — the median of the subarray, which is the element at position $$$\\left\\lceil \\frac{k + 1}{2} \\right\\rceil$$$ after sorting the subarray, where $$$k$$$ is its length;  $$$\\min$$$ — the minimum element of this subarray. For example, consider the array $$$a=[1, 4, 1, 5, 3, 3]$$$ and choose the subarray $$$a[2, 5] = [4, 1, 5, 3]$$$. In sorted form, it looks like $$$[1, 3, 4, 5]$$$.  $$$\\text{med}(a[2, 5]) = 4$$$, since $$$\\left\\lceil \\frac{4 + 1}{2} \\right\\rceil = $$$ the third element in the sorted subarray is $$$4$$$;  $$$\\min(a[2, 5]) = 1$$$, since the minimum element is $$$1$$$. In this example, the value $$$\\text{med} - \\min = 4 - 1 = 3$$$."
  },
  {
    "title": "1-1-1, Free Tree!",
    "url": "https://codeforces.com/problemset/problem/2126/F",
    "description": "Given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$. Each vertex has an initial color $$$a_i$$$.Each edge of the tree is defined by three numbers: $$$u_i$$$, $$$v_i$$$, and $$$c_i$$$, where $$$u_i$$$ and $$$v_i$$$ are the endpoints of the edge, and $$$c_i$$$ is the edge parameter. The cost of the edge is defined as follows: if the colors of vertices $$$u_i$$$ and $$$v_i$$$ are the same, the cost is $$$0$$$; otherwise, the cost is $$$c_i$$$.You are also given $$$q$$$ queries. Each query has the form: repaint vertex $$$v$$$ to color $$$x$$$. The queries depend on each other (after each query, the color change is preserved). After each query, you need to output the sum of the costs of all edges in the tree.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. "
  },
  {
    "title": "G-C-D, Unlucky!",
    "url": "https://codeforces.com/problemset/problem/2126/E",
    "description": "Two arrays $$$p$$$ and $$$s$$$ of length $$$n$$$ are given, where $$$p$$$ is the prefix GCD$$$^{\\text{∗}}$$$ of some array $$$a$$$, and $$$s$$$ is the suffix GCD of the same array $$$a$$$. In other words, if the array $$$a$$$ existed, then for each $$$1 \\le i \\le n$$$, the following equalities would hold both:   $$$p_i = \\gcd(a_1, a_2, \\dots, a_i)$$$  $$$s_i = \\gcd(a_i, a_{i+1}, \\dots, a_n)$$$.  Determine whether there exists such an array $$$a$$$ for which the given arrays $$$p$$$ and $$$s$$$ can be obtained.$$$^{\\text{∗}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. "
  },
  {
    "title": "This Is the Last Time",
    "url": "https://codeforces.com/problemset/problem/2126/D",
    "description": "You are given $$$n$$$ casinos, numbered from $$$1$$$ to $$$n$$$. Each casino is described by three integers: $$$l_i$$$, $$$r_i$$$, and $$$real_i$$$ ($$$l_i \\le real_i \\le r_i$$$). You initially have $$$k$$$ coins.You can play at casino $$$i$$$ only if the current number of coins $$$x$$$ satisfies $$$l_i \\le x \\le r_i$$$. After playing, your number of coins becomes $$$real_i$$$.You can visit the casinos in any order and are not required to visit all of them. Each casino can be visited no more than once.Your task is to find the maximum final number of coins you can obtain."
  },
  {
    "title": "I Will Definitely Make It",
    "url": "https://codeforces.com/problemset/problem/2126/C",
    "description": "You are given $$$n$$$ towers, numbered from $$$1$$$ to $$$n$$$. Tower $$$i$$$ has a height of $$$h_i$$$. At time $$$0$$$, you are on the tower with index $$$k$$$, and the current water level is $$$1$$$.Every second, the water level rises by $$$1$$$ unit. At any moment, if the water level becomes strictly greater than the height of the tower you are on, you perish.You have a magical ability: at moment $$$x$$$, you can start teleporting from tower $$$i$$$ to tower $$$j$$$, which will take $$$\\lvert h_i - h_j \\rvert$$$ seconds. That is, until moment $$$x + \\lvert h_i - h_j \\rvert$$$, you will be on tower $$$i$$$, and at moment $$$x + \\lvert h_i - h_j \\rvert$$$, you will move to tower $$$j$$$. You can start a new teleportation at the same moment you just arrived at tower $$$j$$$.For example, if $$$n=k=4$$$, $$$h=[4, 4, 4, 2]$$$, then if you start teleporting from tower $$$4$$$ to tower $$$1$$$ at moment $$$0$$$, the movement will look as follows:   Note that if the height of tower $$$1$$$ were $$$5$$$, you would not be able to teleport to it immediately, as you would be submerged at moment $$$2$$$.Your goal is to reach any tower with the maximum height before the water covers you.Determine if this is possible."
  },
  {
    "title": "No Casino in the Mountains",
    "url": "https://codeforces.com/problemset/problem/2126/B",
    "description": "You are given an array $$$a$$$ of $$$n$$$ numbers and a number $$$k$$$. The value $$$a_i$$$ describes the weather on the $$$i$$$-th day: if it rains on the $$$i$$$-th day, then $$$a_i = 1$$$; otherwise, if the weather is good on the $$$i$$$-th day, then $$$a_i = 0$$$.Jean wants to visit as many peaks as possible. One hike to a peak takes exactly $$$k$$$ days, and during each of these days, the weather must be good ($$$a_i = 0$$$). That is, formally, he can start a hike on day $$$i$$$ only if all $$$a_j = 0$$$ for all $$$j$$$ $$$(i \\leq j \\leq i + k - 1)$$$.After each hike, before starting the next one, Jean must take a break of at least one day, meaning that on the day following a hike, he cannot go on another hike.Find the maximum number of peaks that Jean can visit."
  },
  {
    "title": "Only One Digit",
    "url": "https://codeforces.com/problemset/problem/2126/A",
    "description": "You are given an integer $$$x$$$. You need to find the smallest non-negative integer $$$y$$$ such that the numbers $$$x$$$ and $$$y$$$ share at least one common digit. In other words, there must exist a decimal digit $$$d$$$ that appears in both the representation of the number $$$x$$$ and the number $$$y$$$."
  },
  {
    "title": "Timofey and Docker",
    "url": "https://codeforces.com/problemset/problem/2125/F",
    "description": "Not so long ago, a certain Timofey learned about docker and now wants to present a report about it at a conference. He has already prepared the text $$$s$$$.There are $$$n$$$ people attending the conference. The $$$i$$$-th attendee will understand Timofey's report if the number of occurrences of the word \"docker\" as a contiguous substring in the text is not less than $$$l_i$$$ and not greater than $$$r_i$$$.To ensure that as many people as possible learn about docker, Timofey can change characters in his text.Help Timofey determine the minimum number of characters that need to be changed so that the topic is understood by the maximum possible number of attendees."
  },
  {
    "title": "Sets of Complementary Sums",
    "url": "https://codeforces.com/problemset/problem/2125/E",
    "description": "We call a set of integers $$$Q$$$ a set of complementary sums if it can be obtained through the following actions:  choose an array $$$a$$$ consisting of $$$m$$$ positive integers ($$$m$$$ is any positive integer);  calculate the sum $$$s$$$ of all elements in the array $$$a$$$;  for each element $$$a_{i}$$$ in the array, add the number $$$s - a_{i}$$$ to the set, more formally the set $$$Q = \\{s - a_{i}\\;|\\; 1 \\le i \\le m\\}$$$. Note that $$$Q$$$ is not a multiset, meaning each number in it is unique. For example, if the array $$$a = [1, 3, 3, 7]$$$ was chosen, then $$$s = 14$$$ and $$$Q = \\{7, 11, 13\\}$$$.Your task is to count the number of distinct sets of complementary sums for which the following holds:  the set contains exactly $$$n$$$ elements;  each element of the set is an integer from $$$1$$$ to $$$x$$$. Two sets are considered different if there exists an element in the first set that is not included in the second set.Since the answer can be huge, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Segments Covering",
    "url": "https://codeforces.com/problemset/problem/2125/D",
    "description": "There is a linear strip divided into $$$m$$$ cells, numbered from $$$1$$$ to $$$m$$$ from left to right.You are given $$$n$$$ segments. Each segment is defined by four numbers: $$$l$$$, $$$r$$$, $$$p$$$ and $$$q$$$ — the segment covers cells from $$$l$$$ to $$$r$$$ inclusively and exists with probability $$$\\frac{p}{q}$$$ (independently).Your task is to calculate the probability that each cell is covered by exactly one segment."
  },
  {
    "title": "Count Good Numbers",
    "url": "https://codeforces.com/problemset/problem/2125/C",
    "description": "A prime number is a positive integer that has exactly two divisors: $$$1$$$ and itself. The first several prime numbers are $$$2, 3, 5, 7, 11, \\dots$$$.Prime factorization of a positive integer is representing it as a product of prime numbers. For example:  the prime factorization of $$$111$$$ is $$$3 \\cdot 37$$$;  the prime factorization of $$$43$$$ is $$$43$$$;  the prime factorization of $$$12$$$ is $$$2 \\cdot 2 \\cdot 3$$$. For every positive integer, its prime factorization is unique (if you don't consider the order of primes in the product).We call a positive integer good if all primes in its factorization consist of at least two digits. For example:  $$$343 = 7 \\cdot 7 \\cdot 7$$$ is not good;  $$$111 = 3 \\cdot 37$$$ is not good;  $$$1111 = 11 \\cdot 101$$$ is good;  $$$43 = 43$$$ is good. You have to calculate the number of good integers from $$$l$$$ to $$$r$$$ (endpoints included)."
  },
  {
    "title": "Left and Down",
    "url": "https://codeforces.com/problemset/problem/2125/B",
    "description": "There is a robot located in the cell $$$(a,b)$$$ of an infinite grid. Misha wants to move it to the cell $$$(0,0)$$$. To do this, he has fixed some integer $$$k$$$.Misha can perform the following operation: choose two integers $$$dx$$$ and $$$dy$$$ (both from $$$0$$$ to $$$k$$$ inclusive) and move the robot $$$dx$$$ cells to the left (in the direction of decreasing $$$x$$$ coordinate) and $$$dy$$$ cells down (in the direction of decreasing $$$y$$$ coordinate). In other words, move the robot from $$$(x,y)$$$ to $$$(x - dx, y - dy)$$$.The cost of the operation is:   $$$1$$$, if the chosen pair $$$(dx,dy)$$$ is used for the first time;  $$$0$$$, if the pair $$$(dx,dy)$$$ has been chosen before. Note that if $$$dx \\ne dy$$$, the pairs $$$(dx, dy)$$$ and $$$(dy, dx)$$$ are considered different.Help Misha bring the robot to the cell $$$(0,0)$$$ with minimum total cost. Note that you don't have to minimize the number of operations."
  },
  {
    "title": "Difficult Contest",
    "url": "https://codeforces.com/problemset/problem/2125/A",
    "description": "It is known that a contest can be represented by a string $$$s$$$, consisting of uppercase Latin letters that denote problems. It is also known that a contest is difficult if it contains \"FFT\" or \"NTT\" as a contiguous substring.Your task is to rearrange the problem in contest $$$s$$$ in such a way that this contest is not difficult. If the initial contest is not difficult, you may leave it as it is."
  },
  {
    "title": "Lexicographic Partition",
    "url": "https://codeforces.com/problemset/problem/2124/I",
    "description": "   Given an array aa, define f(a)f(a) as follows:   Let kk be an integer with 1≤k≤n1 \\leq k \\leq n.  Partition aa into kk subarrays∗^{\\text{∗}} s1,s2,…,sks_1,s_2,\\ldots,s_k such that s1+s2+…+sk=as_1+s_2+\\ldots+s_k=a. Here, ++ represents array concatenation.  Let bb be an empty array. For each ii from 11 to kk in order, append the minimum element of sis_i to the end of bb.  Over all possible kk and partitions, f(a)f(a) is the value of kk such that there exists a partition that produces the lexicographically largest bb†^{\\text{†}}. You are given nn integers x1,x2,…,xnx_1,x_2,\\ldots,x_n. Please determine if there exists a permutation‡^{\\text{‡}} aa such that f([a1,a2,…,ai])=xif([a_1,a_2,\\ldots,a_i])=x_i for each 1≤i≤n1 \\leq i \\leq n. If there is a permutation, print one. If there are multiple possible answers, you may output any one.∗^{\\text{∗}}An array cc is a subarray of an array dd if cc can be obtained from dd by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. †^{\\text{†}}An array cc is lexicographically smaller than an array dd if and only if one of the following holds:   cc is a prefix of dd, but c≠dc \\ne d; or  in the first position where cc and dd differ, the array cc has a smaller element than the corresponding element in dd.  ‡^{\\text{‡}}A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array). "
  },
  {
    "title": "Longest Good Subsequence",
    "url": "https://codeforces.com/problemset/problem/2124/H",
    "description": "  Call an array $$$b$$$ of size $$$m$$$ good if the following conditions hold:   $$$1 \\leq b_i \\leq i$$$ for each $$$1 \\leq i \\leq m$$$.  There exists a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of size $$$m$$$ such that for each $$$1 \\leq i \\leq m$$$, $$$b_i$$$ is the smallest integer where $$$\\min(p_{b_i}, p_{b_i+1}, \\ldots, p_i)=p_i$$$. For example, the array $$$[1,1,3,3,5]$$$ is good (where the permutation $$$p=[2,1,5,3,4]$$$ satisfies the second requirement), but the array $$$[1,1,2]$$$ isn't.Note the empty array is considered to be good.You are given an array $$$a$$$ of size $$$n$$$. Find the length of the longest good subsequence$$$^{\\text{†}}$$$ of $$$a$$$.$$$^{\\text{∗}}$$$A permutation of length $$$m$$$ is an array consisting of $$$m$$$ distinct integers from $$$1$$$ to $$$m$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$m=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$A sequence $$$c$$$ is a subsequence of a sequence $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Maximise Sum",
    "url": "https://codeforces.com/problemset/problem/2124/G",
    "description": "This problem differs from problem B. In this problem, you must output the maximum sum of prefix minimums over all operations that cost at least $$$x$$$ for each integer $$$x$$$ from $$$0$$$ to $$$n-1$$$.You are given an array $$$a$$$ of length $$$n$$$, with elements satisfying $$$\\boldsymbol{0 \\le a_i \\le n}$$$. You can perform the following operation at most once:  Choose two indices $$$i$$$ and $$$j$$$ such that $$$i < j$$$. Set $$$a_i := a_i + a_j$$$. Then, set $$$a_j = 0$$$. Let the cost of one operation be the value of $$$j-i$$$. The cost of not performing an operation is $$$0$$$.For each integer $$$x$$$ from $$$0$$$ to $$$n-1$$$ inclusive, output the maximum possible value of $$$\\min(a_1) + \\min(a_1,a_2) + \\ldots + \\min(a_1, a_2, \\ldots, a_n)$$$ over all possible operations that have a cost of at least $$$x$$$."
  },
  {
    "title": "Appending Permutations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2124/F2",
    "description": " This is the hard version of the problem. The difference between the versions is that in this version, $$$n \\leq 5000$$$. You can hack only if you solved all versions of this problem. You are given an initially empty array $$$a$$$. You may perform the following operation any number of times:  Choose an integer $$$s \\ge 1$$$ and append a cyclic shift of the array $$$[1, 2, \\ldots, s]$$$ to the end of $$$a$$$. Formally, select integers $$$s$$$ and $$$r$$$ such that $$$1 \\le r \\le s$$$, and append the array $$$$$$ [r, r+1, \\ldots, s, 1, 2, \\ldots, r-1] $$$$$$ to the end of $$$a$$$.  You are also given an integer $$$n$$$ and $$$m$$$ restrictions of the form $$$a_i \\ne x$$$. That is, for each of the $$$m$$$ restrictions, the value at position $$$i$$$ in the final array must not be equal to $$$x$$$.Your task is to count the number of distinct arrays of length exactly $$$n$$$ that can be constructed using the allowed operation and satisfy all of the given restrictions. Two arrays are considered different if they differ at any position from $$$1$$$ to $$$n$$$.Print the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Appending Permutations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2124/F1",
    "description": " This is the easy version of the problem. The difference between the versions is that in this version, $$$n \\leq 100$$$. You can hack only if you solved all versions of this problem. You are given an initially empty array $$$a$$$. You may perform the following operation any number of times:  Choose an integer $$$s \\ge 1$$$ and append a cyclic shift of the array $$$[1, 2, \\ldots, s]$$$ to the end of $$$a$$$. Formally, select integers $$$s$$$ and $$$r$$$ such that $$$1 \\le r \\le s$$$, and append the array $$$$$$ [r, r+1, \\ldots, s, 1, 2, \\ldots, r-1] $$$$$$ to the end of $$$a$$$.  You are also given an integer $$$n$$$ and $$$m$$$ restrictions of the form $$$a_i \\ne x$$$. That is, for each of the $$$m$$$ restrictions, the value at position $$$i$$$ in the final array must not be equal to $$$x$$$.Your task is to count the number of distinct arrays of length exactly $$$n$$$ that can be constructed using the allowed operation and satisfy all of the given restrictions. Two arrays are considered different if they differ at any position from $$$1$$$ to $$$n$$$.Print the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Make it Zero",
    "url": "https://codeforces.com/problemset/problem/2124/E",
    "description": "You are given an array aa, consisting of nn positive integers. You are allowed to do the following operation:   Select an array bb of size nn such that the following properties hold:  0≤bi≤ai0 \\leq b_i \\leq a_i for each 1≤i≤n1 \\leq i \\leq n  There exists an index 1≤i<n1\\leq i < n such that b1+b2+…+bi=bi+1+bi+2+…+bnb_1+b_2+\\ldots+b_i=b_{i+1}+b_{i+2}+\\ldots+b_n. That is, the sum of the prefix of length ii is equal to the sum of the suffix of length n−in-i.   Then, subtract bib_i from aia_i for each 1≤i≤n1 \\leq i \\leq n. Your task is to change all the elements to 00. Find the minimum number of operations required. Then, output a way to perform the operations. If it is impossible to change all the elements of aa to 00 no matter how many operations are used, print −1-1 instead. It can be shown that under the constraints of this problem, the smallest number of operations required is at most 1717."
  },
  {
    "title": "Make a Palindrome",
    "url": "https://codeforces.com/problemset/problem/2124/D",
    "description": "You are given an array $$$a$$$ of size $$$n$$$, and an integer $$$k$$$. You may perform the following operation any number of times:   Select two integers $$$l$$$ and $$$r$$$ $$$(1 \\le l \\le r \\le |a|)$$$ such that $$$r-l+1 \\geq k$$$.  Then, select an index $$$i$$$ such that $$$l\\leq i \\leq r$$$ where $$$a_i$$$ is the $$$k$$$-th smallest number out of the subarray $$$[a_l,a_{l+1},\\ldots,a_r]$$$. If there are multiple possible $$$i$$$, you may select any. For example, consider $$$a = [1, 2, 2, 1, 3], l = 1, r = 5$$$ and $$$k = 3$$$, the possible candidates of $$$i$$$ are indices $$$2$$$ and $$$3$$$.  Then, delete $$$a_i$$$ from $$$a$$$, concatenating the remaining parts of the array. Determine if it is possible to get an array that is a palindrome$$$^{\\text{∗}}$$$ after any number of operations. Note that an empty array is considered a palindrome. $$$^{\\text{∗}}$$$An array $$$b=[b_1,b_2,\\ldots,b_m]$$$ is a palindrome if for each $$$1 \\leq i \\leq m$$$, $$$b_i=b_{m+1-i}$$$."
  },
  {
    "title": "Subset Multiplication",
    "url": "https://codeforces.com/problemset/problem/2124/C",
    "description": "Alice has an array $$$a$$$, consisting of $$$n$$$ positive integers. The array satisfies the beautiful property that $$$a_i$$$ divides $$$a_{i+1}$$$ for each $$$1 \\leq i \\leq n - 1$$$. Bob sees Alice's beautiful array and is jealous. To sabotage her, Bob first creates an array $$$b$$$ of size $$$n$$$ such that $$$b_i=a_i$$$ for each $$$1 \\leq i \\leq n$$$. Then, he chooses a positive integer $$$x$$$ and multiplies some (possibly none, possibly all) elements in $$$b$$$ by $$$x$$$. Formally, he chooses a (possibly-empty) subset $$$S\\subseteq\\{1,2,\\ldots,n\\}$$$, and for each $$$i\\in S$$$, he sets $$$b_i:=b_i\\cdot x$$$. You are given an array $$$b$$$, but you don't know array $$$a$$$ and the chosen number $$$x$$$. Please output any integer $$$x$$$ that Bob could choose, so that multiplying some subset of elements of the correct array $$$a$$$ by $$$x$$$ would result in array $$$b$$$. It is guaranteed that the answer exists. If there are multiple possible integers, you can output any of them."
  },
  {
    "title": "Minimise Sum",
    "url": "https://codeforces.com/problemset/problem/2124/B",
    "description": "This problem differs from problem G. In this problem, you must output the minimum sum of prefix minimums after at most one operation.You are given an array $$$a$$$ of length $$$n$$$, with elements satisfying $$$\\boldsymbol{0 \\le a_i \\le n}$$$. You can perform the following operation at most once:  Choose two indices $$$i$$$ and $$$j$$$ such that $$$i < j$$$. Set $$$a_i := a_i + a_j$$$. Then, set $$$a_j = 0$$$. Output the minimum possible value of $$$\\min(a_1) + \\min(a_1,a_2) + \\ldots + \\min(a_1, a_2, \\ldots, a_n)$$$ that you can get."
  },
  {
    "title": "Deranged Deletions",
    "url": "https://codeforces.com/problemset/problem/2124/A",
    "description": "Call an array $$$b$$$ of length $$$m$$$ a derangement if the following property holds:  Let $$$c$$$ be an array of length $$$m$$$ such that $$$c_i = b_i$$$ over all $$$1 \\leq i \\leq m$$$.  Sort $$$c$$$ in non-decreasing order.  If $$$b_i\\neq c_i$$$ over all $$$1\\leq i \\leq m$$$, then $$$b$$$ is a derangement. For example,  If $$$b = [4,8,3,1]$$$, then $$$c = [1, 3, 4, 8]$$$ after getting sorted. Since $$$b_i \\neq c_i$$$ in all positions, $$$b$$$ is a derangement.  If $$$b = [3,2,1]$$$, then $$$c = [1, 2, 3]$$$ after getting sorted. Since $$$b_2 = c_2$$$, $$$b$$$ is not a derangement. You are given an array $$$a$$$ of length $$$n$$$. In one operation, you can delete an element from $$$a$$$. The order of the remaining elements is preserved after each deletion.Output whether it is possible to perform some (possibly none) operations such that the remaining elements form a derangement. If it is possible, output any possible remaining array. The remaining array must be non-empty."
  },
  {
    "title": "Modular Sorting",
    "url": "https://codeforces.com/problemset/problem/2123/G",
    "description": "You are given an integer $$$m$$$ ($$$2\\leq m\\leq 5\\cdot 10^5$$$) and an array $$$a$$$ consisting of nonnegative integers smaller than $$$m$$$.Answer queries of the following form:   $$$1$$$ $$$i$$$ $$$x$$$: assign $$$a_i := x$$$  $$$2$$$ $$$k$$$: in one operation, you may choose an element $$$a_i$$$ and assign $$$a_i := (a_i + k) \\pmod m$$$$$$^{\\text{∗}}$$$ — determine if there exists some sequence of (possibly zero) operations to make $$$a$$$ nondecreasing$$$^{\\text{†}}$$$. Note that instances of query $$$2$$$ are independent; that is, no actual operations are taking place. Instances of query $$$1$$$ are persistent.$$$^{\\text{∗}}$$$$$$a\\pmod m$$$ is defined as the unique integer $$$b$$$ such that $$$0\\leq b<m$$$ and $$$a-b$$$ is an integer multiple of $$$m$$$.$$$^{\\text{†}}$$$An array $$$a$$$ of size $$$n$$$ is called nondecreasing if and only if $$$a_i\\leq a_{i+1}$$$ for all $$$1\\leq i<n$$$."
  },
  {
    "title": "Minimize Fixed Points",
    "url": "https://codeforces.com/problemset/problem/2123/F",
    "description": "Call a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$ good if $$$\\gcd(p_i, i)$$$$$$^{\\text{†}}$$$ $$$ > 1$$$ for all $$$2 \\leq i \\leq n$$$. Find a good permutation with the minimum number of fixed points$$$^{\\text{‡}}$$$ across all good permutations of length $$$n$$$. If there are multiple such permutations, print any of them.$$$^{\\text{∗}}$$$ A permutation of length $$$n$$$ is an array that contains every integer from $$$1$$$ to $$$n$$$ exactly once, in any order. $$$^{\\text{†}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of $$$x$$$ and $$$y$$$.$$$^{\\text{‡}}$$$A fixed point of a permutation $$$p$$$ is an index $$$j$$$ ($$$1\\leq j\\leq n$$$) such that $$$p_j = j$$$."
  },
  {
    "title": "MEX Count",
    "url": "https://codeforces.com/problemset/problem/2123/E",
    "description": "Define the $$$\\mathrm{MEX}$$$ (minimum excluded value) of an array to be the smallest nonnegative integer not present in the array. For example,  $$$\\mathrm{MEX}([2, 2, 1]) = 0$$$ because $$$0$$$ is not in the array.  $$$\\mathrm{MEX}([3, 1, 0, 1]) = 2$$$ because $$$0$$$ and $$$1$$$ are in the array but $$$2$$$ is not.  $$$\\mathrm{MEX}([0, 3, 1, 2]) = 4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ are in the array but $$$4$$$ is not. You are given an array $$$a$$$ of size $$$n$$$ of nonnegative integers.For all $$$k$$$ ($$$0\\leq k \\leq n$$$), count the number of possible values of $$$\\mathrm{MEX}(a)$$$ after removing exactly $$$k$$$ values from $$$a$$$."
  },
  {
    "title": "Binary String Battle",
    "url": "https://codeforces.com/problemset/problem/2123/D",
    "description": "Alice and Bob are given a binary string $$$s$$$ of length $$$n$$$, and an integer $$$k$$$ ($$$1\\leq k < n$$$).Alice wins if she is able to transform all characters of $$$s$$$ into zeroes. If Alice is unable to win in a finite number of moves, then Bob wins.Alice and Bob take turns, with Alice going first.   On Alice's turn, she may choose any subsequence$$$^{\\text{∗}}$$$ of length $$$k$$$ in $$$s$$$, then set all characters in that subsequence to zero.  On Bob's turn, he may choose any substring$$$^{\\text{†}}$$$ of length $$$k$$$ in $$$s$$$, then set all characters in that substring to one. Note that Alice wins if the string consists of all zeros at any point during the game, including in between Alice's and Bob's turns.Determine who wins with optimal play.$$$^{\\text{∗}}$$$A subsequence of a string $$$s$$$ is a set of characters in $$$s$$$. Note that these characters do not have to be adjacent.$$$^{\\text{†}}$$$A substring of a string $$$s$$$ is a contiguous group of characters in $$$s$$$. Note that these characters must be adjacent."
  },
  {
    "title": "Prefix Min and Suffix Max",
    "url": "https://codeforces.com/problemset/problem/2123/C",
    "description": "You are given an array $$$a$$$ of distinct integers.In one operation, you may either:   choose a nonempty prefix$$$^{\\text{∗}}$$$ of $$$a$$$ and replace it with its minimum value, or  choose a nonempty suffix$$$^{\\text{†}}$$$ of $$$a$$$ and replace it with its maximum value. Note that you may choose the entire array $$$a$$$.For each element $$$a_i$$$, determine if there exists some sequence of operations to transform $$$a$$$ into $$$[a_i]$$$; that is, make the array $$$a$$$ consist of only one element, which is $$$a_i$$$. Output your answer as a binary string of length $$$n$$$, where the $$$i$$$-th character is $$$1$$$ if there exists a sequence to transform $$$a$$$ into $$$[a_i]$$$, and $$$0$$$ otherwise.$$$^{\\text{∗}}$$$A prefix of an array is a subarray consisting of the first $$$k$$$ elements of the array, for some integer $$$k$$$.$$$^{\\text{†}}$$$A suffix of an array is a subarray consisting of the last $$$k$$$ elements of the array, for some integer $$$k$$$."
  },
  {
    "title": "Tournament",
    "url": "https://codeforces.com/problemset/problem/2123/B",
    "description": "You are given an array of integers $$$a_1,a_2,\\dots,a_n$$$. A tournament is held with $$$n$$$ players. Player $$$i$$$ has strength $$$a_i$$$.While more than $$$k$$$ players remain,   Two remaining players are chosen at random;  Then the chosen player with the lower strength is eliminated. If the chosen players have the same strength, one is eliminated at random. Given integers $$$j$$$ and $$$k$$$ ($$$1 \\leq j,k \\leq n$$$), determine if there is any way for player $$$j$$$ to be one of the last $$$k$$$ remaining players."
  },
  {
    "title": "Blackboard Game",
    "url": "https://codeforces.com/problemset/problem/2123/A",
    "description": "Initially, the integers from $$$0$$$ to $$$n-1$$$ are written on a blackboard.In one round,   Alice chooses an integer $$$a$$$ on the blackboard and erases it;  then Bob chooses an integer $$$b$$$ on the blackboard such that $$$a+b \\equiv 3 \\pmod 4$$$$$$^{\\text{∗}}$$$ and erases it. Rounds take place in succession until a player is unable to make a move — the first player who is unable to make a move loses. Determine who wins with optimal play. $$$^{\\text{∗}}$$$We define that $$$x\\equiv y\\pmod m$$$ whenever $$$x-y$$$ is an integer multiple of $$$m$$$."
  },
  {
    "title": "Tree Parking",
    "url": "https://codeforces.com/problemset/problem/2122/G",
    "description": " Consider the following problem statement: You are given a tree with $$$n$$$ vertices rooted at $$$1$$$. For each $$$1 \\leq i \\leq n$$$, a car will enter the root at time $$$l_i$$$. It will then instantaneously travel from the root to vertex $$$i$$$ through the unique simple path and park there. It will leave through the same path in the other direction at time $$$r_i$$$.During the time when a car is parked in a vertex, it blocks other cars from traveling through that vertex. The tree is called valid if and only if all cars are able to enter and leave the tree at their desired times.Count the number of pairs of sequences $$$l$$$, $$$r$$$ such that $$$l_i < r_i$$$, their concatenation is a permutation of $$$1 \\ldots 2n$$$, and the tree is valid. Calculate the sum of the answers to the problem over all labeled trees$$$^{\\text{∗}}$$$ with $$$n$$$ vertices and $$$k$$$ leaves. The root is not considered a leaf. Since the answer may be large, calculate it modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$Two labeled trees are considered different if and only if their edge sets are different."
  },
  {
    "title": "Colorful Polygon",
    "url": "https://codeforces.com/problemset/problem/2122/F",
    "description": "You are given an array $$$a_1, a_2, \\ldots, a_n$$$, where $$$n \\leq 8$$$ and $$$a_1 + a_2 + \\cdots + a_n \\leq 100$$$.Construct a simple polygon$$$^{\\text{∗}}$$$ with at most $$$333$$$ vertices that has exactly $$$$$$\\frac{(a_1 + a_2 + \\cdots + a_n)!}{a_1! a_2! \\cdots a_n!}$$$$$$ different triangulations$$$^{\\text{†}}$$$. It can be proven that such a polygon always exists.$$$^{\\text{∗}}$$$A simple polygon is a polygon that does not intersect itself and has no holes. In other words, no two non-consecutive edges can have common points, and consecutive edges must have exactly one common point — the vertex between them. Consecutive edges may be collinear.$$$^{\\text{†}}$$$A triangulation of a polygon with $$$m$$$ vertices is a set of $$$m-3$$$ diagonals that intersect only at vertices. A diagonal is a segment between two vertices which lies inside the polygon and has exactly two common points with the polygon sides — the vertices it connects."
  },
  {
    "title": "Greedy Grid Counting",
    "url": "https://codeforces.com/problemset/problem/2122/E",
    "description": "A path in a grid is called greedy if it starts at the top-left cell and moves only to the right or downward, always moving to its neighbor with the greater value (or either if the values are equal).The value of a path is the sum of the values of the cells it visits, including the start and end.Given a partially filled $$$2 \\times n$$$ grid of integers between $$$1$$$ and $$$k$$$, count the number of ways to fill the empty cells such that in every subgrid$$$^{\\text{∗}}$$$, there exists a greedy path that achieves the maximum value out of all down/right paths. Since the answer may be large, calculate it modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$ A subgrid of a $$$2 \\times n$$$ grid $$$a_{i,j}$$$ is a grid formed from all cells $$$a_{x,y}$$$ such that $$$l_x \\leq x \\leq r_x$$$, $$$l_y \\leq y \\leq r_y$$$ for some $$$1 \\leq l_x \\leq r_x \\leq 2$$$, $$$1 \\leq l_y \\leq r_y \\leq n$$$. "
  },
  {
    "title": "Traffic Lights",
    "url": "https://codeforces.com/problemset/problem/2122/D",
    "description": " You are given a simple undirected connected graph of $$$n$$$ vertices and $$$m$$$ edges.There is a token in vertex $$$1$$$. We consider the initial time to be at $$$0$$$ seconds. After $$$t$$$ seconds, if the token is in vertex $$$u$$$, you must do exactly one of the following:  wait one second,  move the token through the $$$(t \\bmod \\mathrm{deg}(u) + 1)$$$$$$^{\\text{∗}}$$$-th edge of $$$u$$$, which takes one second. The order of edges of a vertex is the order that they appear in the input.Calculate the minimum time required to move the token from vertex $$$1$$$ to vertex $$$n$$$, and the minimum time spent waiting that can be achieved while minimizing the total time.$$$^{\\text{∗}}$$$$$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$. "
  },
  {
    "title": "Manhattan Pairs",
    "url": "https://codeforces.com/problemset/problem/2122/C",
    "description": " You are given $$$n$$$ points $$$(x_i, y_i)$$$ on a 2D plane, where $$$n$$$ is even. Select $$$\\tfrac{n}{2}$$$ disjoint pairs $$$(a_i, b_i)$$$ to maximize the sum of Manhattan distances between points in pairs. In other words, maximize $$$$$$\\sum_{i=1}^{n/2} |x_{a_i} - x_{b_i}| + |y_{a_i} - y_{b_i}|.$$$$$$"
  },
  {
    "title": "Pile Shuffling",
    "url": "https://codeforces.com/problemset/problem/2122/B",
    "description": " You are given $$$n$$$ binary piles, the $$$i$$$-th of which consists of $$$a_i$$$ zeros on the top and $$$b_i$$$ ones on the bottom.In one operation, you can take the top element of any pile and move it to any position in any pile, including the pile it was taken from.     Solution of the first example test case.  Calculate the minimum number of operations required to make it so that the $$$i$$$-th pile consists of $$$c_i$$$ zeros on the top and $$$d_i$$$ ones on the bottom."
  },
  {
    "title": "Greedy Grid",
    "url": "https://codeforces.com/problemset/problem/2122/A",
    "description": "A path in a grid is called greedy if it starts at the top-left cell and moves only to the right or downward, always moving to its neighbor with the greater value (or either if the values are equal).The value of a path is the sum of the values of the cells it visits, including the start and end.Does there exist an $$$n \\times m$$$ grid of nonnegative integers such that no greedy path achieves the maximum value among all down/right paths?"
  },
  {
    "title": "Ice Baby",
    "url": "https://codeforces.com/problemset/problem/2121/H",
    "description": "The longest non-decreasing subsequence of an array of integers $$$a_1, a_2, \\ldots, a_n$$$ is the longest sequence of indices $$$1 \\leq i_1 < i_2 < \\ldots < i_k \\leq n$$$ such that $$$a_{i_1} \\leq a_{i_2} \\leq \\ldots \\leq a_{i_k}$$$. The length of the sequence is defined as the number of elements in the sequence. For example, the length of the longest non-decreasing subsequence of the array $$$a = [3, 1, 4, 1, 2]$$$ is $$$3$$$.You are given two arrays of integers $$$l_1, l_2, \\ldots, l_n$$$ and $$$r_1, r_2, \\ldots, r_n$$$. For each $$$1 \\le k \\le n$$$, solve the following problem: Consider all arrays of integers $$$a$$$ of length $$$k$$$, such that for each $$$1 \\leq i \\leq k$$$, it holds that $$$l_i \\leq a_i \\leq r_i$$$. Find the maximum length of the longest non-decreasing subsequence among all such arrays."
  },
  {
    "title": "Gangsta",
    "url": "https://codeforces.com/problemset/problem/2121/G",
    "description": "You are given a binary string $$$s_1s_2 \\ldots s_n$$$ of length $$$n$$$. A string $$$s$$$ is called binary if it consists only of zeros and ones.For a string $$$p$$$, we define the function $$$f(p)$$$ as the maximum number of occurrences of any character in the string $$$p$$$. For example, $$$f(00110) = 3$$$, $$$f(01) = 1$$$.You need to find the sum $$$f(s_ls_{l+1} \\ldots s_r)$$$ for all pairs $$$1 \\leq l \\leq r \\leq n$$$."
  },
  {
    "title": "Yamakasi",
    "url": "https://codeforces.com/problemset/problem/2121/F",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$ and two integers $$$s$$$ and $$$x$$$. Count the number of subsegments of the array whose sum of elements equals $$$s$$$ and whose maximum value equals $$$x$$$.More formally, count the number of pairs $$$1 \\leq l \\leq r \\leq n$$$ such that: $$$a_l + a_{l + 1} + \\ldots + a_r = s$$$.  $$$\\max(a_l, a_{l + 1}, \\ldots, a_r) = x$$$. "
  },
  {
    "title": "Sponsor of Your Problems",
    "url": "https://codeforces.com/problemset/problem/2121/E",
    "description": "For two integers $$$a$$$ and $$$b$$$, we define $$$f(a, b)$$$ as the number of positions in the decimal representation of the numbers $$$a$$$ and $$$b$$$ where their digits are the same. For example, $$$f(12, 21) = 0$$$, $$$f(31, 37) = 1$$$, $$$f(19891, 18981) = 2$$$, $$$f(54321, 24361) = 3$$$.You are given two integers $$$l$$$ and $$$r$$$ of the same length in decimal representation. Consider all integers $$$l \\leq x \\leq r$$$. Your task is to find the minimum value of $$$f(l, x) + f(x, r)$$$."
  },
  {
    "title": "1709",
    "url": "https://codeforces.com/problemset/problem/2121/D",
    "description": "You are given two arrays of integers $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$. It is guaranteed that each integer from $$$1$$$ to $$$2 \\cdot n$$$ appears in exactly one of the arrays.You need to perform a certain number of operations (possibly zero) so that both of the following conditions are satisfied: For each $$$1 \\leq i < n$$$, it holds that $$$a_i < a_{i + 1}$$$ and $$$b_i < b_{i + 1}$$$.  For each $$$1 \\leq i \\leq n$$$, it holds that $$$a_i < b_i$$$. During each operation, you can perform exactly one of the following three actions: Choose an index $$$1 \\leq i < n$$$ and swap the values $$$a_i$$$ and $$$a_{i + 1}$$$.  Choose an index $$$1 \\leq i < n$$$ and swap the values $$$b_i$$$ and $$$b_{i + 1}$$$. Choose an index $$$1 \\leq i \\leq n$$$ and swap the values $$$a_i$$$ and $$$b_i$$$.You do not need to minimize the number of operations, but the total number must not exceed $$$1709$$$. Find any sequence of operations that satisfies both conditions."
  },
  {
    "title": "Those Who Are With Us",
    "url": "https://codeforces.com/problemset/problem/2121/C",
    "description": "You are given a matrix of integers with $$$n$$$ rows and $$$m$$$ columns. The cell at the intersection of the $$$i$$$-th row and the $$$j$$$-th column contains the number $$$a_{ij}$$$.You can perform the following operation exactly once: Choose two numbers $$$1 \\leq r \\leq n$$$ and $$$1 \\leq c \\leq m$$$. For all cells $$$(i, j)$$$ in the matrix such that $$$i = r$$$ or $$$j = c$$$, decrease $$$a_{ij}$$$ by one.You need to find the minimal possible maximum value in the matrix $$$a$$$ after performing exactly one such operation."
  },
  {
    "title": "Above the Clouds",
    "url": "https://codeforces.com/problemset/problem/2121/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$, consisting of lowercase letters of the Latin alphabet. Determine whether there exist three non-empty strings $$$a$$$, $$$b$$$, and $$$c$$$ such that: $$$a + b + c = s$$$, meaning the concatenation$$$^{\\text{∗}}$$$ of strings $$$a$$$, $$$b$$$, and $$$c$$$ equals $$$s$$$. The string $$$b$$$ is a substring$$$^{\\text{†}}$$$ of the string $$$a + c$$$, which is the concatenation of strings $$$a$$$ and $$$c$$$. $$$^{\\text{∗}}$$$Concatenation of strings $$$a$$$ and $$$b$$$ is defined as the string $$$a + b = a_1a_2 \\ldots a_pb_1b_2 \\ldots b_q$$$, where $$$p$$$ and $$$q$$$ are the lengths of strings $$$a$$$ and $$$b$$$, respectively. For example, the concatenation of the strings \"code\" and \"forces\" is \"codeforces\". $$$^{\\text{†}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. "
  },
  {
    "title": "Letter Home",
    "url": "https://codeforces.com/problemset/problem/2121/A",
    "description": "You are given an array of distinct integers $$$x_1, x_2, \\ldots, x_n$$$ and an integer $$$s$$$. Initially, you are at position $$$pos = s$$$ on the $$$X$$$ axis. In one step, you can perform exactly one of the following two actions: Move from position $$$pos$$$ to position $$$pos + 1$$$.  Move from position $$$pos$$$ to position $$$pos - 1$$$. A sequence of steps will be considered successful if, during the entire journey, you visit each position $$$x_i$$$ on the $$$X$$$ axis at least once. Note that the initial position $$$pos = s$$$ is also considered visited. Your task is to determine the minimum number of steps in any successful sequence of steps."
  },
  {
    "title": "Eulerian Line Graph",
    "url": "https://codeforces.com/problemset/problem/2120/G",
    "description": " Aryan loves graph theory more than anything. Well, no, he likes to flex his research paper on line graphs to everyone more. To start a conversation with you, he decides to give you a problem on line graphs. In the mathematical discipline of graph theory, the line graph of a simple undirected graph $$$G$$$ is another simple undirected graph $$$L(G)$$$ that represents the adjacency between every two edges in $$$G$$$.Precisely speaking, for an undirected graph $$$G$$$ without self-loops or multiple edges, its line graph $$$L(G)$$$ is a graph such that  Each vertex of $$$L(G)$$$ represents an edge of $$$G$$$.  Two vertices of $$$L(G)$$$ are adjacent if and only if their corresponding edges share a common endpoint in $$$G$$$.   Also, $$$L^0(G)=G$$$ and $$$L^k(G)=L(L^{k-1}(G))$$$ for $$$k\\geq 1$$$. An Euler trail is a sequence of edges that visits every edge of the graph exactly once. This trail can be either a path (starting and ending at different vertices) or a cycle (starting and ending at the same vertex). Vertices may be revisited during the trail, but each edge must be used exactly once.Aryan gives you a simple connected graph $$$G$$$ with $$$n$$$ vertices and $$$m$$$ edges and an integer $$$k$$$, and it is guaranteed that $$$G$$$ has an Euler trail and it is not a path graph$$$^{\\text{∗}}$$$. He asks you to determine if $$$L^k(G)$$$ has an Euler trail. $$$^{\\text{∗}}$$$A path graph is a tree where every vertex is connected to atmost two other vertices."
  },
  {
    "title": "Superb Graphs",
    "url": "https://codeforces.com/problemset/problem/2120/F",
    "description": " As we all know, Aryan is a funny guy. He decides to create fun graphs. For a graph $$$G$$$, he defines fun graph $$$G'$$$ of $$$G$$$ as follows:  Every vertex $$$v'$$$ of $$$G'$$$ maps to a non-empty independent set$$$^{\\text{∗}}$$$ or clique$$$^{\\text{†}}$$$ in $$$G$$$.  The sets of vertices of $$$G$$$ that the vertices of $$$G'$$$ map to are pairwise disjoint and combined cover all the vertices of $$$G$$$, i.e., the sets of vertices of $$$G$$$ mapped by vertices of $$$G'$$$ form a partition of the vertex set of $$$G$$$.  If an edge connects two vertices $$$v_1'$$$ and $$$v_2'$$$ in $$$G'$$$, then there is an edge between every vertex of $$$G$$$ in the set mapped to $$$v_1'$$$ and every vertex of $$$G$$$ in the set mapped to $$$v_2'$$$.  If an edge does not connect two vertices $$$v_1'$$$ and $$$v_2'$$$ in $$$G'$$$, then there is not an edge between any vertex of $$$G$$$ in the set mapped to $$$v_1'$$$ and any vertex of $$$G$$$ in the set mapped to $$$v_2'$$$. As we all know again, Harshith is a superb guy. He decides to use fun graphs to create his own superb graphs. For a graph $$$G$$$, a fun graph $$$G' '$$$ is called a superb graph of $$$G$$$ if $$$G' '$$$ has the minimum number of vertices among all possible fun graphs of $$$G$$$.Aryan gives Harshith $$$k$$$ simple undirected graphs$$$^{\\text{‡}}$$$ $$$G_1, G_2,\\ldots,G_k$$$, all on the same vertex set $$$V$$$. Harshith then wonders if there exist $$$k$$$ other graphs $$$H_1, H_2,\\ldots,H_k$$$, all on some other vertex set $$$V'$$$ such that:  $$$G_i$$$ is a superb graph of $$$H_i$$$ for all $$$i\\in \\{1,2,\\ldots,k\\}$$$.  If a vertex $$$v\\in V$$$ maps to an independent set of size greater than $$$1$$$ in one $$$G_i, H_i$$$ ($$$1\\leq i\\leq k$$$) pair, then there exists no pair $$$G_j, H_j$$$ ($$$1\\leq j\\leq k, j\\neq i$$$) where $$$v$$$ maps to a clique of size greater than $$$1$$$. Help Harshith solve his wonder.$$$^{\\text{∗}}$$$For a graph $$$G$$$, a subset $$$S$$$ of vertices is called an independent set if no two vertices of $$$S$$$ are connected with an edge.$$$^{\\text{†}}$$$For a graph $$$G$$$, a subset $$$S$$$ of vertices is called a clique if every vertex of $$$S$$$ is connected to every other vertex of $$$S$$$ with an edge.$$$^{\\text{‡}}$$$A graph is a simple undirected graph if its edges are undirected and there are no self-loops or multiple edges between the same pair of vertices."
  },
  {
    "title": "Lanes of Cars",
    "url": "https://codeforces.com/problemset/problem/2120/E",
    "description": "Harshith is the president of TollClub. He tasks his subordinate Aryan to oversee a toll plaza with $$$n$$$ lanes. Initially, the $$$i$$$-th lane has $$$a_i$$$ cars waiting in a queue. Exactly one car from the front of each lane passes through the toll every second.The angriness of a car is defined as the number of seconds it had to wait before passing through the toll. Consider it takes 1 sec for each car to pass the toll, i.e., the first car in a lane has angriness $$$1$$$, the second car has angriness $$$2$$$, and so on.To reduce congestion and frustration, cars are allowed to switch lanes. A car can instantly move to the back of any other lane at any time. However, changing lanes increases its angriness by an additional $$$k$$$ units due to the confusion caused by the lane change.Harshith, being the awesome person he is, wants to help the drivers by minimising the total angriness of all cars. He asks Aryan to do so or get fired. Aryan is allowed to change lanes of any car anytime (possibly zero), but his goal is to find the minimum possible total angriness if the lane changes are done optimally. Help Aryan retain his job by determining the minimum angriness he can achieve."
  },
  {
    "title": "Matrix game",
    "url": "https://codeforces.com/problemset/problem/2120/D",
    "description": "Aryan and Harshith play a game. They both start with three integers $$$a$$$, $$$b$$$, and $$$k$$$. Aryan then gives Harshith two integers $$$n$$$ and $$$m$$$. Harshith then gives Aryan a matrix $$$X$$$ with $$$n$$$ rows and $$$m$$$ columns, such that each of the elements of $$$X$$$ is between $$$1$$$ and $$$k$$$(inclusive). After that, Aryan wins if he can find a submatrix$$$^{\\text{∗}}$$$ $$$Y$$$ of $$$X$$$ with $$$a$$$ rows and $$$b$$$ columns such that all elements of $$$Y$$$ are equal.For example, when $$$a=2, b=2, k=6, n=3$$$ and $$$m=3$$$, if Harshith gives Aryan the matrix below, it is a win for Aryan as it has a submatrix of size $$$2\\times 2$$$ with all elements equal to $$$1$$$ as shown below.  Example of a matrix where Aryan wins Aryan gives you the values of $$$a$$$, $$$b$$$, and $$$k$$$. He asks you to find the lexicographically minimum tuple $$$(n,m)$$$ that he should give to Harshith such that Aryan always wins. Help Aryan win the game. Assume that Harshith plays optimally. The values of $$$n$$$ and $$$m$$$ can be large, so output them modulo $$$10^9+7$$$. A tuple $$$(n_1, m_1)$$$ is said to be lexicographically smaller than $$$(n_2, m_2)$$$ if either $$$n_1<n_2$$$ or $$$n_1=n_2$$$ and $$$m_1<m_2$$$.$$$^{\\text{∗}}$$$A submatrix of a matrix is obtained by removing some rows and/or columns from the original matrix."
  },
  {
    "title": "Divine Tree",
    "url": "https://codeforces.com/problemset/problem/2120/C",
    "description": "  Harshith attained enlightenment in Competitive Programming by training under a Divine Tree. A divine tree is a rooted tree$$$^{\\text{∗}}$$$ with $$$n$$$ nodes, labelled from $$$1$$$ to $$$n$$$. The divineness of a node $$$v$$$, denoted $$$d(v)$$$, is defined as the smallest node label on the unique simple path from the root to node $$$v$$$.Aryan, being a hungry Competitive Programmer, asked Harshith to pass on the knowledge. Harshith agreed on the condition that Aryan would be given two positive integers $$$n$$$ and $$$m$$$, and he had to construct a divine tree with $$$n$$$ nodes such that the total divineness of the tree is $$$m$$$, i.e., $$$\\displaystyle\\sum\\limits_{i=1}^n d(i)=m$$$. If no such tree exists, Aryan must report that it is impossible.Desperate for knowledge, Aryan turned to you for help in completing this task. As a good friend of his, help him solve the task.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles.  A rooted tree is a tree where one vertex is special and called the root. "
  },
  {
    "title": "Square Pool",
    "url": "https://codeforces.com/problemset/problem/2120/B",
    "description": "Aryan and Harshith are playing pool in universe AX120 on a fixed square pool table of side $$$s$$$ with pockets at its $$$4$$$ corners. The corners are situated at $$$(0,0)$$$, $$$(0,s)$$$, $$$(s,0)$$$, and $$$(s,s)$$$. In this game variation, $$$n$$$ identical balls are placed on the table with integral coordinates such that no ball lies on the edge or corner of the table. Then, they are all simultaneously shot at $$$10^{100}$$$ units/sec speed (only at $$$45$$$ degrees with the axes).In universe AX120, balls and pockets are almost point-sized, and the collisions are elastic, i.e., the ball, on hitting any surface, bounces off at the same angle and with the same speed.  Harshith shot the balls, and he provided Aryan with the balls' positions and the angles at which he shot them. Help Aryan determine the number of balls potted into the pockets by Harshith.It is guaranteed that multiple collisions do not occur at the same moment and position."
  },
  {
    "title": "Square of Rectangles",
    "url": "https://codeforces.com/problemset/problem/2120/A",
    "description": "Aryan is an ardent lover of squares but a hater of rectangles (Yes, he knows all squares are rectangles). But Harshith likes to mess with Aryan. Harshith gives Aryan three rectangles of sizes $$$l_1\\times b_1$$$, $$$l_2\\times b_2$$$, and $$$l_3\\times b_3$$$ such that $$$l_3\\leq l_2\\leq l_1$$$ and $$$b_3\\leq b_2\\leq b_1$$$. Aryan, in order to defeat Harshith, decides to arrange these three rectangles to form a square such that no two rectangles overlap and the rectangles are aligned along edges. Rotating rectangles is not allowed. Help Aryan determine if he can defeat Harshith."
  },
  {
    "title": "Volcanic Eruptions",
    "url": "https://codeforces.com/problemset/problem/2119/F",
    "description": "There is an undirected tree with root $$$1$$$ where each vertex has a weight $$$w_i\\in\\{1,-1\\}$$$.A volcano at the root erupts at time $$$0$$$. At time $$$t$$$, lava floods all vertices whose distance from the root is at most $$$t$$$, where the distance is the number of edges in the shortest path between the two vertices.At time $$$0$$$, you are at vertex $$$st$$$ with life value $$$S$$$, initially $$$S=1$$$. Starting at time $$$0$$$ (including time $$$0$$$), the following events happen in order at each time stamp:   Let $$$u$$$ be the vertex you are currently at. Your life value increases by $$$w_u$$$, i.e., $$$S\\gets S+w_u$$$.  If $$$S=0$$$ or if vertex $$$u$$$ is flooded with lava at this time, you die immediately.  You must move to an adjacent vertex (includes father and sons; staying in place is not allowed). You arrive at the chosen vertex at the next time stamp. Find the maximum number of moves you can make before you die."
  },
  {
    "title": "And Constraint",
    "url": "https://codeforces.com/problemset/problem/2119/E",
    "description": "wowaka & Hatsune Miku - Tosenbo You are given a sequence $$$a$$$ of length $$$n-1$$$ and a sequence $$$b$$$ of length $$$n$$$. You can perform the following operation any number of times (possibly zero):  choose an index $$$1 \\le i \\le n$$$ and increment $$$b_i$$$ by $$$1$$$ (i.e., set $$$b_i \\leftarrow b_i + 1$$$). Your goal is to perform the minimum number of operations such that for every $$$1 \\le i \\le n-1$$$, the condition $$$b_i \\, \\& \\, b_{i+1} = a_i$$$ holds, where $$$\\&$$$ denotes the bitwise AND operation. If it is impossible to satisfy the condition, report it as well."
  },
  {
    "title": "Token Removing",
    "url": "https://codeforces.com/problemset/problem/2119/D",
    "description": "r-906 & Hatsune Miku - All I Can See Is You Define a sequence of integers $$$a$$$ valid if and only if $$$\\forall 1 \\le i \\le n, 0 \\le a_i \\le i$$$.Define the weight $$$f(a)$$$ of a valid sequence $$$a$$$ of length $$$n$$$:  Initially, a token is placed at each integer point in the closed segment $$$[1, n]$$$ on the number axis.  Perform $$$n$$$ operations in sequence. During the $$$i$$$-th operation, if $$$a_i \\ne 0$$$, remove a token in the closed segment $$$[a_i, i]$$$ that has not been removed; otherwise, do nothing.  $$$f(a)$$$ is the number of ways to remove tokens. Two ways are considered different if there exists a $$$t$$$ such that the positions of the tokens removed by the two ways are different at the $$$t$$$-th operation. For example, $$$f([0, 2, 1]) = 2$$$, because we can remove tokens on $$$2, 1$$$ or $$$2, 3$$$ in sequence.JT gives you two integers $$$n, m$$$ and asks you to find the sum of the weights over all $$$(n + 1)!$$$ valid sequences of length $$$n$$$. Since the answer may be too large, print it modulo $$$m$$$."
  },
  {
    "title": "A Good Problem",
    "url": "https://codeforces.com/problemset/problem/2119/C",
    "description": " Juggernaut. - Lost Dream feat.星名はる You are given four positive integers $$$n, l, r, k$$$. You need to find the lexicographically smallest$$$^{\\text{∗}}$$$ array $$$a$$$ of length $$$n$$$, consisting of integers, such that:  For every $$$1 \\leq i \\leq n$$$, $$$l \\leq a_i \\leq r$$$.  $$$a_1 \\, \\& \\, a_2 \\, \\& \\, \\ldots \\, \\& \\, a_n = a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_n$$$, where $$$\\&$$$ denotes the bitwise AND operation and $$$\\oplus$$$ denotes the bitwise XOR operation. If no such array exists, output $$$-1$$$. Otherwise, since the entire array might be too large to output, output $$$a_k$$$ only.$$$^{\\text{∗}}$$$An array $$$a$$$ is lexicographically smaller than an array $$$b$$$ if and only if one of the following holds:   $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$; or  in the first position where $$$a$$$ and $$$b$$$ differ, the array $$$a$$$ has a smaller element than the corresponding element in $$$b$$$.  "
  },
  {
    "title": "Line Segments",
    "url": "https://codeforces.com/problemset/problem/2119/B",
    "description": "PIKASONIC - Lost My Mind (feat.nakotanmaru) You are given two points $$$(p_x,p_y)$$$ and $$$(q_x,q_y)$$$ on a Euclidean plane.You start at the starting point $$$(p_x,p_y)$$$ and will perform $$$n$$$ operations. In the $$$i$$$-th operation, you must choose any point such that the Euclidean distance$$$^{\\text{∗}}$$$ between your current position and the point is exactly $$$a_i$$$, and then move to that point.Determine whether it is possible to reach the terminal point $$$(q_x,q_y)$$$ after performing all operations.$$$^{\\text{∗}}$$$The Euclidean distance between $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ is $$$\\sqrt{(x_1 - x_2)^2 + (y_1 - y_2)^2}$$$"
  },
  {
    "title": "Add or XOR",
    "url": "https://codeforces.com/problemset/problem/2119/A",
    "description": "r-906 & IA AI - Psychologic Disco You are given two non-negative integers $$$a, b$$$. You can apply two types of operations on $$$a$$$ any number of times and in any order:  $$$a \\gets a + 1$$$. The cost of this operation is $$$x$$$;  $$$a \\gets a \\oplus 1$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. The cost of this operation is $$$y$$$. Now you are asked to make $$$a = b$$$. If it's possible, output the minimum cost; otherwise, report it."
  },
  {
    "title": "Shifts and Swaps",
    "url": "https://codeforces.com/problemset/problem/2118/F",
    "description": "You are given arrays $$$a$$$ and $$$b$$$ of length $$$n$$$ and an integer $$$m$$$. The arrays only contain integers from $$$1$$$ to $$$m$$$, and both arrays contain all integers from $$$1$$$ to $$$m$$$.You may repeatedly perform either of the following operations on $$$a$$$:   cyclic shift$$$^{\\text{∗}}$$$ the array to the left  swap two neighboring elements if their difference is at least $$$2$$$. Is it possible to transform the first array into the second?$$$^{\\text{∗}}$$$A left cyclic shift of a zero-indexed array $$$p$$$ of length $$$n$$$ is an array $$$q$$$ such that $$$q_i = p_{(i + 1) \\bmod n}$$$ for all $$$0 \\le i < n$$$."
  },
  {
    "title": "Grid Coloring",
    "url": "https://codeforces.com/problemset/problem/2118/E",
    "description": "There is a $$$n\\times m$$$ grid with each cell initially white. You have to color all the cells one-by-one. After you color a cell, all the colored cells furthest from it receive a penalty. Find a coloring order, where no cell has more than $$$3$$$ penalties.Note that $$$n$$$ and $$$m$$$ are both odd.The distance metric used is the chessboard distance while we decide ties between cells with Manhattan distance. Formally, a cell $$$(x_2, y_2)$$$ is further away than $$$(x_3, y_3)$$$ from a cell $$$(x_1, y_1)$$$ if one of the following holds:   $$$\\max\\big(\\lvert x_1 - x_2 \\rvert, \\lvert y_1 - y_2 \\rvert\\big)>\\max\\big(\\lvert x_1 - x_3 \\rvert, \\lvert y_1 - y_3 \\rvert\\big)$$$  $$$\\max\\big(\\lvert x_1 - x_2 \\rvert, \\lvert y_1 - y_2 \\rvert\\big)=\\max\\big(\\lvert x_1 - x_3 \\rvert, \\lvert y_1 - y_3 \\rvert\\big)$$$ and $$$\\lvert x_1 - x_2 \\rvert + \\lvert y_1 - y_2 \\rvert>\\lvert x_1 - x_3 \\rvert + \\lvert y_1 - y_3 \\rvert$$$ It can be proven that at least one solution always exists.    Example showing penalty changes after coloring the center of a $$$5 \\times 5$$$ grid. The numbers indicate the penalty of the cells.  "
  },
  {
    "title": "Red Light, Green Light (Hard version)",
    "url": "https://codeforces.com/problemset/problem/2118/D2",
    "description": "This is the hard version of the problem. The only difference is the constraint on $$$k$$$ and the total sum of $$$n$$$ and $$$q$$$ across all test cases. You can make hacks only if both versions of the problem are solved.You are given a strip of length $$$10^{15}$$$ and a constant $$$k$$$. There are exactly $$$n$$$ cells that contain a traffic light; each has a position $$$p_i$$$ and an initial delay $$$d_i$$$ for which $$$d_i < k$$$. The $$$i$$$-th traffic light works the following way:   it shows red at the $$$l \\cdot k + d_i$$$-th second, where $$$l$$$ is an integer,  it shows green otherwise. At second $$$0$$$, you are initially positioned at some cell on the strip, facing the positive direction. At each second, you perform the following actions in order:   If the current cell contains a red traffic light, you turn around.  Move one cell in the direction you are currently facing. You are given $$$q$$$ different starting positions. For each one, determine whether you will eventually leave the strip within $$$10^{100}$$$ seconds."
  },
  {
    "title": "Red Light, Green Light (Easy version)",
    "url": "https://codeforces.com/problemset/problem/2118/D1",
    "description": "This is the easy version of the problem. The only difference is the constraint on $$$k$$$ and the total sum of $$$n$$$ and $$$q$$$ across all test cases. You can make hacks only if both versions of the problem are solved.You are given a strip of length $$$10^{15}$$$ and a constant $$$k$$$. There are exactly $$$n$$$ cells that contain a traffic light; each has a position $$$p_i$$$ and an initial delay $$$d_i$$$ for which $$$d_i < k$$$. The $$$i$$$-th traffic light works the following way:   it shows red at the $$$l \\cdot k + d_i$$$-th second, where $$$l$$$ is an integer,  it shows green otherwise. At second $$$0$$$, you are initially positioned at some cell on the strip, facing the positive direction. At each second, you perform the following actions in order:   If the current cell contains a red traffic light, you turn around.  Move one cell in the direction you are currently facing. You are given $$$q$$$ different starting positions. For each one, determine whether you will eventually leave the strip within $$$10^{100}$$$ seconds."
  },
  {
    "title": "Make It Beautiful",
    "url": "https://codeforces.com/problemset/problem/2118/C",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers. We define the $$$\\text{beauty}$$$ of a number $$$x$$$ to be the number of $$$1$$$ bits in its binary representation. We define the beauty of an array to be the sum of beauties of the numbers it contains. In one operation, you can select an index $$$i$$$ $$$(1 \\le i \\le n)$$$ and increase $$$a_i$$$ by $$$1$$$. Find the maximum beauty of the array after doing at most $$$k$$$ operations."
  },
  {
    "title": "Make It Permutation",
    "url": "https://codeforces.com/problemset/problem/2118/B",
    "description": "There is a matrix $$$A$$$ of size $$$n\\times n$$$ where $$$A_{i,j}=j$$$ for all $$$1 \\le i,j \\le n$$$. In one operation, you can select a row and reverse any subarray$$$^{\\text{∗}}$$$ in it. Find a sequence of at most $$$2n$$$ operations such that every column will contain a permutation$$$^{\\text{†}}$$$ of length $$$n$$$.It can be proven that the construction is always possible. If there are multiple solutions, output any of them.$$$^{\\text{∗}}$$$An array $$$a$$$ is a subarray of an array $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deleting zero or more elements from the beginning and zero or more elements from the end.$$$^{\\text{†}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Equal Subsequences",
    "url": "https://codeforces.com/problemset/problem/2118/A",
    "description": "We call a bitstring$$$^{\\text{∗}}$$$ perfect if it has the same number of $$$\\mathtt{101}$$$ and $$$\\mathtt{010}$$$ subsequences$$$^{\\text{†}}$$$. Construct a perfect bitstring of length $$$n$$$ where the number of $$$\\mathtt{1}$$$ characters it contains is exactly $$$k$$$.It can be proven that the construction is always possible. If there are multiple solutions, output any of them.$$$^{\\text{∗}}$$$A bitstring is a string consisting only of the characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$.$$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsequence of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly zero or all) characters."
  },
  {
    "title": "Incessant Rain",
    "url": "https://codeforces.com/problemset/problem/2117/H",
    "description": "Note the unusual memory limit.Silver Wolf gives you an array $$$a$$$ of length $$$n$$$ and $$$q$$$ queries. In each query, she replaces an element in $$$a$$$. After each query, she asks you to output the maximum integer $$$k$$$ such that there exists an integer $$$x$$$ such that it is the $$$k$$$-majority of a subarray$$$^{\\text{∗}}$$$ of $$$a$$$.An integer $$$y$$$ is the $$$k$$$-majority of array $$$b$$$ if $$$y$$$ appears at least $$$\\lfloor \\frac{|b|+1}{2} \\rfloor +k$$$ times in $$$b$$$, where $$$|b|$$$ represents the length of $$$b$$$. Note that $$$b$$$ may not necessarily have a $$$k$$$-majority.$$$^{\\text{∗}}$$$An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end."
  },
  {
    "title": "Omg Graph",
    "url": "https://codeforces.com/problemset/problem/2117/G",
    "description": "You are given an undirected connected weighted graph. Define the cost of a path of length $$$k$$$ to be as follows:  Let the weights of all the edges on the path be $$$w_1,...,w_k$$$.  The cost of the path is $$$(\\min_{i = 1}^{k}{w_i}) + (\\max_{i=1}^{k}{w_i})$$$, or in other words, the maximum edge weight + the minimum edge weight. Across all paths from vertex $$$1$$$ to $$$n$$$, report the cost of the path with minimum cost. Note that the path is not necessarily simple."
  },
  {
    "title": "Wildflower",
    "url": "https://codeforces.com/problemset/problem/2117/F",
    "description": "Yousef has a rooted tree$$$^{\\text{∗}}$$$ consisting of exactly $$$n$$$ vertices, which is rooted at vertex $$$1$$$. You would like to give Yousef an array $$$a$$$ of length $$$n$$$, where each $$$a_i$$$ $$$(1 \\le i \\le n)$$$ can either be $$$1$$$ or $$$2$$$.Let $$$s_u$$$ denote the sum of $$$a_v$$$ where vertex $$$v$$$ is in the subtree$$$^{\\text{†}}$$$ of vertex $$$u$$$. Yousef considers the tree special if all the values in $$$s$$$ are pairwise distinct (i.e., all subtree sums are unique).Your task is to help Yousef count the number of different arrays $$$a$$$ that result in the tree being special. Two arrays $$$b$$$ and $$$c$$$ are different if there exists an index $$$i$$$ such that $$$b_i \\neq c_i$$$.As the result can be very large, you should print it modulo $$$10^9 + 7$$$.$$$^{\\text{∗}}$$$A tree is a connected undirected graph with $$$n - 1$$$ edges.$$$^{\\text{†}}$$$The subtree of a vertex $$$v$$$ is the set of all vertices that pass through $$$v$$$ on a simple path to the root. Note that vertex $$$v$$$ is also included in the set."
  },
  {
    "title": "Lost Soul",
    "url": "https://codeforces.com/problemset/problem/2117/E",
    "description": "You are given two integer arrays $$$a$$$ and $$$b$$$, each of length $$$n$$$.You may perform the following operation any number of times:   Choose an index $$$i$$$ $$$(1 \\le i \\le n - 1)$$$, and set $$$a_i := b_{i + 1}$$$, or set $$$b_i := a_{i + 1}$$$. Before performing any operations, you are allowed to choose an index $$$i$$$ $$$(1 \\le i \\le n)$$$ and remove both $$$a_i$$$ and $$$b_i$$$ from the arrays. This removal can be done at most once.Let the number of matches between two arrays $$$c$$$ and $$$d$$$ of length $$$m$$$ be the number of positions $$$j$$$ $$$(1 \\le j \\le m)$$$ such that $$$c_j = d_j$$$.Your task is to compute the maximum number of matches you can achieve."
  },
  {
    "title": "Retaliation",
    "url": "https://codeforces.com/problemset/problem/2117/D",
    "description": "Yousef wants to explode an array $$$a_1, a_2, \\dots, a_n$$$. An array gets exploded when all of its elements become equal to zero.In one operation, Yousef can do exactly one of the following:   For every index $$$i$$$ in $$$a$$$, decrease $$$a_i$$$ by $$$i$$$.  For every index $$$i$$$ in $$$a$$$, decrease $$$a_i$$$ by $$$n - i + 1$$$. Your task is to help Yousef determine if it is possible to explode the array using any number of operations."
  },
  {
    "title": "Cool Partition",
    "url": "https://codeforces.com/problemset/problem/2117/C",
    "description": "Yousef has an array $$$a$$$ of size $$$n$$$. He wants to partition the array into one or more contiguous segments such that each element $$$a_i$$$ belongs to exactly one segment.A partition is called cool if, for every segment $$$b_j$$$, all elements in $$$b_j$$$ also appear in $$$b_{j + 1}$$$ (if it exists). That is, every element in a segment must also be present in the segment following it.For example, if $$$a = [1, 2, 2, 3, 1, 5]$$$, a cool partition Yousef can make is $$$b_1 = [1, 2]$$$, $$$b_2 = [2, 3, 1, 5]$$$. This is a cool partition because every element in $$$b_1$$$ (which are $$$1$$$ and $$$2$$$) also appears in $$$b_2$$$. In contrast, $$$b_1 = [1, 2, 2]$$$, $$$b_2 = [3, 1, 5]$$$ is not a cool partition, since $$$2$$$ appears in $$$b_1$$$ but not in $$$b_2$$$.Note that after partitioning the array, you do not change the order of the segments. Also, note that if an element appears several times in some segment $$$b_j$$$, it only needs to appear at least once in $$$b_{j + 1}$$$.Your task is to help Yousef by finding the maximum number of segments that make a cool partition."
  },
  {
    "title": "Shrink",
    "url": "https://codeforces.com/problemset/problem/2117/B",
    "description": "A shrink operation on an array $$$a$$$ of size $$$m$$$ is defined as follows:  Choose an index $$$i$$$ ($$$2 \\le i \\le m - 1$$$) such that $$$a_i \\gt a_{i - 1}$$$ and $$$a_i \\gt a_{i + 1}$$$.  Remove $$$a_i$$$ from the array. Define the score of a permutation$$$^{\\text{∗}}$$$ $$$p$$$ as the maximum number of times that you can perform the shrink operation on $$$p$$$.Yousef has given you a single integer $$$n$$$. Construct a permutation $$$p$$$ of length $$$n$$$ with the maximum possible score. If there are multiple answers, you can output any of them.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "False Alarm",
    "url": "https://codeforces.com/problemset/problem/2117/A",
    "description": "Yousef is at the entrance of a long hallway with $$$n$$$ doors in a row, numbered from $$$1$$$ to $$$n$$$. He needs to pass through all the doors from $$$1$$$ to $$$n$$$ in order of numbering and reach the exit (past door $$$n$$$). Each door can be open or closed. If a door is open, Yousef passes through it in $$$1$$$ second. If the door is closed, Yousef can't pass through it.However, Yousef has a special button which he can use at most once at any moment. This button makes all closed doors become open for $$$x$$$ seconds.Your task is to determine if Yousef can pass through all the doors if he can use the button at most once."
  },
  {
    "title": "Gellyfish and Baby's Breath",
    "url": "https://codeforces.com/problemset/problem/2116/B",
    "description": "Flower gives Gellyfish two permutations$$$^{\\text{∗}}$$$ of $$$[0, 1, \\ldots, n-1]$$$: $$$p_0, p_1, \\ldots, p_{n-1}$$$ and $$$q_0, q_1, \\ldots, q_{n-1}$$$.Now Gellyfish wants to calculate an array $$$r_0,r_1,\\ldots,r_{n-1}$$$ through the following method:  For all $$$i$$$ ($$$0 \\leq i \\leq n-1$$$), $$$r_i = \\max\\limits_{j=0}^{i} \\left(2^{p_j} + 2^{q_{i-j}} \\right)$$$ But since Gellyfish is very lazy, you have to help her figure out the elements of $$$r$$$.Since the elements of $$$r$$$ are very large, you are only required to output the elements of $$$r$$$ modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$An array $$$b$$$ is a permutation of an array $$$a$$$ if $$$b$$$ consists of the elements of $$$a$$$ in arbitrary order. For example, $$$[4,2,3,4]$$$ is a permutation of $$$[3,2,4,4]$$$ while $$$[1,2,2]$$$ is not a permutation of $$$[1,2,3]$$$."
  },
  {
    "title": "Gellyfish and Tricolor Pansy",
    "url": "https://codeforces.com/problemset/problem/2116/A",
    "description": "Gellyfish and Flower are playing a game called \"Duel\".Gellyfish has $$$a$$$ HP, while Flower has $$$b$$$ HP.Each of them has a knight. Gellyfish's knight has $$$c$$$ HP, while Flower's knight has $$$d$$$ HP.They will play a game in rounds until one of the players wins. For $$$k = 1, 2, \\ldots$$$ in this order, they will perform the following actions: If $$$k$$$ is odd and Gellyfish's knight is alive:  Gellyfish's knight can attack Flower and reduce $$$b$$$ by $$$1$$$. If $$$b \\leq 0$$$, Gellyfish wins. Or,  Gellyfish's knight can attack Flower's knight and reduce $$$d$$$ by $$$1$$$. If $$$d \\leq 0$$$, Flower's knight dies.  If $$$k$$$ is even and Flower's knight is alive:  Flower's knight can attack Gellyfish and reduce $$$a$$$ by $$$1$$$. If $$$a \\leq 0$$$, Flower wins. Or,  Flower's knight can attack Gellyfish's knight and reduce $$$c$$$ by $$$1$$$. If $$$c \\leq 0$$$, Gellyfish's knight dies. As one of the smartest people in the world, you want to tell them who will win before the game. Assume both players play optimally.It can be proven that the game will never end in a draw. That is, one player has a strategy to end the game in a finite number of moves."
  },
  {
    "title": "Gellyfish and Lycoris Radiata (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2115/F2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version, the time limit and the constraints on $$$n$$$ and $$$q$$$ are higher. You can hack only if you solved all versions of this problem. Gellyfish has an array consisting of $$$n$$$ sets. Initially, all the sets are empty.Now Gellyfish will do $$$q$$$ operations. Each operation contains one modification operation and one query operation, for the $$$i$$$-th ($$$1 \\leq i \\leq q$$$) operation:First, there will be a modification operation, which is one of the following:  Insert operation: You are given an integer $$$r$$$. For the $$$1$$$-th to $$$r$$$-th sets, insert element $$$i$$$. Note that the element inserted here is $$$i$$$, the index of the operation, not the index of the set.  Reverse operation: You are given an integer $$$r$$$. Reverse the $$$1$$$-th to $$$r$$$-th sets.  Delete operation: You are given an integer $$$x$$$. Delete element $$$x$$$ from all sets that contain $$$x$$$. Followed by a query operation:  Query operation: You are given an integer $$$p$$$. Output the smallest element in the $$$p$$$-th set (If the $$$p$$$-th set is empty, the answer is considered to be $$$0$$$). Now, Flower needs to provide the answer for each query operation. Please help her!Additional constraint on the problem: Gellyfish will only give the next operation after Flower has answered the previous query operation. That is, you need to solve this problem online. Please refer to the input format for more details."
  },
  {
    "title": "Gellyfish and Lycoris Radiata (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2115/F1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version, the time limit and the constraints on $$$n$$$ and $$$q$$$ are lower. You can hack only if you solved all versions of this problem. Gellyfish has an array consisting of $$$n$$$ sets. Initially, all the sets are empty.Now Gellyfish will do $$$q$$$ operations. Each operation contains one modification operation and one query operation, for the $$$i$$$-th ($$$1 \\leq i \\leq q$$$) operation:First, there will be a modification operation, which is one of the following:  Insert operation: You are given an integer $$$r$$$. For the $$$1$$$-th to $$$r$$$-th sets, insert element $$$i$$$. Note that the element inserted here is $$$i$$$, the index of the operation, not the index of the set.  Reverse operation: You are given an integer $$$r$$$. Reverse the $$$1$$$-th to $$$r$$$-th sets.  Delete operation: You are given an integer $$$x$$$. Delete element $$$x$$$ from all sets that contain $$$x$$$. Followed by a query operation:  Query operation: You are given an integer $$$p$$$. Output the smallest element in the $$$p$$$-th set (If the $$$p$$$-th set is empty, the answer is considered to be $$$0$$$). Now, Flower needs to provide the answer for each query operation. Please help her!Additional constraint on the problem: Gellyfish will only give the next operation after Flower has answered the previous query operation. That is, you need to solve this problem online. Please refer to the input format for more details."
  },
  {
    "title": "Gellyfish and Mayflower",
    "url": "https://codeforces.com/problemset/problem/2115/E",
    "description": "Mayflower by PlumMay, Gellyfish's friend, loves playing a game called \"Inscryption\" which is played on a directed acyclic graph with $$$n$$$ vertices and $$$m$$$ edges. All edges $$$ a \\rightarrow b$$$ satisfy $$$a<b$$$.You start in vertex $$$1$$$ with some coins. You need to move from vertex $$$1$$$ to the vertex where the boss is located along the directed edges, and then fight with the final boss.Each of the $$$n$$$ vertices of the graph contains a Trader who will sell you a card with power $$$w_i$$$ for $$$c_i$$$ coins. You can buy as many cards as you want from each Trader. However, you can only trade with the trader on the $$$i$$$-th vertex if you are currently on the $$$i$$$-th vertex.In order to defeat the boss, you want the sum of the power of your cards to be as large as possible.You will have to answer the following $$$q$$$ queries:  Given integers $$$p$$$ and $$$r$$$. If the final boss is located at vertex $$$p$$$, and you have $$$r$$$ coins in the beginning, what is the maximum sum of the power of your cards when you fight the final boss? Note that you are allowed to trade cards on vertex $$$p$$$. "
  },
  {
    "title": "Gellyfish and Forget-Me-Not",
    "url": "https://codeforces.com/problemset/problem/2115/D",
    "description": " Gellyfish and Flower are playing a game.The game consists of two arrays of $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ and $$$b_1,b_2,\\ldots,b_n$$$, along with a binary string $$$c_1c_2\\ldots c_n$$$ of length $$$n$$$.There is also an integer $$$x$$$ which is initialized to $$$0$$$.The game consists of $$$n$$$ rounds. For $$$i = 1,2,\\ldots,n$$$, the round proceeds as follows:  If $$$c_i = \\mathtt{0}$$$, Gellyfish will be the active player. Otherwise, if $$$c_i = \\mathtt{1}$$$, Flower will be the active player.  The active player will perform exactly one of the following operations:   Set $$$x:=x \\oplus a_i$$$.  Set $$$x:=x \\oplus b_i$$$.  Here, $$$\\oplus$$$ denotes the bitwise XOR operation. Gellyfish wants to minimize the final value of $$$ x $$$ after $$$ n $$$ rounds, while Flower wants to maximize it. Find the final value of $$$ x $$$ after all $$$ n $$$ rounds if both players play optimally."
  },
  {
    "title": "Gellyfish and Eternal Violet",
    "url": "https://codeforces.com/problemset/problem/2115/C",
    "description": " There are nn monsters, numbered from 11 to nn, in front of Gellyfish. The HP of the ii-th monster is hih_i.Gellyfish doesn't want to kill them, but she wants to keep these monsters from being a threat to her. So she wants to reduce the HP of all the monsters to exactly 11.Now, Gellyfish, with The Sword Sharpened with Tears, is going to attack the monsters for mm rounds. For each round:  The Sword Sharpened with Tears shines with a probability of pp.  Gellyfish can choose whether to attack:   If Gellyfish doesn't attack, nothing happens.  If Gellyfish chooses to attack and The Sword Sharpened with Tears shines, the HP of all the monsters will be reduced by 11.  If Gellyfish chooses to attack and The Sword Sharpened with Tears does not shine, Gellyfish can choose one of the monsters and reduce its HP by 11.  Please note that before Gellyfish decides whether or not to attack, she will know whether the sword shines or not. Also, when the sword shines, Gellyfish can only make attacks on all the monsters and cannot make an attack on only one monster.Now, Gellyfish wants to know what the probability is that she will reach her goal if she makes choices optimally during the battle."
  },
  {
    "title": "Gellyfish and Camellia Japonica",
    "url": "https://codeforces.com/problemset/problem/2115/B",
    "description": "Gellyfish has an array of $$$n$$$ integers $$$c_1, c_2, \\ldots, c_n$$$. In the beginning, $$$c = [a_1, a_2, \\ldots, a_n]$$$.Gellyfish will make $$$q$$$ modifications to $$$c$$$.For $$$i = 1,2,\\ldots,q$$$, Gellyfish is given three integers $$$x_i$$$, $$$y_i$$$, and $$$z_i$$$ between $$$1$$$ and $$$n$$$. Then Gellyfish will set $$$c_{z_i} := \\min(c_{x_i}, c_{y_i})$$$.After the $$$q$$$ modifications, $$$c = [b_1, b_2, \\ldots, b_n]$$$.Now Flower knows the value of $$$b$$$ and the value of the integers $$$x_i$$$, $$$y_i$$$, and $$$z_i$$$ for all $$$1 \\leq i \\leq q$$$, but she doesn't know the value of $$$a$$$.Flower wants to find any possible value of the array $$$a$$$ or report that no such $$$a$$$ exists.If there are multiple possible values of the array $$$a$$$, you may output any of them."
  },
  {
    "title": "Gellyfish and Flaming Peony",
    "url": "https://codeforces.com/problemset/problem/2115/A",
    "description": "Gellyfish hates math problems, but she has to finish her math homework:Gellyfish is given an array of $$$n$$$ positive integers $$$a_1, a_2, \\ldots, a_n$$$.She needs to do the following two-step operation until all elements of $$$a$$$ are equal:  Select two indexes $$$i$$$, $$$j$$$ satisfying $$$1 \\leq i, j \\leq n$$$ and $$$i \\neq j$$$.  Replace $$$a_i$$$ with $$$\\gcd(a_i, a_j)$$$. Now, Gellyfish asks you for the minimum number of operations to achieve her goal.It can be proven that Gellyfish can always achieve her goal."
  },
  {
    "title": "Build an Array",
    "url": "https://codeforces.com/problemset/problem/2114/G",
    "description": "Yesterday, Dima found an empty array and decided to add some integers to it. He can perform the following operation an unlimited number of times:  add any integer to the left or right end of the array.  then, as long as there is a pair of identical adjacent elements in the array, they will be replaced by their sum. It can be shown that there can be at most one such pair in the array at the same time.For example, if the array is $$$[3, 6, 4]$$$ and we add the number $$$3$$$ to the left, the array will first become $$$[3, 3, 6, 4]$$$, then the first two elements will be replaced by $$$6$$$, and the array will become $$$[6, 6, 4]$$$, and then — $$$[12, 4]$$$.After performing the operation exactly $$$k$$$ times, he thinks he has obtained an array $$$a$$$ of length $$$n$$$, but he does not remember which operations he applied. Determine if there exists a sequence of $$$k$$$ operations that could result in the given array $$$a$$$ from an empty array, or determine that it is impossible."
  },
  {
    "title": "Small Operations",
    "url": "https://codeforces.com/problemset/problem/2114/F",
    "description": "Given an integer $$$x$$$ and an integer $$$k$$$. In one operation, you can perform one of two actions:  choose an integer $$$1 \\le a \\le k$$$ and assign $$$x = x \\cdot a$$$;  choose an integer $$$1 \\le a \\le k$$$ and assign $$$x = \\frac{x}{a}$$$, where the value of $$$\\frac{x}{a}$$$ must be an integer. Find the minimum number of operations required to make the number $$$x$$$ equal to $$$y$$$, or determine that it is impossible."
  },
  {
    "title": "Kirei Attacks the Estate",
    "url": "https://codeforces.com/problemset/problem/2114/E",
    "description": "Once, Kirei stealthily infiltrated the trap-filled estate of the Ainzbern family but was discovered by Kiritugu's familiar. Assessing his strength, Kirei decided to retreat. The estate is represented as a tree with $$$n$$$ vertices, with the root at vertex $$$1$$$. Each vertex of the tree has a number $$$a_i$$$ recorded, which represents the danger of vertex $$$i$$$. Recall that a tree is a connected undirected graph without cycles.For a successful retreat, Kirei must compute the threat value for each vertex. The threat of a vertex is equal to the maximum alternating sum along the vertical path starting from that vertex. The alternating sum along the vertical path starting from vertex $$$i$$$ is defined as $$$a_i - a_{p_i} + a_{p_{p_i}} - \\ldots$$$, where $$$p_i$$$ is the parent of vertex $$$i$$$ on the path to the root (to vertex $$$1$$$).For example, in the tree below, vertex $$$4$$$ has the following vertical paths:   $$$[4]$$$ with an alternating sum of $$$a_4 = 6$$$;  $$$[4, 3]$$$ with an alternating sum of $$$a_4 - a_3 = 6 - 2 = 4$$$;  $$$[4, 3, 2]$$$ with an alternating sum of $$$a_4 - a_3 + a_2 = 6 - 2 + 5 = 9$$$;  $$$[4, 3, 2, 1]$$$ with an alternating sum of $$$a_4 - a_3 + a_2 - a_1 = 6 - 2 + 5 - 4 = 5$$$.   The dangers of the vertices are indicated in red. Help Kirei compute the threat values for all vertices and escape the estate."
  },
  {
    "title": "Come a Little Closer",
    "url": "https://codeforces.com/problemset/problem/2114/D",
    "description": "The game field is a matrix of size $$$10^9 \\times 10^9$$$, with a cell at the intersection of the $$$a$$$-th row and the $$$b$$$-th column denoted as ($$$a, b$$$).There are $$$n$$$ monsters on the game field, with the $$$i$$$-th monster located in the cell ($$$x_i, y_i$$$), while the other cells are empty. No more than one monster can occupy a single cell.You can move one monster to any cell on the field that is not occupied by another monster at most once .After that, you must select one rectangle on the field; all monsters within the selected rectangle will be destroyed. You must pay $$$1$$$ coin for each cell in the selected rectangle.Your task is to find the minimum number of coins required to destroy all the monsters."
  },
  {
    "title": "Need More Arrays",
    "url": "https://codeforces.com/problemset/problem/2114/C",
    "description": "Given an array $$$a$$$ and $$$n$$$ integers. It is sorted in non-decreasing order, that is, $$$a_i \\le a_{i + 1}$$$ for all $$$1 \\le i < n$$$.You can remove any number of elements from the array (including the option of not removing any at all) without changing the order of the remaining elements. After the removals, the following will occur:  $$$a_1$$$ is written to a new array; if $$$a_1 + 1 < a_2$$$, then $$$a_2$$$ is written to a new array; otherwise, $$$a_2$$$ is written to the same array as $$$a_1$$$; if $$$a_2 + 1 < a_3$$$, then $$$a_3$$$ is written to a new array; otherwise, $$$a_3$$$ is written to the same array as $$$a_2$$$; $$$\\cdots$$$ For example, if $$$a=[1, 2, 4, 6]$$$, then:  $$$a_1 = 1$$$ is written to the new array, resulting in arrays: $$$[1]$$$;  $$$a_1 + 1 = 2$$$, so $$$a_2 = 2$$$ is added to the existing array, resulting in arrays: $$$[1, 2]$$$;  $$$a_2 + 1 = 3$$$, so $$$a_3 = 4$$$ is written to a new array, resulting in arrays: $$$[1, 2]$$$ and $$$[4]$$$;  $$$a_3 + 1 = 5$$$, so $$$a_4 = 6$$$ is written to a new array, resulting in arrays: $$$[1, 2]$$$, $$$[4]$$$, and $$$[6]$$$. Your task is to remove elements in such a way that the described algorithm creates as many arrays as possible. If you remove all elements from the array, no new arrays will be created."
  },
  {
    "title": "Not Quite a Palindromic String",
    "url": "https://codeforces.com/problemset/problem/2114/B",
    "description": "Vlad found a binary string$$$^{\\text{∗}}$$$ $$$s$$$ of even length $$$n$$$. He considers a pair of indices ($$$i, n - i + 1$$$), where $$$1 \\le i < n - i + 1$$$, to be good if $$$s_i = s_{n - i + 1}$$$ holds true.For example, in the string '010001' there is only $$$1$$$ good pair, since $$$s_1 \\ne s_6$$$, $$$s_2 \\ne s_5$$$, and $$$s_3=s_4$$$. In the string '0101' there are no good pairs.Vlad loves palindromes, but not too much, so he wants to rearrange some characters of the string so that there are exactly $$$k$$$ good pairs of indices.Determine whether it is possible to rearrange the characters in the given string so that there are exactly $$$k$$$ good pairs of indices ($$$i, n - i + 1$$$).$$$^{\\text{∗}}$$$A string $$$s$$$ is called binary if it consists only of the characters '0' and '1' "
  },
  {
    "title": "Square Year",
    "url": "https://codeforces.com/problemset/problem/2114/A",
    "description": "One can notice the following remarkable mathematical fact: the number $$$2025$$$ can be represented as $$$(20+25)^2$$$.You are given a year represented by a string $$$s$$$, consisting of exactly $$$4$$$ characters. Thus, leading zeros are allowed in the year representation. For example, \"0001\", \"0185\", \"1375\" are valid year representations. You need to express it in the form $$$(a + b)^2$$$, where $$$a$$$ and $$$b$$$ are non-negative integers, or determine that it is impossible.For example, if $$$s$$$ = \"0001\", you can choose $$$a = 0$$$, $$$b = 1$$$, and write the year as $$$(0 + 1)^2 = 1$$$."
  },
  {
    "title": "Two Arrays",
    "url": "https://codeforces.com/problemset/problem/2113/F",
    "description": "You are given two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$. You can perform the following operation an unlimited number of times:  Choose an integer $$$i$$$ from $$$1$$$ to $$$n$$$ and swap $$$a_i$$$ and $$$b_i$$$. Let $$$f(c)$$$ be the number of distinct numbers in array $$$c$$$. Find the maximum value of $$$f(a) + f(b)$$$. Also, output the arrays $$$a$$$ and $$$b$$$ after performing all operations."
  },
  {
    "title": "From Kazan with Love",
    "url": "https://codeforces.com/problemset/problem/2113/E",
    "description": "Marat is a native of Kazan. Kazan can be represented as an undirected tree consisting of $$$n$$$ vertices. In his youth, Marat often got into street fights, and now he has $$$m$$$ enemies, numbered from $$$1$$$ to $$$m$$$, living in Kazan along with him.Every day, all the people living in the city go to work. Marat knows that the $$$i$$$-th of his enemies lives at vertex $$$a_i$$$ and works at vertex $$$b_i$$$. He himself lives at vertex $$$x$$$ and works at vertex $$$y$$$. It is guaranteed that $$$a_i \\ne x$$$.All enemies go to work via the shortest path and leave their homes at time $$$1$$$. That is, if we represent the shortest path between vertices $$$a_i$$$ and $$$b_i$$$ as $$$c_1, c_2, c_3, \\ldots, c_k$$$ (where $$$c_1 = a_i$$$ and $$$c_k = b_i$$$), then at the moment $$$p$$$ ($$$1 \\le p \\le k$$$), the enemy numbered $$$i$$$ will be at vertex $$$c_p$$$.Marat really does not want to meet any of his enemies at the same vertex at the same time, as this would create an awkward situation, but they can meet on an edge. Marat also leaves his home at time $$$1$$$, and at each subsequent moment in time, he can either move to an adjacent vertex or stay at his current one.Note that Marat can only meet the $$$i$$$-th enemy at the moments $$$2, 3, \\ldots, k$$$ (where $$$c_1, c_2, \\ldots, c_k$$$ is the shortest path between vertices $$$a_i$$$ and $$$b_i$$$). In other words, starting from the moment after the enemy reaches work, Marat can no longer meet him.Help Marat find the earliest moment in time when he can reach work without encountering any enemies along the way, or determine that it is impossible."
  },
  {
    "title": "Cheater",
    "url": "https://codeforces.com/problemset/problem/2113/D",
    "description": "You are playing a new card game in a casino with the following rules:  The game uses a deck of $$$2n$$$ cards with different values.  The deck is evenly split between the player and the dealer: each receives $$$n$$$ cards.  Over $$$n$$$ rounds, the player and the dealer simultaneously play one top card from their hand. The cards are compared, and the point goes to the one whose card has a higher value. The winning card is removed from the game, while the losing card is returned to the hand and placed on top of the other cards in the hand of the player who played it. Note that the game always lasts exactly $$$n$$$ rounds.You have tracked the shuffling of the cards and know the order of the cards in the dealer's hand (from top to bottom). You want to maximize your score, so you can swap any two cards in your hand no more than once (to avoid raising suspicion).Determine the maximum number of points you can achieve."
  },
  {
    "title": "Smilo and Minecraft",
    "url": "https://codeforces.com/problemset/problem/2113/C",
    "description": "The boy Smilo is playing Minecraft! To prepare for the battle with the dragon, he needs a lot of golden apples, and for that, he requires a lot of gold. Therefore, Smilo goes to the mine.The mine is a rectangular grid of size $$$n \\times m$$$, where each cell can be either gold ore, stone, or an empty cell. Smilo can blow up dynamite in any empty cell. When dynamite explodes in an empty cell with coordinates $$$(x, y)$$$, all cells within a square of side $$$2k + 1$$$ centered at cell $$$(x, y)$$$ become empty. If gold ore was located strictly inside this square (not on the boundary), it disappears. However, if the gold ore was on the boundary of this square, Smilo collects that gold.Dynamite can only be detonated inside the mine, but the explosion square can extend beyond the mine's boundaries.Determine the maximum amount of gold that Smilo can collect."
  },
  {
    "title": "Good Start",
    "url": "https://codeforces.com/problemset/problem/2113/B",
    "description": "The roof is a rectangle of size $$$w \\times h$$$ with the bottom left corner at the point $$$(0, 0)$$$ on the plane. Your team needs to completely cover this roof with identical roofing sheets of size $$$a \\times b$$$, with the following conditions:  The sheets cannot be rotated (not even by $$$90^\\circ$$$).  The sheets must not overlap (but they can touch at the edges).  The sheets can extend beyond the boundaries of the rectangular roof. A novice from your team has already placed two such sheets on the roof in such a way that the sheets do not overlap and each of them partially covers the roof.Your task is to determine whether it is possible to completely tile the roof without removing either of the two already placed sheets."
  },
  {
    "title": "Shashliks",
    "url": "https://codeforces.com/problemset/problem/2113/A",
    "description": "You are the owner of a popular shashlik restaurant, and your grill is the heart of your kitchen. However, the grill has a peculiarity: after cooking each shashlik, its temperature drops.You need to cook as many portions of shashlik as possible, and you have an unlimited number of portions of two types available for cooking: The first type requires a temperature of at least $$$a$$$ degrees at the start of cooking, and after cooking, the grill's temperature decreases by $$$x$$$ degrees. The second type requires a temperature of at least $$$b$$$ degrees at the start of cooking, and after cooking, the grill's temperature decreases by $$$y$$$ degrees.Initially, the grill's temperature is $$$k$$$ degrees. Determine the maximum total number of portions of shashlik that can be cooked.Note that the grill's temperature can be negative."
  },
  {
    "title": "Variables and Operations",
    "url": "https://codeforces.com/problemset/problem/2112/F",
    "description": "There are $$$n$$$ variables; let's denote the value of the $$$i$$$-th variable as $$$a_i$$$.There are also $$$m$$$ operations which will be applied to these variables; the $$$i$$$-th operation is described by three integers $$$x_i, y_i, z_i$$$. When the $$$i$$$-th operation is applied, the variable $$$x_i$$$ gets assigned the following value: $$$\\min(a_{x_i}, a_{y_i} + z_i)$$$.Every operation will be applied exactly once, but their order is not fixed; they can be applied in any order.Let's call a sequence of initial variable values $$$a_1, a_2, \\dots, a_n$$$ stable, if no matter in which order we apply operations, the resulting values will be the same. If the resulting value of the $$$i$$$-th variable depends on the order of operations, then the sequence of initial variable values is called $$$i$$$-unstable.You have to process $$$q$$$ queries. In each query, you will be given initial values $$$a_1, a_2, \\dots, a_n$$$ and an integer $$$k$$$; before applying the operations, you can at most $$$k$$$ times choose a variable and decrease it by $$$1$$$. For every variable $$$i$$$, you have to independently determine if it is possible to transform the given values into an $$$i$$$-unstable sequence."
  },
  {
    "title": "Tree Colorings",
    "url": "https://codeforces.com/problemset/problem/2112/E",
    "description": "Consider a rooted undirected tree. Each vertex can be colored blue, green, or yellow. A coloring is called beautiful if it meets these conditions:   the root of the tree is green;  if you consider all blue and green vertices, they are reachable from each other without passing through any yellow vertices;  if you consider all yellow and green vertices, they are reachable from each other without passing through any blue vertices; You are given an integer $$$m$$$. Your task is to calculate the minimum number of vertices in a tree with exactly $$$m$$$ beautiful colorings."
  },
  {
    "title": "Reachability and Tree",
    "url": "https://codeforces.com/problemset/problem/2112/D",
    "description": "Let $$$u$$$ and $$$v$$$ be two distinct vertices in a directed graph. Let's call the ordered pair $$$(u, v)$$$ good if there exists a path from vertex $$$u$$$ to vertex $$$v$$$ along the edges of the graph.You are given an undirected tree with $$$n$$$ vertices and $$$n - 1$$$ edges. Determine whether it is possible to assign a direction to each edge of this tree so that the number of good pairs in it is exactly $$$n$$$. If it is possible, print any way to direct the edges resulting in exactly $$$n$$$ good pairs.  One possible directed version of the tree for the first test case. "
  },
  {
    "title": "Coloring Game",
    "url": "https://codeforces.com/problemset/problem/2112/C",
    "description": "Alice and Bob are playing a game using an integer array $$$a$$$ of size $$$n$$$.Initially, all elements of the array are colorless. First, Alice chooses $$$3$$$ elements and colors them red. Then Bob chooses any element and colors it blue (if it was red — recolor it). Alice wins if the sum of the red elements is strictly greater than the value of the blue element.Your task is to calculate the number of ways that Alice can choose $$$3$$$ elements in order to win regardless of Bob's actions."
  },
  {
    "title": "Shrinking Array",
    "url": "https://codeforces.com/problemset/problem/2112/B",
    "description": "Let's call an array $$$b$$$ beautiful if it consists of at least two elements and there exists a position $$$i$$$ such that $$$|b_i - b_{i + 1}| \\le 1$$$ (where $$$|x|$$$ is the absolute value of $$$x$$$).You are given an array $$$a$$$, and as long as it consists of at least two elements, you can perform the following operation:   Choose two adjacent positions $$$i$$$ and $$$i + 1$$$ in the array $$$a$$$.  Choose an integer $$$x$$$ such that $$$\\min(a_i, a_{i + 1}) \\le x \\le \\max(a_i, a_{i + 1})$$$.  Remove the numbers $$$a_i$$$ and $$$a_{i + 1}$$$ from the array, and insert the number $$$x$$$ in their place. Obviously, the size of the array will decrease by $$$1$$$. Calculate the minimum number of operations required to make the array beautiful, or report that it is impossible."
  },
  {
    "title": "Race",
    "url": "https://codeforces.com/problemset/problem/2112/A",
    "description": "Alice and Bob participate in a game TV show. When the game starts, the prize will be dropped to a certain point, and whoever gets to it first will get the prize.Alice decided that she would start running from point $$$a$$$. Bob, however, has not yet chosen his starting position.Bob knows that the prize could drop either at point $$$x$$$ or at point $$$y$$$. He also knows that he can reach the prize faster than Alice if the distance from his starting position to the prize is strictly less than the distance from Alice's starting position to the prize. The distance between any two points $$$c$$$ and $$$d$$$ is calculated as $$$|c-d|$$$.Your task is to determine whether Bob can choose an integer point that is guarantee to get to the prize faster, regardless of where it appears (at point $$$x$$$ or $$$y$$$). Bob can choose any integer point, except for $$$a$$$ (in particular, he can choose to start in point $$$x$$$, point $$$y$$$, or any other point, but not $$$a$$$)."
  },
  {
    "title": "Divisible Subarrays",
    "url": "https://codeforces.com/problemset/problem/2111/G",
    "description": "Technically, this is an interactive problem.An array $$$a$$$ of $$$m$$$ numbers is called divisible if at least one of the following conditions holds:  There exists an index $$$i$$$ ($$$1 \\le i < m$$$) and an integer $$$x$$$ such that for all indices $$$j$$$ ($$$j \\le i$$$), it holds that $$$a_{j} \\le x$$$ and for all indices $$$k$$$ ($$$k > i$$$), it holds that $$$a_{k} > x$$$.  There exists an index $$$i$$$ ($$$1 \\le i < m$$$) and an integer $$$x$$$ such that for all indices $$$j$$$ ($$$j \\le i$$$), it holds that $$$a_{j} > x$$$ and for all indices $$$k$$$ ($$$k > i$$$), it holds that $$$a_{k} \\le x$$$. You are given a permutation $$$p$$$ of integers $$$1, 2, \\dots, n$$$. Your task is to answer queries of the following form fast: if we take only the segment [$$$l$$$, $$$r$$$] from the permutation, that is, the numbers $$$p_{l}, p_{l + 1}, \\dots, p_{r}$$$, is this subarray of numbers divisible?Queries will be submitted in interactive mode in groups of $$$10$$$, meaning you will not receive the next group of queries until you output all answers for the current group."
  },
  {
    "title": "Puzzle",
    "url": "https://codeforces.com/problemset/problem/2111/F",
    "description": "You have been gifted a puzzle, where each piece of this puzzle is a square with a side length of one. You can glue any picture onto this puzzle, cut it, and obtain an almost ordinary jigsaw puzzle.Your friend is an avid mathematician, so he suggested you consider the following problem. Is it possible to arrange the puzzle pieces in such a way that the following conditions are met:  the pieces are aligned parallel to the coordinate axes;  the pieces do not overlap each other;  all pieces form a single connected component (i.e., there exists a path from each piece to every other piece along the pieces, where each two consecutive pieces share a side);  the ratio of the perimeter of this component to the area of this component equals $$$\\frac{p}{s}$$$;  the number of pieces used does not exceed $$$50\\,000$$$. Can you handle it?    For this figure, the ratio of the perimeter to the area is $$$\\frac{11}{9}$$$ "
  },
  {
    "title": "Changing the String",
    "url": "https://codeforces.com/problemset/problem/2111/E",
    "description": "Given a string $$$s$$$ that consists only of the first three letters of the Latin alphabet, meaning each character of the string is either a, b, or c.Also given are $$$q$$$ operations that need to be performed on the string. In each operation, two letters $$$x$$$ and $$$y$$$ from the set of the first three letters of the Latin alphabet are provided, and for each operation, one of the following two actions must be taken:  change any (one) occurrence of the letter $$$x$$$ in the string $$$s$$$ to the letter $$$y$$$ (if at least one occurrence of the letter $$$x$$$ exists);  do nothing. The goal is to perform all operations in the given order in such a way that the string $$$s$$$ becomes lexicographically minimal.Recall that a string $$$a$$$ is lexicographically less than a string $$$b$$$ if and only if one of the following conditions holds:  $$$a$$$ is a prefix of $$$b$$$, but $$$a \\neq b$$$;  at the first position where $$$a$$$ and $$$b$$$ differ, the string $$$a$$$ has a letter that comes earlier in the alphabet than the corresponding letter in $$$b$$$. "
  },
  {
    "title": "Creating a Schedule",
    "url": "https://codeforces.com/problemset/problem/2111/D",
    "description": "A new semester is about to begin, and it is necessary to create a schedule for the first day. There are a total of $$$n$$$ groups and $$$m$$$ classrooms in the faculty. It is also known that each group has exactly $$$6$$$ classes on the first day, and the $$$k$$$-th class of each group takes place at the same time. Each class must be held in a classroom, and at the same time, there cannot be classes for more than one group in the same classroom.Each classroom has its own index (at least three digits), and all digits of this index, except for the last two, indicate the floor on which the classroom is located. For example, classroom $$$479$$$ is located on the $$$4$$$-th floor, while classroom $$$31415$$$ is on the $$$314$$$-th floor. Between floors, one can move by stairs; for any floor $$$x > 1$$$, one can either go down to floor $$$x - 1$$$ or go up to floor $$$x + 1$$$; from the first floor, one can only go up to the second; from the floor $$$10^7$$$ (which is the last one), it is possible to go only to the floor $$$9999999$$$.The faculty's dean's office has decided to create the schedule in such a way that students move as much as possible between floors, meaning that the total number of movements between floors across all groups should be maximized. When the students move from one floor to another floor, they take the shortest path.For example, if there are $$$n = 2$$$ groups and $$$m = 4$$$ classrooms $$$[479, 290, 478, 293]$$$, the schedule can be arranged as follows: Class No.Group 1Group 2$$$1$$$$$$290$$$$$$293$$$$$$2$$$$$$478$$$$$$479$$$$$$3$$$$$$293$$$$$$290$$$$$$4$$$$$$479$$$$$$478$$$$$$5$$$$$$293$$$$$$290$$$$$$6$$$$$$479$$$$$$478$$$ In such a schedule, the groups will move between the $$$2$$$nd and $$$4$$$th floors each time, resulting in a total of $$$20$$$ movements between floors.Help the dean's office create any suitable schedule!"
  },
  {
    "title": "Equal Values",
    "url": "https://codeforces.com/problemset/problem/2111/C",
    "description": "You are given an array $$$a_1, a_2, \\dots, a_n$$$, consisting of $$$n$$$ integers.In one operation, you are allowed to perform one of the following actions:   Choose a position $$$i$$$ ($$$1 < i \\le n$$$) and make all elements to the left of $$$i$$$ equal to $$$a_i$$$. That is, assign the value $$$a_i$$$ to all $$$a_j$$$ ($$$1 \\le j < i$$$). The cost of such an operation is $$$(i - 1) \\cdot a_i$$$.  Choose a position $$$i$$$ ($$$1 \\le i < n$$$) and make all elements to the right of $$$i$$$ equal to $$$a_i$$$. That is, assign the value $$$a_i$$$ to all $$$a_j$$$ ($$$i < j \\le n$$$). The cost of such an operation is $$$(n - i) \\cdot a_i$$$. Note that the elements affected by an operation may already be equal to $$$a_i$$$, but that doesn't change the cost.You are allowed to perform any number of operations (including zero). What is the minimum total cost to make all elements of the array equal?"
  },
  {
    "title": "Fibonacci Cubes",
    "url": "https://codeforces.com/problemset/problem/2111/B",
    "description": "There are $$$n$$$ Fibonacci cubes, where the side of the $$$i$$$-th cube is equal to $$$f_{i}$$$, where $$$f_{i}$$$ is the $$$i$$$-th Fibonacci number.In this problem, the Fibonacci numbers are defined as follows:  $$$f_{1} = 1$$$  $$$f_{2} = 2$$$  $$$f_{i} = f_{i - 1} + f_{i - 2}$$$ for $$$i > 2$$$ There are also $$$m$$$ empty boxes, where the $$$i$$$-th box has a width of $$$w_{i}$$$, a length of $$$l_{i}$$$, and a height of $$$h_{i}$$$.For each of the $$$m$$$ boxes, you need to determine whether all the cubes can fit inside that box. The cubes must be placed in the box following these rules:  The cubes can only be stacked in the box such that the sides of the cubes are parallel to the sides of the box;  Every cube must be placed either on the bottom of the box or on top of other cubes in such a way that all space below the cube is occupied;  A larger cube cannot be placed on top of a smaller cube. "
  },
  {
    "title": "Energy Crystals",
    "url": "https://codeforces.com/problemset/problem/2111/A",
    "description": "There are three energy crystals numbered $$$1$$$, $$$2$$$, and $$$3$$$; let's denote the energy level of the $$$i$$$-th crystal as $$$a_i$$$. Initially, all of them are discharged, meaning their energy levels are equal to $$$0$$$. Each crystal needs to be charged to level $$$x$$$ (exactly $$$x$$$, not greater).In one action, you can increase the energy level of any one crystal by any positive amount; however, the energy crystals are synchronized with each other, so an action can only be performed if the following condition is met afterward:  for each pair of crystals $$$i$$$, $$$j$$$, it must hold that $$$a_{i} \\ge \\lfloor\\frac{a_{j}}{2}\\rfloor$$$. What is the minimum number of actions required to charge all the crystals?"
  },
  {
    "title": "Faculty",
    "url": "https://codeforces.com/problemset/problem/2110/F",
    "description": "In 2077, after the world was enslaved by robots, the robots decided to implement an educational reform, and now the operation of taking the modulus is only taught in the faculty of \"Ancient World History\". Here is one of the entrance tasks for this faculty:We define the beauty of an array of positive integers $$$b$$$ as the maximum $$$f(b_i, b_j)$$$ over all pairs $$$1 \\leq i, j \\leq n$$$, where $$$f(x, y) = (x \\bmod y) + (y \\bmod x)$$$.Given an array of positive integers $$$a$$$ of length $$$n$$$, output $$$n$$$ numbers, where the $$$i$$$-th number ($$$1 \\leq i \\leq n$$$) is the beauty of the array $$$a_1, a_2, \\ldots, a_i$$$.$$$x \\bmod y$$$ is the remainder of the division of $$$x$$$ by $$$y$$$."
  },
  {
    "title": "Melody",
    "url": "https://codeforces.com/problemset/problem/2110/E",
    "description": "In 2077, the robots that took over the world realized that human music wasn't that great, so they started composing their own.To write music, the robots have a special musical instrument capable of producing $$$n$$$ different sounds. Each sound is characterized by its volume and pitch. A sequence of sounds is called music. Music is considered beautiful if any two consecutive sounds differ either only in volume or only in pitch. Music is considered boring if the volume or pitch of any three consecutive sounds is the same.You want to compose beautiful, non-boring music that contains each sound produced by your musical instrument exactly once."
  },
  {
    "title": "Fewer Batteries",
    "url": "https://codeforces.com/problemset/problem/2110/D",
    "description": "In 2077, when robots took over the world, they decided to compete in the following game.There are $$$n$$$ checkpoints, and the $$$i$$$-th checkpoint contains $$$b_i$$$ batteries. Initially, the Robot starts at the $$$1$$$-st checkpoint with no batteries and must reach the $$$n$$$-th checkpoint.There are a total of $$$m$$$ one-way passages between the checkpoints. The $$$i$$$-th passage allows movement from point $$$s_i$$$ to point $$$t_i$$$ ($$$s_i < t_i$$$), but not the other way. Additionally, the $$$i$$$-th passage can only be used if the robot has at least $$$w_i$$$ charged batteries; otherwise, it will run out of power on the way.When the robot arrives at point $$$v$$$, it can additionally take any number of batteries from $$$0$$$ to $$$b_v$$$, inclusive. Moreover, it always carries all previously collected batteries, and at each checkpoint, it recharges all previously collected batteries.Find the minimum number of batteries that the robot can have at the end of the journey, or report that it is impossible to reach from the first checkpoint to the last."
  },
  {
    "title": "Racing",
    "url": "https://codeforces.com/problemset/problem/2110/C",
    "description": "In 2077, a sport called hobby-droning is gaining popularity among robots.You already have a drone, and you want to win. For this, your drone needs to fly through a course with $$$n$$$ obstacles.The $$$i$$$-th obstacle is defined by two numbers $$$l_i, r_i$$$. Let the height of your drone at the $$$i$$$-th obstacle be $$$h_i$$$. Then the drone passes through this obstacle if $$$l_i \\le h_i \\le r_i$$$. Initially, the drone is on the ground, meaning $$$h_0 = 0$$$.The flight program for the drone is represented by an array $$$d_1, d_2, \\ldots, d_n$$$, where $$$h_{i} - h_{i-1} = d_i$$$, and $$$0 \\leq d_i \\leq 1$$$. This means that your drone either does not change height between obstacles or rises by $$$1$$$. You already have a flight program, but some $$$d_i$$$ in it are unknown and marked as $$$-1$$$. Replace the unknown $$$d_i$$$ with numbers $$$0$$$ and $$$1$$$ to create a flight program that passes through the entire obstacle course, or report that it is impossible."
  },
  {
    "title": "Down with Brackets",
    "url": "https://codeforces.com/problemset/problem/2110/B",
    "description": "In 2077, robots decided to get rid of balanced bracket sequences once and for all!A bracket sequence is called balanced if it can be constructed by the following formal grammar.   The empty sequence $$$\\varnothing$$$ is balanced.  If the bracket sequence $$$A$$$ is balanced, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also balanced.  If the bracket sequences $$$A$$$ and $$$B$$$ are balanced, then the concatenated sequence $$$A B$$$ is also balanced. You are the head of the department for combating balanced bracket sequences, and your main task is to determine which brackets you can destroy and which you cannot.You are given a balanced bracket sequence represented by a string $$$s$$$, consisting of the characters ( and ). Since the robots' capabilities are not limitless, they can remove exactly one opening bracket and exactly one closing bracket from the string.Your task is to determine whether the robots can delete such two brackets so that the string $$$s$$$ is no longer a balanced bracket sequence."
  },
  {
    "title": "Fashionable Array",
    "url": "https://codeforces.com/problemset/problem/2110/A",
    "description": "In 2077, everything became fashionable among robots, even arrays...We will call an array of integers $$$a$$$ fashionable if $$$\\min(a) + \\max(a)$$$ is divisible by $$$2$$$ without a remainder, where $$$\\min(a)$$$ — the value of the minimum element of the array $$$a$$$, and $$$\\max(a)$$$ — the value of the maximum element of the array $$$a$$$.You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. In one operation, you can remove any element from this array. Your task is to determine the minimum number of operations required to make the array $$$a$$$ fashionable."
  },
  {
    "title": "Penguin Steps",
    "url": "https://codeforces.com/problemset/problem/2109/F",
    "description": "Mouf, the clever master of Darkness, and Fouad, the brave champion of Light, have entered the Grid Realm once more. This time, they have found the exit, but it is guarded by fierce monsters! They must fight with their bare hands instead of summoning monsters!Mouf and Fouad are standing on an $$$n \\times n$$$ grid. Each cell $$$(i, j)$$$ has a value $$$a_{i,j}$$$ and a color. The color of a cell is white if $$$c_{i,j} = 0$$$ and black if $$$c_{i,j} = 1$$$.Mouf starts at the top-left corner $$$(1, 1)$$$, and Fouad starts at the bottom-left corner $$$(n, 1)$$$. Both are trying to reach the exit cell at $$$(r, n)$$$.A path is defined as a sequence of adjacent cells (sharing a horizontal or vertical edge). The cost of a path is the maximum value of $$$a_{i, j}$$$ among all cells included in the path (including the first and last cells).Let:   $$$\\mathrm{dis}_M$$$ denote the minimum possible cost of a valid path from Mouf's starting position $$$(1, 1)$$$ to the exit $$$(r, n)$$$;  $$$\\mathrm{dis}_F$$$ denote the minimum possible cost of a valid path from Fouad's starting position $$$(n, 1)$$$ to the exit $$$(r, n)$$$. Before moving, Mouf can perform up to $$$k$$$ operations. In each operation, he may select any black cell and increment its value by $$$1$$$ (possibly choosing the same cell multiple times).Mouf wants to maximize $$$\\mathrm{dis}_F$$$ while ensuring that his own cost $$$\\mathrm{dis}_M$$$ remains unchanged (as if he performed no operations). If Mouf acts optimally, what are the values of $$$\\mathrm{dis}_M$$$ and $$$\\mathrm{dis}_F$$$?"
  },
  {
    "title": "Binary String Wowee",
    "url": "https://codeforces.com/problemset/problem/2109/E",
    "description": "Mouf is bored with themes, so he decided not to use any themes for this problem.You are given a binary$$$^{\\text{∗}}$$$ string $$$s$$$ of length $$$n$$$. You are to perform the following operation exactly $$$k$$$ times:  select an index $$$i$$$ ($$$1 \\le i \\le n$$$) such that $$$s_i = \\mathtt{0}$$$;  then flip$$$^{\\text{†}}$$$ each $$$s_j$$$ for all indices $$$j$$$ ($$$1 \\le j \\le i$$$). You need to count the number of possible ways to perform all $$$k$$$ operations. Since the answer could be ginormous, print it modulo $$$998\\,244\\,353$$$.Two sequences of operations are considered different if they differ in the index selected at any step.$$$^{\\text{∗}}$$$A binary string is a string that consists only of the characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$.$$$^{\\text{†}}$$$Flipping a binary character is changing it from $$$\\mathtt{0}$$$ to $$$\\mathtt{1}$$$ or vice versa."
  },
  {
    "title": "D/D/D",
    "url": "https://codeforces.com/problemset/problem/2109/D",
    "description": "Of course, a problem with the letter D is sponsored by Declan Akaba.You are given a simple, connected, undirected graph with $$$n$$$ vertices and $$$m$$$ edges. The graph contains no self-loops or multiple edges. You are also given a multiset $$$A$$$ consisting of $$$\\ell$$$ elements: $$$$$$ A = \\{A_1, A_2, \\ldots, A_\\ell\\} $$$$$$Starting from vertex $$$1$$$, you may perform the following move any number of times, as long as the multiset $$$A$$$ is not empty:   Select an element $$$k \\in A$$$ and remove it from the multiset . You must remove exactly one occurrence of $$$k$$$ from $$$A$$$.  Traverse any walk$$$^{\\text{∗}}$$$ of exactly $$$k$$$ edges to reach some vertex (possibly the same one you started from). For each $$$i$$$ ($$$1 \\le i \\le n$$$), determine whether there exists a sequence of such moves that starts at vertex $$$1$$$ and ends at vertex $$$i$$$, using the original multiset $$$A$$$. Note that the check for each vertex $$$i$$$ is independent — you restart from vertex $$$1$$$ and use the original multiset $$$A$$$ for each case.$$$^{\\text{∗}}$$$A walk of length $$$k$$$ is a sequence of vertices $$$v_0, v_1, \\ldots, v_{k - 1}, v_k$$$ such that each consecutive pair of vertices $$$(v_i, v_{i + 1})$$$ is connected by an edge in the graph. The sequence may include repeated vertices."
  },
  {
    "title": "Hacking Numbers (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2109/C3",
    "description": "This is the hard version of the problem. In this version, the limit of commands you can send is described in the statement. You can make hacks only if all versions of the problem are solved.This is an interactive problem.Welcome, Duelists! In this interactive challenge, there is an unknown integer $$$x$$$ ($$$1 \\le x \\le 10^9$$$). You must make it equal to a given integer in the input $$$n$$$. By harnessing the power of \"Mathmech\" monsters, you can send a command to do one of the following: CommandConstraintResultCaseUpdateJury's response\"add $$$y$$$\"$$$-10^{18} \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x + y$$$$$$\\text{if } 1 \\le \\mathrm{res} \\le 10^{18}$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"mul $$$y$$$\"$$$1 \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x \\cdot y$$$$$$\\text{if } 1 \\le \\mathrm{res} \\le 10^{18}$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"div $$$y$$$\"$$$1 \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x/y$$$$$$\\text{if } y$$$ divides $$$x$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"digit\"—$$$\\mathrm{res} = S(x)$$$$$$^{\\text{∗}}$$$—$$$x \\leftarrow \\mathrm{res}$$$\"1\" Let $$$f(n)$$$ be the minimum integer such that there is a sequence of $$$f(n)$$$ commands that transforms $$$x$$$ into $$$n$$$ for all $$$x(1 \\le x \\le 10^9)$$$. You do not know the value of $$$x$$$ in advance. Find $$$f(n)$$$ such that, no matter what $$$x$$$ is, you can always transform it into $$$n$$$ using at most $$$f(n)$$$ commands.Your task is to change $$$x$$$ into $$$n$$$ using at most $$$f(n)$$$ commands.$$$^{\\text{∗}}$$$$$$S(n)$$$ is a function that returns the sum of all the individual digits of a non-negative integer $$$n$$$. For example, $$$S(123) = 1 + 2 + 3 = 6$$$"
  },
  {
    "title": "Hacking Numbers (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2109/C2",
    "description": "This is the medium version of the problem. In this version, you can send at most $$$\\mathbf{4}$$$ commands. You can make hacks only if all versions of the problem are solved.This is an interactive problem.Welcome, Duelists! In this interactive challenge, there is an unknown integer $$$x$$$ ($$$1 \\le x \\le 10^9$$$). You must make it equal to a given integer in the input $$$n$$$. By harnessing the power of \"Mathmech\" monsters, you can send a command to do one of the following: CommandConstraintResultCaseUpdateJury's response\"add $$$y$$$\"$$$-10^{18} \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x + y$$$$$$\\text{if } 1 \\le \\mathrm{res} \\le 10^{18}$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"mul $$$y$$$\"$$$1 \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x \\cdot y$$$$$$\\text{if } 1 \\le \\mathrm{res} \\le 10^{18}$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"div $$$y$$$\"$$$1 \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x/y$$$$$$\\text{if } y$$$ divides $$$x$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"digit\"—$$$\\mathrm{res} = S(x)$$$$$$^{\\text{∗}}$$$—$$$x \\leftarrow \\mathrm{res}$$$\"1\" You have to make $$$x$$$ equal to $$$n$$$ using at most $$$\\mathbf{4}$$$ commands.$$$^{\\text{∗}}$$$$$$S(n)$$$ is a function that returns the sum of all the individual digits of a non-negative integer $$$n$$$. For example, $$$S(123) = 1 + 2 + 3 = 6$$$"
  },
  {
    "title": "Hacking Numbers (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2109/C1",
    "description": "This is the easy version of the problem. In this version, you can send at most $$$\\mathbf{7}$$$ commands. You can make hacks only if all versions of the problem are solved.This is an interactive problem.Welcome, Duelists! In this interactive challenge, there is an unknown integer $$$x$$$ ($$$1 \\le x \\le 10^9$$$). You must make it equal to a given integer in the input $$$n$$$. By harnessing the power of \"Mathmech\" monsters, you can send a command to do one of the following: CommandConstraintResultCaseUpdateJury's response\"add $$$y$$$\"$$$-10^{18} \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x + y$$$$$$\\text{if } 1 \\le \\mathrm{res} \\le 10^{18}$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"mul $$$y$$$\"$$$1 \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x \\cdot y$$$$$$\\text{if } 1 \\le \\mathrm{res} \\le 10^{18}$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"div $$$y$$$\"$$$1 \\le y \\le 10^{18}$$$$$$\\mathrm{res} = x/y$$$$$$\\text{if } y$$$ divides $$$x$$$$$$x \\leftarrow \\mathrm{res}$$$\"1\"$$$\\mathrm{else}$$$$$$x \\leftarrow x$$$\"0\"\"digit\"—$$$\\mathrm{res} = S(x)$$$$$$^{\\text{∗}}$$$—$$$x \\leftarrow \\mathrm{res}$$$\"1\" You have to make $$$x$$$ equal to $$$n$$$ using at most $$$\\mathbf{7}$$$ commands.$$$^{\\text{∗}}$$$$$$S(n)$$$ is a function that returns the sum of all the individual digits of a non-negative integer $$$n$$$. For example, $$$S(123) = 1 + 2 + 3 = 6$$$"
  },
  {
    "title": "Slice to Survive",
    "url": "https://codeforces.com/problemset/problem/2109/B",
    "description": "Duelists Mouf and Fouad enter the arena, which is an $$$n \\times m$$$ grid!Fouad's monster starts at cell $$$(a, b)$$$, where rows are numbered $$$1$$$ to $$$n$$$ and columns $$$1$$$ to $$$m$$$.Mouf and Fouad will keep duelling until the grid consists of only one cell.In each turn:   Mouf first cuts the grid along a row or column line into two parts, discarding the part without Fouad's monster. Note that the grid must have at least two cells; otherwise, the game has already ended.  After that, in the same turn, Fouad moves his monster to any cell (possibly the same one it was in) within the remaining grid.     Visualization of the phases of the fourth test case. Mouf wants to minimize the number of turns, while Fouad wants to maximize them. How many turns will this epic duel last if both play optimally?"
  },
  {
    "title": "It's Time To Duel",
    "url": "https://codeforces.com/problemset/problem/2109/A",
    "description": "Something you may not know about Mouf is that he is a big fan of the Yu-Gi-Oh! card game. He loves to duel with anyone he meets. To gather all fans who love to play as well, he decided to organize a big Yu-Gi-Oh! tournament and invited $$$n$$$ players.Mouf arranged the $$$n$$$ players in a line, numbered from $$$1$$$ to $$$n$$$. They then held $$$n - 1$$$ consecutive duels: for each $$$i$$$ from $$$1$$$ to $$$n - 1$$$, player $$$i$$$ faced player $$$i + 1$$$, producing one winner and one loser per match. Afterward, each player reports a value $$$a_i(0 \\le a_i \\le 1)$$$:  $$$0$$$ indicating they won no duels;  $$$1$$$ indicating they won at least one duel. Since some may lie about their results (e.g., reporting a $$$1$$$ instead of a $$$0$$$, or vice versa) to influence prize outcomes, Mouf will cancel the tournament if he can prove any report to be false.Given the array $$$a$$$, determine whether at least one player must be lying."
  },
  {
    "title": "Fallen Towers",
    "url": "https://codeforces.com/problemset/problem/2108/F",
    "description": " Pizano built an array $$$a$$$ of $$$n$$$ towers, each consisting of $$$a_i \\ge 0$$$ blocks.Pizano can knock down a tower so that the next $$$a_i$$$ towers grow by $$$1$$$. In other words, he can take the element $$$a_i$$$, increase the next $$$a_i$$$ elements by one, and then set $$$a_i$$$ to $$$0$$$. The blocks that fall outside the array of towers disappear. If Pizano knocks down a tower with $$$0$$$ blocks, nothing happens.Pizano wants to knock down all $$$n$$$ towers in any order, each exactly once. That is, for each $$$i$$$ from $$$1$$$ to $$$n$$$, he will knock down the tower at position $$$i$$$ exactly once.Moreover, the resulting array of tower heights must be non-decreasing. This means that after he knocks down all $$$n$$$ towers, for any $$$i < j$$$, the tower at position $$$i$$$ must not be taller than the tower at position $$$j$$$.You are required to output the maximum $$$\\text{MEX}$$$ of the resulting array of tower heights.The $$$\\text{MEX}$$$ of an array is the smallest non-negative integer that is not present in the array."
  },
  {
    "title": "Spruce Dispute",
    "url": "https://codeforces.com/problemset/problem/2108/E",
    "description": "  It's already a hot April outside, and Polycarp decided that this is the perfect time to finally take down the spruce tree he set up several years ago. As he spent several hours walking around it, gathering his strength, he noticed something curious: the spruce is actually a tree$$$^{\\text{∗}}$$$ — and not just any tree, but one consisting of an odd number of vertices $$$n$$$. Moreover, on $$$n-1$$$ of the vertices hang Christmas ornaments, painted in exactly $$$\\frac{n-1}{2}$$$ distinct colors, with exactly two ornaments painted in each color. The remaining vertex, as tradition dictates, holds the tree's topper.At last, after several days of mental preparation, Polycarp began dismantling the spruce. First, he removed the topper and had already started taking apart some branches when suddenly a natural question struck him: how can he remove one of the tree's edges and rearrange the ornaments in such a way that the sum of the lengths of the simple paths between ornaments of the same color is as large as possible?In this problem, removing an edge from the tree is defined as follows: choose a pair of adjacent vertices $$$a$$$ and $$$b$$$ ($$$a < b$$$), then remove vertex $$$b$$$ from the tree and reattach all of $$$b$$$'s adjacent vertices (except for $$$a$$$) directly to $$$a$$$.Polycarp cannot continue dismantling his spruce until he gets an answer to this question. However, checking all possible options would take him several more years. Knowing your experience in competitive programming, he turned to you for help. But can you solve this dispute?$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. "
  },
  {
    "title": "Needle in a Numstack",
    "url": "https://codeforces.com/problemset/problem/2108/D",
    "description": "This is an interactive problem.You found the numbers $$$k$$$ and $$$n$$$ in the attic, but lost two arrays $$$A$$$ and $$$B$$$.You remember that:  $$$|A| + |B| = n$$$, the total length of the arrays is $$$n$$$.  $$$|A| \\geq k$$$ and $$$|B| \\geq k$$$, the length of each array is at least $$$k$$$.  The arrays consist only of numbers from $$$1$$$ to $$$k$$$.  If you take any $$$k$$$ consecutive elements from array $$$A$$$, they will all be different. Also, if you take any $$$k$$$ consecutive elements from array $$$B$$$, they will all be different. Fortunately, a kind spirit that settled in the attic found these arrays and concatenated them into an array $$$C$$$ of length $$$n$$$. That is, the elements of array $$$A$$$ were first written into array $$$C$$$, followed by the elements of array $$$B$$$.You can ask the kind spirit up to $$$250$$$ questions. Each question contains an index $$$i$$$ ($$$1 \\leq i \\leq n$$$). In response, you will receive the $$$i$$$-th element of the concatenated array $$$C$$$.You need to find the lengths of arrays $$$A$$$ and $$$B$$$, or report that it is impossible to determine them uniquely."
  },
  {
    "title": "Neo's Escape",
    "url": "https://codeforces.com/problemset/problem/2108/C",
    "description": " Neo wants to escape from the Matrix. In front of him are $$$n$$$ buttons arranged in a row. Each button has a weight given by an integer: $$$a_1, a_2, \\ldots, a_n$$$.Neo is immobilized, but he can create and move clones. This means he can perform an unlimited number of actions of the following two types in any order:   Create a clone in front of a specific button.  Move an existing clone one position to the left or right. As soon as a clone is in front of another button that has not yet been pressed—regardless of whether he was created or moved — he immediately presses it. If the button has already been pressed, a clone does nothing — buttons can only be pressed once.For Neo to escape, he needs to press all the buttons in such an order that the sequence of their weights is non-increasing — that is, if $$$b_1, b_2, \\ldots, b_n$$$ are the weights of the buttons in the order they are pressed, then it must hold that $$$b_1 \\geq b_2 \\geq \\cdots \\geq b_n$$$.Your task is to determine the minimum number of clones that Neo needs to create in order to press all the buttons in a valid order."
  },
  {
    "title": "SUMdamental Decomposition",
    "url": "https://codeforces.com/problemset/problem/2108/B",
    "description": " On a recent birthday, your best friend Maurice gave you a pair of numbers $$$n$$$ and $$$x$$$, and asked you to construct an array of positive numbers $$$a$$$ of length $$$n$$$ such that $$$a_1 \\oplus a_2 \\oplus \\cdots \\oplus a_n = x$$$ $$$^{\\text{∗}}$$$. This task seemed too simple to you, and therefore you decided to give Maurice a return gift by constructing an array among all such arrays that has the smallest sum of its elements. You immediately thought of a suitable array; however, since writing it down turned out to be too time-consuming, Maurice will have to settle for just the sum of its elements.$$$^{\\text{∗}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. "
  },
  {
    "title": "Permutation Warm-Up",
    "url": "https://codeforces.com/problemset/problem/2108/A",
    "description": " For a permutation $$$p$$$ of length $$$n$$$$$$^{\\text{∗}}$$$, we define the function:$$$$$$ f(p) = \\sum_{i=1}^{n} \\lvert p_i - i \\rvert $$$$$$You are given a number $$$n$$$. You need to compute how many distinct values the function $$$f(p)$$$ can take when considering all possible permutations of the numbers from $$$1$$$ to $$$n$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Cycling (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2107/F2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version, $$$1\\le n\\le 10^6$$$ and you need to output the answer for each prefix. You can hack only if you solved all versions of this problem.Leo works as a programmer in the city center, and his lover teaches at a high school in the suburbs. Every weekend, Leo would ride his bike to the suburbs to spend a nice weekend with his lover.There are $$$n$$$ cyclists riding in front of Leo on this road right now. They are numbered $$$1$$$, $$$2$$$, $$$\\ldots$$$, $$$n$$$ from front to back. Initially, Leo is behind the $$$n$$$-th cyclist. The $$$i$$$-th cyclist has an agility value $$$a_i$$$. Leo wants to get ahead of the $$$1$$$-st cyclist. Leo can take the following actions as many times as he wants:  Assuming that the first person in front of Leo is cyclist $$$i$$$, he can go in front of cyclist $$$i$$$ for a cost of $$$a_i$$$. This puts him behind cyclist $$$i - 1$$$.  Using his super powers, swap $$$a_i$$$ and $$$a_j$$$ ($$$1\\le i < j\\le n$$$) for a cost of $$$(j - i)$$$. Leo wants to know the minimum cost to get in front of the $$$1$$$-st cyclist. In addition, he wants to know the answer for each $$$1\\le i \\le n$$$, $$$[a_1, a_2, \\ldots, a_i]$$$ as the original array. The problems of different $$$i$$$ are independent. To be more specific, in the $$$i$$$-th problem, Leo starts behind the $$$i$$$-th cyclist instead of the $$$n$$$-th cyclist, and cyclists numbered $$$i + 1, i + 2, \\ldots, n$$$ are not present."
  },
  {
    "title": "Cycling (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2107/F1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version, $$$1\\le n\\le 5\\cdot 10^3$$$ and you don't need to output the answer for each prefix. You can hack only if you solved all versions of this problem.Leo works as a programmer in the city center, and his lover teaches at a high school in the suburbs. Every weekend, Leo would ride his bike to the suburbs to spend a nice weekend with his lover.There are $$$n$$$ cyclists riding in front of Leo on this road right now. They are numbered $$$1$$$, $$$2$$$, $$$\\ldots$$$, $$$n$$$ from front to back. Initially, Leo is behind the $$$n$$$-th cyclist. The $$$i$$$-th cyclist has an agility value $$$a_i$$$. Leo wants to get ahead of the $$$1$$$-st cyclist. Leo can take the following actions as many times as he wants:  Assuming that the first person in front of Leo is cyclist $$$i$$$, he can go in front of cyclist $$$i$$$ for a cost of $$$a_i$$$. This puts him behind cyclist $$$i - 1$$$.  Using his super powers, swap $$$a_i$$$ and $$$a_j$$$ ($$$1\\le i < j\\le n$$$) for a cost of $$$(j - i)$$$. Leo wants to know the minimum cost to get in front of the $$$1$$$-st cyclist. Here you only need to print the answer for the whole array, i.e. $$$[a_1, a_2, \\ldots, a_n]$$$."
  },
  {
    "title": "Ain and Apple Tree",
    "url": "https://codeforces.com/problemset/problem/2107/E",
    "description": "If I was also hit by an apple falling from an apple tree, could I become as good at physics as Newton?To be better at physics, Ain wants to build an apple tree so that she can get hit by apples on it. Her apple tree has $$$n$$$ nodes and is rooted at $$$1$$$. She defines the weight of an apple tree as $$$\\sum \\limits_{i=1}^n \\sum \\limits_{j=i+1}^n \\text{dep}(\\operatorname{lca}(i,j))$$$. Here, $$$\\text{dep}(x)$$$ is defined as the number of edges on the unique shortest path from node $$$1$$$ to node $$$x$$$. $$$\\operatorname{lca}(i, j)$$$ is defined as the unique node $$$x$$$ with the largest value of $$$\\text{dep}(x)$$$ and which is present on both the paths $$$(1, i)$$$ and $$$(1, j)$$$.From some old books Ain reads, she knows that Newton's apple tree's weight is around $$$k$$$, but the exact value of it is lost.As Ain's friend, you want to build an apple tree with $$$n$$$ nodes for her, and the absolute difference between your tree's weight and $$$k$$$ should be at most $$$1$$$, i.e. $$$|\\text{weight} - k| \\le 1$$$. Unfortunately, this is not always possible, in this case please report it. "
  },
  {
    "title": "Apple Tree Traversing",
    "url": "https://codeforces.com/problemset/problem/2107/D",
    "description": "There is an apple tree with $$$n$$$ nodes, initially with one apple at each node. You have a paper with you, initially with nothing written on it.You are traversing on the apple tree, by doing the following action as long as there is at least one apple left:  Choose an apple path $$$(u,v)$$$. A path $$$(u,v)$$$ is called an apple path if and only if for every node on the path $$$(u,v)$$$, there's an apple on it.  Let $$$d$$$ be the number of apples on the path, write down three numbers $$$(d,u,v)$$$, in this order, on the paper.  Then remove all the apples on the path $$$(u,v)$$$. Here, the path $$$(u, v)$$$ refers to the sequence of vertices on the unique shortest walk from $$$u$$$ to $$$v$$$. Let the number sequence on the paper be $$$a$$$. Your task is to find the lexicographically largest possible sequence $$$a$$$. "
  },
  {
    "title": "Maximum Subarray Sum",
    "url": "https://codeforces.com/problemset/problem/2107/C",
    "description": "You are given an array a1,a2,…,ana_1,a_2,\\ldots,a_n of length nn and a positive integer kk, but some parts of the array aa are missing. Your task is to fill the missing part so that the maximum subarray sum∗^{\\text{∗}} of aa is exactly kk, or report that no solution exists.Formally, you are given a binary string ss and a partially filled array aa, where:  If you remember the value of aia_i, si=1s_i = 1 to indicate that, and you are given the real value of aia_i.  If you don't remember the value of aia_i, si=0s_i = 0 to indicate that, and you are given ai=0a_i = 0. All the values that you remember satisfy |ai|≤106|a_i| \\le 10^6. However, you may use values up to 101810^{18} to fill in the values that you do not remember. It can be proven that if a solution exists, a solution also exists satisfying |ai|≤1018|a_i| \\le 10^{18}. ∗^{\\text{∗}}The maximum subarray sum of an array aa of length nn, i.e. a1,a2,…ana_1, a_2, \\ldots a_n is defined as max1≤i≤j≤nS(i,j)\\max_{1 \\le i \\le j \\le n} S(i, j) where S(i,j)=ai+ai+1+…+ajS(i, j) = a_i + a_{i + 1} + \\ldots + a_j."
  },
  {
    "title": "Apples in Boxes",
    "url": "https://codeforces.com/problemset/problem/2107/B",
    "description": "Tom and Jerry found some apples in the basement. They decided to play a game to get some apples.There are $$$n$$$ boxes, and the $$$i$$$-th box has $$$a_i$$$ apples inside. Tom and Jerry take turns picking up apples. Tom goes first. On their turn, they have to do the following:  Choose a box $$$i$$$ ($$$1 \\le i \\le n$$$) with a positive number of apples, i.e. $$$a_i > 0$$$, and pick $$$1$$$ apple from this box. Note that this reduces $$$a_i$$$ by $$$1$$$.  If no valid box exists, the current player loses.  If after the move, $$$\\max(a_1, a_2, \\ldots, a_n) - \\min(a_1, a_2, \\ldots, a_n) > k$$$ holds, then the current player (who made the last move) also loses. If both players play optimally, predict the winner of the game."
  },
  {
    "title": "LRC and VIP",
    "url": "https://codeforces.com/problemset/problem/2107/A",
    "description": " You have an array $$$a$$$ of size $$$n$$$ — $$$a_1, a_2, \\ldots a_n$$$. You need to divide the $$$n$$$ elements into $$$2$$$ sequences $$$B$$$ and $$$C$$$, satisfying the following conditions:  Each element belongs to exactly one sequence.  Both sequences $$$B$$$ and $$$C$$$ contain at least one element.  $$$\\gcd$$$ $$$(B_1, B_2, \\ldots, B_{|B|}) \\ne \\gcd(C_1, C_2, \\ldots, C_{|C|})$$$ $$$^{\\text{∗}}$$$ $$$^{\\text{∗}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. "
  },
  {
    "title": "Baudelaire (hard version)",
    "url": "https://codeforces.com/problemset/problem/2106/G2",
    "description": "This is the Hard Version of the problem. The only difference between the two versions is that in the Hard Version the tree may be of any shape.This problem is interactive.Baudelaire is very rich, so he bought a tree of size $$$n$$$, rooted at some arbitrary node. Additionally, every node has a value of $$$1$$$ or $$$-1$$$. Cow the Nerd saw the tree and fell in love with it. However, computer science doesn't pay him enough, so he can't afford to buy it. Baudelaire decided to play a game with Cow the Nerd, and if he won, he would gift him the tree.Cow the Nerd does not know which node is the root, and he doesn't know the values of the nodes either. However, he can ask Baudelaire queries of two types:  $$$1$$$ $$$k$$$ $$$u_1$$$ $$$u_2$$$ $$$...$$$ $$$u_k$$$: Let $$$f(u)$$$ be the sum of the values of all nodes in the path from the root of the tree to node $$$u$$$. Cow the Nerd may choose an integer $$$k$$$ $$$(1 \\le k \\le n)$$$ and $$$k$$$ nodes $$$u_1, u_2, ..., u_k$$$, and he will receive the value $$$f(u_1) + f(u_2) + ... + f(u_k)$$$. $$$2$$$ $$$u$$$: Baudelaire will toggle the value of node $$$u$$$. Specifically, if the value of $$$u$$$ is $$$1$$$, it will become $$$-1$$$, and vice versa. Cow the Nerd wins if he guesses the value of every node correctly (the values of the final tree, after performing the queries) within $$$n + 200$$$ total queries. Can you help him win?"
  },
  {
    "title": "Baudelaire (easy version)",
    "url": "https://codeforces.com/problemset/problem/2106/G1",
    "description": "This is the easy version of the problem. The only difference between the two versions is that in this version, it is guaranteed that every node is adjacent to node $$$1$$$.This problem is interactive.Baudelaire is very rich, so he bought a tree of size $$$n$$$ that is rooted at some arbitrary node. Additionally, every node has a value of $$$1$$$ or $$$-1$$$. In this version, every node is adjacent to node $$$1$$$. However, please note that node $$$1$$$ is not necessarily the root.Cow the Nerd saw the tree and fell in love with it. However, computer science doesn't pay him enough, so he can't afford to buy it. Baudelaire decided to play a game with Cow the Nerd, and if he won, he would gift him the tree.Cow the Nerd does not know which node is the root, and he doesn't know the values of the nodes either. However, he can ask Baudelaire queries of two types:  $$$1$$$ $$$k$$$ $$$u_1$$$ $$$u_2$$$ $$$...$$$ $$$u_k$$$: Let $$$f(u)$$$ be the sum of the values of all nodes in the path from the root of the tree to node $$$u$$$. Cow the Nerd may choose an integer $$$k$$$ $$$(1 \\le k \\le n)$$$ and $$$k$$$ nodes $$$u_1, u_2, ..., u_k$$$, and he will receive the value $$$f(u_1) + f(u_2) + ... + f(u_k)$$$. $$$2$$$ $$$u$$$: Baudelaire will toggle the value of node $$$u$$$. Specifically, if the value of $$$u$$$ is $$$1$$$ it will become $$$-1$$$, and vice versa. Cow the Nerd wins if he guesses the value of every node correctly (the values of the final tree, after performing the queries) within $$$n + 200$$$ total queries. Can you help him win?"
  },
  {
    "title": "Goblin",
    "url": "https://codeforces.com/problemset/problem/2106/F",
    "description": "Dr. TC has a new patient called Goblin. He wants to test Goblin's intelligence, but he has gotten bored of his standard test. So, he decided to make it a bit harder.First, he creates a binary string$$$^{\\text{∗}}$$$ $$$s$$$ having $$$n$$$ characters. Then, he creates $$$n$$$ binary strings $$$a_1, a_2, \\ldots, a_n$$$. It is known that $$$a_i$$$ is created by first copying $$$s$$$, then flipping the $$$i$$$-th character ($$$\\texttt{1}$$$ becomes $$$\\texttt{0}$$$ and vice versa). After creating all $$$n$$$ strings, he arranges them into an $$$n \\times n$$$ grid $$$g$$$ where $$$g_{i, j} = a_{i_j}$$$. A set $$$S$$$ of size $$$k$$$ containing distinct integer pairs $$$\\{(x_1, y_1), (x_2, y_2), \\ldots, (x_k, y_k)\\}$$$ is considered good if:   $$$1 \\leq x_i, y_i \\leq n$$$ for all $$$1 \\leq i \\leq k$$$.  $$$g_{x_i, y_i} = \\texttt{0}$$$ for all $$$1 \\leq i \\leq k$$$.  For any two integers $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq k$$$), coordinate $$$(x_i, y_i)$$$ is reachable from coordinate $$$(x_j, y_j)$$$ by traveling through a sequence of adjacent cells (which share a side) that all have a value of $$$\\texttt{0}$$$. Goblin's task is to find the maximum possible size of a good set $$$S$$$. Because Dr. TC is generous, this time he gave him two seconds to find the answer instead of one. Goblin is not known for his honesty, so he has asked you to help him cheat.$$$^{\\text{∗}}$$$A binary string is a string that only consists of characters $$$\\texttt{1}$$$ and $$$\\texttt{0}$$$."
  },
  {
    "title": "Wolf",
    "url": "https://codeforces.com/problemset/problem/2106/E",
    "description": "Wolf has found $$$n$$$ sheep with tastiness values $$$p_1, p_2, ..., p_n$$$ where $$$p$$$ is a permutation$$$^{\\text{∗}}$$$. Wolf wants to perform binary search on $$$p$$$ to find the sheep with tastiness of $$$k$$$, but $$$p$$$ may not necessarily be sorted. The success of binary search on the range $$$[l, r]$$$ for $$$k$$$ is represented as $$$f(l, r, k)$$$, which is defined as follows:If $$$l > r$$$, then $$$f(l, r, k)$$$ fails. Otherwise, let $$$m = \\lfloor\\frac{l + r}{2}\\rfloor$$$, and:  If $$$p_m = k$$$, then $$$f(l, r, k)$$$ is successful,  If $$$p_m < k$$$, then $$$f(l, r, k) = f(m+1, r, k)$$$,  If $$$p_m > k$$$, then $$$f(l, r, k) = f(l, m-1, k)$$$. Cow the Nerd decides to help Wolf out. Cow the Nerd is given $$$q$$$ queries, each consisting of three integers $$$l$$$, $$$r$$$, and $$$k$$$. Before the search begins, Cow the Nerd may choose a non-negative integer $$$d$$$, and $$$d$$$ indices $$$1 \\le i_1 < i_2 < \\ldots < i_d \\le n$$$ where $$$p_{i_j} \\neq k$$$ over all $$$1 \\leq j \\leq d$$$. Then, he may re-order the elements $$$p_{i_1}, p_{i_2}, ..., p_{i_d}$$$ however he likes.For each query, output the minimum integer $$$d$$$ that Cow the Nerd must choose so that $$$f(l, r, k)$$$ can be successful, or report that it is impossible. Note that the queries are independent and the reordering is not actually performed.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array that contains every integer from $$$1$$$ to $$$n$$$ exactly once."
  },
  {
    "title": "Flower Boy",
    "url": "https://codeforces.com/problemset/problem/2106/D",
    "description": "Flower boy has a garden of $$$n$$$ flowers that can be represented as an integer sequence $$$a_1, a_2, \\dots, a_n$$$, where $$$a_i$$$ is the beauty of the $$$i$$$-th flower from the left.Igor wants to collect exactly $$$m$$$ flowers. To do so, he will walk the garden from left to right and choose whether to collect the flower at his current position. The $$$i$$$-th flower among ones he collects must have a beauty of at least $$$b_i$$$.Igor noticed that it might be impossible to collect $$$m$$$ flowers that satisfy his beauty requirements, so before he starts collecting flowers, he can pick any integer $$$k$$$ and use his magic wand to grow a new flower with beauty $$$k$$$ and place it anywhere in the garden (between two flowers, before the first flower, or after the last flower). Because his magic abilities are limited, he may do this at most once.Output the minimum integer $$$k$$$ Igor must pick when he performs the aforementioned operation to ensure that he can collect $$$m$$$ flowers. If he can collect $$$m$$$ flowers without using the operation, output $$$0$$$. If it is impossible to collect $$$m$$$ flowers despite using the operation, output $$$-1$$$."
  },
  {
    "title": "Cherry Bomb",
    "url": "https://codeforces.com/problemset/problem/2106/C",
    "description": "Two integer arrays $$$a$$$ and $$$b$$$ of size $$$n$$$ are complementary if there exists an integer $$$x$$$ such that $$$a_i + b_i = x$$$ over all $$$1 \\le i \\le n$$$. For example, the arrays $$$a = [2, 1, 4]$$$ and $$$b = [3, 4, 1]$$$ are complementary, since $$$a_i + b_i = 5$$$ over all $$$1 \\le i \\le 3$$$. However, the arrays $$$a = [1, 3]$$$ and $$$b = [2, 1]$$$ are not complementary.Cow the Nerd thinks everybody is interested in math, so he gave Cherry Bomb two integer arrays $$$a$$$ and $$$b$$$. It is known that $$$a$$$ and $$$b$$$ both contain $$$n$$$ non-negative integers not greater than $$$k$$$. Unfortunately, Cherry Bomb has lost some elements in $$$b$$$. Lost elements in $$$b$$$ are denoted with $$$-1$$$. Help Cherry Bomb count the number of possible arrays $$$b$$$ such that:  $$$a$$$ and $$$b$$$ are complementary.  All lost elements are replaced with non-negative integers no more than $$$k$$$. "
  },
  {
    "title": "St",
    "url": "https://codeforces.com/problemset/problem/2106/B",
    "description": "Given a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$ that contains every integer from $$$0$$$ to $$$n-1$$$ and a strip of $$$n$$$ cells, St. Chroma will paint the $$$i$$$-th cell of the strip in the color $$$\\operatorname{MEX}(p_1, p_2, ..., p_i)$$$$$$^{\\text{†}}$$$.For example, suppose $$$p = [1, 0, 3, 2]$$$. Then, St. Chroma will paint the cells of the strip in the following way: $$$[0, 2, 2, 4]$$$.You have been given two integers $$$n$$$ and $$$x$$$. Because St. Chroma loves color $$$x$$$, construct a permutation $$$p$$$ such that the number of cells in the strip that are painted color $$$x$$$ is maximized.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is a sequence of $$$n$$$ elements that contains every integer from $$$0$$$ to $$$n-1$$$ exactly once. For example, $$$[0, 3, 1, 2]$$$ is a permutation, but $$$[1, 2, 0, 1]$$$ isn't since $$$1$$$ appears twice, and $$$[1, 3, 2]$$$ isn't since $$$0$$$ does not appear at all.$$$^{\\text{†}}$$$The $$$\\operatorname{MEX}$$$ of a sequence is defined as the first non-negative integer that does not appear in it. For example, $$$\\operatorname{MEX}(1, 3, 0, 2) = 4$$$, and $$$\\operatorname{MEX}(3, 1, 2) = 0$$$."
  },
  {
    "title": "Dr",
    "url": "https://codeforces.com/problemset/problem/2106/A",
    "description": "In order to test his patients' intelligence, Dr. TC created the following test.First, he creates a binary string$$$^{\\text{∗}}$$$ $$$s$$$ having $$$n$$$ characters. Then, he creates $$$n$$$ binary strings $$$a_1, a_2, \\ldots, a_n$$$. It is known that $$$a_i$$$ is created by first copying $$$s$$$, then flipping the $$$i$$$'th character ($$$\\texttt{1}$$$ becomes $$$\\texttt{0}$$$ and vice versa). After creating all $$$n$$$ strings, he arranges them into a grid where the $$$i$$$'th row is $$$a_i$$$. For example,   If $$$s = \\texttt{101}$$$, $$$a = [\\texttt{001}, \\texttt{111}, \\texttt{100}]$$$.  If $$$s = \\texttt{0000}$$$, $$$a = [\\texttt{1000}, \\texttt{0100}, \\texttt{0010}, \\texttt{0001}]$$$. The patient needs to count the number of $$$1$$$s written on the board in less than a second. Can you pass the test?$$$^{\\text{∗}}$$$A binary string is a string that only consists of characters $$$\\texttt{1}$$$ and $$$\\texttt{0}$$$."
  },
  {
    "title": "Modulo 3",
    "url": "https://codeforces.com/problemset/problem/2104/G",
    "description": "Surely, you have seen problems which require you to output the answer modulo 109+710^9+7, 109+910^9+9, or 998244353998244353. But have you ever seen a problem where you have to print the answer modulo 33?You are given a functional graph consisting of nn vertices, numbered from 11 to nn. It is a directed graph, in which each vertex has exactly one outgoing arc. The graph is given as the array g1,g2,…,gng_1, g_2, \\dots, g_n, where gig_i means that there is an arc that goes from ii to gig_i. For some vertices, the outgoing arcs might be self-loops.Initially, all vertices of the graph are colored in color 11. You can perform the following operation: select a vertex and a color from 11 to kk, and then color this vertex and all vertices that are reachable from it. You can perform this operation any number of times (even zero).You should process qq queries. The query is described by three integers xx, yy and kk. For each query, you should:   assign gx:=yg_x := y;  then calculate the number of different graph colorings for the given value of kk (two colorings are different if there exists at least one vertex that is colored in different colors in these two colorings); since the answer can be very large, print it modulo 33. Note that in every query, the initial coloring of the graph is reset (all vertices initially have color 11 in each query)."
  },
  {
    "title": "Numbers and Strings",
    "url": "https://codeforces.com/problemset/problem/2104/F",
    "description": "For each integer $$$x$$$ from $$$1$$$ to $$$n$$$, we will form the string $$$S(x)$$$ according to the following rules:  compute $$$(x+1)$$$;  write $$$x$$$ and $$$x+1$$$ next to each other in the decimal system without separators and leading zeros;  in the resulting string, sort all digits in non-decreasing order. For example, the string $$$S(139)$$$ is 011349 (before sorting the digits, it is 139140). The string $$$S(99)$$$ is 00199.Your task is to count the number of distinct strings among $$$S(1), S(2), \\dots, S(n)$$$."
  },
  {
    "title": "Unpleasant Strings",
    "url": "https://codeforces.com/problemset/problem/2104/E",
    "description": "Let's call a letter allowed if it is a lowercase letter and is one of the first $$$k$$$ letters of the Latin alphabet.You are given a string $$$s$$$ of length $$$n$$$, consisting only of allowed letters.Let's call a string $$$t$$$ pleasant if $$$t$$$ is a subsequence of $$$s$$$.You are given $$$q$$$ strings $$$t_1, t_2, \\dots, t_q$$$. All of them consist only of allowed letters. For each string $$$t_i$$$, calculate the minimum number of allowed letters you need to append to it on the right so that it stops being pleasant.A sequence $$$t$$$ is a subsequence of a sequence $$$s$$$ if $$$t$$$ can be obtained from $$$s$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Array and GCD",
    "url": "https://codeforces.com/problemset/problem/2104/D",
    "description": "You are given an integer array $$$a$$$ of size $$$n$$$.You can perform the following operations any number of times (possibly, zero):   pay one coin and increase any element of the array by $$$1$$$ (you must have at least $$$1$$$ coin to perform this operation);  gain one coin and decrease any element of the array by $$$1$$$. Let's say that an array is ideal if both of the following conditions hold:   each element of the array is at least $$$2$$$;  for each pair of indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$; $$$i \\ne j$$$) the greatest common divisor (GCD) of $$$a_i$$$ and $$$a_j$$$ is equal to $$$1$$$. If the array has less than $$$2$$$ elements, this condition is automatically satisfied. Let's say that an array is beautiful if it can be transformed into an ideal array using the aforementioned operations, provided that you initially have no coins. If the array is already ideal, then it is also beautiful.The given array is not necessarily beautiful or ideal. You can remove any elements from it (including removing the entire array or not removing anything at all). Your task is to calculate the minimum number of elements you have to remove (possibly, zero) from the array $$$a$$$ to make it beautiful."
  },
  {
    "title": "Card Game",
    "url": "https://codeforces.com/problemset/problem/2104/C",
    "description": "Alice and Bob are playing a game. They have $$$n$$$ cards numbered from $$$1$$$ to $$$n$$$. At the beginning of the game, some of these cards are given to Alice, and the rest are given to Bob.Card with number $$$i$$$ beats card with number $$$j$$$ if and only if $$$i > j$$$, with one exception: card $$$1$$$ beats card $$$n$$$.The game continues as long as each player has at least one card. During each turn, the following occurs:  Alice chooses one of her cards and places it face up on the table;  Bob, seeing Alice's card, chooses one of his cards and places it face up on the table;  if Alice's card beats Bob's card, both cards are taken by Alice. Otherwise, both cards are taken by Bob. A player can use a card that they have taken during one of the previous turns.The player who has no cards at the beginning of a turn loses. Determine who will win if both players play optimally."
  },
  {
    "title": "Move to the End",
    "url": "https://codeforces.com/problemset/problem/2104/B",
    "description": "You are given an array $$$a$$$ consisting of $$$n$$$ integers.For every integer $$$k$$$ from $$$1$$$ to $$$n$$$, you have to do the following:  choose an arbitrary element of $$$a$$$ and move it to the right end of the array (you can choose the last element, then the array won't change);  print the sum of $$$k$$$ last elements of $$$a$$$;  move the element you've chosen on the first step to its original position (restore the original array $$$a$$$). For every $$$k$$$, you choose the element which you move so that the value you print is the maximum possible.Calculate the value you print for every $$$k$$$."
  },
  {
    "title": "Three Decks",
    "url": "https://codeforces.com/problemset/problem/2104/A",
    "description": "Monocarp placed three decks of cards in a row on the table. The first deck consists of $$$a$$$ cards, the second deck consists of $$$b$$$ cards, and the third deck consists of $$$c$$$ cards, with the condition $$$a < b < c$$$.Monocarp wants to take some number of cards (at least one, but no more than $$$c$$$) from the third deck and distribute them between the first two decks so that each of the taken cards ends up in either the first or the second deck. It is possible that all the cards taken from the third deck will go into the same deck.Your task is to determine whether Monocarp can make the number of cards in all three decks equal using the described operation."
  },
  {
    "title": "Maximize Nor",
    "url": "https://codeforces.com/problemset/problem/2103/F",
    "description": "  The bitwise nor$$$^{\\text{∗}}$$$ of an array of $$$k$$$-bit integers $$$b_1, b_2, \\ldots, b_m$$$ can be computed by calculating the bitwise nor cumulatively from left to right. More formally, $$$\\operatorname{nor}(b_1, b_2, \\ldots, b_m) = \\operatorname{nor}(\\operatorname{nor}(b_1, b_2, \\ldots, b_{m - 1}), b_m)$$$ for $$$m\\ge 2$$$, and $$$\\operatorname{nor}(b_1) = b_1$$$.You are given an array of $$$k$$$-bit integers $$$a_1, a_2, \\ldots, a_n$$$. For each index $$$i$$$ ($$$1\\le i\\le n$$$), find the maximum bitwise nor among all subarrays$$$^{\\text{†}}$$$ of $$$a$$$ containing index $$$i$$$. In other words, for each index $$$i$$$, find the maximum value of $$$\\operatorname{nor}(a_l, a_{l+1}, \\ldots, a_r)$$$ among all $$$1 \\le l \\le i \\le r \\le n$$$.$$$^{\\text{∗}}$$$ The logical nor of two boolean values is $$$1$$$ if both values are $$$0$$$, and $$$0$$$ otherwise. The bitwise nor of two $$$k$$$-bit integers is calculated by performing the logical nor operation on each pair of the corresponding bits.For example, let us compute $$$\\operatorname{nor}(2, 6)$$$ when they are represented as $$$4$$$-bit numbers. In binary, $$$2$$$=$$$0010_2$$$ and $$$6=0110_2$$$. Therefore, $$$\\operatorname{nor}(2,6) = 1001_2 = 9$$$ as by performing the logical nor operations from left to right, we have:  $$$\\operatorname{nor}(0,0) = 1$$$  $$$\\operatorname{nor}(0,1) = 0$$$  $$$\\operatorname{nor}(1,0) = 0$$$  $$$\\operatorname{nor}(1,1) = 0$$$ Note that if $$$2$$$ and $$$6$$$ were represented as $$$3$$$-bit integers instead, then $$$\\operatorname{nor}(2,6) = 1$$$. $$$^{\\text{†}}$$$An array $$$x$$$ is a subarray of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Keep the Sum",
    "url": "https://codeforces.com/problemset/problem/2103/E",
    "description": " You are given an integer $$$k$$$ and an array $$$a$$$ of length $$$n$$$, where each element satisfies $$$0 \\le a_i \\le k$$$ for all $$$1 \\le i \\le n$$$. You can perform the following operation on the array:  Choose two distinct indices $$$i$$$ and $$$j$$$ ($$$1 \\le i,j \\le n$$$ and $$$i \\neq j$$$) such that $$$a_i + a_j = k$$$.  Select an integer $$$x$$$ satisfying $$$-a_j \\le x \\le a_i$$$.  Decrease $$$a_i$$$ by $$$x$$$ and increase $$$a_j$$$ by $$$x$$$. In other words, update $$$a_i := a_i - x$$$ and $$$a_j := a_j + x$$$. Note that the constraints on $$$x$$$ ensure that all elements of array $$$a$$$ remain between $$$0$$$ and $$$k$$$ throughout the operations.Your task is to determine whether it is possible to make the array $$$a$$$ non-decreasing$$$^{\\text{∗}}$$$ using the above operation. If it is possible, find a sequence of at most $$$3n$$$ operations that transforms the array into a non-decreasing one.It can be proven that if it is possible to make the array non-decreasing using the above operation, there exists a solution that uses at most $$$3n$$$ operations.$$$^{\\text{∗}}$$$ An array $$$a_1, a_2, \\ldots, a_n$$$ is said to be non-decreasing if for all $$$1 \\le i \\le n - 1$$$, it holds that $$$a_i \\le a_{i+1}$$$. "
  },
  {
    "title": "Local Construction",
    "url": "https://codeforces.com/problemset/problem/2103/D",
    "description": "  An element $$$b_i$$$ ($$$1\\le i\\le m$$$) in an array $$$b_1, b_2, \\ldots, b_m$$$ is a local minimum if at least one of the following holds:   $$$2\\le i\\le m - 1$$$ and $$$b_i < b_{i - 1}$$$ and $$$b_i < b_{i + 1}$$$, or  $$$i = 1$$$ and $$$b_1 < b_2$$$, or  $$$i = m$$$ and $$$b_m < b_{m - 1}$$$. Similarly, an element $$$b_i$$$ ($$$1\\le i\\le m$$$) in an array $$$b_1, b_2, \\ldots, b_m$$$ is a local maximum if at least one of the following holds:   $$$2\\le i\\le m - 1$$$ and $$$b_i > b_{i - 1}$$$ and $$$b_i > b_{i + 1}$$$, or  $$$i = 1$$$ and $$$b_1 > b_2$$$, or  $$$i = m$$$ and $$$b_m > b_{m - 1}$$$. Note that local minima and maxima are not defined for arrays with only one element.There is a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$. The following two operations are applied to permutation $$$p$$$ alternately, starting from operation 1, until there is only one element left in $$$p$$$:  Operation 1 — remove all elements of $$$p$$$ which are not local minima.  Operation 2 — remove all elements of $$$p$$$ which are not local maxima. More specifically, operation 1 is applied during every odd iteration, and operation 2 is applied during every even iteration, until there is only one element left in $$$p$$$.For each index $$$i$$$ ($$$1\\le i\\le n$$$), let $$$a_i$$$ be the iteration number that element $$$p_i$$$ is removed, or $$$-1$$$ if it was never removed.It can be proven that there will be only one element left in $$$p$$$ after at most $$$\\lceil \\log_2 n\\rceil$$$ iterations (in other words, $$$a_i \\le \\lceil \\log_2 n\\rceil$$$).You are given the array $$$a_1, a_2, \\ldots, a_n$$$. Your task is to construct any permutation $$$p$$$ of $$$n$$$ elements that satisfies array $$$a$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Median Splits",
    "url": "https://codeforces.com/problemset/problem/2103/C",
    "description": "  The median of an array $$$b_1, b_2, \\ldots b_m$$$, written as $$$\\operatorname{med}(b_1, b_2, \\ldots, b_m)$$$, is the $$$\\left\\lceil \\frac{m}{2} \\right\\rceil$$$-th$$$^{\\text{∗}}$$$ smallest element of array $$$b$$$.You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$ and an integer $$$k$$$. You need to determine whether there exists a pair of indices $$$1 \\le l < r < n$$$ such that:$$$$$$\\operatorname{med}(\\operatorname{med}(a_1, a_2, \\ldots, a_l), \\operatorname{med}(a_{l+1}, a_{l+2}, \\ldots, a_r), \\operatorname{med}(a_{r+1}, a_{r+2}, \\ldots, a_n)) \\le k.$$$$$$In other words, determine whether it is possible to split the array into three contiguous subarrays$$$^{\\text{†}}$$$ such that the median of the three subarray medians is less than or equal to $$$k$$$.$$$^{\\text{∗}}$$$$$$\\lceil x \\rceil$$$ is the ceiling function which returns the least integer greater than or equal to $$$x$$$.$$$^{\\text{†}}$$$An array $$$x$$$ is a subarray of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Binary Typewriter",
    "url": "https://codeforces.com/problemset/problem/2103/B",
    "description": "  You are given a binary string $$$s$$$ of length $$$n$$$ and a typewriter with two buttons: 0 and 1. Initially, your finger is on the button 0. You can do the following two operations:  Press the button your finger is currently on. This will type out the character that is on the button.  Move your finger to the other button. If your finger is on button 0, move it to button 1, and vice versa. The cost of a binary string is defined as the minimum number of operations needed to type the entire string. Before typing, you may reverse at most one substring$$$^{\\text{∗}}$$$ of $$$s$$$. More formally, you can choose two indices $$$1\\le l\\le r\\le n$$$, and reverse the substring $$$s_{l\\ldots r}$$$, resulting in the new string $$$s_1s_2\\ldots s_{l-1}s_rs_{r-1}\\ldots s_ls_{r+1}\\ldots s_n$$$. Your task is to find the minimum possible cost among all strings obtainable by performing at most one substring reversal on $$$s$$$.$$$^{\\text{∗}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. "
  },
  {
    "title": "Common Multiple",
    "url": "https://codeforces.com/problemset/problem/2103/A",
    "description": " You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. An array $$$x_1, x_2, \\ldots, x_m$$$ is beautiful if there exists an array $$$y_1, y_2, \\ldots, y_m$$$ such that the elements of $$$y$$$ are distinct (in other words, $$$y_i\\neq y_j$$$ for all $$$1 \\le i < j \\le m$$$), and the product of $$$x_i$$$ and $$$y_i$$$ is the same for all $$$1 \\le i \\le m$$$ (in other words, $$$x_i\\cdot y_i = x_j\\cdot y_j$$$ for all $$$1 \\le i < j \\le m$$$).Your task is to determine the maximum size of a subsequence$$$^{\\text{∗}}$$$ of array $$$a$$$ that is beautiful.$$$^{\\text{∗}}$$$A sequence $$$b$$$ is a subsequence of a sequence $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "The Picky Cat",
    "url": "https://codeforces.com/problemset/problem/2102/B",
    "description": " You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. You are allowed to do the following operation any number of times (possibly zero):  Choose an index $$$i$$$ ($$$1\\le i\\le n$$$). Multiply $$$a_i$$$ by $$$-1$$$ (i.e., update $$$a_i := -a_i$$$). Your task is to determine whether it is possible to make the element at index $$$1$$$ become the median of the array after doing the above operation any number of times. Note that operations can be applied to index $$$1$$$ as well, meaning the median can be either the original value of $$$a_1$$$ or its negation.The median of an array $$$b_1, b_2, \\ldots, b_m$$$ is defined as the $$$\\left\\lceil \\frac{m}{2} \\right\\rceil$$$-th$$$^{\\text{∗}}$$$ smallest element of array $$$b$$$. For example, the median of the array $$$[3, 1, 2]$$$ is $$$2$$$, while the median of the array $$$[10, 1, 8, 3]$$$ is $$$3$$$.It is guaranteed that the absolute value of the elements of $$$a$$$ are distinct. Formally, there are no pairs of indices $$$1\\le i < j\\le n$$$ where $$$|a_i| = |a_j|$$$.$$$^{\\text{∗}}$$$$$$\\lceil x \\rceil$$$ is the ceiling function which returns the least integer greater than or equal to $$$x$$$."
  },
  {
    "title": "Dinner Time",
    "url": "https://codeforces.com/problemset/problem/2102/A",
    "description": "Given four integers $$$n$$$, $$$m$$$, $$$p$$$, and $$$q$$$, determine whether there exists an integer array $$$a_1, a_2, \\ldots, a_n$$$ (elements may be negative) satisfying the following conditions:  The sum of all elements in the array is equal to $$$m$$$: $$$$$$a_1 + a_2 + \\ldots + a_n = m$$$$$$  The sum of every $$$p$$$ consecutive elements is equal to $$$q$$$: $$$$$$a_i + a_{i + 1} + \\ldots + a_{i + p - 1} = q,\\qquad\\text{ for all }1\\le i\\le n-p+1$$$$$$ "
  },
  {
    "title": "Shoo Shatters the Sunshine",
    "url": "https://codeforces.com/problemset/problem/2101/F",
    "description": " You are given a tree with nn vertices, where each vertex can be colored red, blue, or white. The coolness of a coloring is defined as the maximum distance∗^{\\text{∗}} between a red and a blue vertex.Formally, if we denote the color of the ii-th vertex as cic_i, the coolness of a coloring is maxd(u,v)\\max d(u, v) over all pairs of vertices 1≤u,v≤n1\\le u, v\\le n where cuc_u is red and cvc_v is blue. If there are no red or no blue vertices, the coolness is zero.Your task is to calculate the sum of coolness over all 3n3^n possible colorings of the tree, modulo 998244353998\\,244\\,353.∗^{\\text{∗}}The distance between two vertices aa and bb in a tree is equal to the number of edges on the unique simple path between vertex aa and vertex bb."
  },
  {
    "title": "Kia Bakes a Cake",
    "url": "https://codeforces.com/problemset/problem/2101/E",
    "description": " You are given a binary string $$$s$$$ of length $$$n$$$ and a tree $$$T$$$ with $$$n$$$ vertices. Let $$$k$$$ be the number of 1s in $$$s$$$. We will construct a complete undirected weighted graph with $$$k$$$ vertices as follows:  For each $$$1\\le i\\le n$$$ with $$$s_i = \\mathtt{1}$$$, create a vertex labeled $$$i$$$.  For any two vertices labeled $$$u$$$ and $$$v$$$ that are created in the above step, define the edge weight between them $$$w(u, v)$$$ as the distance$$$^{\\text{∗}}$$$ between vertex $$$u$$$ and vertex $$$v$$$ in the tree $$$T$$$. A simple path$$$^{\\text{†}}$$$ that visits vertices labeled $$$v_1, v_2, \\ldots, v_m$$$ in this order is nice if for all $$$1\\le i\\le m - 2$$$, the condition $$$2\\cdot w(v_i, v_{i + 1})\\le w(v_{i + 1}, v_{i + 2})$$$ holds. In other words, the weight of each edge in the path must be at least twice the weight of the previous edge. Note that $$$s_{v_i} = \\mathtt{1}$$$ has to be satisfied for all $$$1\\le i\\le m$$$, as otherwise, there would be no vertex with the corresponding label.For each vertex labeled $$$i$$$ ($$$1\\le i\\le n$$$ and $$$s_i = \\mathtt{1}$$$) in the complete undirected weighted graph, determine the maximum number of vertices in any nice simple path starting from the vertex labeled $$$i$$$.$$$^{\\text{∗}}$$$The distance between two vertices $$$a$$$ and $$$b$$$ in a tree is equal to the number of edges on the unique simple path between vertex $$$a$$$ and vertex $$$b$$$.$$$^{\\text{†}}$$$A path is a sequence of vertices $$$v_1, v_2, \\ldots, v_m$$$ such that there is an edge between $$$v_i$$$ and $$$v_{i + 1}$$$ for all $$$1\\le i\\le m - 1$$$. A simple path is a path with no repeated vertices, i.e., $$$v_i\\neq v_j$$$ for all $$$1\\le i < j\\le m$$$."
  },
  {
    "title": "Mani and Segments",
    "url": "https://codeforces.com/problemset/problem/2101/D",
    "description": "    An array $$$b$$$ of length $$$|b|$$$ is cute if the sum of the length of its Longest Increasing Subsequence (LIS) and the length of its Longest Decreasing Subsequence (LDS)$$$^{\\text{∗}}$$$ is exactly one more than the length of the array. More formally, the array $$$b$$$ is cute if $$$\\operatorname{LIS}(b) + \\operatorname{LDS}(b) = |b| + 1$$$.You are given a permutation $$$a$$$ of length $$$n$$$$$$^{\\text{†}}$$$. Your task is to count the number of non-empty subarrays$$$^{\\text{‡}}$$$ of permutation $$$a$$$ that are cute.$$$^{\\text{∗}}$$$A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. The longest increasing (decreasing) subsequence of an array is the longest subsequence such that its elements are ordered in strictly increasing (decreasing) order.$$$^{\\text{†}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{‡}}$$$An array $$$x$$$ is a subarray of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "23 Kingdom",
    "url": "https://codeforces.com/problemset/problem/2101/C",
    "description": " The distance of a value $$$x$$$ in an array $$$c$$$, denoted as $$$d_x(c)$$$, is defined as the largest gap between any two occurrences of $$$x$$$ in $$$c$$$. Formally, $$$d_x(c) = \\max(j - i)$$$ over all pairs $$$i < j$$$ where $$$c_i = c_j = x$$$. If $$$x$$$ appears only once or not at all in $$$c$$$, then $$$d_x(c) = 0$$$. The beauty of an array is the sum of the distances of each distinct value in the array. Formally, the beauty of an array $$$c$$$ is equal to $$$\\sum\\limits_{1\\le x\\le n} d_x(c)$$$.Given an array $$$a$$$ of length $$$n$$$, an array $$$b$$$ is nice if it also has length $$$n$$$ and its elements satisfy $$$1\\le b_i\\le a_i$$$ for all $$$1\\le i\\le n$$$. Your task is to find the maximum possible beauty of any nice array."
  },
  {
    "title": "Quartet Swapping",
    "url": "https://codeforces.com/problemset/problem/2101/B",
    "description": "   You are given a permutation $$$a$$$ of length $$$n$$$$$$^{\\text{∗}}$$$. You are allowed to do the following operation any number of times (possibly zero):  Choose an index $$$1\\le i\\le n - 3$$$. Then, swap $$$a_i$$$ with $$$a_{i + 2}$$$, and $$$a_{i + 1}$$$ with $$$a_{i + 3}$$$ simultaneously. In other words, permutation $$$a$$$ will be transformed from $$$[\\ldots, a_i, a_{i+1}, a_{i+2}, a_{i+3}, \\ldots]$$$ to $$$[\\ldots, a_{i+2}, a_{i+3}, a_{i}, a_{i+1}, \\ldots]$$$. Determine the lexicographically smallest permutation$$$^{\\text{†}}$$$ that can be obtained by applying the above operation any number of times.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$An array $$$x$$$ is lexicographically smaller than an array $$$y$$$ of the same size if and only if the following holds:   in the first position where $$$x$$$ and $$$y$$$ differ, the array $$$x$$$ has a smaller element than the corresponding element in $$$y$$$.  "
  },
  {
    "title": "Mex in the Grid",
    "url": "https://codeforces.com/problemset/problem/2101/A",
    "description": " You are given $$$n^2$$$ cards with values from $$$0$$$ to $$$n^2-1$$$. You are to arrange them in a $$$n$$$ by $$$n$$$ grid such that there is exactly one card in each cell.The MEX (minimum excluded value) of a subgrid$$$^{\\text{∗}}$$$ is defined as the smallest non-negative integer that does not appear in the subgrid.Your task is to arrange the cards such that the sum of MEX values over all $$$\\left(\\frac{n(n+1)}{2}\\right)^2$$$ subgrids is maximized.$$$^{\\text{∗}}$$$A subgrid of a $$$n$$$ by $$$n$$$ grid is specified by four numbers $$$l_1, r_1, l_2, r_2$$$ satisfying $$$1\\le l_1\\le r_1\\le n$$$ and $$$1\\le l_2\\le r_2\\le n$$$. The element in the $$$i$$$-th row and the $$$j$$$-th column of the grid is part of the subgrid if and only if $$$l_1\\le i\\le r_1$$$ and $$$l_2\\le j\\le r_2$$$."
  },
  {
    "title": "Sasha and the Apartment Purchase",
    "url": "https://codeforces.com/problemset/problem/2098/B",
    "description": "Sasha wants to buy an apartment on a street where the houses are numbered from $$$1$$$ to $$$10^9$$$ from left to right.There are $$$n$$$ bars on this street, located in houses with numbers $$$a_1, a_2, \\ldots, a_n$$$. Note that there might be multiple bars in the same house, and in this case, these bars are considered distinct.Sasha is afraid that by the time he buys the apartment, some bars may close, but no more than $$$k$$$ bars can close.For any house with number $$$x$$$, define $$$f(x)$$$ as the sum of $$$|x - y|$$$ over all open bars $$$y$$$ (that is, after closing some bars).Sasha can potentially buy an apartment in a house with number $$$x$$$ (where $$$1 \\le x \\le 10^9$$$) if and only if it is possible to close at most $$$k$$$ bars so that after that $$$f(x)$$$ becomes minimal among all houses.Determine how many different houses Sasha can potentially buy an apartment in."
  },
  {
    "title": "Vadim's Collection",
    "url": "https://codeforces.com/problemset/problem/2098/A",
    "description": "We call a phone number a beautiful if it is a string of $$$10$$$ digits, where the $$$i$$$-th digit from the left is at least $$$10 - i$$$. That is, the first digit must be at least $$$9$$$, the second at least $$$8$$$, $$$\\ldots$$$, with the last digit being at least $$$0$$$.For example, 9988776655 is a beautiful phone number, while 9099999999 is not, since the second digit, which is $$$0$$$, is less than $$$8$$$.Vadim has a beautiful phone number. He wants to rearrange its digits in such a way that the result is the smallest possible beautiful phone number. Help Vadim solve this problem.Please note that the phone numbers are compared as integers."
  },
  {
    "title": "Lost Luggage",
    "url": "https://codeforces.com/problemset/problem/2097/F",
    "description": "As is known, the airline \"Trouble\" often loses luggage, and concerned journalists decided to calculate the maximum number of luggage pieces that may not return to travelers.The airline \"Trouble\" operates flights between $$$n$$$ airports, numbered from $$$1$$$ to $$$n$$$. The journalists' experiment will last for $$$m$$$ days. It is known that at midnight before the first day of the experiment, there were $$$s_j$$$ lost pieces of luggage in the $$$j$$$-th airport. On the $$$i$$$-th day, the following occurs:  In the morning, $$$2n$$$ flights take off simultaneously, including $$$n$$$ flights of the first type and $$$n$$$ flights of the second type.   The $$$j$$$-th flight of the first type flies from airport $$$j$$$ to airport $$$(((j-2) \\bmod n )+ 1)$$$ (the previous airport, with the first airport being the last), and it can carry no more than $$$a_{i,j}$$$ lost pieces of luggage.  The $$$j$$$-th flight of the second type flies from airport $$$j$$$ to airport $$$((j \\bmod n) + 1)$$$ (the next airport, with the last airport being the first), and it can carry no more than $$$c_{i,j}$$$ lost pieces of luggage.   In the afternoon, a check of lost luggage is conducted at the airports. If after the flights have departed on that day, there are $$$x$$$ pieces of luggage remaining in the $$$j$$$-th airport and $$$x \\ge b_{i, j}$$$, then at least $$$x - b_{i, j}$$$ pieces of luggage are found, and they cease to be lost.  In the evening, all $$$2n$$$ flights conclude, and the lost luggage transported that day arrives at the corresponding airports. For each $$$k$$$ from $$$1$$$ to $$$m$$$, the journalists want to know the maximum number of lost pieces of luggage that may be unfound during the checks over the first $$$k$$$ days. Note that for each $$$k$$$, these values are calculated independently."
  },
  {
    "title": "Clearing the Snowdrift",
    "url": "https://codeforces.com/problemset/problem/2097/E",
    "description": "Boy Vasya loves to travel very much. In particular, flying in airplanes brings him extraordinary pleasure. He was about to fly to another city, but the runway was heavily covered with snow and needed to be cleared.The runway can be represented as $$$n$$$ consecutive sections numbered from $$$1$$$ to $$$n$$$. The snowstorm was quite strong, but it has already stopped, so Vasya managed to calculate that the $$$i$$$-th section is covered with $$$a_i$$$ meters of snow. For such situations, the airport has a snowplow that works in a rather unusual way. In one minute, the snowplow can do the following:  Choose a consecutive segment of length no more than $$$d$$$ and remove one meter of snow from the most snow-covered sections.Formally, one can choose $$$1 \\le l \\le r \\le n$$$ ($$$r - l + 1 \\le d$$$). After that, $$$c = \\max \\{ a_l, a_{l + 1}, \\ldots , a_r \\}$$$ is calculated, and if $$$c > 0$$$, then for all $$$i \\colon l \\le i \\le r$$$ such that $$$a_i = c$$$, the value of $$$a_i$$$ is decreased by one. Vasya has been preparing for the flight for a long time and wants to understand how much time he has left to wait until all sections are completely cleared of snow. In other words, it is required to calculate the minimum number of minutes that the snowplow will need to achieve $$$a_i = 0$$$ for all $$$i$$$ from $$$1$$$ to $$$n$$$."
  },
  {
    "title": "Homework",
    "url": "https://codeforces.com/problemset/problem/2097/D",
    "description": "Some teachers work at the educational center \"Sirius\" while simultaneously studying at the university. In this case, the trip does not exempt them from completing their homework, so they do their homework right on the plane. Artem is one of those teachers, and he was assigned the following homework at the university.With an arbitrary string $$$a$$$ of even length $$$m$$$, he can perform the following operation. Artem splits the string $$$a$$$ into two halves $$$x$$$ and $$$y$$$ of equal length, after which he performs exactly one of three actions:   For each $$$i \\in \\left\\{ 1, 2, \\ldots, \\frac{m}{2}\\right\\}$$$ assign $$$x_i = (x_i + y_i) \\bmod 2$$$;  For each $$$i \\in \\left\\{ 1, 2, \\ldots, \\frac{m}{2}\\right\\}$$$ assign $$$y_i = (x_i + y_i) \\bmod 2$$$;  Perform an arbitrary number of operations (the same operations defined above, applied recursively) on the strings $$$x$$$ and $$$y$$$, independently of each other. Note that in this case, the strings $$$x$$$ and $$$y$$$ must be of even length.  After that, the string $$$a$$$ is replaced by the strings $$$x$$$ and $$$y$$$, concatenated in the same order.Unfortunately, Artem fell asleep on the plane, so you will have to complete his homework. Artem has two binary strings $$$s$$$ and $$$t$$$ of length $$$n$$$, each consisting of $$$n$$$ characters 0 or 1. Determine whether it is possible to make string $$$s$$$ equal to string $$$t$$$ with an arbitrary number of operations."
  },
  {
    "title": "Bermuda Triangle",
    "url": "https://codeforces.com/problemset/problem/2097/C",
    "description": "The Bermuda Triangle — a mysterious area in the Atlantic Ocean where, according to rumors, ships and airplanes disappear without a trace. Some blame magnetic anomalies, others — portals to other worlds, but the truth remains hidden in a fog of mysteries.A regular passenger flight 814 was traveling from Miami to Nassau on a clear sunny day. Nothing foreshadowed trouble until the plane entered a zone of strange flickering fog. Radio communication was interrupted, the instruments spun wildly, and flashes of unearthly light flickered outside the windows.For simplicity, we will assume that the Bermuda Triangle and the airplane are on a plane, and the vertices of the triangle have coordinates $$$(0, 0)$$$, $$$(0, n)$$$, and $$$(n, 0)$$$. Initially, the airplane is located at the point $$$(x, y)$$$ strictly inside the Bermuda Triangle and is moving with a velocity vector $$$(v_x, v_y)$$$. All instruments have failed, so the crew cannot control the airplane.The airplane can escape from the triangle if it ever reaches exactly one of the vertices of the triangle. However, if at any moment (possibly non-integer) the airplane hits the boundary of the triangle (but not at a vertex), its velocity vector is immediately reflected relative to that side$$$^\\dagger$$$, and the airplane continues to move in the new direction.Determine whether the airplane can ever escape from the Bermuda Triangle (i.e., reach exactly one of its vertices). If this is possible, also calculate how many times before that moment the airplane will hit the boundary of the triangle (each touch of the boundary, even at the same point, counts; crossing a vertex does not count).$$$^\\dagger$$$ Reflection occurs according to the usual laws of physics. The angle of incidence equals the angle of reflection."
  },
  {
    "title": "Baggage Claim",
    "url": "https://codeforces.com/problemset/problem/2097/B",
    "description": "Every airport has a baggage claim area, and Balbesovo Airport is no exception. At some point, one of the administrators at Sheremetyevo came up with an unusual idea: to change the traditional shape of the baggage claim conveyor from a carousel to a more complex form.Suppose that the baggage claim area is represented as a rectangular grid of size $$$n \\times m$$$. The administration proposed that the path of the conveyor should pass through the cells $$$p_1, p_2, \\ldots, p_{2k+1}$$$, where $$$p_i = (x_i, y_i)$$$.For each cell $$$p_i$$$ and the next cell $$$p_{i+1}$$$ (where $$$1 \\leq i \\leq 2k$$$), these cells must share a common side. Additionally, the path must be simple, meaning that for no pair of indices $$$i \\neq j$$$ should the cells $$$p_i$$$ and $$$p_j$$$ coincide.Unfortunately, the route plan was accidentally spoiled by spilled coffee, and only the cells with odd indices of the path were preserved: $$$p_1, p_3, p_5, \\ldots, p_{2k+1}$$$. Your task is to determine the number of ways to restore the original complete path $$$p_1, p_2, \\ldots, p_{2k+1}$$$ given these $$$k+1$$$ cells.Since the answer can be very large, output it modulo $$$10^9+7$$$."
  },
  {
    "title": "Sports Betting",
    "url": "https://codeforces.com/problemset/problem/2097/A",
    "description": "The boarding process for various flights can occur in different ways: either by bus or through a telescopic jet bridge. Every day, exactly one flight is made from St. Petersburg to Minsk, and Vadim decided to demonstrate to the students that he always knows in advance how the boarding will take place.Vadim made a bet with $$$n$$$ students, and with the $$$i$$$-th student, he made a bet on day $$$a_i$$$. Vadim wins the bet if he correctly predicts the boarding process on both day $$$a_i+1$$$ and day $$$a_i+2$$$.Although Vadim does not know in advance how the boarding will occur, he really wants to win the bet at least with one student and convince him of his predictive abilities. Check if there exists a strategy for Vadim that allows him to guarantee success."
  },
  {
    "title": "Wonderful XOR Problem",
    "url": "https://codeforces.com/problemset/problem/2096/H",
    "description": "You are the proud... never mind, just solve this problem.There are nn intervals [l1,r1],[l2,r2],…[ln,rn][l_1, r_1], [l_2, r_2], \\ldots [l_n, r_n]. For each xx from 00 to 2m−12^m - 1, find the number, modulo 998244353998\\,244\\,353, of sequences a1,a2,…ana_1, a_2, \\ldots a_n such that: li≤ai≤ril_i \\leq a_i \\leq r_i for all ii from 11 to nn;  a1⊕a2⊕…⊕an=xa_1 \\oplus a_2 \\oplus \\ldots \\oplus a_n = x, where ⊕\\oplus denotes the bitwise XOR operator. "
  },
  {
    "title": "Wonderful Guessing Game",
    "url": "https://codeforces.com/problemset/problem/2096/G",
    "description": "This is an interactive problem.You are a proud teacher at the Millennium Science School. Today, a student named Alice challenges you to a guessing game.Alice is thinking of an integer from $$$1$$$ to $$$n$$$, and you must guess it by asking her some queries.To make things harder, she says you must ask all the queries first, and she will ignore exactly $$$1$$$ query.For each query, you choose an array of $$$k$$$ distinct integers from $$$1$$$ to $$$n$$$, where $$$k$$$ is even. Then, Alice will respond with one of the following: $$$\\texttt{L}$$$: the number is one of the first $$$\\frac{k}{2}$$$ elements of the array;  $$$\\texttt{R}$$$: the number is one of the last $$$\\frac{k}{2}$$$ elements of the array;  $$$\\texttt{N}$$$: the number is not in the array;  $$$\\texttt{?}$$$: this query is ignored.Alice is impatient, so you must find a strategy that minimizes the number of queries. Can you do it?Formally, let $$$f(n)$$$ be the minimum number of queries required to determine Alice's number. Then you must find a strategy that uses exactly $$$f(n)$$$ queries.Note that the interactor is adaptive, which means Alice's number is not fixed at the beginning and may depend on your queries. However, it is guaranteed that there exists at least one number that is consistent with Alice's responses.We can show that $$$f(n) \\leq 20$$$ for all $$$n$$$ such that $$$2 \\le n \\le 2 \\cdot 10^5$$$."
  },
  {
    "title": "Wonderful Impostors",
    "url": "https://codeforces.com/problemset/problem/2096/F",
    "description": "You are a proud live streamer known as Gigi Murin. Today, you will play a game with $$$n$$$ viewers numbered $$$1$$$ to $$$n$$$.In the game, each player is either a crewmate or an impostor. You don't know the role of each viewer.There are $$$m$$$ statements numbered $$$1$$$ to $$$m$$$, which are either true or false. For each $$$i$$$ from $$$1$$$ to $$$m$$$, statement $$$i$$$ is one of two types: $$$0\\:a_i\\:b_i$$$ ($$$1 \\leq a_i \\leq b_i \\leq n$$$) — there are no impostors among viewers $$$a_i, a_i + 1, \\ldots, b_i$$$; $$$1\\:a_i\\:b_i$$$ ($$$1 \\leq a_i \\leq b_i \\leq n$$$) — there is at least one impostor among viewers $$$a_i, a_i + 1, \\ldots, b_i$$$.Answer $$$q$$$ questions of the following form: $$$l\\:r$$$ ($$$1 \\leq l \\leq r \\leq m$$$) — is it possible that statements $$$l, l + 1, \\ldots, r$$$ are all true?Note that it is not guaranteed that there is at least one impostor among all viewers, and it is not guaranteed that there is at least one crewmate among all viewers."
  },
  {
    "title": "Wonderful Teddy Bears",
    "url": "https://codeforces.com/problemset/problem/2096/E",
    "description": "You are the proud owner of $$$n$$$ teddy bears, which are arranged in a row on a shelf. Each teddy bear is colored either black or pink.An arrangement of teddy bears is beautiful if all the black teddy bears are to the left of all the pink teddy bears. In other words, there does not exist a pair of indices $$$(i, j)$$$ ($$$1 \\leq i < j \\leq n$$$) such that the $$$i$$$-th teddy bear is pink, and the $$$j$$$-th teddy bear is black.You want to reorder the teddy bears into a beautiful arrangement. You are too short to reach the shelf, but luckily, you can send instructions to a robot to move the teddy bears around. In a single instruction, the robot can:  Choose an index $$$i$$$ ($$$1 \\le i \\le n - 2$$$) and reorder the teddy bears at positions $$$i$$$, $$$i + 1$$$ and $$$i + 2$$$ so that all the black teddy bears are to the left of all the pink teddy bears. What is the minimum number of instructions needed to reorder the teddy bears?"
  },
  {
    "title": "Wonderful Lightbulbs",
    "url": "https://codeforces.com/problemset/problem/2096/D",
    "description": "You are the proud owner of an infinitely large grid of lightbulbs, represented by a Cartesian coordinate system. Initially, all of the lightbulbs are turned off, except for one lightbulb, where you buried your proudest treasure.In order to hide your treasure's position, you perform the following operation an arbitrary number of times (possibly zero):  Choose two integer numbers $$$x$$$ and $$$y$$$, and switch the state of the $$$4$$$ lightbulbs at $$$(x, y)$$$, $$$(x, y + 1)$$$, $$$(x + 1, y - 1)$$$, and $$$(x + 1, y)$$$. In other words, for each lightbulb, turn it on if it was off, and turn it off if it was on. Note that there are no constraints on $$$x$$$ and $$$y$$$. In the end, there are $$$n$$$ lightbulbs turned on at coordinates $$$(x_1, y_1), (x_2, y_2), \\ldots, (x_n, y_n)$$$. Unfortunately, you have already forgotten where you buried your treasure, so now you have to figure out one possible position of the treasure. Good luck!"
  },
  {
    "title": "Wonderful City",
    "url": "https://codeforces.com/problemset/problem/2096/C",
    "description": "You are the proud leader of a city in Ancient Berland. There are $$$n^2$$$ buildings arranged in a grid of $$$n$$$ rows and $$$n$$$ columns. The height of the building in row $$$i$$$ and column $$$j$$$ is $$$h_{i, j}$$$.The city is beautiful if no two adjacent by side buildings have the same height. In other words, it must satisfy the following:  There does not exist a position $$$(i, j)$$$ ($$$1 \\leq i \\leq n$$$, $$$1 \\leq j \\leq n - 1$$$) such that $$$h_{i, j} = h_{i, j + 1}$$$.  There does not exist a position $$$(i, j)$$$ ($$$1 \\leq i \\leq n - 1$$$, $$$1 \\leq j \\leq n$$$) such that $$$h_{i, j} = h_{i + 1, j}$$$. There are $$$n$$$ workers at company A, and $$$n$$$ workers at company B. Each worker can be hired at most once.It costs $$$a_i$$$ coins to hire worker $$$i$$$ at company A. After hiring, worker $$$i$$$ will:  Increase the heights of all buildings in row $$$i$$$ by $$$1$$$. In other words, increase $$$h_{i, 1}, h_{i, 2}, \\ldots, h_{i, n}$$$ by $$$1$$$. It costs $$$b_j$$$ coins to hire worker $$$j$$$ at company B. After hiring, worker $$$j$$$ will:  Increase the heights of all buildings in column $$$j$$$ by $$$1$$$. In other words, increase $$$h_{1, j}, h_{2, j}, \\ldots, h_{n, j}$$$ by $$$1$$$. Find the minimum number of coins needed to make the city beautiful, or report that it is impossible."
  },
  {
    "title": "Wonderful Gloves",
    "url": "https://codeforces.com/problemset/problem/2096/B",
    "description": "You are the proud owner of many colorful gloves, and you keep them in a drawer. Each glove is in one of $$$n$$$ colors numbered $$$1$$$ to $$$n$$$. Specifically, for each $$$i$$$ from $$$1$$$ to $$$n$$$, you have $$$l_i$$$ left gloves and $$$r_i$$$ right gloves with color $$$i$$$.Unfortunately, it's late at night, so you can't see any of your gloves. In other words, you will only know the color and the type (left or right) of a glove after you take it out of the drawer.A matching pair of gloves with color $$$i$$$ consists of exactly one left glove and one right glove with color $$$i$$$. Find the minimum number of gloves you need to take out of the drawer to guarantee that you have at least $$$k$$$ matching pairs of gloves with different colors.Formally, find the smallest positive integer $$$x$$$ such that:  For any set of $$$x$$$ gloves you take out of the drawer, there will always be at least $$$k$$$ matching pairs of gloves with different colors. "
  },
  {
    "title": "Wonderful Sticks",
    "url": "https://codeforces.com/problemset/problem/2096/A",
    "description": "You are the proud owner of $$$n$$$ sticks. Each stick has an integer length from $$$1$$$ to $$$n$$$. The lengths of the sticks are distinct.You want to arrange the sticks in a row. There is a string $$$s$$$ of length $$$n - 1$$$ that describes the requirements of the arrangement.Specifically, for each $$$i$$$ from $$$1$$$ to $$$n - 1$$$: If $$$s_i = \\texttt{<}$$$, then the length of the stick at position $$$i + 1$$$ must be smaller than all sticks before it;  If $$$s_i = \\texttt{>}$$$, then the length of the stick at position $$$i + 1$$$ must be larger than all sticks before it.Find any valid arrangement of sticks. We can show that an answer always exists."
  },
  {
    "title": "Premiere at a Wrong Time",
    "url": "https://codeforces.com/problemset/problem/2095/J",
    "description": ""
  },
  {
    "title": "Mysterious Script",
    "url": "https://codeforces.com/problemset/problem/2095/I",
    "description": "An extraterrestrial species has visited the authors of April Fools Day Contest 2025 while they were preparing problems. They call themselves the \"Balikons\" and expressed interest in chatting with humans. Although they can make sounds that are similar to human speech, they seem to prefer communicating by writing using a variety of media.  Figure 1. A Balikon entity communicates with a human linguist (2025, colorized) Fortunately, there is a linguistics expert in the author team. With some effort, they were eventually able to fully understand the Balikon language. The following is a table of some example phrases they translated. Balikon scriptLatin scriptTranslationbalikonBalikonbalikong shasthree Balikonsfibucho shezali kin chakog leshasbuy shezali$$$^{\\text{∗}}$$$ for twelve chakos$$$^{\\text{†}}$$$fibuchog zinfa bashin(I) bought the wrong penshons ze tes to les konbilo lonshonletashashaleteshatesfive plus seven minus one modulo 998244358 Table 1. A few pieces of text in the Balikon language After some conversations, the Balikons learned about a popular human activity called competitive programming and were excited to try. In fact, they just created their first problem. Please check it out!$$$^{\\text{∗}}$$$a dish in traditional Balikon cuisine, similar to meatballs$$$^{\\text{†}}$$$currency unit"
  },
  {
    "title": "Blurry Vision",
    "url": "https://codeforces.com/problemset/problem/2095/H",
    "description": " Please direct your vision to line number $$$x$$$. Now, read the word you see on that line. If you struggle, I might have to prescribe eyeglasses. "
  },
  {
    "title": "Definitely a Geometry Problem",
    "url": "https://codeforces.com/problemset/problem/2095/G",
    "description": "Megumin is a wizard who can cast powerful magic spells that affect large areas. She is obsessed with the extremely devastating Explosion spell that can destroy everything around its target.There are currently $$$n$$$ slimes in the wild. Each slime's location can be described in 2D Cartesian coordinates. Megumin wishes to kill at least $$$k$$$ slimes so she can earn more experience points to level up her Explosion. To do that, she can choose any circle on the plane and cast an Explosion spell which kills every slime inside or on the border of the circle.However, the Explosion magic requires a large amount of mana to cast, and Megumin can only use it once per day. The amount of mana used is equal to the area inside the circle she chooses. What is the minimum amount of mana she needs to spend to kill $$$k$$$ slimes with a single Explosion?"
  },
  {
    "title": "⅓ оf а Рrоblеm",
    "url": "https://codeforces.com/problemset/problem/2095/F",
    "description": "$$$$$$a\\qquad \\mathord{4}\\qquad \\mathord{+}\\qquad \\mathord{-}\\qquad \\mathord{+}\\qquad \\mathord{-}\\qquad \\mathord{)}\\qquad \\mathord{2}$$$$$$"
  },
  {
    "title": "Pair Count",
    "url": "https://codeforces.com/problemset/problem/2095/E",
    "description": "You are given a prime number $$$p$$$, $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$, and an integer $$$k$$$.Find the number of pairs of indexes $$$(i, j)$$$ ($$$1 \\le i < j \\le n$$$) for which $$$(a_i \\oplus a_j)(a_i^2 \\oplus a_j^2) \\equiv k \\bmod p$$$.Here $$$\\oplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "Where Am I?",
    "url": "https://codeforces.com/problemset/problem/2095/D",
    "description": "  "
  },
  {
    "title": "Would It Be Unrated?",
    "url": "https://codeforces.com/problemset/problem/2095/C",
    "description": "It's a disaster. During the last April fools round, Codeforces crashed and consequentially, the round was unrated. No one knows what happened to some of the poor authors afterwards. After careful investigation, the Codeforces team has found out the reason behind this catastrophe. Apparently, authors added too many tests as they forgot the pretests were equal to system tests.We don't want to repeat this unfortunate incident and cause this round to be unrated as well. That's why we ask you for your help. Could you please help us check how many tests this problem has?"
  },
  {
    "title": "Plinko",
    "url": "https://codeforces.com/problemset/problem/2095/B",
    "description": "  Can you win 10 times?"
  },
  {
    "title": "Piecing It Together",
    "url": "https://codeforces.com/problemset/problem/2095/A",
    "description": "  "
  },
  {
    "title": "La Vaca Saturno Saturnita",
    "url": "https://codeforces.com/problemset/problem/2094/H",
    "description": "Saturnita's mood depends on an array $$$a$$$ of length $$$n$$$, which only he knows the meaning of, and a function $$$f(k, a, l, r)$$$, which only he knows how to compute. Shown below is the pseudocode for his function $$$f(k, a, l, r)$$$. function f(k, a, l, r):   ans := 0   for i from l to r (inclusive):      while k is divisible by a[i]:         k := k/a[i]      ans := ans + k   return ansYou are given $$$q$$$ queries, each containing integers $$$k$$$, $$$l$$$, and $$$r$$$. For each query, please output $$$f(k,a,l,r)$$$."
  },
  {
    "title": "Chimpanzini Bananini",
    "url": "https://codeforces.com/problemset/problem/2094/G",
    "description": "Chimpanzini Bananini stands on the brink of a momentous battle—one destined to bring finality.For an arbitrary array $$$b$$$ of length $$$m$$$, let's denote the rizziness of the array to be $$$\\sum_{i=1}^mb_i\\cdot i=b_1\\cdot 1+b_2\\cdot 2+b_3\\cdot 3+\\ldots + b_m\\cdot m$$$.Chimpanzini Bananini gifts you an empty array. There are three types of operations you can perform on it.   Perform a cyclic shift on the array. That is, the array $$$[a_1, a_2, \\ldots, a_n]$$$ becomes $$$[a_n, a_1, a_2, \\ldots, a_{n-1}].$$$  Reverse the entire array. That is, the array $$$[a_1, a_2, \\ldots, a_n]$$$ becomes $$$[a_n, a_{n-1}, \\ldots, a_1].$$$  Append an element to the end of the array. The array $$$[a_1, a_2, \\ldots, a_n]$$$ becomes $$$[a_1, a_2, \\ldots, a_n, k]$$$ after appending $$$k$$$ to the end of the array. After each operation, you are interested in calculating the rizziness of your array. Note that all operations are persistent. This means that each operation modifies the array, and subsequent operations should be applied to the current state of the array after the previous operations."
  },
  {
    "title": "Trulimero Trulicina",
    "url": "https://codeforces.com/problemset/problem/2094/F",
    "description": "Trulicina gives you integers $$$n$$$, $$$m$$$, and $$$k$$$. It is guaranteed that $$$k\\geq 2$$$ and $$$n\\cdot m\\equiv 0 \\pmod{k}$$$.Output a $$$n$$$ by $$$m$$$ grid of integers such that each of the following criteria hold:  Each integer in the grid is between $$$1$$$ and $$$k$$$, inclusive.  Each integer from $$$1$$$ to $$$k$$$ appears an equal number of times.  No two cells that share an edge have the same integer. It can be shown that such a grid always exists. If there are multiple solutions, output any."
  },
  {
    "title": "Boneca Ambalabu",
    "url": "https://codeforces.com/problemset/problem/2094/E",
    "description": "Boneca Ambalabu gives you a sequence of $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$.Output the maximum value of $$$(a_k\\oplus a_1)+(a_k\\oplus a_2)+\\ldots+(a_k\\oplus a_n)$$$ among all $$$1 \\leq k \\leq n$$$. Note that $$$\\oplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "Tung Tung Sahur",
    "url": "https://codeforces.com/problemset/problem/2094/D",
    "description": "You have two drums in front of you: a left drum and a right drum. A hit on the left can be recorded as \"L\", and a hit on the right as \"R\".The strange forces that rule this world are fickle: sometimes, a blow sounds once, and sometimes it sounds twice. Therefore, a hit on the left drum could have sounded as either \"L\" or \"LL\", and a hit on the right drum could have sounded as either \"R\" or \"RR\".The sequence of hits made is recorded in the string $$$p$$$, and the sounds heard are in the string $$$s$$$. Given $$$p$$$ and $$$s$$$, determine whether it is true that the string $$$s$$$ could have been the result of the hits from the string $$$p$$$.For example, if $$$p=$$$\"LR\", then the result of the hits could be any of the strings \"LR\", \"LRR\", \"LLR\", and \"LLRR\", but the strings \"LLLR\" or \"LRL\" cannot."
  },
  {
    "title": "Brr Brrr Patapim",
    "url": "https://codeforces.com/problemset/problem/2094/C",
    "description": "Brr Brrr Patapim is trying to learn of Tiramisù's secret passcode, which is a permutation$$$^{\\text{∗}}$$$ of $$$2\\cdot n$$$ elements. To help Patapim guess, Tiramisù gave him an $$$n\\times n$$$ grid $$$G$$$, in which $$$G_{i,j}$$$ (or the element in the $$$i$$$-th row and $$$j$$$-th column of the grid) contains $$$p_{i+j}$$$, or the $$$(i+j)$$$-th element in the permutation. Given this grid, please help Patapim crack the forgotten code. It is guaranteed that the permutation exists, and it can be shown that the permutation can be determined uniquely.$$$^{\\text{∗}}$$$A permutation of $$$m$$$ integers is a sequence of $$$m$$$ integers which contains each of $$$1,2,\\ldots,m$$$ exactly once. For example, $$$[1, 3, 2]$$$ and $$$[2, 1]$$$ are permutations, while $$$[1, 2, 4]$$$ and $$$[1, 3, 2, 3]$$$ are not."
  },
  {
    "title": "Bobritto Bandito",
    "url": "https://codeforces.com/problemset/problem/2094/B",
    "description": "In Bobritto Bandito's home town of residence, there are an infinite number of houses on an infinite number line, with houses at $$$\\ldots, -2, -1, 0, 1, 2, \\ldots$$$. On day $$$0$$$, he started a plague by giving an infection to the unfortunate residents of house $$$0$$$. Each succeeding day, the plague spreads to exactly one healthy household that is next to an infected household. It can be shown that each day the infected houses form a continuous segment.Let the segment starting at the $$$l$$$-th house and ending at the $$$r$$$-th house be denoted as $$$[l, r]$$$. You know that after $$$n$$$ days, the segment $$$[l, r]$$$ became infected. Find any such segment $$$[l', r']$$$ that could have been infected on the $$$m$$$-th day ($$$m \\le n$$$)."
  },
  {
    "title": "Trippi Troppi",
    "url": "https://codeforces.com/problemset/problem/2094/A",
    "description": "Trippi Troppi resides in a strange world. The ancient name of each country consists of three strings. The first letter of each string is concatenated to form the country's modern name. Given the country's ancient name, please output the modern name."
  },
  {
    "title": "Shorten the Array",
    "url": "https://codeforces.com/problemset/problem/2093/G",
    "description": "The beauty of an array $$$b$$$ of length $$$m$$$ is defined as $$$\\max(b_i \\oplus b_j)$$$ among all possible pairs $$$1 \\le i \\le j \\le m$$$, where $$$x \\oplus y$$$ is the bitwise XOR of numbers $$$x$$$ and $$$y$$$. We denote the beauty value of the array $$$b$$$ as $$$f(b)$$$.An array $$$b$$$ is called beautiful if $$$f(b) \\ge k$$$.Recently, Kostya bought an array $$$a$$$ of length $$$n$$$ from the store. He considers this array too long, so he plans to cut out some beautiful subarray from it. That is, he wants to choose numbers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$) such that the array $$$a_{l \\dots r}$$$ is beautiful. The length of such a subarray will be the number $$$r - l + 1$$$. The entire array $$$a$$$ is also considered a subarray (with $$$l = 1$$$ and $$$r = n$$$).Your task is to find the length of the shortest beautiful subarray in the array $$$a$$$. If no subarray is beautiful, you should output the number $$$-1$$$."
  },
  {
    "title": "Hackers and Neural Networks",
    "url": "https://codeforces.com/problemset/problem/2093/F",
    "description": "Hackers are once again trying to create entertaining phrases using the output of neural networks. This time, they want to obtain an array of strings $$$a$$$ of length $$$n$$$.Initially, they have an array $$$c$$$ of length $$$n$$$, filled with blanks, which are denoted by the symbol $$$*$$$. Thus, if $$$n=4$$$, then initially $$$c=[*,*,*,*]$$$.The hackers have access to $$$m$$$ neural networks, each of which has its own version of the answer to their request – an array of strings $$$b_i$$$ of length $$$n$$$.The hackers are trying to obtain the array $$$a$$$ from the array $$$c$$$ using the following operations:   Choose a neural network $$$i$$$, which will perform the next operation on the array $$$c$$$: it will select a random blank, for example, at position $$$j$$$, and replace $$$c_j$$$ with $$$b_{i, j}$$$.For example, if the first neural network is chosen and $$$c = [*, \\text{«like»}, *]$$$, and $$$b_1 = [\\text{«I»}, \\text{«love»}, \\text{«apples»}]$$$, then after the operation with the first neural network, $$$c$$$ may become either $$$[\\text{«I»}, \\text{«like»}, *]$$$ or $$$[*, \\text{«like»}, \\text{«apples»}]$$$. Choose position $$$j$$$ and replace $$$c_j$$$ with a blank. Unfortunately, because of the way hackers access neural networks, they will only be able to see the modified array $$$c$$$ after all operations are completed, so they will have to specify the entire sequence of operations in advance.However, the random behavior of the neural networks may lead to the situation where the desired array is never obtained, or obtaining it requires an excessive number of operations. Therefore, the hackers are counting on your help in choosing a sequence of operations that will guarantee the acquisition of array $$$a$$$ in the minimum number of operations.More formally, if there exists a sequence of operations that can guarantee obtaining array $$$a$$$ from array $$$c$$$, then among all such sequences, find the one with the minimum number of operations, and output the number of operations in it.If there is no sequence of operations that transforms array $$$c$$$ into array $$$a$$$, then output $$$-1$$$."
  },
  {
    "title": "Min Max MEX",
    "url": "https://codeforces.com/problemset/problem/2093/E",
    "description": "You are given an array $$$a$$$ of length $$$n$$$ and a number $$$k$$$.A subarray is defined as a sequence of one or more consecutive elements of the array. You need to split the array $$$a$$$ into $$$k$$$ non-overlapping subarrays $$$b_1, b_2, \\dots, b_k$$$ such that the union of these subarrays equals the entire array. Additionally, you need to maximize the value of $$$x$$$, which is equal to the minimum MEX$$$(b_i)$$$, for $$$i \\in [1..k]$$$.MEX$$$(v)$$$ denotes the smallest non-negative integer that is not present in the array $$$v$$$."
  },
  {
    "title": "Skibidi Table",
    "url": "https://codeforces.com/problemset/problem/2093/D",
    "description": "Vadim loves filling square tables with integers. But today he came up with a way to do it for fun! Let's take, for example, a table of size $$$2 \\times 2$$$, with rows numbered from top to bottom and columns numbered from left to right. We place $$$1$$$ in the top left cell, $$$2$$$ in the bottom right, $$$3$$$ in the bottom left, and $$$4$$$ in the top right. That's all he needs for fun!Fortunately for Vadim, he has a table of size $$$2^n \\times 2^n$$$. He plans to fill it with integers from $$$1$$$ to $$$2^{2n}$$$ in ascending order. To fill such a large table, Vadim will divide it into $$$4$$$ equal square tables, filling the top left one first, then the bottom right one, followed by the bottom left one, and finally the top right one. Each smaller table will be divided into even smaller ones as he fills them until he reaches tables of size $$$2 \\times 2$$$, which he will fill in the order described above.Now Vadim is eager to start filling the table, but he has $$$q$$$ questions of two types:   what number will be in the cell at the $$$x$$$-th row and $$$y$$$-th column;  in which cell coordinates will the number $$$d$$$ be located.  Help answer Vadim's questions."
  },
  {
    "title": "Simple Repetition",
    "url": "https://codeforces.com/problemset/problem/2093/C",
    "description": "Pasha loves prime numbers$$$^{\\text{∗}}$$$! Once again, in his attempts to find a new way to generate prime numbers, he became interested in an algorithm he found on the internet:  To obtain a new number $$$y$$$, repeat $$$k$$$ times the decimal representation of the number $$$x$$$ (without leading zeros). For example, for $$$x = 52$$$ and $$$k = 3$$$, we get $$$y = 525252$$$, and for $$$x = 6$$$ and $$$k = 7$$$, we get $$$y = 6666666$$$.Pasha really wants the resulting number $$$y$$$ to be prime, but he doesn't yet know how to check the primality of numbers generated by this algorithm. Help Pasha and tell him whether $$$y$$$ is prime!$$$^{\\text{∗}}$$$An integer $$$x$$$ is considered prime if it has exactly $$$2$$$ distinct divisors: $$$1$$$ and $$$x$$$. For example, $$$13$$$ is prime because it has only $$$2$$$ divisors: $$$1$$$ and $$$13$$$. Note that the number $$$1$$$ is not prime, as it has only one divisor."
  },
  {
    "title": "Expensive Number",
    "url": "https://codeforces.com/problemset/problem/2093/B",
    "description": "The cost of a positive integer $$$n$$$ is defined as the result of dividing the number $$$n$$$ by the sum of its digits.For example, the cost of the number $$$104$$$ is $$$\\frac{104}{1 + 0 + 4} = 20.8$$$, and the cost of the number $$$111$$$ is $$$\\frac{111}{1 + 1 + 1} = 37$$$.You are given a positive integer $$$n$$$ that does not contain leading zeros. You can remove any number of digits from the number $$$n$$$ (including none) so that the remaining number contains at least one digit and is strictly greater than zero. The remaining digits cannot be rearranged. As a result, you may end up with a number that has leading zeros.For example, you are given the number $$$103554$$$. If you decide to remove the digits $$$1$$$, $$$4$$$, and one digit $$$5$$$, you will end up with the number $$$035$$$, whose cost is $$$\\frac{035}{0 + 3 + 5} = 4.375$$$.What is the minimum number of digits you need to remove from the number so that its cost becomes the minimum possible?"
  },
  {
    "title": "Ideal Generator",
    "url": "https://codeforces.com/problemset/problem/2093/A",
    "description": "We call an array $$$a$$$, consisting of $$$k$$$ positive integers, palindromic if $$$[a_1, a_2, \\dots, a_k] = [a_k, a_{k-1}, \\dots, a_1]$$$. For example, the arrays $$$[1, 2, 1]$$$ and $$$[5, 1, 1, 5]$$$ are palindromic, while the arrays $$$[1, 2, 3]$$$ and $$$[21, 12]$$$ are not.We call a number $$$k$$$ an ideal generator if any integer $$$n$$$ ($$$n \\ge k$$$) can be represented as the sum of the elements of a palindromic array of length exactly $$$k$$$. Each element of the array must be greater than $$$0$$$.For example, the number $$$1$$$ is an ideal generator because any natural number $$$n$$$ can be generated using the array $$$[n]$$$. However, the number $$$2$$$ is not an ideal generator — there is no palindromic array of length $$$2$$$ that sums to $$$3$$$.Determine whether the given number $$$k$$$ is an ideal generator."
  },
  {
    "title": "Andryusha and CCB",
    "url": "https://codeforces.com/problemset/problem/2092/F",
    "description": "Let us define the beauty of a binary string $$$z$$$ as the number of indices $$$i$$$ such that $$$1 \\le i < |z|$$$ and $$$z_i \\neq z_{i+1}$$$.While waiting for his friends from the CCB, Andryusha baked a pie, represented by a binary string $$$s$$$ of length $$$n$$$. To avoid offending anyone, he wants to divide this string into $$$k$$$ substrings such that each digit belongs to exactly one substring, and the beauties of all substrings are the same.Andryusha does not know the exact number of friends from the CCB who will come to his house, so he wants to find the number of values of $$$k$$$ for which it is possible to split the pie into exactly $$$k$$$ parts with equal beauties.However, Andryusha's brother, Tristan, decided that this formulation of the problem is too simple. Therefore, he wants you to find the number of such values of $$$k$$$ for each prefix of the string. In other words, for each $$$i$$$ from $$$1$$$ to $$$n$$$, you need to find the number of values of $$$k$$$ for which it is possible to split the prefix $$$s_1 s_2 \\ldots s_i$$$ into exactly $$$k$$$ parts with equal beauties."
  },
  {
    "title": "She knows...",
    "url": "https://codeforces.com/problemset/problem/2092/E",
    "description": "D. Pippy is preparing for a \"black-and-white\" party at his home. He only needs to repaint the floor in his basement, which can be represented as a board of size $$$n \\times m$$$.After the last party, the entire board is painted green, except for some $$$k$$$ cells $$$(x_1, y_1), (x_2, y_2), \\ldots, (x_k, y_k)$$$, each of which is painted either white or black. For the upcoming party, D. Pippy wants to paint each of the remaining green cells either black or white. At the same time, he wants the number of pairs of adjacent cells with different colors on the board to be even after repainting.Formally, if $$$$$$A = \\left\\{((i_1, j_1), (i_2, j_2)) \\ | \\ 1 \\le i_1, i_2 \\le n, 1 \\le j_1, j_2 \\le m, i_1+j_1<i_2+j_2, |i_1-i_2|+|j_1-j_2| = 1, \\operatorname{color}(i_1, j_1) \\neq \\operatorname{color}(i_2, j_2) \\right\\},$$$$$$ where $$$\\operatorname{color}(x, y)$$$ denotes the color of the cell $$$(x, y)$$$, then it is required that $$$|A|$$$ be even.Help D. Pippy find the number of ways to repaint the floor so that the condition is satisfied. Since this number can be large, output the remainder of its division by $$$10^9 + 7$$$."
  },
  {
    "title": "Mishkin Energizer",
    "url": "https://codeforces.com/problemset/problem/2092/D",
    "description": "In anticipation of a duel with his old friend Fernan, Edmond is preparing an energy drink called \"Mishkin Energizer\". The drink consists of a string $$$s$$$ of length $$$n$$$, made up only of the characters L, I, and T, which correspond to the content of three different substances in the drink.We call the drink balanced if it contains an equal number of all substances. To boost his aura and ensure victory in the duel, Edmond must make the initial string balanced by applying the following operation:   Choose an index $$$i$$$ such that $$$s_i \\neq s_{i+1}$$$ (where $$$i + 1$$$ must not exceed the current size of the string).  Insert a character $$$x$$$, either L, I, or T, between them such that $$$x \\neq s_i$$$ and $$$x \\neq s_{i+1}$$$. Help Edmond make the drink balanced and win the duel by performing no more than $$$\\textbf{2n}$$$ operations. If there are multiple solutions, any one of them can be output. If it is impossible, you must report this."
  },
  {
    "title": "Asuna and the Mosquitoes",
    "url": "https://codeforces.com/problemset/problem/2092/C",
    "description": "For her birthday, each of Asuna's $$$n$$$ admirers gifted her a tower. The height of the tower from the $$$i$$$-th admirer is equal to $$$a_i$$$. Asuna evaluates the beauty of the received gifts as $$$\\max(a_1, a_2, \\ldots, a_n)$$$. She can perform the following operation an arbitrary number of times (possibly, zero).   Take such $$$1 \\le i \\neq j \\le n$$$ that $$$a_i + a_j$$$ is odd and $$$a_i > 0$$$, then decrease $$$a_i$$$ by $$$1$$$ and increase $$$a_j$$$ by $$$1$$$.  It is easy to see that the heights of the towers remain non-negative during the operations. Help Asuna find the maximum possible beauty of the gifts after any number of operations!"
  },
  {
    "title": "Lady Bug",
    "url": "https://codeforces.com/problemset/problem/2092/B",
    "description": "As soon as Dasha Purova crossed the border of France, the villain Markaron kidnapped her and placed her in a prison under his large castle. Fortunately, the wonderful Lady Bug, upon hearing the news about Dasha, immediately ran to save her in Markaron's castle. However, to get there, she needs to crack a complex password.The password consists of two bit strings $$$a$$$ and $$$b$$$, each of which has a length of $$$n$$$. In one operation, Lady Bug can choose any index $$$2 \\le i \\le n$$$ and perform one of the following actions:   swap($$$a_i$$$, $$$b_{i-1}$$$) (swap the values of $$$a_i$$$ and $$$b_{i-1}$$$), or  swap($$$b_i$$$, $$$a_{i-1}$$$) (swap the values of $$$b_i$$$ and $$$a_{i-1}$$$). Lady Bug can perform any number of operations. The password is considered cracked if she can ensure that the first string consists only of zeros. Help her understand whether or not she will be able to save the unfortunate Dasha."
  },
  {
    "title": "Kamilka and the Sheep",
    "url": "https://codeforces.com/problemset/problem/2092/A",
    "description": "Kamilka has a flock of $$$n$$$ sheep, the $$$i$$$-th of which has a beauty level of $$$a_i$$$. All $$$a_i$$$ are distinct. Morning has come, which means they need to be fed. Kamilka can choose a non-negative integer $$$d$$$ and give each sheep $$$d$$$ bunches of grass. After that, the beauty level of each sheep increases by $$$d$$$.In the evening, Kamilka must choose exactly two sheep and take them to the mountains. If the beauty levels of these two sheep are $$$x$$$ and $$$y$$$ (after they have been fed), then Kamilka's pleasure from the walk is equal to $$$\\gcd(x, y)$$$, where $$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. The task is to find the maximum possible pleasure that Kamilka can get from the walk."
  },
  {
    "title": "Gleb and Boating",
    "url": "https://codeforces.com/problemset/problem/2091/G",
    "description": "Programmer Gleb frequently visits the IT Campus \"NEIMARK\" to participate in programming training sessions.Not only is Gleb a programmer, but he is also a renowned rower, so he covers part of his journey from home to the campus by kayaking along a river. Assume that Gleb starts at point $$$0$$$ and must reach point $$$s$$$ (i.e., travel $$$s$$$ meters along a straight line). To make the challenge tougher, Gleb has decided not to go outside the segment $$$[0, s]$$$. The dimensions of the kayak can be neglected.Gleb is a strong programmer! Initially, his power is $$$k$$$. Gleb's power directly affects the movement of his kayak. If his current power is $$$x$$$, then with one paddle stroke the kayak moves $$$x$$$ meters in the current direction. Gleb can turn around and continue moving in the opposite direction, but such a maneuver is quite challenging, and after each turn, his power decreases by $$$1$$$. The power can never become $$$0$$$ — if his current power is $$$1$$$, then even after turning it remains $$$1$$$. Moreover, Gleb cannot make two turns in a row — after each turn, he must move at least once before making another turn. Similarly, Gleb cannot make a turn immediately after the start — he must first perform a paddle stroke.Gleb wants to reach point $$$s$$$ from point $$$0$$$ without leaving the segment $$$[0, s]$$$ and while preserving as much power as possible. Help him — given the value $$$s$$$ and his initial power $$$k$$$, determine the maximum possible power he can have upon reaching point $$$s$$$."
  },
  {
    "title": "Igor and Mountain",
    "url": "https://codeforces.com/problemset/problem/2091/F",
    "description": "The visitors of the IT Campus \"NEIMARK\" are not only strong programmers but also physically robust individuals! Some practice swimming, some rowing, and some rock climbing!Master Igor is a prominent figure in the local rock climbing community. One day, he went on a mountain hike to ascend one of the peaks. As an experienced climber, Igor decided not to follow the established trails but to use his skills to climb strictly vertically.Igor found a rectangular vertical section of the mountain and mentally divided it into $$$n$$$ horizontal levels. He then split each level into $$$m$$$ segments using vertical partitions. Upon inspecting these segments, Igor discovered convenient protrusions that can be grasped (hereafter referred to as holds). Thus, the selected part of the mountain can be represented as an $$$n \\times m$$$ rectangle, with some cells containing holds.Being an experienced programmer, Igor decided to count the number of valid routes. A route is defined as a sequence of distinct holds. A route is considered valid if the following conditions are satisfied:   The first hold in the route is located on the very bottom level (row $$$n$$$);  The last hold in the route is located on the very top level (row $$$1$$$);  Each subsequent hold is not lower than the previous one;  At least one hold is used on each level (i.e., in every row of the rectangle);  At most two holds are used on each level (since Igor has only two hands);  Igor can reach from the current hold to the next one if the distance between the centers of the corresponding sections does not exceed Igor's arm span. Igor's arm span is $$$d$$$, which means he can move from one hold to another if the Euclidean distance between the centers of the corresponding segments does not exceed $$$d$$$. The distance between sections ($$$i_1, j_1$$$) and ($$$i_2, j_2$$$) is given by $$$\\sqrt{(i_1 - i_2) ^ 2 + (j_1 - j_2) ^ 2}$$$.Calculate the number of different valid routes. Two routes are considered different if they differ in the list of holds used or in the order in which these holds are visited."
  },
  {
    "title": "Interesting Ratio",
    "url": "https://codeforces.com/problemset/problem/2091/E",
    "description": "Recently, Misha at the IT Campus \"NEIMARK\" camp learned a new topic — the Euclidean algorithm.He was somewhat surprised when he realized that $$$a \\cdot b = lcm(a, b) \\cdot gcd(a, b)$$$, where $$$gcd(a, b)$$$ — is the greatest common divisor (GCD) of the numbers $$$a$$$ and $$$b$$$ and $$$lcm(a, b)$$$ — is the least common multiple (LCM). Misha thought that since the product of LCM and GCD exists, it might be interesting to consider their quotient: $$$F(a,b)=\\frac{lcm(a, b)}{gcd(a, b)}$$$.For example, he took $$$a = 2$$$ and $$$b = 4$$$, computed $$$F(2, 4) = \\frac{4}{2} = 2$$$ and obtained a prime number (a number is prime if it has exactly two divisors)! Now he considers $$$F(a, b)$$$ to be an interesting ratio if $$$a < b$$$ and $$$F(a, b)$$$ is a prime number.Since Misha has just started studying number theory, he needs your help to calculate — how many different pairs of numbers $$$a$$$ and $$$b$$$ are there such that $$$F(a, b)$$$ is an interesting ratio and $$$1 \\leq a < b \\leq n$$$?"
  },
  {
    "title": "Place of the Olympiad",
    "url": "https://codeforces.com/problemset/problem/2091/D",
    "description": "For the final of the first Olympiad by IT Campus \"NEIMARK\", a rectangular venue was prepared. You may assume that the venue is divided into $$$n$$$ rows, each containing $$$m$$$ spots for participants' desks. A total of $$$k$$$ participants have registered for the final, and each participant will sit at an individual desk. Now, the organizing committee must choose the locations for the desks in the venue.Each desk occupies one of the $$$m$$$ spots in a row. Moreover, if several desks occupy consecutive spots in the same row, we call such a group of desks a bench, and the number of desks in the group is the bench's length. For example, seating $$$7$$$ participants on a $$$3 \\times 4$$$ venue (with $$$n = 3, m = 4$$$) can be arranged as follows:  In the figure above, the first row has one bench of length $$$3$$$, the second row has one bench of length $$$2$$$, and the third row has two benches of length $$$1$$$.The organizing committee wants to choose the locations so that the length of the longest bench is as small as possible. In particular, the same $$$7$$$ desks can be arranged in a more optimal way, so that the lengths of all benches do not exceed $$$2$$$:  Given the integers $$$n$$$, $$$m$$$, and $$$k$$$, determine the minimum possible length of the longest bench."
  },
  {
    "title": "Combination Lock",
    "url": "https://codeforces.com/problemset/problem/2091/C",
    "description": "At the IT Campus \"NEIMARK\", there are several top-secret rooms where problems for major programming competitions are developed. To enter one of these rooms, you must unlock a circular lock by selecting the correct code. This code is updated every day.Today's code is a permutation$$$^{\\text{∗}}$$$ of the numbers from $$$1$$$ to $$$n$$$, with the property that in every cyclic shift$$$^{\\text{†}}$$$ of it, there is exactly one fixed point. That is, in every cyclic shift, there exists exactly one element whose value is equal to its position in the permutation.Output any valid permutation that satisfies this condition. Keep in mind that a valid permutation might not exist, then output $$$-1$$$.$$$^{\\text{∗}}$$$A permutation is defined as a sequence of length $$$n$$$ consisting of integers from $$$1$$$ to $$$n$$$, where each number appears exactly once. For example, (2 1 3), (1), (4 3 1 2) are permutations; (1 2 2), (3), (1 3 2 5) are not.$$$^{\\text{†}}$$$A cyclic shift of an array is obtained by moving the last element to the beginning of the array. A permutation of length $$$n$$$ has exactly $$$n$$$ cyclic shifts."
  },
  {
    "title": "Team Training",
    "url": "https://codeforces.com/problemset/problem/2091/B",
    "description": "At the IT Campus \"NEIMARK\", there are training sessions in competitive programming — both individual and team-based!For the next team training session, $$$n$$$ students will attend, and the skill of the $$$i$$$-th student is given by a positive integer $$$a_i$$$.The coach considers a team strong if its strength is at least $$$x$$$. The strength of a team is calculated as the number of team members multiplied by the minimum skill among the team members.For example, if a team consists of $$$4$$$ members with skills $$$[5, 3, 6, 8]$$$, then the team's strength is $$$4 \\cdot min([5, 3, 6, 8]) = 12$$$.Output the maximum possible number of strong teams, given that each team must have at least one participant and every participant must belong to exactly one team."
  },
  {
    "title": "Olympiad Date",
    "url": "https://codeforces.com/problemset/problem/2091/A",
    "description": "The final of the first Olympiad by IT Campus \"NEIMARK\" is scheduled for March 1, 2025. A nameless intern was tasked with forming the date of the Olympiad using digits — 01.03.2025.To accomplish this, the intern took a large bag of digits and began drawing them one by one. In total, he drew $$$n$$$ digits — the digit $$$a_i$$$ was drawn in the $$$i$$$-th turn.You suspect that the intern did extra work. Determine at which step the intern could have first assembled the digits to form the date of the Olympiad (the separating dots can be ignored), or report that it is impossible to form this date from the drawn digits. Note that leading zeros must be displayed."
  },
  {
    "title": "Dining Hall",
    "url": "https://codeforces.com/problemset/problem/2090/C",
    "description": "Inside the large kingdom, there is an infinite dining hall. It can be represented as a set of cells ($$$x, y$$$), where $$$x$$$ and $$$y$$$ are non-negative integers. There are an infinite number of tables in the hall. Each table occupies four cells ($$$3x + 1, 3y + 1$$$), ($$$3x + 1, 3y + 2$$$), ($$$3x + 2, 3y + 1$$$), ($$$3x + 2, 3y + 2$$$), where $$$x$$$ and $$$y$$$ are arbitrary non-negative integers. All cells that do not belong to any of the tables are corridors.There are $$$n$$$ guests that come to the dining hall one by one. Each guest appears in the cell $$$(0, 0)$$$ and wants to reach a table cell. In one step, they can move to any neighboring by side corridor cell, and in their last step, they must move to a neighboring by side a free table cell. They occupy the chosen table cell, and no other guest can move there.Each guest has a characteristic $$$t_i$$$, which can either be $$$0$$$ or $$$1$$$. They enter the hall in order, starting to walk from the cell ($$$0, 0$$$). If $$$t_i=1$$$, the $$$i$$$-th guest walks to the nearest vacant table cell. If $$$t_i=0$$$, they walk to the nearest table cell that belongs to a completely unoccupied table. Note that other guests may choose the same table later.The distance is defined as the smallest number of steps needed to reach the table cell. If there are multiple table cells at the same distance, the guests choose the cell with the smallest $$$x$$$, and if there are still ties, they choose among those the cell with the smallest $$$y$$$.For each guest, find the table cell which they choose."
  },
  {
    "title": "Pushing Balls",
    "url": "https://codeforces.com/problemset/problem/2090/B",
    "description": "Ecrade has an $$$n \\times m$$$ grid, originally empty, and he has pushed several (possibly, zero) balls in it.Each time, he can push one ball into the grid either from the leftmost edge of a particular row or the topmost edge of a particular column of the grid.When a ball moves towards a position:  If there is no ball originally at that position, the incoming ball will stop and occupy the position.  If there is already a ball at that position, the incoming ball will stop and occupy the position, while the original ball will continue moving to the next position in the same direction. Note that if a row or column is full (i.e., all positions in that row or column have balls), he cannot push a ball into that row or column.Given the final state of whether there is a ball at each position of the grid, you need to determine whether it is possible for Ecrade to push the balls to reach the final state."
  },
  {
    "title": "Treasure Hunt",
    "url": "https://codeforces.com/problemset/problem/2090/A",
    "description": "Little B and his friend Little K found a treasure map, and now they just need to dig up the treasure, which is buried at a depth of $$$a.5$$$ meters.They take turns digging. On the first day, Little B digs; on the second day, Little K. After each day, they switch. Little B digs exactly $$$x$$$ meters of soil each day, while Little K digs $$$y$$$ meters. They became curious about who will dig up the treasure first, meaning during whose day the total dug depth will exceed $$$a.5$$$.But they are too busy digging, so help them and tell who will dig up the treasure!"
  },
  {
    "title": "Black Cat Collapse",
    "url": "https://codeforces.com/problemset/problem/2089/E",
    "description": "The world of the black cat is collapsing. In this world, which can be represented as a rooted tree with root at node $$$1$$$, Liki and Sasami need to uncover the truth about the world. Each day, they can explore a node $$$u$$$ that has not yet collapsed. After this exploration, the black cat causes $$$u$$$ and all nodes in its subtree to collapse. Additionally, at the end of the $$$i$$$ th day, if it exists, the number $$$n-i+1$$$ node will also collapse. For each $$$i$$$ from $$$1$$$ to $$$n$$$, determine the number of exploration schemes where Liki and Sasami explore exactly $$$i$$$ days (i.e., they perform exactly $$$i$$$ operations), with the last exploration being at node $$$1$$$. The result should be computed modulo $$$998\\,244\\,353$$$.Note: It is guaranteed that nodes $$$1$$$ to $$$n$$$ can form a \"DFS\" order of the tree, meaning there exists a depth-first search traversal where the $$$i$$$ th visited node is $$$i$$$."
  },
  {
    "title": "Conditional Operators",
    "url": "https://codeforces.com/problemset/problem/2089/D",
    "description": "In C++, the conditional operator ?: is used as the value of x?y:z is $$$y$$$ if $$$x$$$ is true; otherwise, the value is $$$z$$$. $$$x$$$, $$$y$$$, and $$$z$$$ may also be expressions. It is right-associated; that is, a?b:c?d:e is equivalent to a?b:(c?d:e). $$$0$$$ means false and $$$1$$$ means true.Given a binary string with length $$$2n+1$$$, you need to show whether the value of the expression can be $$$1$$$ after inserting $$$n$$$ conditional operators into the string. You can use parentheses. For example, the string 10101 can be transformed into (1?0:1)?0:1, whose value is $$$1$$$."
  },
  {
    "title": "Key of Like (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2089/C2",
    "description": "  This is the hard version of the problem. The difference between the versions is that in this version, kk can be non-zero. You can hack only if you solved all versions of this problem. A toy box is a refrigerator filled with childhood delight. Like weakness, struggle, hope ... When such a sleeper is reawakened, what kind of surprises will be waiting?M received her toy box as a birthday present from her mother. A jewellery designer would definitely spare no effort in decorating yet another priceless masterpiece as a starry firmament with exquisitely shaped gemstones. In addition, ll distinct locks secure the tiny universe of her lovely daughter: a hair clip featuring a flower design, a weathered feather pen, a balloon shaped like the letter M ... each piece obscures a precious moment.A few days ago, M rediscovered her toy box when she was reorganizing her bedroom, along with a ring of keys uniquely designed for the toy box. Attached to the key ring are (l+k)(l + k) keys, of which ll keys are able to open one of the ll locks correspondingly, while the other kk keys are nothing but counterfeits to discourage brute-force attack. To remind the correspondence, M's mother adorned each key with a gemstone of a different type. However, passing days have faded M's memory away.\"... So I have to turn to you all,\" M said while laying that ring of keys on the table.K picked up the keys and examined them carefully. \"The appearance of these keys unveils nothing fruitful. Thus, I am afraid that we shall inspect them sequentially.\"Although everyone is willing to help M, nobody has a plan. Observing others' reactions, T suggested, \"Let's play a game. Everyone tries a key in turn, and who opens the most locks is amazing.\"nn members, including M herself, take turns to unlock the toy box recursively in the same order until all the ll locks are unlocked. At each turn, the current member only selects a single key and tests it on exactly one of the locks. To open the toy box as soon as possible, every member chooses the key and the lock that maximize the probability of being a successful match. If there are multiple such pairs, a member will randomly choose one of such pairs with equal probability. Apparently, if a lock has been matched with a key, then neither the lock nor the key will be chosen again in following attempts.Assume that at the very beginning, the probability that a lock can be opened by any key is equal. If everyone always tries the optimal pairs of keys and locks based on all the historical trials, what will the expected number of successful matches be for each member?"
  },
  {
    "title": "Key of Like (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2089/C1",
    "description": "  This is the easy version of the problem. The difference between the versions is that in this version, it is guaranteed that $$$k=0$$$. You can hack only if you solved all versions of this problem. A toy box is a refrigerator filled with childhood delight. Like weakness, struggle, hope ... When such a sleeper is reawakened, what kind of surprises will be waiting?M received her toy box as a birthday present from her mother. A jewellery designer would definitely spare no effort in decorating yet another priceless masterpiece as a starry firmament with exquisitely shaped gemstones. In addition, $$$l$$$ distinct locks secure the tiny universe of her lovely daughter: a hair clip featuring a flower design, a weathered feather pen, a balloon shaped like the letter M ... each piece obscures a precious moment.A few days ago, M rediscovered her toy box when she was reorganizing her bedroom, along with a ring of keys uniquely designed for the toy box. Attached to the key ring are $$$(l + k)$$$ keys, of which $$$l$$$ keys are able to open one of the $$$l$$$ locks correspondingly, while the other $$$k$$$ keys are nothing but counterfeits to discourage brute-force attack. To remind the correspondence, M's mother adorned each key with a gemstone of a different type. However, passing days have faded M's memory away.\"... So I have to turn to you all,\" M said while laying that ring of keys on the table.K picked up the keys and examined them carefully. \"The appearance of these keys unveils nothing fruitful. Thus, I am afraid that we shall inspect them sequentially.\"Although everyone is willing to help M, nobody has a plan. Observing others' reactions, T suggested, \"Let's play a game. Everyone tries a key in turn, and who opens the most locks is amazing.\"$$$n$$$ members, including M herself, take turns to unlock the toy box recursively in the same order until all the $$$l$$$ locks are unlocked. At each turn, the current member only selects a single key and tests it on exactly one of the locks. To open the toy box as soon as possible, every member chooses the key and the lock that maximize the probability of being a successful match. If there are multiple such pairs, a member will randomly choose one of such pairs with equal probability. Apparently, if a lock has been matched with a key, then neither the lock nor the key will be chosen again in following attempts.Assume that at the very beginning, the probability that a lock can be opened by any key is equal. If everyone always tries the optimal pairs of keys and locks based on all the historical trials, what will the expected number of successful matches be for each member?"
  },
  {
    "title": "Canteen (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2089/B2",
    "description": " This is the hard version of the problem. The difference between the versions is that in this version, there are no additional limits on $$$k$$$. You can hack only if you solved all versions of this problem. Ecrade has two sequences $$$a_0, a_1, \\ldots, a_{n - 1}$$$ and $$$b_0, b_1, \\ldots, b_{n - 1}$$$ consisting of integers. It is guaranteed that the sum of all elements in $$$a$$$ does not exceed the sum of all elements in $$$b$$$.Initially, Ecrade can make exactly $$$k$$$ changes to the sequence $$$a$$$. It is guaranteed that $$$k$$$ does not exceed the sum of $$$a$$$. In each change:  Choose an integer $$$i$$$ ($$$0 \\le i < n$$$) such that $$$a_i > 0$$$, and perform $$$a_i := a_i - 1$$$. Then Ecrade will perform the following three operations sequentially on $$$a$$$ and $$$b$$$, which constitutes one round of operations:  For each $$$0 \\le i < n$$$: $$$t := \\min(a_i, b_i), a_i := a_i - t, b_i := b_i - t$$$;  For each $$$0 \\le i < n$$$: $$$c_i := a_{(i - 1) \\bmod n}$$$;  For each $$$0 \\le i < n$$$: $$$a_i := c_i$$$; Ecrade wants to know the minimum number of rounds required for all elements in $$$a$$$ to become equal to $$$0$$$ after exactly $$$k$$$ changes to $$$a$$$.However, this seems a bit complicated, so please help him!"
  },
  {
    "title": "Canteen (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2089/B1",
    "description": " This is the easy version of the problem. The difference between the versions is that in this version, $$$k=0$$$. You can hack only if you solved all versions of this problem. Ecrade has two sequences $$$a_0, a_1, \\ldots, a_{n - 1}$$$ and $$$b_0, b_1, \\ldots, b_{n - 1}$$$ consisting of integers. It is guaranteed that the sum of all elements in $$$a$$$ does not exceed the sum of all elements in $$$b$$$.Initially, Ecrade can make exactly $$$k$$$ changes to the sequence $$$a$$$. It is guaranteed that $$$k$$$ does not exceed the sum of $$$a$$$. In each change:  Choose an integer $$$i$$$ ($$$0 \\le i < n$$$) such that $$$a_i > 0$$$, and perform $$$a_i := a_i - 1$$$. Then Ecrade will perform the following three operations sequentially on $$$a$$$ and $$$b$$$, which constitutes one round of operations:  For each $$$0 \\le i < n$$$: $$$t := \\min(a_i, b_i), a_i := a_i - t, b_i := b_i - t$$$;  For each $$$0 \\le i < n$$$: $$$c_i := a_{(i - 1) \\bmod n}$$$;  For each $$$0 \\le i < n$$$: $$$a_i := c_i$$$; Ecrade wants to know the minimum number of rounds required for all elements in $$$a$$$ to become equal to $$$0$$$ after exactly $$$k$$$ changes to $$$a$$$.However, this seems a bit complicated, so please help him!"
  },
  {
    "title": "Simple Permutation",
    "url": "https://codeforces.com/problemset/problem/2089/A",
    "description": "Given an integer $$$n$$$. Construct a permutation $$$p_1, p_2, \\ldots, p_n$$$ of length $$$n$$$ that satisfies the following property:For $$$1 \\le i \\le n$$$, define $$$c_i = \\lceil \\frac{p_1+p_2+\\ldots +p_i}{i} \\rceil$$$, then among $$$c_1,c_2,\\ldots,c_n$$$ there must be at least $$$\\lfloor \\frac{n}{3} \\rfloor - 1$$$ prime numbers."
  },
  {
    "title": "Hamiltonian Partition",
    "url": "https://codeforces.com/problemset/problem/2087/I",
    "description": "You are given a directed acyclic graph with $$$n$$$ vertices and $$$m$$$ edges. The graph contains no cycles or multiple edges.You need to partition all the edges of this graph into Hamiltonian cycles (cycles that visit each of the $$$n$$$ vertices of the graph exactly once) such that each edge belongs to exactly one cycle. It is obvious that this is impossible for the original graph, so before partitioning, you must add the minimum number of edges to the graph so that such a partition exists.After adding edges, the graph may contain cycles and/or multiple edges, but it should still not have any self-loops."
  },
  {
    "title": "Nim with Special Numbers",
    "url": "https://codeforces.com/problemset/problem/2087/H",
    "description": "Let's recall the rules of the game \"Nim\". The game is played by two players who take turns. They have a certain number of piles of stones (the piles can be of the same size or different sizes; the size is defined as the number of stones in a pile). On their turn, a player must choose any non-empty pile of stones and remove any number of stones from it (at least one). The player who cannot make a move loses.In this problem, a modified version of the game will be used. There is a special set of numbers $$$S$$$ that prohibits certain moves. For each number $$$s_i$$$ in this set, if the current size of the pile of stones is strictly greater than $$$s_i$$$, it cannot be made strictly less than $$$s_i$$$ in one move. In other words, if the current size of the pile is $$$x$$$, and the player tries to make a move that results in a size of $$$y$$$, and $$$x > s_i > y$$$ for some number $$$s_i \\in S$$$, such a move is not allowed.Your task is as follows. Initially, the set $$$S$$$ is empty. You need to process queries of three types:  add a certain number $$$s_i$$$ to the set;  remove a certain number $$$s_i$$$ from the set;  determine who will win if this modified version of Nim is played with piles of stones of sizes $$$a_1, a_2, \\dots, a_k$$$. Assume that both players play optimally. "
  },
  {
    "title": "Esports in Berland",
    "url": "https://codeforces.com/problemset/problem/2087/G",
    "description": "Recently, esports has been recognized as an official sport in Berland, and regular competitions have begun to take place. Riding the wave of popularity, Monocarp also decided to participate in the upcoming competitions (besides, prizes have never hurt anyone).In each of the following $$$n$$$ days, one competition will be held. Monocarp would like to participate in all of them, but unfortunately, his current skill level $$$s$$$ is $$$0$$$. At the same time, the prize money Monocarp can earn in competitions depends on his skill level. Therefore, Monocarp decided that he could sacrifice participating in some competitions to train and increase his skill level on those days.In general, on the $$$i$$$-th day, Monocarp can:   either participate in the $$$i$$$-th competition and earn $$$a_i + s$$$ units of money, where $$$s$$$ is his current skill level;  or skip the competition to train: Monocarp will earn nothing but will increase his skill level $$$s$$$ by $$$1$$$. Help Monocarp calculate his maximum total income and the number of training plans with such income. Two training plans are considered different if there exists a day that is a training day in one plan and a competition day in the other one."
  },
  {
    "title": "Weapon Upgrade",
    "url": "https://codeforces.com/problemset/problem/2087/F",
    "description": "Monocarp is playing a game. The game is divided into stages, and there are a total of $$$1337$$$ stages. The game character uses a weapon with two attack modes: physical and elemental. Initially, the weapon's physical attack power is $$$1$$$, and its elemental attack power is also $$$1$$$.During the $$$i$$$-th stage of the game, the following events occur in order:   If $$$i \\le n$$$, a monster with a physical defense $$$a_i$$$ and elemental defense $$$b_i$$$ appears. Otherwise, nothing happens.  Monocarp can shoot at exactly one of the remaining monsters. If the monster's physical defense is at most the character's physical attack power or the monster's elemental defense is at most the character's elemental attack power, the monster will be killed. Otherwise, nothing happens.  Each surviving monster deals $$$1$$$ damage to the game character. After each kill, Monocarp can upgrade one of the attacks of the weapon by $$$1$$$.Your task is to calculate the minimum damage that Monocarp can get in order to kill all the monsters in the game (or report that it is impossible to kill all the monsters)."
  },
  {
    "title": "Color the Arrows",
    "url": "https://codeforces.com/problemset/problem/2087/E",
    "description": "There are $$$n$$$ arrows drawn in a row on a strip of paper, numbered from $$$1$$$ to $$$n$$$. Each arrow points either to the left or to the right. Initially, all arrows are painted blue.In one operation, you can repaint a blue arrow into red. For the first operation, you can choose any arrow. For each subsequent operation, you are only allowed to choose such an arrow that the arrow repainted on the previous operation points in its direction. That is, if the arrow repainted in the previous operation is a left arrow, then, for the current operation, you have to choose an arrow at a smaller index than the previous one. Similarly, if the previous arrow was a right arrow, the current one has to be at a greater index than it. Note that the arrows don't have to be adjacent.Each arrow has an integer reward for repainting it into red (which can be negative, positive, or zero).The final score is the sum of the rewards for the repainted arrows. What is the maximum score that can be achieved if you are allowed to perform any number of operations (including zero)?"
  },
  {
    "title": "Uppercase or Lowercase?",
    "url": "https://codeforces.com/problemset/problem/2087/D",
    "description": "This is an interactive problem.In a certain database, there are $$$n$$$ handles stored in the form of a numbered list. You are interested in one specific handle $$$h$$$, or more precisely, in its position in this list.You can ask the database for the position $$$i$$$ from the list, and it will return the handle at the $$$i$$$-th position.All handles are non-empty strings consisting of at most $$$20$$$ lowercase Latin letters, except the first one that can be either a lowercase or an uppercase Latin letter.You know that all handles are sorted in lexicographical order, but the problem is that it is unknown whether uppercase letters are considered less than lowercase ones. In other words, you do not know if it is true that all handles starting with uppercase letters come first, followed by those starting with lowercase letters — or vice versa, that all handles starting with lowercase letters come first, followed by those starting with uppercase letters.Lexicographical order is the order of standard string comparison, formally defined as follows:  if strings $$$s$$$ and $$$t$$$ differ in some positions, the earliest of which is position $$$i$$$, then string $$$s$$$ comes before string $$$t$$$ in lexicographical order if and only if $$$s_i < t_i$$$ (for example, for the strings cats and current, the first position with different characters is $$$2$$$, and the character a is less than the character u, so cats is lexicographically less than current);  if strings $$$s$$$ and $$$t$$$ have no positions with different characters, then the shorter one comes first. For example, the string cat comes before the string cats. Due to restricted access to the database, you can make no more than $$$10$$$ queries to it. Determine the position of the handle you are interested in, knowing that it is definitely in the list."
  },
  {
    "title": "Coin Game",
    "url": "https://codeforces.com/problemset/problem/2087/C",
    "description": "There are some coins arranged in a line, numbered from $$$1$$$ from left to right. There are three types of coins: gold, silver, and bronze.Two players play a game; players take turns, and the first player makes the first turn. In one turn, the player chooses one of the three types of coins, and then collects all coins of that type which are still not taken by the other player. The game continues until all the coins are collected. Both players play optimally, and each player wants to maximize the number of coins he/she gets.Your task is to answer $$$q$$$ independent queries of the following form: how many coins can the first player collect if the game is played using only coins with indices from $$$l$$$ to $$$r$$$ inclusive."
  },
  {
    "title": "Showmatch",
    "url": "https://codeforces.com/problemset/problem/2087/B",
    "description": "In a showmatch for a computer game, $$$2n$$$ esports players are set to participate; the rating of the $$$i$$$-th player is $$$a_i$$$. The ratings of all players are distinct.For each player, the most exciting match will be with the player whose rating is the closest to theirs. Formally, for the $$$i$$$-th player, the best opponent is another player $$$j$$$ such that the absolute difference in their ratings $$$|a_i-a_j|$$$ is minimized among all ways to choose player $$$j$$$. Note that some player can have more than one best opponent.For example, if there are $$$4$$$ esports players with ratings $$$[3, 7, 5, 12]$$$, then:  for player $$$1$$$, the best opponent is player $$$3$$$;  for player $$$2$$$, the best opponent is player $$$3$$$;  for player $$$3$$$, the best opponents are players $$$1$$$ and $$$2$$$;  for player $$$4$$$, the best opponent is player $$$2$$$. The organizers of the showmatch want to pair the participants so that each player is in exactly one pair, and in each pair, the players are best opponents for each other. Determine whether such a pairing exists."
  },
  {
    "title": "Password Generator",
    "url": "https://codeforces.com/problemset/problem/2087/A",
    "description": "Monocarp is going to register on the Codeforces website, but he can't come up with a sufficiently secure password. The requirements that his password must meet are as follows:  the password must consist of digits, as well as uppercase and lowercase letters of the Latin alphabet;  there must be exactly $$$a$$$ digits, exactly $$$b$$$ uppercase letters, and exactly $$$c$$$ lowercase letters;  for security, no two adjacent characters in the password should be the same. The lowercase and uppercase versions of the same letter are considered different characters. Write a program that generates a password that meets all the requirements."
  },
  {
    "title": "Online Palindrome",
    "url": "https://codeforces.com/problemset/problem/2086/F",
    "description": "This is an interactive problem.The jury has a string $$$s$$$ consisting of lowercase Latin letters. The following constraints apply to this string:  the string has an odd length that does not exceed $$$99$$$;  the string consists only of the characters \"a\" and \"b\". There is also a string $$$t$$$, which is initially empty. Then, $$$|s|$$$ steps happen. During the $$$i$$$-th step, the following events occur:  first, the jury tells you the character $$$s_i$$$ and appends it to the end of the string $$$t$$$;  then, you may swap any two characters in $$$t$$$, or do nothing. Your task is to ensure that after the $$$|s|$$$-th step, the string $$$t$$$ is a palindrome."
  },
  {
    "title": "Zebra-like Numbers",
    "url": "https://codeforces.com/problemset/problem/2086/E",
    "description": "We call a positive integer zebra-like if its binary representation has alternating bits up to the most significant bit, and the least significant bit is equal to $$$1$$$. For example, the numbers $$$1$$$, $$$5$$$, and $$$21$$$ are zebra-like, as their binary representations $$$1$$$, $$$101$$$, and $$$10101$$$ meet the requirements, while the number $$$10$$$ is not zebra-like, as the least significant bit of its binary representation $$$1010$$$ is $$$0$$$.We define the zebra value of a positive integer $$$e$$$ as the minimum integer $$$p$$$ such that $$$e$$$ can be expressed as the sum of $$$p$$$ zebra-like numbers (possibly the same, possibly different)Given three integers $$$l$$$, $$$r$$$, and $$$k$$$, calculate the number of integers $$$x$$$ such that $$$l \\le x \\le r$$$ and the zebra value of $$$x$$$ equals $$$k$$$."
  },
  {
    "title": "Even String",
    "url": "https://codeforces.com/problemset/problem/2086/D",
    "description": "You would like to construct a string $$$s$$$, consisting of lowercase Latin letters, such that the following condition holds:  For every pair of indices $$$i$$$ and $$$j$$$ such that $$$s_{i} = s_{j}$$$, the difference of these indices is even, that is, $$$|i - j| \\bmod 2 = 0$$$. Constructing any string is too easy, so you will be given an array $$$c$$$ of $$$26$$$ numbers — the required number of occurrences of each individual letter in the string $$$s$$$. So, for every $$$i \\in [1, 26]$$$, the $$$i$$$-th letter of the Latin alphabet should occur exactly $$$c_i$$$ times.Your task is to count the number of distinct strings $$$s$$$ that satisfy all these conditions. Since the answer can be huge, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Disappearing Permutation",
    "url": "https://codeforces.com/problemset/problem/2086/C",
    "description": "A permutation of integers from $$$1$$$ to $$$n$$$ is an array of size $$$n$$$ where each integer from $$$1$$$ to $$$n$$$ appears exactly once.You are given a permutation $$$p$$$ of integers from $$$1$$$ to $$$n$$$. You have to process $$$n$$$ queries. During the $$$i$$$-th query, you replace $$$p_{d_i}$$$ with $$$0$$$. Each element is replaced with $$$0$$$ exactly once. The changes made in the queries are saved, that is, after the $$$i$$$-th query, all integers $$$p_{d_1}, p_{d_2}, \\dots, p_{d_i}$$$ are zeroes.After each query, you have to find the minimum number of operations required to fix the array; in other words, to transform the current array into any permutation of integers from $$$1$$$ to $$$n$$$ (possibly into the original permutation $$$p$$$, possibly into some other permutation).The operation you can perform to fix the array is the following one:  choose the integer $$$i$$$ from $$$1$$$ to $$$n$$$, replace the $$$i$$$-th element of the array with $$$i$$$. Note that the answer for each query is calculated independently, meaning you do not actually apply any operations, just calculate the minimum number of operations."
  },
  {
    "title": "Large Array and Segments",
    "url": "https://codeforces.com/problemset/problem/2086/B",
    "description": "There is an array $$$a$$$ consisting of $$$n$$$ positive integers, and a positive integer $$$k$$$. An array $$$b$$$ is created from array $$$a$$$ according to the following rules:  $$$b$$$ contains $$$n \\cdot k$$$ numbers;  the first $$$n$$$ numbers of array $$$b$$$ are the same as the numbers of array $$$a$$$, that is, $$$b_{i} = a_{i}$$$ for $$$i \\le n$$$;  for any $$$i > n$$$, it holds that $$$b_{i} = b_{i - n}$$$. For example, if $$$a = [2, 3, 1, 4]$$$ and $$$k = 3$$$, then $$$b = [2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4]$$$. Given a number $$$x$$$, it is required to count the number of such positions $$$l$$$ ($$$1 \\le l \\le n \\cdot k$$$), for which there exists a position $$$r \\ge l$$$, such that the sum of the elements of array $$$b$$$ on the segment $$$[l, r]$$$ is at least $$$x$$$ (in other words, $$$b_{l} + b_{l+1} + \\dots + b_{r} \\ge x$$$)."
  },
  {
    "title": "Cloudberry Jam",
    "url": "https://codeforces.com/problemset/problem/2086/A",
    "description": "The most valuable berry of the Karelian forests is cloudberry. To make jam from cloudberries, you take equal amounts of berries and sugar and cook them. Thus, if you have $$$2$$$ kg of berries, you need $$$2$$$ kg of sugar. However, from $$$2$$$ kg of berries and $$$2$$$ kg of sugar, you will not get $$$4$$$ kg of jam, as one might expect, but only $$$3$$$ kg, since some of the jam evaporates during cooking. Specifically, during standard cooking, exactly a quarter (or $$$25\\%$$$) of the jam evaporates.How many kilograms of cloudberries are needed to prepare $$$n$$$ $$$3$$$-kilogram jars of jam?    "
  },
  {
    "title": "Serval and Colorful Array (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2085/F2",
    "description": "   This is the hard version of the problem. The difference between the versions is that in this version, $$$n\\le 4\\cdot 10^5$$$. You can hack only if you solved all versions of this problem. Serval has a magic number $$$k$$$ ($$$k\\ge 2$$$). We call an array $$$r$$$ colorful if and only if:  The length of $$$r$$$ is $$$k$$$, and  Each integer between $$$1$$$ and $$$k$$$ appears exactly once in $$$r$$$. You are given an array $$$a$$$ consisting of $$$n$$$ integers between $$$1$$$ and $$$k$$$. It is guaranteed that each integer between $$$1$$$ and $$$k$$$ appears in $$$a$$$ at least once. You can perform the following operation on $$$a$$$: Choose an index $$$i$$$ ($$$1\\le i < n$$$), then swap $$$a_i$$$ and $$$a_{i+1}$$$.Find the minimum number of operations needed to make at least one subarray$$$^{\\text{∗}}$$$ of $$$a$$$ colorful. It can be shown that this is always possible under the constraints of the problem.$$$^{\\text{∗}}$$$An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Serval and Colorful Array (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2085/F1",
    "description": "   This is the easy version of the problem. The difference between the versions is that in this version, $$$n\\le 3000$$$. You can hack only if you solved all versions of this problem. Serval has a magic number $$$k$$$ ($$$k\\ge 2$$$). We call an array $$$r$$$ colorful if and only if:  The length of $$$r$$$ is $$$k$$$, and  Each integer between $$$1$$$ and $$$k$$$ appears exactly once in $$$r$$$. You are given an array $$$a$$$ consisting of $$$n$$$ integers between $$$1$$$ and $$$k$$$. It is guaranteed that each integer between $$$1$$$ and $$$k$$$ appears in $$$a$$$ at least once. You can perform the following operation on $$$a$$$: Choose an index $$$i$$$ ($$$1\\le i < n$$$), then swap $$$a_i$$$ and $$$a_{i+1}$$$.Find the minimum number of operations needed to make at least one subarray$$$^{\\text{∗}}$$$ of $$$a$$$ colorful. It can be shown that this is always possible under the constraints of the problem.$$$^{\\text{∗}}$$$An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Serval and Modulo",
    "url": "https://codeforces.com/problemset/problem/2085/E",
    "description": "  There is an array $$$a$$$ consisting of $$$n$$$ non-negative integers and a magic number $$$k$$$ ($$$k\\ge 1$$$, $$$k$$$ is an integer). Serval has constructed another array $$$b$$$ of length $$$n$$$, where $$$b_i = a_i \\bmod k$$$ holds$$$^{\\text{∗}}$$$ for all $$$1\\leq i\\leq n$$$. Then, he shuffled $$$b$$$.You are given the two arrays $$$a$$$ and $$$b$$$. Find a possible magic number $$$k$$$. However, there is a small possibility that Serval fooled you, and such an integer does not exist. In this case, output $$$-1$$$.It can be shown that, under the constraints of the problem, if such an integer $$$k$$$ exists, then there exists a valid answer no more than $$$10^9$$$. And you need to guarantee that $$$k\\le 10^9$$$ in your output.$$$^{\\text{∗}}$$$$$$a_i \\bmod k$$$ denotes the remainder from dividing $$$a_i$$$ by $$$k$$$. "
  },
  {
    "title": "Serval and Kaitenzushi Buffet",
    "url": "https://codeforces.com/problemset/problem/2085/D",
    "description": " Serval has just found a Kaitenzushi buffet restaurant. Kaitenzushi means that there is a conveyor belt in the restaurant, delivering plates of sushi in front of the customer, Serval.In this restaurant, each plate contains exactly $$$k$$$ pieces of sushi and the $$$i$$$-th plate has a deliciousness $$$d_i$$$. Serval will have a meal in this restaurant for $$$n$$$ minutes, and within the $$$n$$$ minutes, he must eat up all the pieces of sushi he took from the belt.Denote the counter for uneaten taken pieces of sushi as $$$r$$$. Initially, $$$r=0$$$. In the $$$i$$$-th minute ($$$1\\leq i\\leq n$$$), only the $$$i$$$-th plate of sushi will be delivered in front of Serval, and he can do one of the following:  Take the $$$i$$$-th plate of sushi (whose deliciousness is $$$d_i$$$) from the belt, and $$$r$$$ will be increased by $$$k$$$;  Eat one uneaten piece of sushi that he took from the belt before, and $$$r$$$ will be decreased by $$$1$$$. Note that you can do this only if $$$r>0$$$;  Or, do nothing, and $$$r$$$ will remain unchanged. Note that after the $$$n$$$ minutes, the value of $$$r$$$ must be $$$0$$$.Serval wants to maximize the sum of the deliciousnesses of all the plates he took. Help him find it out!"
  },
  {
    "title": "Serval and The Formula",
    "url": "https://codeforces.com/problemset/problem/2085/C",
    "description": " You are given two positive integers xx and yy (1≤x,y≤1091\\le x, y\\le 10^9).Find a non-negative integer k≤1018k\\le 10^{18}, such that (x+k)+(y+k)=(x+k)⊕(y+k)(x+k) + (y+k) = (x+k)\\oplus (y+k) holds∗^{\\text{∗}}, or determine that such an integer does not exist.∗^{\\text{∗}}⊕\\oplus denotes the bitwise XOR operation. "
  },
  {
    "title": "Serval and Final MEX",
    "url": "https://codeforces.com/problemset/problem/2085/B",
    "description": "  You are given an array $$$a$$$ consisting of $$$n\\ge 4$$$ non-negative integers.You need to perform the following operation on $$$a$$$ until its length becomes $$$1$$$:  Select two indices $$$l$$$ and $$$r$$$ ($$$1\\le {\\color{red}{ l < r }} \\le |a|$$$), and replace the subarray $$$[a_l,a_{l+1},\\ldots,a_r]$$$ with a single integer $$$\\operatorname{mex}([a_l,a_{l+1},\\ldots,a_r])$$$, where $$$\\operatorname{mex}(b)$$$ denotes the minimum excluded (MEX)$$$^{\\text{∗}}$$$ of the integers in $$$b$$$. In other words, let $$$x=\\operatorname{mex}([a_l,a_{l+1},\\ldots,a_r])$$$, the array $$$a$$$ will become $$$[a_1,a_2,\\ldots,a_{l-1},x,a_{r+1},a_{r+2},\\ldots,a_{|a|}]$$$. Note that the length of $$$a$$$ decreases by $$$(r-l)$$$ after this operation. Serval wants the final element in $$$a$$$ to be $$$0$$$. Help him! More formally, you have to find a sequence of operations, such that after performing these operations in order, the length of $$$a$$$ becomes $$$1$$$, and the final element in $$$a$$$ is $$$0$$$.It can be shown that at least one valid operation sequence exists under the constraints of the problem, and the length of any valid operation sequence does not exceed $$$n$$$.Note that you do not need to minimize the number of operations.$$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$b_1, b_2, \\ldots, b_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$b$$$. "
  },
  {
    "title": "Serval and String Theory",
    "url": "https://codeforces.com/problemset/problem/2085/A",
    "description": " A string $$$r$$$ consisting only of lowercase Latin letters is called universal if and only if $$$r$$$ is lexicographically smaller$$$^{\\text{∗}}$$$ than the reversal$$$^{\\text{†}}$$$ of $$$r$$$.You are given a string $$$s$$$ consisting of $$$n$$$ lowercase Latin letters. You are required to make $$$s$$$ universal. To achieve this, you can perform the following operation on $$$s$$$ at most $$$k$$$ times:  Choose two indices $$$i$$$ and $$$j$$$ ($$$1\\le i,j\\le n$$$), then swap $$$s_i$$$ and $$$s_j$$$. Note that if $$$i=j$$$, you do nothing. Determine whether you can make $$$s$$$ universal by performing the above operation at most $$$k$$$ times.$$$^{\\text{∗}}$$$A string $$$a$$$ is lexicographically smaller than a string $$$b$$$ of the same length, if and only if the following holds:   in the first position where $$$a$$$ and $$$b$$$ differ, the string $$$a$$$ has a letter that appears earlier in the alphabet than the corresponding letter in $$$b$$$.  $$$^{\\text{†}}$$$The reversal of a string $$$r$$$ is the string obtained by writing $$$r$$$ from right to left. For example, the reversal of the string $$$\\texttt{abcad}$$$ is $$$\\texttt{dacba}$$$."
  },
  {
    "title": "Turtle and Nediam 2",
    "url": "https://codeforces.com/problemset/problem/2084/H",
    "description": " LGR-205-Div.1 C Turtle and Nediam You are given a binary sequence $$$s$$$ of length $$$n$$$ which only consists of $$$0$$$ and $$$1$$$.You can do the following operation at most $$$n - 2$$$ times (possibly zero):  Let $$$m$$$ denote the current length of $$$s$$$. Choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 2$$$.  Let the median$$$^{\\text{∗}}$$$ of the subarray $$$[s_i, s_{i + 1}, s_{i + 2}]$$$ be $$$x$$$, and let $$$j$$$ be the smallest integer such that $$$j \\ge i$$$ and $$$s_j = x$$$.  Remove $$$s_j$$$ from the sequence and concatenate the remaining parts. In other words, replace $$$s$$$ with $$$[s_1, s_2, \\ldots, s_{j - 1}, s_{j + 1}, s_{j + 2}, \\ldots, s_m]$$$. Note that after every operation, the length of $$$s$$$ decreases by $$$1$$$.Find how many different binary sequences can be obtained after performing the operation, modulo $$$10^9 + 7$$$.$$$^{\\text{∗}}$$$The median of an array of odd length $$$k$$$ is the $$$\\frac{k + 1}{2}$$$-th element when sorted."
  },
  {
    "title": "Wish Upon a Satellite (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2084/G2",
    "description": "    This is the hard version of the problem. The difference between the versions is that in this version, $$$t \\le 10^4$$$, $$$n \\le 5 \\cdot 10^5$$$ and the sum of $$$n$$$ does not exceed $$$5 \\cdot 10^5$$$. You can hack only if you solved all versions of this problem. For a non-empty sequence $$$c$$$ of length $$$k$$$, define $$$f(c)$$$ as follows:  Turtle and Piggy are playing a game on a sequence. They are given the sequence $$$c_1, c_2, \\ldots, c_k$$$, and Turtle goes first. Turtle and Piggy alternate in turns (so, Turtle does the first turn, Piggy does the second, Turtle does the third, etc.).  The game goes as follows:   Let the current length of the sequence be $$$m$$$. If $$$m = 1$$$, the game ends.  If the game does not end and it's Turtle's turn, then Turtle must choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 1$$$, set $$$c_i$$$ to $$$\\min(c_i, c_{i + 1})$$$, and remove $$$c_{i + 1}$$$.  If the game does not end and it's Piggy's turn, then Piggy must choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 1$$$, set $$$c_i$$$ to $$$\\max(c_i, c_{i + 1})$$$, and remove $$$c_{i + 1}$$$.   Turtle wants to maximize the value of $$$c_1$$$ in the end, while Piggy wants to minimize the value of $$$c_1$$$ in the end.  $$$f(c)$$$ is the value of $$$c_1$$$ in the end if both players play optimally. For a permutation $$$p$$$ of length $$$n$$$$$$^{\\text{∗}}$$$, Turtle defines the beauty of the permutation as $$$\\sum\\limits_{i = 1}^n \\sum\\limits_{j = i}^n f([p_i, p_{i + 1}, \\ldots, p_j])$$$ (i.e., the sum of $$$f(c)$$$ where $$$c$$$ is a non-empty subsegment$$$^{\\text{†}}$$$ of $$$p$$$).Piggy gives Turtle a permutation $$$a$$$ of length $$$n$$$ where some elements are missing and represented by $$$0$$$.Turtle asks you to determine a permutation $$$b$$$ of length $$$n$$$ such that:  $$$b$$$ can be formed by filling in the missing elements of $$$a$$$ (i.e., for all $$$1 \\le i \\le n$$$, if $$$a_i \\ne 0$$$, then $$$b_i = a_i$$$).  The beauty of the permutation $$$b$$$ is maximized. For convenience, you only need to find the maximum beauty of such permutation $$$b$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsegment of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Wish Upon a Satellite (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2084/G1",
    "description": "    This is the easy version of the problem. The difference between the versions is that in this version, $$$t \\le 1000$$$, $$$n \\le 5000$$$ and the sum of $$$n$$$ does not exceed $$$5000$$$. You can hack only if you solved all versions of this problem. For a non-empty sequence $$$c$$$ of length $$$k$$$, define $$$f(c)$$$ as follows:  Turtle and Piggy are playing a game on a sequence. They are given the sequence $$$c_1, c_2, \\ldots, c_k$$$, and Turtle goes first. Turtle and Piggy alternate in turns (so, Turtle does the first turn, Piggy does the second, Turtle does the third, etc.).  The game goes as follows:   Let the current length of the sequence be $$$m$$$. If $$$m = 1$$$, the game ends.  If the game does not end and it's Turtle's turn, then Turtle must choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 1$$$, set $$$c_i$$$ to $$$\\min(c_i, c_{i + 1})$$$, and remove $$$c_{i + 1}$$$.  If the game does not end and it's Piggy's turn, then Piggy must choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 1$$$, set $$$c_i$$$ to $$$\\max(c_i, c_{i + 1})$$$, and remove $$$c_{i + 1}$$$.   Turtle wants to maximize the value of $$$c_1$$$ in the end, while Piggy wants to minimize the value of $$$c_1$$$ in the end.  $$$f(c)$$$ is the value of $$$c_1$$$ in the end if both players play optimally. For a permutation $$$p$$$ of length $$$n$$$$$$^{\\text{∗}}$$$, Turtle defines the beauty of the permutation as $$$\\sum\\limits_{i = 1}^n \\sum\\limits_{j = i}^n f([p_i, p_{i + 1}, \\ldots, p_j])$$$ (i.e., the sum of $$$f(c)$$$ where $$$c$$$ is a non-empty subsegment$$$^{\\text{†}}$$$ of $$$p$$$).Piggy gives Turtle a permutation $$$a$$$ of length $$$n$$$ where some elements are missing and represented by $$$0$$$.Turtle asks you to determine a permutation $$$b$$$ of length $$$n$$$ such that:  $$$b$$$ can be formed by filling in the missing elements of $$$a$$$ (i.e., for all $$$1 \\le i \\le n$$$, if $$$a_i \\ne 0$$$, then $$$b_i = a_i$$$).  The beauty of the permutation $$$b$$$ is maximized. For convenience, you only need to find the maximum beauty of such permutation $$$b$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsegment of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Skyscape",
    "url": "https://codeforces.com/problemset/problem/2084/F",
    "description": "  You are given a permutation $$$a$$$ of length $$$n$$$$$$^{\\text{∗}}$$$.We say that a permutation $$$b$$$ of length $$$n$$$ is good if the two permutations $$$a$$$ and $$$b$$$ can become the same after performing the following operation at most $$$n$$$ times (possibly zero):  Choose two integers $$$l, r$$$ such that $$$1 \\le l < r \\le n$$$ and $$$a_r = \\min(a_l, a_{l + 1}, \\ldots, a_r)$$$.  Cyclically shift the subsegment $$$[a_l, a_{l + 1}, \\ldots, a_r]$$$ one position to the right. In other words, replace $$$a$$$ with $$$[a_1, \\ldots, a_{l - 1}, \\; a_r, a_l, a_{l + 1}, \\ldots, a_{r - 1}, \\; a_{r + 1}, \\ldots, a_n]$$$. You are also given a permutation $$$c$$$ of length $$$n$$$ where some elements are missing and represented by $$$0$$$.You need to find a good permutation $$$b_1, b_2, \\ldots, b_n$$$ such that $$$b$$$ can be formed by filling in the missing elements of $$$c$$$ (i.e., for all $$$1 \\le i \\le n$$$, if $$$c_i \\ne 0$$$, then $$$b_i = c_i$$$). If it is impossible, output $$$-1$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Blossom",
    "url": "https://codeforces.com/problemset/problem/2084/E",
    "description": "   You are given a permutation $$$a$$$ of length $$$n$$$$$$^{\\text{∗}}$$$ where some elements are missing and represented by $$$-1$$$.Define the value of a permutation as the sum of the MEX$$$^{\\text{†}}$$$ of all its non-empty subsegments$$$^{\\text{‡}}$$$.Find the sum of the value of all possible valid permutations that can be formed by filling in the missing elements of $$$a$$$ modulo $$$10^9 + 7$$$.$$$^{\\text{∗}}$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$\\bf{0}$$$ to $$$\\bf{n - 1}$$$ in arbitrary order. For example, $$$[1,2,0,4,3]$$$ is a permutation, but $$$[0,1,1]$$$ is not a permutation ($$$1$$$ appears twice in the array), and $$$[0,2,3]$$$ is also not a permutation ($$$n=3$$$ but there is $$$3$$$ in the array). $$$^{\\text{†}}$$$The minimum excluded (MEX) of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$c$$$. $$$^{\\text{‡}}$$$A sequence $$$a$$$ is a subsegment of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Arcology On Permafrost",
    "url": "https://codeforces.com/problemset/problem/2084/D",
    "description": "  You are given three integers $$$n$$$, $$$m$$$, and $$$k$$$, where $$$m \\cdot k < n$$$.For a sequence $$$b$$$ consisting of non-negative integers, define $$$f(b)$$$ as follows:  You may perform the following operation on $$$b$$$:   Let $$$l$$$ denote the current length of $$$b$$$. Choose a positive integer $$$1 \\leq i \\leq l - k + 1$$$, remove the subarray from index $$$i$$$ to $$$i + k - 1$$$ and concatenate the remaining parts. In other words, replace $$$b$$$ with $$$$$$[b_1, b_2, \\ldots, b_{i - 1}, b_{i + k}, b_{i + k + 1}, \\ldots, b_l].$$$$$$   $$$f(b)$$$ is defined as the minimum possible value of $$$\\operatorname{mex}(b)$$$$$$^{\\text{∗}}$$$ after performing the above operation at most $$$m$$$ times (possibly zero). You need to construct a sequence $$$a$$$ of length $$$n$$$ consisting of non-negative integers, such that:  For all $$$1 \\le i \\le n$$$, $$$0 \\le a_i \\le 10^9$$$.  Over all such sequences $$$a$$$, $$$f(a)$$$ is maximized. $$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$c$$$. "
  },
  {
    "title": "You Soared Afar With Grace",
    "url": "https://codeforces.com/problemset/problem/2084/C",
    "description": "  You are given a permutation $$$a$$$ and $$$b$$$ of length $$$n$$$$$$^{\\text{∗}}$$$. You can perform the following operation at most $$$n$$$ times:  Choose two indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$, $$$i \\ne j$$$), swap $$$a_i$$$ with $$$a_j$$$, swap $$$b_i$$$ with $$$b_j$$$. Determine whether $$$a$$$ and $$$b$$$ can be reverses of each other after operations. In other words, for each $$$i = 1, 2, \\ldots, n$$$, $$$a_i = b_{n + 1 - i}$$$.If it is possible, output any valid sequence of operations. Otherwise, output $$$-1$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "MIN = GCD",
    "url": "https://codeforces.com/problemset/problem/2084/B",
    "description": " You are given a positive integer sequence $$$a$$$ of length $$$n$$$. Determine if it is possible to rearrange $$$a$$$ such that there exists an integer $$$i$$$ ($$$1 \\le i<n$$$) satisfying $$$$$$ \\min([a_1,a_2,\\ldots,a_i])=\\gcd([a_{i+1},a_{i+2},\\ldots,a_n]). $$$$$$Here $$$\\gcd(c)$$$ denotes the greatest common divisor of $$$c$$$, which is the maximum positive integer that divides all integers in $$$c$$$."
  },
  {
    "title": "Max and Mod",
    "url": "https://codeforces.com/problemset/problem/2084/A",
    "description": "  You are given an integer $$$n$$$. Find any permutation $$$p$$$ of length $$$n$$$$$$^{\\text{∗}}$$$ such that:  For all $$$2 \\le i \\le n$$$, $$$\\max(p_{i - 1}, p_i) \\bmod i$$$ $$$^{\\text{†}}$$$ $$$= i - 1$$$ is satisfied. If it is impossible to find such a permutation $$$p$$$, output $$$-1$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$$$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$. "
  },
  {
    "title": "Floor or Ceil",
    "url": "https://codeforces.com/problemset/problem/2082/B",
    "description": "Ecrade has an integer $$$x$$$. There are two kinds of operations.  Replace $$$x$$$ with $$$\\left\\lfloor \\dfrac{x}{2}\\right\\rfloor$$$, where $$$\\left\\lfloor \\dfrac{x}{2}\\right\\rfloor$$$ is the greatest integer $$$\\le \\dfrac{x}{2}$$$.  Replace $$$x$$$ with $$$\\left\\lceil \\dfrac{x}{2}\\right\\rceil$$$, where $$$\\left\\lceil \\dfrac{x}{2}\\right\\rceil$$$ is the smallest integer $$$\\ge \\dfrac{x}{2}$$$. Ecrade will perform exactly $$$n$$$ first operations and $$$m$$$ second operations in any order. He wants to know the minimum and the maximum possible value of $$$x$$$ after $$$n+m$$$ operations. However, it seems a little difficult, so please help him!"
  },
  {
    "title": "Binary Matrix",
    "url": "https://codeforces.com/problemset/problem/2082/A",
    "description": "A matrix is called binary if all its elements are either $$$0$$$ or $$$1$$$.Ecrade calls a binary matrix $$$A$$$ good if the following two properties hold:  The bitwise XOR of all numbers in each row of matrix $$$A$$$ is equal to $$$0$$$.  The bitwise XOR of all numbers in each column of matrix $$$A$$$ is equal to $$$0$$$. Ecrade has a binary matrix of size $$$n \\cdot m$$$. He is interested in the minimum number of elements that need to be changed for the matrix to become good.However, it seems a little difficult, so please help him!"
  },
  {
    "title": "Hard Formula (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2081/G2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version, the limit on $$$n$$$ and the time limit are higher. You can hack only if you solved all versions of this problem. You are given an integer $$$n$$$, and you need to compute $$$(\\sum_{k=1}^n k\\bmod\\varphi(k))\\bmod 2^{32}$$$, where $$$\\varphi(k)$$$ equals the number of positive integers no greater than $$$k$$$ that are coprime with $$$k$$$."
  },
  {
    "title": "Hard Formula",
    "url": "https://codeforces.com/problemset/problem/2081/G1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version, the limits on $$$n$$$ and the time limit are smaller. You can hack only if you solved all versions of this problem. You are given an integer $$$n$$$, and you need to compute $$$(\\sum_{k=1}^n k\\bmod\\varphi(k))\\bmod 2^{32}$$$, where $$$\\varphi(k)$$$ equals the number of positive integers no greater than $$$k$$$ that are coprime with $$$k$$$."
  },
  {
    "title": "Hot Matrix",
    "url": "https://codeforces.com/problemset/problem/2081/F",
    "description": "Piggy Zhou loves matrices, especially those that make him get excited, called hot matrix.A hot matrix of size $$$n \\times n$$$ can be defined as follows. Let $$$a_{i, j}$$$ denote the element in the $$$i$$$-th row, $$$j$$$-th column ($$$1 \\le i, j \\le n$$$). Each column and row of the matrix is a permutation of all numbers from $$$0$$$ to $$$n-1$$$.  For each pair of indices $$$i$$$, $$$j$$$, such that $$$1 \\le i, j \\le n$$$, $$$a_{i, j} + a_{i, n - j + 1} = n - 1$$$.  For each pair of indices $$$i$$$, $$$j$$$, such that $$$1 \\le i, j \\le n$$$, $$$a_{i, j} + a_{n - i + 1, j} = n - 1$$$.  All ordered pairs $$$\\left(a_{i, j}, a_{i, j + 1}\\right)$$$, where $$$1 \\le i \\le n$$$, $$$1 \\le j < n$$$, are distinct.  All ordered pairs $$$\\left(a_{i, j}, a_{i + 1, j}\\right)$$$, where $$$1 \\le i < n$$$, $$$1 \\le j \\le n$$$, are distinct.Now, Piggy Zhou gives you a number $$$n$$$, and you need to provide him with a hot matrix if the hot matrix exists for the given $$$n$$$, or inform him that he will never get excited if the hot matrix does not exist for the given $$$n$$$."
  },
  {
    "title": "Quantifier",
    "url": "https://codeforces.com/problemset/problem/2081/E",
    "description": "Given a rooted tree with $$$n+1$$$ nodes labeled from $$$0$$$ to $$$n$$$, where the root is node $$$0$$$, and its only child is node $$$1$$$. There are $$$m$$$ distinct chips labeled from $$$1$$$ to $$$m$$$, each colored either black or white. Initially, they are arranged on edge $$$(0,1)$$$ from top to bottom in ascending order of labels.  The initial position of the chips. Tree nodes are shown in blue. You can perform the following operations any number of times (possibly zero) in any order:  Select two edges ($$$u,v$$$) and ($$$v,w$$$) such that $$$u$$$ is the parent of $$$v$$$ and $$$v$$$ is the parent of $$$w$$$, where edge ($$$u,v$$$) contains at least one chip. Move the bottommost chip on edge ($$$u,v$$$) to the topmost place on edge ($$$v,w$$$), i. e., above all existing chips on ($$$v,w$$$).  Select two edges ($$$u,v$$$) and ($$$v,w$$$) such that $$$u$$$ is the parent of $$$v$$$ and $$$v$$$ is the parent of $$$w$$$, where edge ($$$v,w$$$) contains at least one chip. Move the topmost chip on edge ($$$v,w$$$) to the bottommost place on edge ($$$u,v$$$), i. e., below all existing chips on ($$$u,v$$$).  Select two adjacent chips of the same color on the same edge, and swap their positions.   Permitted operations. Each chip $$$i$$$ has a movement range, defined as all edges on the simple path from the root to node $$$d_i$$$. During operations, you must ensure that no chip is moved to an edge outside its movement range.Finally, you must move all chips back to edge $$$(0,1)$$$. It can be found that the order of the chips may change. Compute the number of possible permutations of chips for the final arrangement on the edge $$$(0,1)$$$ modulo $$$998\\,244\\,353$$$.A permutation of chips is defined as a sequence of length $$$m$$$ consisting of the labels of the chips from top to bottom."
  },
  {
    "title": "MST in Modulo Graph",
    "url": "https://codeforces.com/problemset/problem/2081/D",
    "description": "You are given a complete graph with $$$n$$$ vertices, where the $$$i$$$-th vertex has a weight $$$p_i$$$. The weight of the edge connecting vertex $$$x$$$ and vertex $$$y$$$ is equal to $$$\\operatorname{max}(p_x, p_y) \\bmod \\operatorname{min}(p_x, p_y)$$$.Find the smallest total weight of a set of $$$n - 1$$$ edges that connect all $$$n$$$ vertices in this graph."
  },
  {
    "title": "Quaternary Matrix",
    "url": "https://codeforces.com/problemset/problem/2081/C",
    "description": "A matrix is called quaternary if all its elements are $$$0$$$, $$$1$$$, $$$2$$$, or $$$3$$$.Ecrade calls a quaternary matrix $$$A$$$ good if the following two properties hold.  The bitwise XOR of all numbers in each row of matrix $$$A$$$ is equal to $$$0$$$.  The bitwise XOR of all numbers in each column of matrix $$$A$$$ is equal to $$$0$$$. Ecrade has a quaternary matrix of size $$$n \\times m$$$. He is interested in the minimum number of elements that need to be changed for the matrix to become good, and he also wants to find one of the possible resulting matrices.However, it seems a little difficult, so please help him!"
  },
  {
    "title": "Balancing",
    "url": "https://codeforces.com/problemset/problem/2081/B",
    "description": "Ecrade has an integer array $$$a_1, a_2, \\ldots, a_n$$$. It's guaranteed that for each $$$1 \\le i < n$$$, $$$a_i \\neq a_{i+1}$$$.Ecrade can perform several operations on the array to make it strictly increasing.In each operation, he can choose two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$) and replace $$$a_l, a_{l+1}, \\ldots, a_r$$$ with any $$$r-l+1$$$ integers $$$a'_l, a'_{l+1}, \\ldots, a'_r$$$ satisfying the following constraint:  For each $$$l \\le i < r$$$, the comparison between $$$a'_i$$$ and $$$a'_{i+1}$$$ is the same as that between $$$a_i$$$ and $$$a_{i+1}$$$, i.e., if $$$a_i < a_{i + 1}$$$, then $$$a'_i < a'_{i + 1}$$$; otherwise, if $$$a_i > a_{i + 1}$$$, then $$$a'_i > a'_{i + 1}$$$; otherwise, if $$$a_i = a_{i + 1}$$$, then $$$a'_i = a'_{i + 1}$$$. Ecrade wants to know the minimum number of operations to make the array strictly increasing. However, it seems a little difficult, so please help him!"
  },
  {
    "title": "Math Division",
    "url": "https://codeforces.com/problemset/problem/2081/A",
    "description": "Ecrade has an integer $$$x$$$. He will show you this number in the form of a binary number of length $$$n$$$.There are two kinds of operations.  Replace $$$x$$$ with $$$\\left\\lfloor \\dfrac{x}{2}\\right\\rfloor$$$, where $$$\\left\\lfloor \\dfrac{x}{2}\\right\\rfloor$$$ is the greatest integer $$$\\le \\dfrac{x}{2}$$$.  Replace $$$x$$$ with $$$\\left\\lceil \\dfrac{x}{2}\\right\\rceil$$$, where $$$\\left\\lceil \\dfrac{x}{2}\\right\\rceil$$$ is the smallest integer $$$\\ge \\dfrac{x}{2}$$$. Ecrade will perform several operations until $$$x$$$ becomes $$$1$$$. Each time, he will independently choose to perform either the first operation or the second operation with probability $$$\\frac{1}{2}$$$.Ecrade wants to know the expected number of operations he will perform to make $$$x$$$ equal to $$$1$$$, modulo $$$10^9 + 7$$$. However, it seems a little difficult, so please help him!"
  },
  {
    "title": "Scammy Game Ad",
    "url": "https://codeforces.com/problemset/problem/2078/D",
    "description": "Consider the following game.    In this game, a level consists of $$$n$$$ pairs of gates. Each pair contains one left gate and one right gate. Each gate performs one of two operations:  Addition Operation (+ a): Increases the number of people in a lane by a constant amount $$$a$$$.  Multiplication Operation (x a): Multiplies the current number of people in a lane by an integer $$$a$$$. This means the number of people increases by $$$(a - 1)$$$ times the current count in that lane. The additional people gained from each operation can be assigned to either lane. However, people already in a lane cannot be moved to the other lane.Initially, there is one person in each lane. Your task is to determine the maximum total number of people that can be achieved by the end of the level."
  },
  {
    "title": "Vicious Labyrinth",
    "url": "https://codeforces.com/problemset/problem/2078/B",
    "description": "Axium Crisis - ak+q There are $$$n$$$ cells in a labyrinth, and cell $$$i$$$ ($$$1 \\leq i \\leq n$$$) is $$$n - i$$$ kilometers away from the exit. In particular, cell $$$n$$$ is the exit. Note also that each cell is connected to the exit but is not accessible from any other cell in any way.In each cell, there is initially exactly one person stuck in it. You want to help everyone get as close to the exit as possible by installing a teleporter in each cell $$$i$$$ ($$$1 \\leq i \\leq n$$$), which translocates the person in that cell to another cell $$$a_i$$$.The labyrinth owner caught you in the act. Amused, she let you continue, but under some conditions: Everyone must use the teleporter exactly $$$k$$$ times. No teleporter in any cell can lead to the same cell it is in. Formally, $$$i \\neq a_i$$$ for all $$$1 \\leq i \\leq n$$$.You must find a teleporter configuration that minimizes the sum of distances of all individuals from the exit after using the teleporter exactly $$$k$$$ times while still satisfying the restrictions of the labyrinth owner.If there are many possible configurations, you can output any of them."
  },
  {
    "title": "Final Verdict",
    "url": "https://codeforces.com/problemset/problem/2078/A",
    "description": "Testify - void (Mournfinale) feat. 星熊南巫 You are given an array $$$a$$$ of length $$$n$$$, and must perform the following operation until the length of $$$a$$$ becomes $$$1$$$.Choose a positive integer $$$k < |a|$$$ such that $$$\\frac{|a|}{k}$$$ is an integer. Split $$$a$$$ into $$$k$$$ subsequences$$$^{\\text{∗}}$$$ $$$s_1, s_2, \\ldots, s_k$$$ such that:  Each element of $$$a$$$ belongs to exactly one subsequence. The length of every subsequence is equal. After this, replace $$$a = \\left[ \\operatorname{avg}(s_1), \\operatorname{avg}(s_2), \\ldots, \\operatorname{avg}(s_k) \\right] $$$, where $$$\\operatorname{avg}(s) = \\frac{\\sum_{i = 1}^{|s|} s_i}{|s|}$$$ is the average of all the values in the subsequence. For example, $$$\\operatorname{avg}([1, 2, 1, 1]) = \\frac{5}{4} = 1.25$$$.Your task is to determine whether there exists a sequence of operations such that after all operations, $$$a = [x]$$$.$$$^{\\text{∗}}$$$A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements."
  },
  {
    "title": "RGB Walking",
    "url": "https://codeforces.com/problemset/problem/2077/G",
    "description": "Red and Blue and Green - fn and Silentroom⠀You are given a connected graph with $$$n$$$ vertices and $$$m$$$ bidirectional edges with weight not exceeding $$$x$$$. The $$$i$$$-th edge connects vertices $$$u_i$$$ and $$$v_i$$$, has weight $$$w_i$$$, and is assigned a color $$$c_i$$$ ($$$1 \\leq i \\leq m$$$, $$$1 \\leq u_i, v_i \\leq n$$$). The color $$$c_i$$$ is either red, green, or blue. It is guaranteed that there is at least one edge of each color.For a walk where vertices and edges may be repeated, let $$$s_r, s_g, s_b$$$ denote the sum of the weights of the red, green, and blue edges that the walk passes through, respectively. If an edge is traversed multiple times, each traversal is counted separately.Find the minimum value of $$$\\max(s_r, s_g, s_b) - \\min(s_r, s_g, s_b)$$$ over all possible walks from vertex $$$1$$$ to vertex $$$n$$$."
  },
  {
    "title": "AND x OR",
    "url": "https://codeforces.com/problemset/problem/2077/F",
    "description": "Suppose you have two arrays $$$c$$$ and $$$d$$$, each of length $$$k$$$. The pair $$$(c, d)$$$ is called good if $$$c$$$ can be changed to $$$d$$$ by performing the following operation any number of times.  Select two distinct indices $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq k$$$, $$$i \\neq j$$$) and a nonnegative integer $$$x$$$ ($$$0 \\leq x < 2^{30}$$$). Then, apply the following transformations:   $$$c_i := c_i \\mathbin{\\&} x$$$, where $$$\\&$$$ denotes the bitwise AND operation.  $$$c_j := c_j \\mathbin{|} x$$$, where $$$|$$$ denotes the bitwise OR operation.  You are given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$, containing nonnegative integers not exceeding $$$m$$$. You can perform two types of moves on these arrays any number of times:  Select an index $$$i$$$ ($$$1 \\leq i \\leq n$$$) and set $$$a_i := a_i + 1$$$.  Select an index $$$i$$$ ($$$1 \\leq i \\leq n$$$) and set $$$b_i := b_i + 1$$$. Note that the elements of $$$a$$$ and $$$b$$$ may exceed $$$m$$$ at some point while performing the moves.Find the minimum number of moves required to make the pair $$$(a, b)$$$ good."
  },
  {
    "title": "Another Folding Strip",
    "url": "https://codeforces.com/problemset/problem/2077/E",
    "description": "For an array $$$b$$$ of length $$$m$$$, define $$$f(b)$$$ as follows.Consider a $$$1 \\times m$$$ strip, where all cells initially have darkness $$$0$$$. You want to transform it into a strip where the color at the $$$i$$$-th position has darkness $$$b_i$$$. You can perform the following operation, which consists of two steps: Fold the paper at any line between two cells. You may fold as many times as you like, or choose not to fold at all. Choose one position to drop the black dye. The dye permeates from the top and flows down to the bottom, increasing the darkness of all cells in its path by $$$1$$$. After dropping the dye, you unfold the strip.Let $$$f(b)$$$ be the minimum number of operations required to achieve the desired configuration. It can be proven that the goal can always be achieved in a finite number of operations.You are given an array $$$a$$$ of length $$$n$$$. Evaluate$$$$$$\\sum_{l=1}^n\\sum_{r=l}^n f(a_l a_{l+1} \\ldots a_r)$$$$$$modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Maximum Polygon",
    "url": "https://codeforces.com/problemset/problem/2077/D",
    "description": "Given an array $$$a$$$ of length $$$n$$$, determine the lexicographically largest$$$^{\\text{∗}}$$$ subsequence$$$^{\\text{†}}$$$ $$$s$$$ of $$$a$$$ such that $$$s$$$ can be the side lengths of a polygon.Recall that $$$s$$$ can be the side lengths of a polygon if and only if $$$|s| \\geq 3$$$ and$$$$$$ 2 \\cdot \\max(s_1, s_2, \\ldots, s_{|s|}) < s_1 + s_2 + \\ldots + s_{|s|}. $$$$$$If no such subsequence $$$s$$$ exists, print $$$-1$$$.$$$^{\\text{∗}}$$$A sequence $$$x$$$ is lexicographically smaller than a sequence $$$y$$$ if and only if one of the following holds: $$$x$$$ is a prefix of $$$y$$$, but $$$x \\ne y$$$; in the first position where $$$x$$$ and $$$y$$$ differ, the sequence $$$x$$$ has a smaller element than the corresponding element in $$$y$$$.$$$^{\\text{†}}$$$A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by deleting several (possibly zero or all) elements."
  },
  {
    "title": "Binary Subsequence Value Sum",
    "url": "https://codeforces.com/problemset/problem/2077/C",
    "description": "Last | Moment - onoken For a binary string$$$^{\\text{∗}}$$$ $$$v$$$, the score of $$$v$$$ is defined as the maximum value of $$$$$$F\\big(v, 1, i\\big) \\cdot F\\big(v, i+1, |v|\\big)$$$$$$ over all $$$i$$$ ($$$0 \\leq i \\leq |v|$$$).Here, $$$F\\big(v, l, r\\big) = r - l + 1 - 2 \\cdot \\operatorname{zero}(v, l, r)$$$, where $$$\\operatorname{zero}(v, l, r)$$$ denotes the number of $$$\\mathtt{0}$$$s in $$$v_lv_{l+1} \\ldots v_r$$$. If $$$l > r$$$, then $$$F\\big(v, l, r\\big) = 0$$$.You are given a binary string $$$s$$$ of length $$$n$$$ and a positive integer $$$q$$$.You will be asked $$$q$$$ queries.In each query, you are given an integer $$$i$$$ ($$$1 \\leq i \\leq n$$$). You must flip $$$s_i$$$ from $$$\\mathtt{0}$$$ to $$$\\mathtt{1}$$$ (or from $$$\\mathtt{1}$$$ to $$$\\mathtt{0}$$$). Find the sum of the scores over all non-empty subsequences$$$^{\\text{†}}$$$ of $$$s$$$ after each modification query. Since the result may be large, output the answer modulo $$$998\\,244\\,353$$$.Note that the modifications are persistent.$$$^{\\text{∗}}$$$A binary string is a string that consists only of the characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$.$$$^{\\text{†}}$$$A binary string $$$x$$$ is a subsequence of a binary string $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by deleting several (possibly zero or all) characters."
  },
  {
    "title": "Finding OR Sum",
    "url": "https://codeforces.com/problemset/problem/2077/B",
    "description": "ALTER EGO - Yuta Imai vs Qlarabelle This is an interactive problem.There are two hidden non-negative integers $$$x$$$ and $$$y$$$ ($$$0 \\leq x, y < 2^{30}$$$). You can ask no more than $$$2$$$ queries of the following form.  Pick a non-negative integer $$$n$$$ ($$$0 \\leq n < 2^{30}$$$). The judge will respond with the value of $$$(n \\mathbin{|} x) + (n \\mathbin{|} y)$$$, where $$$|$$$ denotes the bitwise OR operation. After this, the judge will give you another non-negative integer $$$m$$$ ($$$0 \\leq m < 2^{30}$$$). You must answer the correct value of $$$(m \\mathbin{|} x) + (m \\mathbin{|} y)$$$."
  },
  {
    "title": "Breach of Faith",
    "url": "https://codeforces.com/problemset/problem/2077/A",
    "description": "Breach of Faith - Supire feat.eili You and your team have worked tirelessly until you have a sequence $$$a_1, a_2, \\ldots, a_{2n+1}$$$ of positive integers satisfying these properties.  $$$1 \\le a_i \\le 10^{18}$$$ for all $$$1 \\le i \\le 2n + 1$$$.  $$$a_1, a_2, \\ldots, a_{2n+1}$$$ are pairwise distinct.  $$$a_1 = a_2 - a_3 + a_4 - a_5 + \\ldots + a_{2n} - a_{2n+1}$$$. However, the people you worked with sabotaged you because they wanted to publish this sequence first. They deleted one number from this sequence and shuffled the rest, leaving you with a sequence $$$b_1, b_2, \\ldots, b_{2n}$$$. You have forgotten the sequence $$$a$$$ and want to find a way to recover it.If there are many possible sequences, you can output any of them. It can be proven under the constraints of the problem that at least one sequence $$$a$$$ exists."
  },
  {
    "title": "Beautiful Sequence Returns",
    "url": "https://codeforces.com/problemset/problem/2075/F",
    "description": "Let's call an integer sequence beautiful if the following conditions hold:   for every element except the first one, there is an element to the left less than it;  for every element except the last one, there is an element to the right larger than it; For example, $$$[1, 2]$$$, $$$[42]$$$, $$$[1, 4, 2, 4, 7]$$$, and $$$[1, 2, 4, 8]$$$ are beautiful, but $$$[2, 2, 4]$$$ and $$$[1, 3, 5, 3]$$$ are not.Recall that a subsequence is a sequence that can be obtained from another sequence by removing some elements (possibly zero) without changing the order of the remaining elements.You are given an integer array $$$a$$$ of size $$$n$$$. Find the longest beautiful subsequence of the array $$$a$$$ and print its length."
  },
  {
    "title": "XOR Matrix",
    "url": "https://codeforces.com/problemset/problem/2075/E",
    "description": "For two arrays $$$a = [a_1, a_2, \\dots, a_n]$$$ and $$$b = [b_1, b_2, \\dots, b_m]$$$, we define the XOR matrix $$$X$$$ of size $$$n \\times m$$$, where for each pair $$$(i,j)$$$ ($$$1 \\le i \\le n$$$; $$$1 \\le j \\le m$$$) it holds that $$$X_{i,j} = a_i \\oplus b_j$$$. The symbol $$$\\oplus$$$ denotes the bitwise XOR operation.You are given four integers $$$n, m, A, B$$$. Count the number of such pairs of arrays $$$(a, b)$$$ such that:  $$$a$$$ consists of $$$n$$$ integers, each of which is from $$$0$$$ to $$$A$$$;  $$$b$$$ consists of $$$m$$$ integers, each of which is from $$$0$$$ to $$$B$$$;  in the XOR matrix formed from these arrays, there are no more than two distinct values. "
  },
  {
    "title": "Equalization",
    "url": "https://codeforces.com/problemset/problem/2075/D",
    "description": "You are given two non-negative integers $$$x$$$ and $$$y$$$.You can perform the following operation any number of times (possibly zero): choose a positive integer $$$k$$$ and divide either $$$x$$$ or $$$y$$$ by $$$2^k$$$ rounding down. The cost of this operation is $$$2^k$$$. However, there is an additional constraint: you cannot select the same value of $$$k$$$ more than once.Your task is to calculate the minimum possible cost in order to make $$$x$$$ equal to $$$y$$$."
  },
  {
    "title": "Two Colors",
    "url": "https://codeforces.com/problemset/problem/2075/C",
    "description": "Monocarp has installed a new fence at his summer house. The fence consists of $$$n$$$ planks of the same size arranged in a row.Monocarp decided that he would paint his fence according to the following rules:  each plank of the fence will be painted in exactly one color;  the number of different colors that the planks will be painted in is exactly two;  the planks of the fence that are painted in the same color must form a continuous sequence, meaning that for all pairs of planks painted in the same color, there will be no planks painted in a different color between them. Monocarp has $$$m$$$ different paints, and the paint of the $$$i$$$-th color is sufficient to paint no more than $$$a_i$$$ planks of the fence. Monocarp will not buy any additional paints.Your task is to determine the number of different ways to paint the fence that satisfy all of Monocarp's described wishes. Two ways to paint are considered different if there exists a plank that is painted in different colors in these two ways."
  },
  {
    "title": "Array Recoloring",
    "url": "https://codeforces.com/problemset/problem/2075/B",
    "description": "You are given an integer array $$$a$$$ of size $$$n$$$. Initially, all elements of the array are colored red.You have to choose exactly $$$k$$$ elements of the array and paint them blue. Then, while there is at least one red element, you have to select any red element with a blue neighbor and make it blue.The cost of painting the array is defined as the sum of the first $$$k$$$ chosen elements and the last painted element. Your task is to calculate the maximum possible cost of painting for the given array. "
  },
  {
    "title": "To Zero",
    "url": "https://codeforces.com/problemset/problem/2075/A",
    "description": "You are given two integers $$$n$$$ and $$$k$$$; $$$k$$$ is an odd number not less than $$$3$$$. Your task is to turn $$$n$$$ into $$$0$$$.To do this, you can perform the following operation any number of times: choose a number $$$x$$$ from $$$1$$$ to $$$k$$$ and subtract it from $$$n$$$. However, if the current value of $$$n$$$ is even (divisible by $$$2$$$), then $$$x$$$ must also be even, and if the current value of $$$n$$$ is odd (not divisible by $$$2$$$), then $$$x$$$ must be odd.In different operations, you can choose the same values of $$$x$$$, but you don't have to. So, there are no limitations on using the same value of $$$x$$$.Calculate the minimum number of operations required to turn $$$n$$$ into $$$0$$$."
  },
  {
    "title": "Game With Triangles: Season 2",
    "url": "https://codeforces.com/problemset/problem/2074/G",
    "description": " The Frontman greets you to this final round of the survival game. There is a regular polygon with $$$n$$$ sides ($$$n \\ge 3$$$). The vertices are indexed as $$$1,2,\\ldots,n$$$ in clockwise order. On each vertex $$$i$$$, the pink soldiers have written a positive integer $$$a_i$$$. With this regular polygon, you will play a game defined as follows.Initially, your score is $$$0$$$. Then, you perform the following operation any number of times to increase your score.  Select $$$3$$$ different vertices $$$i$$$, $$$j$$$, $$$k$$$ that you have not chosen before, and draw the triangle formed by the three vertices.   Then, your score increases by $$$a_i \\cdot a_j \\cdot a_k$$$.  However, you can not perform this operation if the triangle shares a positive common area with any of the triangles drawn previously.      An example of a state after two operations is on the left. The state on the right is impossible as the two triangles share a positive common area. Your objective is to maximize the score. Please find the maximum score you can get from this game."
  },
  {
    "title": "Counting Necessary Nodes",
    "url": "https://codeforces.com/problemset/problem/2074/F",
    "description": "A quadtree is a tree data structure in which each node has at most four children and accounts for a square-shaped region.Formally, for all tuples of nonnegative integers $$$k,a,b \\ge 0$$$, there exists exactly one node accounting for the following region$$$^{\\text{∗}}$$$.$$$$$$[a \\cdot 2^k,(a+1) \\cdot 2^k] \\times [b \\cdot 2^k,(b+1) \\cdot 2^k]$$$$$$All nodes whose region is larger than $$$1 \\times 1$$$ contain four children corresponding to the regions divided equally into four, and the nodes whose region is $$$1 \\times 1$$$ correspond to the leaf nodes of the tree.    A small subset of the regions accounted for by the nodes is shown. The relatively darker regions are closer to leaf nodes. The Frontman hates the widespread misconception, such that the quadtree can perform range queries in $$$\\mathcal{O}(\\log n)$$$ time when there are $$$n$$$ leaf nodes inside the region. In fact, sometimes it is necessary to query much more than $$$\\mathcal{O}(\\log n)$$$ regions for this, and the time complexity is $$$\\mathcal{O}(n)$$$ in some extreme cases. Thus, the Frontman came up with this task to educate you about this worst case of the data structure.The pink soldiers have given you a finite region $$$[l_1,r_1] \\times [l_2,r_2]$$$, where $$$l_i$$$ and $$$r_i$$$ ($$$l_i < r_i$$$) are nonnegative integers. Please find the minimum number of nodes that you must choose in order to make the union of regions accounted for by the chosen nodes exactly the same as the given region. Here, two sets of points are considered different if there exists a point included in one but not in the other.$$$^{\\text{∗}}$$$Regions are sets of points with real coordinates, where the point $$$(x,y)$$$ is included in the region $$$[p,q] \\times [r,s]$$$ if and only if $$$p \\le x \\le q$$$ and $$$r \\le y \\le s$$$. Here, $$$\\times$$$ formally refers to Cartesian product of sets."
  },
  {
    "title": "Empty Triangle",
    "url": "https://codeforces.com/problemset/problem/2074/E",
    "description": "  This is an interactive problem. The pink soldiers hid from you $$$n$$$ ($$$3 \\le n \\le 1500$$$) fixed points $$$(x_1,y_1), (x_2,y_2), \\ldots, (x_n,y_n)$$$, whose coordinates are not given to you. Also, it is known that no two points have the same coordinates, and no three points are collinear.You can ask the Frontman about three distinct indices $$$i$$$, $$$j$$$, $$$k$$$. Then, he will draw a triangle with points $$$(x_i,y_i)$$$, $$$(x_j,y_j)$$$, $$$(x_k,y_k)$$$, and respond with the following:  If at least one of the hidden points lies inside the triangle, then the Frontman gives you the index of one such point. Do note that if there are multiple such points, the Frontman can arbitrarily select one of them.  Otherwise, the Frontman responds with $$$0$$$.    Your objective in this problem is to find a triangle not containing any other hidden point, such as the blue one in the diagram. Using at most $$$\\mathbf{75}$$$ queries, you must find any triangle formed by three of the points, not containing any other hidden point inside.Do note that the Frontman may be adaptive while choosing the point to give you. In other words, the choice of the point can be determined by various factors including but not limited to the orientation of points and the previous queries. However, note that the sequence of points will never be altered.Hacks are disabled for this problem. Your solution will be judged on exactly $$$\\mathbf{35}$$$ input files, including the example input."
  },
  {
    "title": "Counting Points",
    "url": "https://codeforces.com/problemset/problem/2074/D",
    "description": "The pink soldiers drew $$$n$$$ circles with their center on the $$$x$$$-axis of the plane. Also, they have told that the sum of radii is exactly $$$m$$$$$$^{\\text{∗}}$$$.Please find the number of integer points inside or on the border of at least one circle. Formally, the problem is defined as follows.You are given an integer sequence $$$x_1,x_2,\\ldots,x_n$$$ and a positive integer sequence $$$r_1,r_2,\\ldots,r_n$$$, where it is known that $$$\\sum_{i=1}^n r_i = m$$$.You must count the number of integer pairs $$$(x,y)$$$ that satisfy the following condition.  There exists an index $$$i$$$ such that $$$(x-x_i)^2 + y^2 \\le r_i^2$$$ ($$$1 \\le i \\le n$$$). $$$^{\\text{∗}}$$$Is this information really useful? Don't ask me; I don't really know."
  },
  {
    "title": "XOR and Triangle",
    "url": "https://codeforces.com/problemset/problem/2074/C",
    "description": "This time, the pink soldiers have given you an integer $$$x$$$ ($$$x \\ge 2$$$).Please determine if there exists a positive integer $$$y$$$ that satisfies the following conditions.  $$$y$$$ is strictly less than $$$x$$$.  There exists a non-degenerate triangle$$$^{\\text{∗}}$$$ with side lengths $$$x$$$, $$$y$$$, $$$x \\oplus y$$$. Here, $$$\\oplus$$$ denotes the bitwise XOR operation. Additionally, if there exists such an integer $$$y$$$, output any.$$$^{\\text{∗}}$$$A triangle with side lengths $$$a$$$, $$$b$$$, $$$c$$$ is non-degenerate when $$$a+b > c$$$, $$$a+c > b$$$, $$$b+c > a$$$."
  },
  {
    "title": "The Third Side",
    "url": "https://codeforces.com/problemset/problem/2074/B",
    "description": "The pink soldiers have given you a sequence $$$a$$$ consisting of $$$n$$$ positive integers.You must repeatedly perform the following operation until there is only $$$1$$$ element left.  Choose two distinct indices $$$i$$$ and $$$j$$$.  Then, choose a positive integer value $$$x$$$ such that there exists a non-degenerate triangle$$$^{\\text{∗}}$$$ with side lengths $$$a_i$$$, $$$a_j$$$, and $$$x$$$.  Finally, remove two elements $$$a_i$$$ and $$$a_j$$$, and append $$$x$$$ to the end of $$$a$$$. Please find the maximum possible value of the only last element in the sequence $$$a$$$.$$$^{\\text{∗}}$$$A triangle with side lengths $$$a$$$, $$$b$$$, $$$c$$$ is non-degenerate when $$$a+b > c$$$, $$$a+c > b$$$, $$$b+c > a$$$."
  },
  {
    "title": "Draw a Square",
    "url": "https://codeforces.com/problemset/problem/2074/A",
    "description": "The pink soldiers have given you $$$4$$$ distinct points on the plane. The $$$4$$$ points' coordinates are $$$(-l,0)$$$, $$$(r,0)$$$, $$$(0,-d)$$$, $$$(0,u)$$$ correspondingly, where $$$l$$$, $$$r$$$, $$$d$$$, $$$u$$$ are positive integers.    In the diagram, a square is drawn by connecting the four points $$$L$$$, $$$R$$$, $$$D$$$, $$$U$$$. Please determine if it is possible to draw a square$$$^{\\text{∗}}$$$ with the given points as its vertices.$$$^{\\text{∗}}$$$A square is defined as a polygon consisting of $$$4$$$ vertices, of which all sides have equal length and all inner angles are equal. No two edges of the polygon may intersect each other."
  },
  {
    "title": "I've Been Flipping Numbers for 300 Years and Calculated the Sum",
    "url": "https://codeforces.com/problemset/problem/2072/G",
    "description": "After three hundred years of slime farming, Akito finally obtained the magical number $$$n$$$. Upon reaching the merchant, he wanted to exchange the number for gold, but the merchant gave the hero a quest.The merchant said that for the quest, the skill $$$\\text{rev}(n, p)$$$ would be required, which Akito, by happy coincidence, had recently learned. $$$\\text{rev}(n, p)$$$ represents the following procedure:   Write the number $$$n$$$ in base $$$p$$$, let this representation be $$$n = \\overline{n_{\\ell - 1} \\ldots n_1 n_0}$$$, where $$$\\ell$$$ is the length of the base $$$p$$$ representation of the number $$$n$$$.  Reverse the base $$$p$$$ representation, let this be $$$m = \\overline{n_0 n_1 \\ldots n_{\\ell - 1}}$$$.  Convert the number $$$m$$$ back to decimal and return it as the result. The merchant's quest was to calculate the sum $$$x = \\sum\\limits_{p = 2}^{k} \\text{rev}(n, p)$$$. Since this number can be quite large, only the remainder of $$$x$$$ when divided by $$$10^9 + 7$$$ is required. The merchant also mentioned that the previous traveler had been calculating this sum for three hundred years and had not finished it. But you will help Akito finish it faster, right?"
  },
  {
    "title": "Goodbye, Banker Life",
    "url": "https://codeforces.com/problemset/problem/2072/F",
    "description": "Monsters are approaching the city, and to protect it, Akito must create a protective field around the city. As everyone knows, protective fields come in various levels. Akito has chosen the field of level $$$n$$$. To construct the field, a special phrase is required, which is the $$$n$$$-th row of the Great Magical Triangle, represented as a two-dimensional array. We will call this array $$$T$$$.The triangle is defined as follows:   In the $$$i$$$-th row, there are $$$i$$$ integers.  The single integer in the first row is $$$k$$$.  Let the $$$j$$$-th element of the $$$i$$$-th row be denoted as $$$T_{i,j}$$$. Then $$$$$$T_{i,j} = \\begin{cases} T_{i-1,j-1} \\oplus T_{i-1,j}, &\\textrm{if } 1 < j < i \\\\ T_{i-1,j}, &\\textrm{if } j = 1 \\\\ T_{i-1,j-1}, &\\textrm{if } j = i \\end{cases}$$$$$$  where $$$a \\oplus b$$$ is the bitwise exclusive \"OR\"(XOR) of the integers $$$a$$$ and $$$b$$$.Help Akito find the integers in the $$$n$$$-th row of the infinite triangle before the monsters reach the city."
  },
  {
    "title": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?",
    "url": "https://codeforces.com/problemset/problem/2072/E",
    "description": "Akito decided to study a new powerful spell. Since it possesses immeasurable strength, it certainly requires a lot of space and careful preparation. For this, Akito went out into the field. Let's represent the field as a Cartesian coordinate system.For the spell, Akito needs to place $$$0 \\le n \\le 500$$$ staffs at distinct integer coordinates in the field such that there will be exactly $$$k$$$ pairs $$$(i, j)$$$ such that $$$1 \\le i < j \\le n$$$ and $$$\\rho(i, j) = d(i, j)$$$.Here, for two points with integer coordinates $$$a = (x_a, y_a)$$$ and $$$b = (x_b, y_b)$$$, $$$\\rho(a, b) = \\sqrt{(x_a - x_b)^2 + (y_a - y_b)^2}$$$ and $$$d(a, b) = |x_a - x_b| + |y_a - y_b|$$$."
  },
  {
    "title": "For Wizards, the Exam Is Easy, but I Couldn't Handle It",
    "url": "https://codeforces.com/problemset/problem/2072/D",
    "description": "Akito got tired of being a simple locksmith at a bank, so he decided to enroll in the Magical Academy and become the best wizard in the world! However, to enroll, he needed to solve a single problem on the exam, which the ambitious hero could not manage.In the problem, he was given an array $$$a$$$ of length $$$n$$$. He needed to minimize the number of inversions$$$^{\\text{∗}}$$$ in the array after applying the spell exactly once. The spell was simple; to apply it, Akito had to choose two numbers $$$l$$$ and $$$r$$$ such that $$$1 \\le l \\le r \\le n$$$ and perform a cyclic shift of the subarray from $$$l$$$ to $$$r$$$ one position to the left.More formally, Akito selects the subarray $$$[l, r]$$$ and modifies the array as follows:   From the original array $$$[a_1, a_2, \\ldots, a_{l - 1}, \\mathbf{ a_l }, \\mathbf{ a_{l + 1} } , \\mathbf{ \\ldots }, \\mathbf{ a_{r - 1} }, \\mathbf{ a_r }, a_{r + 1}, \\ldots, a_{n - 1}, a_n]$$$, he obtains the array $$$[a_1, a_2, \\ldots, a_{l - 1}, \\mathbf{ a_{l + 1} }, \\mathbf{ a_{l + 2} }, \\mathbf{ \\ldots }, \\mathbf{ a_{r - 1} }, \\mathbf{ a_{r} }, \\mathbf{ a_{l} }, a_{r + 1}, \\ldots, a_{n - 1}, a_{n}]$$$. Akito is eager to start his studies, but he still hasn't passed the exam. Help him enroll and solve the problem!$$$^{\\text{∗}}$$$An inversion in an array $$$b$$$ of length $$$m$$$ is defined as a pair of indices $$$(i, j)$$$ such that $$$1 \\le i < j \\le m$$$ and $$$b_i > b_j$$$. For example, in the array $$$b = [3, 1, 4, 1, 5]$$$, the inversions are the pairs of indices $$$(1, 2)$$$, $$$(1, 4)$$$, $$$(3, 4)$$$."
  },
  {
    "title": "Creating Keys for StORages Has Become My Main Skill",
    "url": "https://codeforces.com/problemset/problem/2072/C",
    "description": "Akito still has nowhere to live, and the price for a small room is everywhere. For this reason, Akito decided to get a job at a bank as a key creator for storages.In this magical world, everything is different. For example, the key for a storage with the code $$$(n, x)$$$ is an array $$$a$$$ of length $$$n$$$ such that:  $$$a_1 \\ | \\ a_2 \\ | \\ a_3 \\ | \\ \\ldots \\ | \\ a_n = x$$$, where $$$a \\ | \\ b$$$ is the bitwise \"OR\" of numbers $$$a$$$ and $$$b$$$. $$$\\text{MEX}(\\{ a_1, a_2, a_3, \\ldots, a_n \\})$$$$$$^{\\text{∗}}$$$ is maximized among all such arrays. Akito diligently performed his job for several hours, but suddenly he got a headache. Substitute for him for an hour; for the given $$$n$$$ and $$$x$$$, create any key for the storage with the code $$$(n, x)$$$.$$$^{\\text{∗}}$$$$$$\\text{MEX}(S)$$$ is the minimum non-negative integer $$$z$$$ such that $$$z$$$ is not contained in the set $$$S$$$ and all $$$0 \\le y < z$$$ are contained in $$$S$$$."
  },
  {
    "title": "Having Been a Treasurer in the Past, I Help Goblins Deceive",
    "url": "https://codeforces.com/problemset/problem/2072/B",
    "description": "After completing the first quest, Akito left the starting cave. After a while, he stumbled upon a goblin village.Since Akito had nowhere to live, he wanted to find out the price of housing. It is well known that goblins write numbers as a string of characters '-' and '_', and the value represented by the string $$$s$$$ is the number of distinct subsequences$$$^{\\text{∗}}$$$ of the string $$$s$$$ that are equal to the string \"-_-\" (this is very similar to goblin faces).For example, the string $$$s=$$$\"-_--_-\" represents the number $$$6$$$, as it has $$$6$$$ subsequences \"-_-\":  $$$s_1+s_2+s_3$$$  $$$s_1+s_2+s_4$$$  $$$s_1+s_2+s_6$$$  $$$s_1+s_5+s_6$$$  $$$s_3+s_5+s_6$$$  $$$s_4+s_5+s_6$$$ Initially, the goblins wrote a random string-number $$$s$$$ in response to Akito's question, but then they realized that they wanted to take as much gold as possible from the traveler. To do this, they ask you to rearrange the characters in the string $$$s$$$ so that the value of the number represented by the string $$$s$$$ is maximized.$$$^{\\text{∗}}$$$A subsequence of a string $$$a$$$ is a string $$$b$$$ that can be obtained by deleting several (possibly $$$0$$$) characters from $$$a$$$. Subsequences are considered different if they are obtained by deleting different sets of indices."
  },
  {
    "title": "New World, New Me, New Array",
    "url": "https://codeforces.com/problemset/problem/2072/A",
    "description": "Natsume Akito has just woken up in a new world and immediately received his first quest! The system provided him with an array $$$a$$$ of $$$n$$$ zeros, an integer $$$k$$$, and an integer $$$p$$$.In one operation, Akito chooses two integers $$$i$$$ and $$$x$$$ such that $$$1 \\le i \\le n$$$ and $$$-p \\le x \\le p$$$, and performs the assignment $$$a_i = x$$$.Akito is still not fully accustomed to controlling his new body, so help him calculate the minimum number of operations required to make the sum of all elements in the array equal to $$$k$$$, or tell him that it is impossible."
  },
  {
    "title": "Towering Arrays",
    "url": "https://codeforces.com/problemset/problem/2071/F",
    "description": " An array $$$b = [b_1, b_2, \\ldots, b_m]$$$ of length $$$m$$$ is called $$$p$$$-towering if there exists an index $$$i$$$ ($$$1\\le i\\le m$$$) such that for every index $$$j$$$ ($$$1 \\le j \\le m$$$), the following condition holds: $$$$$$b_j \\ge p - |i - j|.$$$$$$Given an array $$$a = [a_1, a_2, \\ldots, a_n]$$$ of length $$$n$$$, you can remove at most $$$k$$$ elements from it. Determine the maximum value of $$$p$$$ for which the remaining array can be made $$$p$$$-towering."
  },
  {
    "title": "LeaFall",
    "url": "https://codeforces.com/problemset/problem/2071/E",
    "description": "   You are given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices. Over time, each vertex $$$i$$$ ($$$1 \\le i \\le n$$$) has a probability of $$$\\frac{p_i}{q_i}$$$ of falling. Determine the expected value of the number of unordered pairs$$$^{\\text{†}}$$$ of distinct vertices that become leaves$$$^{\\text{‡}}$$$ in the resulting forest$$$^{\\text{§}}$$$, modulo $$$998\\,244\\,353$$$.Note that when vertex $$$v$$$ falls, it is removed along with all edges connected to it. However, adjacent vertices remain unaffected by the fall of $$$v$$$.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$An unordered pair is a collection of two elements where the order in which the elements appear does not matter. For example, the unordered pair $$$(1, 2)$$$ is considered the same as $$$(2, 1)$$$.$$$^{\\text{‡}}$$$A leaf is a vertex that is connected to exactly one edge.$$$^{\\text{§}}$$$A forest is a graph without cycles"
  },
  {
    "title": "Infinite Sequence (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2071/D2",
    "description": "   This is the hard version of the problem. The difference between the versions is that in this version, $$$l\\le r$$$. You can hack only if you solved all versions of this problem. You are given a positive integer $$$n$$$ and the first $$$n$$$ terms of an infinite binary sequence $$$a$$$, which is defined as follows:  For $$$m>n$$$, $$$a_m = a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_{\\lfloor \\frac{m}{2} \\rfloor}$$$$$$^{\\text{∗}}$$$. Your task is to compute the sum of elements in a given range $$$[l, r]$$$: $$$a_l + a_{l + 1} + \\ldots + a_r$$$.$$$^{\\text{∗}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. "
  },
  {
    "title": "Infinite Sequence (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2071/D1",
    "description": "   This is the easy version of the problem. The difference between the versions is that in this version, $$$l=r$$$. You can hack only if you solved all versions of this problem. You are given a positive integer $$$n$$$ and the first $$$n$$$ terms of an infinite binary sequence $$$a$$$, which is defined as follows:  For $$$m>n$$$, $$$a_m = a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_{\\lfloor \\frac{m}{2} \\rfloor}$$$$$$^{\\text{∗}}$$$. Your task is to compute the sum of elements in a given range $$$[l, r]$$$: $$$a_l + a_{l + 1} + \\ldots + a_r$$$.$$$^{\\text{∗}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation. "
  },
  {
    "title": "Trapmigiano Reggiano",
    "url": "https://codeforces.com/problemset/problem/2071/C",
    "description": "   In an Italian village, a hungry mouse starts at vertex $$$\\textrm{st}$$$ on a given tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices.Given a permutation $$$p$$$ of length $$$n$$$$$$^{\\text{†}}$$$, there are $$$n$$$ steps. For the $$$i$$$-th step:   A tempting piece of Parmesan cheese appears at vertex $$$p_i$$$. If the mouse is currently at vertex $$$p_i$$$, it will stay there and enjoy the moment. Otherwise, it will move along the simple path to vertex $$$p_i$$$ by one edge. Your task is to find such a permutation so that, after all $$$n$$$ steps, the mouse inevitably arrives at vertex $$$\\textrm{en}$$$, where a trap awaits.Note that the mouse must arrive at $$$\\textrm{en}$$$ after all $$$n$$$ steps, though it may pass through $$$\\textrm{en}$$$ earlier during the process.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Perfecto",
    "url": "https://codeforces.com/problemset/problem/2071/B",
    "description": "  A permutation $$$p$$$ of length $$$n$$$$$$^{\\text{∗}}$$$ is perfect if, for each index $$$i$$$ ($$$1 \\le i \\le n$$$), it satisfies the following:  The sum of the first $$$i$$$ elements $$$p_1 + p_2 + \\ldots + p_i$$$ is not a perfect square$$$^{\\text{†}}$$$. You would like things to be perfect. Given a positive integer $$$n$$$, find a perfect permutation of length $$$n$$$, or print $$$-1$$$ if none exists.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$A perfect square is an integer that is the square of an integer, e.g., $$$9=3^2$$$ is a perfect square, but $$$8$$$ and $$$14$$$ are not."
  },
  {
    "title": "The Play Never Ends",
    "url": "https://codeforces.com/problemset/problem/2071/A",
    "description": "Let's introduce a two-player game, table tennis, where a winner is always decided and draws are impossible.Three players, Sosai, Fofo, and Hohai, want to spend the rest of their lives playing table tennis. They decided to play forever in the following way:  In each match, two players compete while the third spectates.  To ensure fairness, no player can play three times in a row. The player who plays twice in a row must sit out as a spectator in the next match, which will be played by the other two players. Otherwise, the winner and the spectator will play in the next match, while the loser will spectate. Now, the players, fully immersed in this infinite loop of matches, have tasked you with solving the following problem:Given an integer $$$k$$$, determine whether the spectator of the first match can be the spectator in the $$$k$$$-th match."
  },
  {
    "title": "Friends and Pizza",
    "url": "https://codeforces.com/problemset/problem/2070/F",
    "description": "Monocarp has $$$n$$$ pizzas, the $$$i$$$-th pizza consists of $$$a_i$$$ slices. Pizzas are denoted by uppercase Latin letters from A to the $$$n$$$-th letter of the Latin alphabet.Monocarp also has $$$m$$$ friends, and he wants to invite exactly two of them to eat pizza. For each friend, Monocarp knows which pizzas that friend likes.After the friends arrive at Monocarp's house, for each pizza, the following happens:  if the pizza is not liked by any of the two invited friends, Monocarp eats it;  if the pizza is liked by exactly one of the two invited friends, that friend eats it;  and if the pizza is liked by both friends, they try to split it. If it consists of an even number of slices, they both eat exactly half of the slices. But if the pizza consists of an odd number of slices, they start quarrelling, trying to decide who will eat an extra slice — and Monocarp doesn't like that. For each $$$k$$$ from $$$0$$$ to $$$\\sum a_i$$$, calculate the number of ways to choose exactly two friends to invite so that the friends don't quarrel, and Monocarp eats exactly $$$k$$$ slices."
  },
  {
    "title": "Game with Binary String",
    "url": "https://codeforces.com/problemset/problem/2070/E",
    "description": "Consider the following game. Two players have a binary string (a string consisting of characters 0 and/or 1). The players take turns, the first player makes the first turn. During a player's turn, he or she has to choose exactly two adjacent elements of the string and remove them (the first element and the last element are also considered adjacent). Furthermore, there are additional constraints depending on who makes the move:  if it's the first player's move, both chosen characters should be 0;  if it's the second player's move, at least one of the chosen characters should be 1. The player who can't make a valid move loses the game. This also means that if the string currently has less than 22 characters, the current player loses the game.You are given a binary string ss of length nn. You have to calculate the number of its substrings such that, if the game is played on that substring and both players make optimal decisions, the first player wins. In other words, calculate the number of pairs (l,r)(l, r) such that 1≤l≤r≤n1 \\le l \\le r \\le n and the first player has a winning strategy on the string slsl+1…srs_l s_{l+1} \\dots s_r."
  },
  {
    "title": "Tree Jumps",
    "url": "https://codeforces.com/problemset/problem/2070/D",
    "description": "You are given a rooted tree, consisting of $$$n$$$ vertices. The vertices in the tree are numbered from $$$1$$$ to $$$n$$$, and the root is the vertex $$$1$$$. Let $$$d_x$$$ be the distance (the number of edges on the shortest path) from the root to the vertex $$$x$$$.There is a chip that is initially placed at the root. You can perform the following operation as many times as you want (possibly zero):  move the chip from the current vertex $$$v$$$ to a vertex $$$u$$$ such that $$$d_u = d_v + 1$$$. If $$$v$$$ is the root, you can choose any vertex $$$u$$$ meeting this constraint; however, if $$$v$$$ is not the root, $$$u$$$ should not be a neighbor of $$$v$$$ (there should be no edge connecting $$$v$$$ and $$$u$$$).   For example, in the tree above, the following chip moves are possible: $$$1 \\rightarrow 2$$$, $$$1 \\rightarrow 5$$$, $$$2 \\rightarrow 7$$$, $$$5 \\rightarrow 3$$$, $$$5 \\rightarrow 4$$$, $$$3 \\rightarrow 6$$$, $$$7 \\rightarrow 6$$$.A sequence of vertices is valid if you can move the chip in such a way that it visits all vertices from the sequence (and only them), in the order they are given in the sequence.Your task is to calculate the number of valid vertex sequences. Since the answer might be large, print it modulo $$$998244353$$$."
  },
  {
    "title": "Limited Repainting",
    "url": "https://codeforces.com/problemset/problem/2070/C",
    "description": "You are given a strip, consisting of $$$n$$$ cells, all cells are initially colored red.In one operation, you can choose a segment of consecutive cells and paint them blue. Before painting, the chosen cells can be either red or blue. Note that it is not possible to paint them red. You are allowed to perform at most $$$k$$$ operations (possibly zero).For each cell, the desired color after all operations is specified: red or blue.It is clear that it is not always possible to satisfy all requirements within $$$k$$$ operations. Therefore, for each cell, a penalty is also specified, which is applied if the cell ends up the wrong color after all operations. For the $$$i$$$-th cell, the penalty is equal to $$$a_i$$$.The penalty of the final painting is calculated as the maximum penalty among all cells that are painted the wrong color. If there are no such cells, the painting penalty is equal to $$$0$$$.What is the minimum penalty of the final painting that can be achieved?"
  },
  {
    "title": "Robot Program",
    "url": "https://codeforces.com/problemset/problem/2070/B",
    "description": "There is a robot on the coordinate line. Initially, the robot is located at the point $$$x$$$ ($$$x \\ne 0$$$). The robot has a sequence of commands of length $$$n$$$ consisting of characters, where L represents a move to the left by one unit (from point $$$p$$$ to point $$$(p-1)$$$) and R represents a move to the right by one unit (from point $$$p$$$ to point $$$(p+1)$$$).The robot starts executing this sequence of commands (one command per second, in the order they are presented). However, whenever the robot reaches the point $$$0$$$, the counter of executed commands is reset (i. e. it starts executing the entire sequence of commands from the very beginning). If the robot has completed all commands and is not at $$$0$$$, it stops.Your task is to calculate how many times the robot will enter the point $$$0$$$ during the next $$$k$$$ seconds."
  },
  {
    "title": "FizzBuzz Remixed",
    "url": "https://codeforces.com/problemset/problem/2070/A",
    "description": "FizzBuzz is one of the most well-known problems from coding interviews. In this problem, we will consider a remixed version of FizzBuzz:Given an integer $$$n$$$, process all integers from $$$0$$$ to $$$n$$$. For every integer such that its remainders modulo $$$3$$$ and modulo $$$5$$$ are the same (so, for every integer $$$i$$$ such that $$$i \\bmod 3 = i \\bmod 5$$$), print FizzBuzz.However, you don't have to solve it. Instead, given the integer $$$n$$$, you have to report how many times the correct solution to that problem will print FizzBuzz."
  },
  {
    "title": "Graph Inclusion",
    "url": "https://codeforces.com/problemset/problem/2069/F",
    "description": "A connected component of an undirected graph is defined as a set of vertices $$$S$$$ of this graph such that:  for every pair of vertices $$$(u, v)$$$ in $$$S$$$, there exists a path between vertices $$$u$$$ and $$$v$$$;  there is no vertex outside $$$S$$$ that has a path to a vertex within $$$S$$$. For example, the graph in the picture below has three components: $$$\\{1, 3, 7, 8\\}$$$, $$$\\{2\\}$$$, $$$\\{4, 5, 6\\}$$$.  We say that graph $$$A$$$ includes graph $$$B$$$ if every component of graph $$$B$$$ is a subset of some component of graph $$$A$$$.You are given two graphs, $$$A$$$ and $$$B$$$, both consisting of $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$. Initially, there are no edges in the graphs. You must process queries of two types:  add an edge to one of the graphs;  remove an edge from one of the graphs. After each query, you have to calculate the minimum number of edges that have to be added to $$$A$$$ so that $$$A$$$ includes $$$B$$$, and print it. Note that you don't actually add these edges, you just calculate their number."
  },
  {
    "title": "A, B, AB and BA",
    "url": "https://codeforces.com/problemset/problem/2069/E",
    "description": "You are given a string $$$s$$$ consisting of characters A and B.Your task is to split it into blocks of length $$$1$$$ and $$$2$$$ in such a way that   there are no more than $$$a$$$ strings equal to \"A\";  there are no more than $$$b$$$ strings equal to \"B\";  there are no more than $$$ab$$$ strings \"AB\";  there are no more than $$$ba$$$ strings \"BA\"; Strings \"AA\" and \"BB\" are prohibited. Each character of the initial string $$$s$$$ should belong to exactly one block."
  },
  {
    "title": "Palindrome Shuffle",
    "url": "https://codeforces.com/problemset/problem/2069/D",
    "description": "You are given a string $$$s$$$ consisting of lowercase Latin letters.You can perform the following operation with the string $$$s$$$: choose a contiguous substring (possibly empty) of $$$s$$$ and shuffle it (reorder the characters in the substring as you wish).Recall that a palindrome is a string that reads the same way from the first character to the last and from the last character to the first. For example, the strings a, bab, acca, bcabcbacb are palindromes, but the strings ab, abbbaa, cccb are not.Your task is to determine the minimum possible length of the substring on which the aforementioned operation must be performed in order to convert the given string $$$s$$$ into a palindrome."
  },
  {
    "title": "Beautiful Sequence",
    "url": "https://codeforces.com/problemset/problem/2069/C",
    "description": "Let's call an integer sequence beautiful if the following conditions hold:   its length is at least $$$3$$$;  for every element except the first one, there is an element to the left less than it;  for every element except the last one, there is an element to the right larger than it; For example, $$$[1, 4, 2, 4, 7]$$$ and $$$[1, 2, 4, 8]$$$ are beautiful, but $$$[1, 2]$$$, $$$[2, 2, 4]$$$, and $$$[1, 3, 5, 3]$$$ are not.Recall that a subsequence is a sequence that can be obtained from another sequence by removing some elements without changing the order of the remaining elements.You are given an integer array $$$a$$$ of size $$$n$$$, where every element is from $$$1$$$ to $$$3$$$. Your task is to calculate the number of beautiful subsequences of the array $$$a$$$. Since the answer might be large, print it modulo $$$998244353$$$."
  },
  {
    "title": "Set of Strangers",
    "url": "https://codeforces.com/problemset/problem/2069/B",
    "description": "You are given a table of $$$n$$$ rows and $$$m$$$ columns. Initially, the cell at the $$$i$$$-th row and the $$$j$$$-th column has color $$$a_{i, j}$$$.Let's say that two cells are strangers if they don't share a side. Strangers are allowed to touch with corners.Let's say that the set of cells is a set of strangers if all pairs of cells in the set are strangers. Sets with no more than one cell are sets of strangers by definition.In one step, you can choose any set of strangers such that all cells in it have the same color and paint all of them in some other color. You can choose the resulting color.What is the minimum number of steps you need to make the whole table the same color?"
  },
  {
    "title": "Was there an Array?",
    "url": "https://codeforces.com/problemset/problem/2069/A",
    "description": "For an array of integers $$$a_1, a_2, \\dots, a_n$$$, we define its equality characteristic as the array $$$b_2, b_3, \\dots, b_{n-1}$$$, where $$$b_i = 1$$$ if the $$$i$$$-th element of the array $$$a$$$ is equal to both of its neighbors, and $$$b_i = 0$$$ if the $$$i$$$-th element of the array $$$a$$$ is not equal to at least one of its neighbors.For example, for the array $$$[1, 2, 2, 2, 3, 3, 4, 4, 4, 4]$$$, the equality characteristic will be $$$[0, 1, 0, 0, 0, 0, 1, 1]$$$.You are given the array $$$b_2, b_3, \\dots, b_{n-1}$$$. Your task is to determine whether there exists such an array $$$a$$$ for which the given array is the equality characteristic."
  },
  {
    "title": "Amusement Park Rides",
    "url": "https://codeforces.com/problemset/problem/2068/K",
    "description": "Ivan, Dmitrii, and Pjotr are celebrating Ivan's birthday at an amusement park with $$$n$$$ attractions. The $$$i$$$-th attraction operates at minutes $$$a_i, 2a_i, 3a_i, \\dots$$$ (i.e., every $$$a_i$$$ minutes).Each minute, the friends can either ride exactly one available attraction together or wait. Since the rides are very short, they can board another attraction the next minute. They may ride the attractions in any order.They want to experience each ride exactly once before heading off to enjoy the birthday cake. What is the earliest time by which they can finish all $$$n$$$ attractions?"
  },
  {
    "title": "The Ultimate Wine Tasting Event",
    "url": "https://codeforces.com/problemset/problem/2068/J",
    "description": "Rumors of the excellence of Gabriella's wine tasting events have toured the world and made it to the headlines of prestigious wine magazines. Now, she has been asked to organize an event at the EUC 2025!This time she selected $$$2n$$$ bottles of wine, of which exactly $$$n$$$ are of white wine, and exactly $$$n$$$ of red wine. She arranged them in a line as usual, in a predetermined order described by a string $$$s$$$ of length $$$2n$$$: for $$$1 \\le i \\le 2n$$$, the $$$i$$$-th bottle from the left is white wine if $$$s_i = \\texttt{W}$$$ and red wine if $$$s_i = \\texttt{R}$$$.To spice things up for the attendees (which include EUC contestants), Gabriella came up with the following wine-themed problem:Consider a way of dividing the $$$2n$$$ bottles into two disjoint subsets, each containing $$$n$$$ bottles. Then, for every $$$1 \\le i \\le n$$$, swap the $$$i$$$-th bottle in the first subset (from the left) and the $$$i$$$-th bottle of the second subset (also from the left). Is it possible to choose the subsets so that, after this operation is done exactly once, the white wines occupy the first $$$n$$$ positions?"
  },
  {
    "title": "Pinball",
    "url": "https://codeforces.com/problemset/problem/2068/I",
    "description": "  You are playing a pinball-like game on a $$$h \\times w$$$ grid.The game begins with a small ball located at the center of a specific cell marked as $$$\\texttt{S}$$$. Each cell of the grid is either:  A block-type wall ($$$\\texttt{#}$$$) that prevents the ball from entering the cell, reflecting it instead.  A thin oblique wall, either left-leaning ($$$\\texttt{\\\\}$$$) or right-leaning ($$$\\texttt{/}$$$), which reflects the ball according to its orientation.  A free cell ($$$\\texttt{.}$$$) where the ball can move freely. The goal is to make the ball escape the grid.At the start, you can nudge the ball in one of four directions: up ($$$\\texttt{U}$$$), down ($$$\\texttt{D}$$$), left ($$$\\texttt{L}$$$), or right ($$$\\texttt{R}$$$). The ball traverses a free cell in one second, it enters and exits a cell containing a thin oblique wall in one second, and it bounces off a block-type wall in no time (the block-type wall occupies all of its cell). Collisions between the ball and all walls, both block-type and oblique, are perfectly elastic, causing the ball to reflect upon contact.For example, the ball takes two seconds to enter a free cell, traverse it, bounce off an adjacent block-type wall, and traverse back the free cell until it exits.As the ball moves, you may destroy oblique walls at any time, permanently converting them into free cells. You may destroy multiple oblique walls throughout the game, at any given time. Determine whether it is possible for the ball to escape, and if so, find the minimum number of oblique walls that need to be destroyed, along with the precise time each chosen wall should be destroyed."
  },
  {
    "title": "Statues",
    "url": "https://codeforces.com/problemset/problem/2068/H",
    "description": "The mayor of a city wants to place $$$n$$$ statues at intersections around the city. The intersections in the city are at all points $$$(x, y)$$$ with integer coordinates. Distances between intersections are measured using Manhattan distance, defined as follows: $$$$$$ \\text{distance}((x_1, y_1), (x_2, y_2)) = |x_1 - x_2| + |y_1 - y_2|. $$$$$$The city council has provided the following requirements for the placement of the statues:   The first statue is placed at $$$(0, 0)$$$;  The $$$n$$$-th statue is placed at $$$(a, b)$$$;  For $$$i = 1, \\dots, n-1$$$, the distance between the $$$i$$$-th statue and the $$$(i+1)$$$-th statue is $$$d_i$$$. It is allowed to place multiple statues at the same intersection.Help the mayor find a valid arrangement of the $$$n$$$ statues, or determine that it does not exist."
  },
  {
    "title": "A Very Long Hike",
    "url": "https://codeforces.com/problemset/problem/2068/G",
    "description": "You are planning a hike in the Peneda-Gerês National Park in the north of Portugal. The park takes its name from two of its highest peaks: Peneda (1340 m) and Gerês (1545 m).For this problem, the park is modelled as an infinite plane, where each position $$$(x, y)$$$, with $$$x, y$$$ being integers, has a specific altitude. The altitudes are defined by an $$$n \\times n$$$ matrix $$$h$$$, which repeats periodically across the plane. Specifically, for any integers $$$a, b$$$ and $$$0 \\leq x, y < n$$$, the altitude at $$$(x + an, y + bn)$$$ is $$$h[x][y]$$$.When you are at position $$$(x, y)$$$, you can move to any of the four adjacent positions: $$$(x, y+1)$$$, $$$(x+1, y)$$$, $$$(x, y-1)$$$, or $$$(x-1, y)$$$. The time required to move between two adjacent positions is $$$1 + \\lvert \\text{alt}_1 - \\text{alt}_2 \\rvert$$$, where $$$\\text{alt}_1$$$ and $$$\\text{alt}_2$$$ are the altitudes of the current and destination positions, respectively.Initially, your position is $$$(0, 0)$$$. Compute the number of distinct positions you can reach within $$$10^{20}$$$ seconds. Your answer will be considered correct if its relative error is less than $$$10^{-6}$$$."
  },
  {
    "title": "Mascot Naming",
    "url": "https://codeforces.com/problemset/problem/2068/F",
    "description": "When organizing a big event, organizers often handle side tasks outside their expertise. For example, the chief judge of EUC 2025 must find a name for the event's official mascot while satisfying certain constraints:   The name must include specific words as subsequences$$$^{\\texttt{*}}$$$, such as the event name and location. You are given the list $$$s_1,\\, s_2,\\, \\ldots,\\, s_n$$$ of the $$$n$$$ required words.  The name must not contain as a subsequence$$$^{\\texttt{*}}$$$ the name $$$t$$$ of last year's mascot.  Please help the chief judge find a valid mascot name or determine that none exists.$$$^{\\texttt{*}}$$$ A string $$$x$$$ is a subsequence of a string $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by erasing some characters (at any positions) while keeping the remaining characters in the same order. For example, $$$\\texttt{abc}$$$ is a subsequence of $$$\\texttt{axbycz}$$$ but not of $$$\\texttt{acbxyz}$$$."
  },
  {
    "title": "Porto Vs",
    "url": "https://codeforces.com/problemset/problem/2068/E",
    "description": "FC Porto and SL Benfica are the two largest football teams in Portugal. Naturally, when the two play each other, a lot of people travel from all over the country to watch the game. This includes the Benfica supporters' club, which is going to travel from Lisbon to Porto to watch the upcoming game. To avoid tensions between them and the Porto supporters' club, the national police want to delay their arrival to Porto as much as they can.The road network in Portugal can be modelled as a simple, undirected, unweighted, connected graph with $$$n$$$ vertices and $$$m$$$ edges, where vertices represent towns and edges represent roads. Vertex $$$1$$$ corresponds to Lisbon, i.e., the starting vertex of the supporters' club, and vertex $$$n$$$ is Porto, i.e., the destination vertex of the supporters' club. The supporters' club wants to minimize the number of roads they take to reach Porto.The police are following the supporters' club carefully, and so they always know where they are. To delay their arrival, at any point the police can pick exactly one road and block it, as long as the supporters' club isn't currently traversing it. They can do this exactly once, and once they do that, the road is blocked forever. Once the police block a road, the supporters' club immediately learns that that road is blocked, and they can change their route however they prefer. Furthermore, the supporters' club knows that the police are planning on blocking some road and can plan their route accordingly.Assuming that both the supporters' club and the police always make optimal choices, determine the minimum number of roads the supporters' club needs to traverse to go from Lisbon to Porto. If the police can block the supporters' club from ever reaching Porto, then output $$$-1$$$."
  },
  {
    "title": "Morse Code",
    "url": "https://codeforces.com/problemset/problem/2068/D",
    "description": "Morse code is a classical way to communicate over long distances, but there are some drawbacks that increase the transmission time of long messages. In Morse code, each character in the alphabet is assigned a sequence of dots and dashes such that no sequence is a prefix of another. To transmit a string of characters, the sequences corresponding to each character are sent in order. A dash takes twice as long to transmit as a dot. Your alphabet has $$$n$$$ characters, where the $$$i$$$-th character appears with frequency $$$f_i$$$ in your language. Your task is to design a Morse code encoding scheme, assigning a sequence of dots and dashes to each character, that minimizes the expected transmission time for a single character. In other words, you want to minimize $$$f_1t_1 + f_2t_2 + \\cdots + f_nt_n$$$, where $$$t_i$$$ is the time required to transmit the sequence of dots and dashes assigned to the $$$i$$$-th character."
  },
  {
    "title": "Ads",
    "url": "https://codeforces.com/problemset/problem/2068/C",
    "description": "You have $$$n$$$ videos on your watchlist on the popular platform YooCube. The $$$i$$$-th video lasts $$$d_i$$$ minutes.YooCube has recently increased the frequency of their ads. Ads are shown only between videos. After finishing a video, an ad is shown if either of these two conditions is true:   three videos have been watched since the last ad;  at least $$$k$$$ minutes have passed since the end of the last ad. You want to watch the $$$n$$$ videos in your watchlist. Given that you have just watched an ad, and that you can choose the order of the $$$n$$$ videos, what is the minimum number of ads that you are forced to watch? You can start a new video immediately after the previous video or ad ends, and you don't have to watch any ad after you finish."
  },
  {
    "title": "Urban Planning",
    "url": "https://codeforces.com/problemset/problem/2068/B",
    "description": "You are responsible for planning a new city! The city will be represented by a rectangular grid, where each cell is either a park or a built-up area.The residents will naturally want to go for walks in the city parks. In particular, a rectangular walk is a rectangle consisting of the grid cells, which is at least 2 cells long both horizontally and vertically, such that all cells on the boundary of the rectangle are parks. Note that the cells inside the rectangle can be arbitrary.   An example rectangular walk (cells with dark background). Your favourite number is $$$k$$$. To leave a long-lasting signature, you want to design the city in such a way that it has exactly $$$k$$$ rectangular walks."
  },
  {
    "title": "Condorcet Elections",
    "url": "https://codeforces.com/problemset/problem/2068/A",
    "description": "It is a municipality election year. Even though the leader of the country has not changed for two decades, the elections are always transparent and fair.There are $$$n$$$ political candidates, numbered from $$$1$$$ to $$$n$$$, contesting the right to govern. The elections happen using a variation of the Ranked Voting System. In their ballot, each voter will rank all $$$n$$$ candidates from most preferable to least preferable. That is, each vote is a permutation of $$$\\{1, 2, \\ldots, n\\}$$$, where the first element of the permutation corresponds to the most preferable candidate.We say that candidate $$$a$$$ defeats candidate $$$b$$$ if in more than half of the votes candidate $$$a$$$ is more preferable than candidate $$$b$$$.As the election is fair and transparent, the state television has already decreed a list of $$$m$$$ facts—the $$$i$$$-th fact being \"candidate $$$a_i$$$ has defeated candidate $$$b_i$$$\"—all before the actual election!You are in charge of the election commission and tallying up the votes. You need to present a list of votes that produces the outcome advertised on television, or to determine that it is not possible. However, you are strongly encouraged to find a solution, or you might upset higher-ups."
  },
  {
    "title": "Devyatkino",
    "url": "https://codeforces.com/problemset/problem/2067/C",
    "description": "You are given a positive integer $$$n$$$. In one operation, you can add to $$$n$$$ any positive integer whose decimal representation contains only the digit $$$9$$$, possibly repeated several times.What is the minimum number of operations needed to make the number $$$n$$$ contain at least one digit $$$7$$$ in its decimal representation?For example, if $$$n = 80$$$, it is sufficient to perform one operation: you can add $$$99$$$ to $$$n$$$, after the operation $$$n = 179$$$, which contains the digit $$$7$$$."
  },
  {
    "title": "Two Large Bags",
    "url": "https://codeforces.com/problemset/problem/2067/B",
    "description": " You have two large bags of numbers. Initially, the first bag contains $$$n$$$ numbers: $$$a_1, a_2, \\ldots, a_n$$$, while the second bag is empty. You are allowed to perform the following operations: Choose any number from the first bag and move it to the second bag. Choose a number from the first bag that is also present in the second bag and increase it by one.You can perform an unlimited number of operations of both types, in any order. Is it possible to make the contents of the first and second bags identical?"
  },
  {
    "title": "Adjacent Digit Sums",
    "url": "https://codeforces.com/problemset/problem/2067/A",
    "description": "You are given two numbers $$$x, y$$$. You need to determine if there exists an integer $$$n$$$ such that $$$S(n) = x$$$, $$$S(n + 1) = y$$$.Here, $$$S(a)$$$ denotes the sum of the digits of the number $$$a$$$ in the decimal numeral system."
  },
  {
    "title": "Curse",
    "url": "https://codeforces.com/problemset/problem/2066/F",
    "description": " You are given two arrays of integers: $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_m$$$.You need to determine if it is possible to transform array $$$a$$$ into array $$$b$$$ using the following operation several (possibly, zero) times. Among all non-empty subarrays$$$^{\\text{∗}}$$$ of $$$a$$$, choose any with the maximum sum, and replace this subarray with an arbitrary non-empty integer array.If it is possible, you need to construct any possible sequence of operations. Constraint: in your answer, the sum of the lengths of the arrays used as replacements must not exceed $$$n + m$$$ across all operations. The numbers must not exceed $$$10^9$$$ in absolute value.$$$^{\\text{∗}}$$$An array $$$a$$$ is a subarray of an array $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Tropical Season",
    "url": "https://codeforces.com/problemset/problem/2066/E",
    "description": "You have $$$n$$$ barrels of infinite capacity. The $$$i$$$-th barrel initially contains $$$a_i$$$ kilograms of water. In this problem, we assume that all barrels weigh the same.You know that exactly one of the barrels has a small amount of tropical poison distributed on its surface, with a total weight of $$$0.179$$$ kilograms. However, you do not know which barrel contains the poison. Your task is to identify this poisonous barrel.All the barrels are on scales. Unfortunately, the scales do not show the exact weight of each barrel. Instead, for each pair of barrels, they show the result of a comparison between the weights of those barrels. Thus, for any two barrels, you can determine whether their weights are equal, and if not, which barrel is heavier. The poison and water are included in the weight of the barrel.The scales are always turned on, and the information from them can be used an unlimited number of times.You also have the ability to pour water. You can pour water from any barrel into any other barrel in any amounts.However, to pour water, you must physically handle the barrel from which you are pouring, so if that happens to be the poisonous barrel, you will die. This outcome must be avoided.However, you can pour water into the poisonous barrel without touching it.In other words, you can choose the numbers $$$i, j, x$$$ ($$$i \\neq j, 1 \\leq i, j \\leq n, 0 < x \\leq a_i$$$, the barrel numbered $$$i$$$ is not poisonous) and execute $$$a_i := a_i - x$$$, $$$a_j := a_j + x$$$. Where $$$x$$$ is not necessarily an integer.Is it possible to guarantee the identification of which barrel contains the poison and remain alive using pouring and the information from the scales? You know that the poison is located on exactly one of the barrels.Additionally, we ask you to process $$$q$$$ queries. In each query, either one of the existing barrels is removed, or an additional barrel with a certain amount of water is added. After each query, you need to answer whether it is possible to guarantee the identification of the poisonous barrel, given that there is exactly one."
  },
  {
    "title": "Club of Young Aircraft Builders (hard version)",
    "url": "https://codeforces.com/problemset/problem/2066/D2",
    "description": " This is the hard version of the problem. The difference between the versions is that in this version, not necessary $$$a_i = 0$$$. You can hack only if you solved all versions of this problem. There is a building with $$$n$$$ floors, numbered from $$$1$$$ to $$$n$$$ from bottom to top. There is exactly one person living on each floor.All the residents of the building have an important goal today: to launch at least $$$c$$$ paper airplanes collectively. The residents will launch the airplanes in turn. When a person from the $$$i$$$-th floor launches an airplane, all residents on floors from $$$1$$$ to $$$i$$$ can see it as it descends to the ground. If, from the perspective of the resident on the $$$i$$$-th floor, at least $$$c$$$ airplanes have already been launched, they will no longer launch airplanes themselves. It is also known that by the end of the day, from the perspective of each resident in the building, at least $$$c$$$ airplanes have been launched, and a total of $$$m$$$ airplanes were thrown.You have been carefully monitoring this flash mob, and for each airplane, you recorded which resident from which floor threw it. Unfortunately, the information about who exactly threw some of the airplanes has been lost. Find the number of ways to fill in the gaps so that the information could be credible. Since the answer could be quite large, output it modulo $$$10^9 + 7$$$.It is also possible that you made a mistake in your records, and there is no possible way to restore the gaps. In that case, the answer is considered to be $$$0$$$."
  },
  {
    "title": "Club of Young Aircraft Builders (easy version)",
    "url": "https://codeforces.com/problemset/problem/2066/D1",
    "description": " This is the easy version of the problem. The difference between the versions is that in this version, all $$$a_i = 0$$$. You can hack only if you solved all versions of this problem. There is an $$$n$$$-story building, with floors numbered from $$$1$$$ to $$$n$$$ from bottom to top. There is exactly one person living on each floor.All the residents of the building have a very important goal today: to launch at least $$$c$$$ paper airplanes collectively. The residents will launch the airplanes in turn. When a person from the $$$i$$$-th floor launches an airplane, all residents on the floors from $$$1$$$ to $$$i$$$ can see it as it descends to the ground.If, from the perspective of the resident on the $$$i$$$-th floor, at least $$$c$$$ airplanes have already been launched, they will not launch any more airplanes themselves. It is also known that by the end of the day, from the perspective of each resident in the building, at least $$$c$$$ airplanes have been launched, and a total of $$$m$$$ airplanes were thrown.You carefully monitored this flash mob and recorded which resident from which floor threw each airplane. Unfortunately, the information about who exactly threw some airplanes has been lost. Find the number of ways to fill in the gaps so that the information could be credible. Since the answer can be quite large, output it modulo $$$10^9 + 7$$$.In this version of the problem, all information has been lost, and the entire array consists of gaps.It is also possible that you made a mistake in your records, and there is no possible way to restore the gaps. In that case, the answer is considered to be $$$0$$$."
  },
  {
    "title": "Bitwise Slides",
    "url": "https://codeforces.com/problemset/problem/2066/C",
    "description": " You are given an array $$$a_1, a_2, \\ldots, a_n$$$. Also, you are given three variables $$$P,Q,R$$$, initially equal to zero.You need to process all the numbers $$$a_1, a_2, \\ldots, a_n$$$, in the order from $$$1$$$ to $$$n$$$. When processing the next $$$a_i$$$, you must perform exactly one of the three actions of your choice: $$$P := P \\oplus a_i$$$ $$$Q := Q \\oplus a_i$$$ $$$R := R \\oplus a_i$$$$$$\\oplus$$$ denotes the bitwise XOR operation. When performing actions, you must follow the main rule: it is necessary that after each action, all three numbers $$$P,Q,R$$$ are not pairwise distinct.There are a total of $$$3^n$$$ ways to perform all $$$n$$$ actions. How many of them do not violate the main rule? Since the answer can be quite large, find it modulo $$$10^9 + 7$$$."
  },
  {
    "title": "White Magic",
    "url": "https://codeforces.com/problemset/problem/2066/B",
    "description": "  We call a sequence $$$a_1, a_2, \\ldots, a_n$$$ magical if for all $$$1 \\leq i \\leq n-1$$$ it holds that: $$$\\operatorname{min}(a_1, \\ldots, a_i) \\geq \\operatorname{mex}(a_{i+1}, \\ldots, a_n)$$$. In particular, any sequence of length $$$1$$$ is considered magical.The minimum excluded (MEX) of a collection of integers $$$a_1, a_2, \\ldots, a_k$$$ is defined as the smallest non-negative integer $$$t$$$ which does not occur in the collection $$$a$$$. You are given a sequence $$$a$$$ of $$$n$$$ non-negative integers. Find the maximum possible length of a magical subsequence$$$^{\\text{∗}}$$$ of the sequence $$$a$$$.$$$^{\\text{∗}}$$$A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Object Identification",
    "url": "https://codeforces.com/problemset/problem/2066/A",
    "description": "  This is an interactive problem. You are given an array $$$x_1, \\ldots, x_n$$$ of integers from $$$1$$$ to $$$n$$$. The jury also has a fixed but hidden array $$$y_1, \\ldots, y_n$$$ of integers from $$$1$$$ to $$$n$$$. The elements of array $$$y$$$ are unknown to you. Additionally, it is known that for all $$$i$$$, $$$x_i \\neq y_i$$$, and all pairs $$$(x_i, y_i)$$$ are distinct.The jury has secretly thought of one of two objects, and you need to determine which one it is:   Object A: A directed graph with $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$, and with $$$n$$$ edges of the form $$$x_i \\to y_i$$$.  Object B: $$$n$$$ points on a coordinate plane. The $$$i$$$-th point has coordinates $$$(x_i, y_i)$$$. To guess which object the jury has thought of, you can make queries. In one query, you must specify two numbers $$$i, j$$$ $$$(1 \\leq i, j \\leq n, i \\neq j)$$$. In response, you receive one number: If the jury has thought of Object A, you receive the length of the shortest path (in edges) from vertex $$$i$$$ to vertex $$$j$$$ in the graph, or $$$0$$$ if there is no path. If the jury has thought of Object B, you receive the Manhattan distance between points $$$i$$$ and $$$j$$$, that is $$$|x_i -x_j| + |y_i - y_j|$$$.You have $$$2$$$ queries to determine which of the objects the jury has thought of."
  },
  {
    "title": "Bro Thinks He's Him",
    "url": "https://codeforces.com/problemset/problem/2065/H",
    "description": "Skibidus thinks he's Him! He proved it by solving this difficult task. Can you also prove yourself?Given a binary string$$$^{\\text{∗}}$$$ $$$t$$$, $$$f(t)$$$ is defined as the minimum number of contiguous substrings, each consisting of identical characters, into which $$$t$$$ can be partitioned. For example, $$$f(\\texttt{00110001}) = 4$$$ because $$$t$$$ can be partitioned as $$$\\texttt{[00][11][000][1]}$$$ where each bracketed segment consists of identical characters.Skibidus gives you a binary string $$$s$$$ and $$$q$$$ queries. In each query, a single character of the string is flipped (i.e. $$$\\texttt{0}$$$ changes to $$$\\texttt{1}$$$ and $$$\\texttt{1}$$$ changes to $$$\\texttt{0}$$$); changes are saved after the query is processed. After each query, output the sum over all $$$f(b)$$$ where $$$b$$$ is a non-empty subsequence$$$^{\\text{†}}$$$ of $$$s$$$, modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A binary string consists of only characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A subsequence of a string is a string which can be obtained by removing several (possibly zero) characters from the original string."
  },
  {
    "title": "Skibidus and Capping",
    "url": "https://codeforces.com/problemset/problem/2065/G",
    "description": "Skibidus was abducted by aliens of Amog! Skibidus tries to talk his way out, but the Amog aliens don't believe him. To prove that he is not totally capping, the Amog aliens asked him to solve this task:An integer $$$x$$$ is considered a semi-prime if it can be written as $$$p \\cdot q$$$ where $$$p$$$ and $$$q$$$ are (not necessarily distinct) prime numbers. For example, $$$9$$$ is a semi-prime since it can be written as $$$3 \\cdot 3$$$, and $$$3$$$ is a prime number.Skibidus was given an array $$$a$$$ containing $$$n$$$ integers. He must report the number of pairs $$$(i, j)$$$ such that $$$i \\leq j$$$ and $$$\\operatorname{lcm}(a_i, a_j)$$$$$$^{\\text{∗}}$$$ is semi-prime.$$$^{\\text{∗}}$$$Given two integers $$$x$$$ and $$$y$$$, $$$\\operatorname{lcm}(x, y)$$$ denotes the least common multiple of $$$x$$$ and $$$y$$$."
  },
  {
    "title": "Skibidus and Slay",
    "url": "https://codeforces.com/problemset/problem/2065/F",
    "description": " Let's define the majority of a sequence of $$$k$$$ elements as the unique value that appears strictly more than $$$\\left \\lfloor {\\frac{k}{2}} \\right \\rfloor$$$ times. If such a value does not exist, then the sequence does not have a majority. For example, the sequence $$$[1,3,2,3,3]$$$ has a majority $$$3$$$ because it appears $$$3 > \\left \\lfloor {\\frac{5}{2}} \\right \\rfloor = 2$$$ times, but $$$[1,2,3,4,5]$$$ and $$$[1,3,2,3,4]$$$ do not have a majority.Skibidus found a tree$$$^{\\text{∗}}$$$ of $$$n$$$ vertices and an array $$$a$$$ of length $$$n$$$. Vertex $$$i$$$ has the value $$$a_i$$$ written on it, where $$$a_i$$$ is an integer in the range $$$[1, n]$$$.For each $$$i$$$ from $$$1$$$ to $$$n$$$, please determine if there exists a non-trivial simple path$$$^{\\text{†}}$$$ such that $$$i$$$ is the majority of the sequence of integers written on the vertices that form the path.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$A sequence of vertices $$$v_1, v_2, ..., v_m$$$ ($$$m \\geq 2$$$) forms a non-trivial simple path if $$$v_i$$$ and $$$v_{i+1}$$$ are connected by an edge for all $$$1 \\leq i \\leq m - 1$$$ and all $$$v_i$$$ are pairwise distinct. Note that the path must consist of at least $$$2$$$ vertices."
  },
  {
    "title": "Skibidus and Rizz",
    "url": "https://codeforces.com/problemset/problem/2065/E",
    "description": "With the approach of Valentine's Day, Skibidus desperately needs a way to rizz up his crush! Fortunately, he knows of just the way: creating the perfect Binary String!Given a binary string$$$^{\\text{∗}}$$$ $$$t$$$, let $$$x$$$ represent the number of $$$\\texttt{0}$$$ in $$$t$$$ and $$$y$$$ represent the number of $$$\\texttt{1}$$$ in $$$t$$$. Its balance-value is defined as the value of $$$\\max(x-y, y-x)$$$.Skibidus gives you three integers $$$n$$$, $$$m$$$, and $$$k$$$. He asks for your help to construct a binary string $$$s$$$ of length $$$n+m$$$ with exactly $$$n$$$ $$$\\texttt{0}$$$'s and $$$m$$$ $$$\\texttt{1}$$$'s such that the maximum balance-value among all of its substrings$$$^{\\text{†}}$$$ is exactly $$$k$$$. If it is not possible, output -1.$$$^{\\text{∗}}$$$A binary string only consists of characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end."
  },
  {
    "title": "Skibidus and Sigma",
    "url": "https://codeforces.com/problemset/problem/2065/D",
    "description": "Let's denote the score of an array $$$b$$$ with $$$k$$$ elements as $$$\\sum_{i=1}^{k}\\left(\\sum_{j=1}^ib_j\\right)$$$. In other words, let $$$S_i$$$ denote the sum of the first $$$i$$$ elements of $$$b$$$. Then, the score can be denoted as $$$S_1+S_2+\\ldots+S_k$$$.Skibidus is given $$$n$$$ arrays $$$a_1,a_2,\\ldots,a_n$$$, each of which contains $$$m$$$ elements. Being the sigma that he is, he would like to concatenate them in any order to form a single array containing $$$n\\cdot m$$$ elements. Please find the maximum possible score Skibidus can achieve with his concatenated array! Formally, among all possible permutations$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$, output the maximum score of $$$a_{p_1} + a_{p_2} + \\dots + a_{p_n}$$$, where $$$+$$$ represents concatenation$$$^{\\text{†}}$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ contains all integers from $$$1$$$ to $$$n$$$ exactly once.$$$^{\\text{†}}$$$The concatenation of two arrays $$$c$$$ and $$$d$$$ with lengths $$$e$$$ and $$$f$$$ respectively (i.e. $$$c + d$$$) is $$$c_1, c_2, \\ldots, c_e, d_1, d_2, \\ldots d_f$$$."
  },
  {
    "title": "Skibidus and Fanum Tax (hard version)",
    "url": "https://codeforces.com/problemset/problem/2065/C2",
    "description": "This is the hard version of the problem. In this version, $$$m \\leq 2\\cdot 10^5$$$.Skibidus has obtained two arrays $$$a$$$ and $$$b$$$, containing $$$n$$$ and $$$m$$$ elements respectively. For each integer $$$i$$$ from $$$1$$$ to $$$n$$$, he is allowed to perform the operation at most once:  Choose an integer $$$j$$$ such that $$$1 \\leq j \\leq m$$$. Set $$$a_i := b_j - a_i$$$. Note that $$$a_i$$$ may become non-positive as a result of this operation. Skibidus needs your help determining whether he can sort $$$a$$$ in non-decreasing order$$$^{\\text{∗}}$$$ by performing the above operation some number of times.$$$^{\\text{∗}}$$$$$$a$$$ is sorted in non-decreasing order if $$$a_1 \\leq a_2 \\leq \\ldots \\leq a_n$$$."
  },
  {
    "title": "Skibidus and Fanum Tax (easy version)",
    "url": "https://codeforces.com/problemset/problem/2065/C1",
    "description": "This is the easy version of the problem. In this version, $$$m = 1$$$.Skibidus has obtained two arrays $$$a$$$ and $$$b$$$, containing $$$n$$$ and $$$m$$$ elements respectively. For each integer $$$i$$$ from $$$1$$$ to $$$n$$$, he is allowed to perform the operation at most once:  Choose an integer $$$j$$$ such that $$$1 \\leq j \\leq m$$$. Set $$$a_i := b_j - a_i$$$. Note that $$$a_i$$$ may become non-positive as a result of this operation. Skibidus needs your help determining whether he can sort $$$a$$$ in non-decreasing order$$$^{\\text{∗}}$$$ by performing the above operation some number of times.$$$^{\\text{∗}}$$$$$$a$$$ is sorted in non-decreasing order if $$$a_1 \\leq a_2 \\leq \\ldots \\leq a_n$$$."
  },
  {
    "title": "Skibidus and Ohio",
    "url": "https://codeforces.com/problemset/problem/2065/B",
    "description": "Skibidus is given a string $$$s$$$ that consists of lowercase Latin letters. If $$$s$$$ contains more than $$$1$$$ letter, he can:  Choose an index $$$i$$$ ($$$1 \\leq i \\leq |s| - 1$$$, $$$|s|$$$ denotes the current length of $$$s$$$) such that $$$s_i = s_{i+1}$$$. Replace $$$s_i$$$ with any lowercase Latin letter of his choice. Remove $$$s_{i+1}$$$ from the string. Skibidus must determine the minimum possible length he can achieve through any number of operations."
  },
  {
    "title": "Skibidus and Amog'u",
    "url": "https://codeforces.com/problemset/problem/2065/A",
    "description": "Skibidus lands on a foreign planet, where the local Amog tribe speaks the Amog'u language. In Amog'u, there are two forms of nouns, which are singular and plural.Given that the root of the noun is transcribed as $$$S$$$, the two forms are transcribed as:  Singular: $$$S$$$ $$$+$$$ \"us\"  Plural: $$$S$$$ $$$+$$$ \"i\" Here, $$$+$$$ denotes string concatenation. For example, abc $$$+$$$ def $$$=$$$ abcdef.For example, when $$$S$$$ is transcribed as \"amog\", then the singular form is transcribed as \"amogus\", and the plural form is transcribed as \"amogi\". Do note that Amog'u nouns can have an empty root — in specific, \"us\" is the singular form of \"i\" (which, on an unrelated note, means \"imposter\" and \"imposters\" respectively).Given a transcribed Amog'u noun in singular form, please convert it to the transcription of the corresponding plural noun."
  },
  {
    "title": "We Be Summing",
    "url": "https://codeforces.com/problemset/problem/2064/F",
    "description": "You are given an array $$$a$$$ of length $$$n$$$ and an integer $$$k$$$.Call a non-empty array $$$b$$$ of length $$$m$$$ epic if there exists an integer $$$i$$$ where $$$1 \\le i < m$$$ and $$$\\min(b_1,\\ldots,b_i) + \\max(b_{i + 1},\\ldots,b_m) = k$$$.Count the number of epic subarrays$$$^{\\text{∗}}$$$ of $$$a$$$.$$$^{\\text{∗}}$$$An array $$$a$$$ is a subarray of an array $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Mycraft Sand Sort",
    "url": "https://codeforces.com/problemset/problem/2064/E",
    "description": "Steve has a permutation$$$^{\\text{∗}}$$$ $$$p$$$ and an array $$$c$$$, both of length $$$n$$$. Steve wishes to sort the permutation $$$p$$$. Steve has an infinite supply of coloured sand blocks, and using them he discovered a physics-based way to sort an array of numbers called gravity sort. Namely, to perform gravity sort on $$$p$$$, Steve will do the following:   For all $$$i$$$ such that $$$1 \\le i \\le n$$$, place a sand block of color $$$c_i$$$ in position $$$(i, j)$$$ for all $$$j$$$ where $$$1 \\le j \\le p_i$$$. Here, position $$$(x, y)$$$ denotes a cell in the $$$x$$$-th row from the top and $$$y$$$-th column from the left.  Apply downwards gravity to the array, so that all sand blocks fall as long as they can fall.   An example of gravity sort for the third testcase. $$$p = [4, 2, 3, 1, 5]$$$, $$$c = [2, 1, 4, 1, 5]$$$ Alex looks at Steve's sand blocks after performing gravity sort and wonders how many pairs of arrays $$$(p',c')$$$ where $$$p'$$$ is a permutation would have resulted in the same layout of sand. Note that the original pair of arrays $$$(p, c)$$$ will always be counted.Please calculate this for Alex. As this number could be large, output it modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is a $$$4$$$ in the array)."
  },
  {
    "title": "Eating",
    "url": "https://codeforces.com/problemset/problem/2064/D",
    "description": "There are $$$n$$$ slimes on a line, the $$$i$$$-th of which has weight $$$w_i$$$. Slime $$$i$$$ is able to eat another slime $$$j$$$ if $$$w_i \\geq w_j$$$; afterwards, slime $$$j$$$ disappears and the weight of slime $$$i$$$ becomes $$$w_i \\oplus w_j$$$$$$^{\\text{∗}}$$$.The King of Slimes wants to run an experiment with parameter $$$x$$$ as follows:   Add a new slime with weight $$$x$$$ to the right end of the line (after the $$$n$$$-th slime).  This new slime eats the slime to its left if it is able to, and then takes its place (moves one place to the left). It will continue to do this until there is either no slime to its left or the weight of the slime to its left is greater than its own weight. (No other slimes are eaten during this process.)  The score of this experiment is the total number of slimes eaten. The King of Slimes is going to ask you $$$q$$$ queries. In each query, you will be given an integer $$$x$$$, and you need to determine the score of the experiment with parameter $$$x$$$.Note that the King does not want you to actually perform each experiment; his slimes would die, which is not ideal. He is only asking what the hypothetical score is; in other words, the queries are not persistent.$$$^{\\text{∗}}$$$Here $$$\\oplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "Remove the Ends",
    "url": "https://codeforces.com/problemset/problem/2064/C",
    "description": "You have an array $$$a$$$ of length $$$n$$$ consisting of non-zero integers. Initially, you have $$$0$$$ coins, and you will do the following until $$$a$$$ is empty:   Let $$$m$$$ be the current size of $$$a$$$. Select an integer $$$i$$$ where $$$1 \\le i \\le m$$$, gain $$$|a_i|$$$$$$^{\\text{∗}}$$$ coins, and then:   if $$$a_i < 0$$$, then replace $$$a$$$ with $$$[a_1,a_2,\\ldots,a_{i - 1}]$$$ (that is, delete the suffix beginning with $$$a_i$$$);  otherwise, replace $$$a$$$ with $$$[a_{i + 1},a_{i + 2},\\ldots,a_m]$$$ (that is, delete the prefix ending with $$$a_i$$$).  Find the maximum number of coins you can have at the end of the process.$$$^{\\text{∗}}$$$Here $$$|a_i|$$$ represents the absolute value of $$$a_i$$$: it equals $$$a_i$$$ when $$$a_i > 0$$$ and $$$-a_i$$$ when $$$a_i < 0$$$."
  },
  {
    "title": "Variety is Discouraged",
    "url": "https://codeforces.com/problemset/problem/2064/B",
    "description": "Define the score of an arbitrary array $$$b$$$ to be the length of $$$b$$$ minus the number of distinct elements in $$$b$$$. For example:   The score of $$$[1, 2, 2, 4]$$$ is $$$1$$$, as it has length $$$4$$$ and only $$$3$$$ distinct elements ($$$1$$$, $$$2$$$, $$$4$$$).  The score of $$$[1, 1, 1]$$$ is $$$2$$$, as it has length $$$3$$$ and only $$$1$$$ distinct element ($$$1$$$).  The empty array has a score of $$$0$$$. You have an array $$$a$$$. You need to remove some non-empty contiguous subarray from $$$a$$$ at most once.More formally, you can do the following at most once:   pick two integers $$$l$$$, $$$r$$$ where $$$1 \\le l \\le r \\le n$$$, and  delete the contiguous subarray $$$[a_l,\\ldots,a_r]$$$ from $$$a$$$ (that is, replace $$$a$$$ with $$$[a_1,\\ldots,a_{l - 1},a_{r + 1},\\ldots,a_n]$$$). Output an operation such that the score of $$$a$$$ is maximum; if there are multiple answers, output one that minimises the final length of $$$a$$$ after the operation. If there are still multiple answers, you may output any of them."
  },
  {
    "title": "Brogramming Contest",
    "url": "https://codeforces.com/problemset/problem/2064/A",
    "description": "One day after waking up, your friend challenged you to a brogramming contest. In a brogramming contest, you are given a binary string$$$^{\\text{∗}}$$$ $$$s$$$ of length $$$n$$$ and an initially empty binary string $$$t$$$. During a brogramming contest, you can make either of the following moves any number of times:   remove some suffix$$$^{\\text{†}}$$$ from $$$s$$$ and place it at the end of $$$t$$$, or  remove some suffix from $$$t$$$ and place it at the end of $$$s$$$.  To win the brogramming contest, you must make the minimum number of moves required to make $$$s$$$ contain only the character $$$\\texttt{0}$$$ and $$$t$$$ contain only the character $$$\\texttt{1}$$$. Find the minimum number of moves required.$$$^{\\text{∗}}$$$A binary string is a string consisting of characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A string $$$a$$$ is a suffix of a string $$$b$$$ if $$$a$$$ can be obtained from deletion of several (possibly, zero or all) elements from the beginning of $$$b$$$."
  },
  {
    "title": "Counting Is Not Fun (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2063/F2",
    "description": " This is the hard version of the problem. The difference between the versions is that in this version, the limits on $$$t$$$ and $$$n$$$ are bigger. You can hack only if you solved all versions of this problem.  Now Little John is rich, and so he finally buys a house big enough to fit himself and his favorite bracket sequence. But somehow, he ended up with a lot of brackets! Frustrated, he penetrates through the ceiling with the \"buddha palm\". A bracket sequence is called balanced if it can be constructed by the following formal grammar.   The empty sequence $$$\\varnothing$$$ is balanced.  If the bracket sequence $$$A$$$ is balanced, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also balanced.  If the bracket sequences $$$A$$$ and $$$B$$$ are balanced, then the concatenated sequence $$$A B$$$ is also balanced. For example, the sequences \"(())()\", \"()\", \"(()(()))\", and the empty sequence are balanced, while \"(()\" and \"(()))(\" are not.Given a balanced bracket sequence $$$s$$$, a pair of indices $$$(i,j)$$$ ($$$i<j$$$) is called a good pair if $$$s_i$$$ is '(', $$$s_j$$$ is ')', and the two brackets are added simultaneously with respect to Rule 2 while constructing the sequence $$$s$$$. For example, the sequence \"(())()\" has three different good pairs, which are $$$(1,4)$$$, $$$(2,3)$$$, and $$$(5,6)$$$. One can show that any balanced bracket sequence of $$$2n$$$ brackets contains exactly $$$n$$$ different good pairs, and using any order of rules to construct the same bracket sequence will yield the same set of good pairs.Emily will play a bracket guessing game with John. The game is played as follows.Initially, John has a balanced bracket sequence $$$s$$$ containing $$$n$$$ different good pairs, which is not known to Emily. John tells Emily the value of $$$n$$$ and asks Emily to guess the sequence.Throughout $$$n$$$ turns, John gives Emily the following kind of clue on each turn.  $$$l\\;r$$$: The sequence $$$s$$$ contains a good pair $$$(l,r)$$$. The clues that John gives Emily are pairwise distinct and do not contradict each other.At a certain point, Emily can be certain that the balanced bracket sequence satisfying the clues given so far is unique. For example, assume Emily knows that $$$s$$$ has $$$3$$$ good pairs, and it contains the good pair $$$(2,5)$$$. Out of $$$5$$$ balanced bracket sequences with $$$3$$$ good pairs, there exists only one such sequence \"((()))\" with the good pair $$$(2,5)$$$. Therefore, one can see that Emily does not always need $$$n$$$ turns to guess $$$s$$$.To find out the content of $$$s$$$ as early as possible, Emily wants to know the number of different balanced bracket sequences that match the clues after each turn. Surely, this is not an easy job for Emily, especially when she is given so many good pairs. Now it is your turn to help Emily. Given the clues, you must find the answer before and after each turn. As the answers may be huge, you need to find them modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Counting Is Not Fun (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2063/F1",
    "description": " This is the easy version of the problem. The difference between the versions is that in this version, the limits on $$$t$$$ and $$$n$$$ are smaller. You can hack only if you solved all versions of this problem.  Now Little John is rich, and so he finally buys a house big enough to fit himself and his favorite bracket sequence. But somehow, he ended up with a lot of brackets! Frustrated, he penetrates through the ceiling with the \"buddha palm\". A bracket sequence is called balanced if it can be constructed by the following formal grammar.   The empty sequence $$$\\varnothing$$$ is balanced.  If the bracket sequence $$$A$$$ is balanced, then $$$\\mathtt{(}A\\mathtt{)}$$$ is also balanced.  If the bracket sequences $$$A$$$ and $$$B$$$ are balanced, then the concatenated sequence $$$A B$$$ is also balanced. For example, the sequences \"(())()\", \"()\", \"(()(()))\", and the empty sequence are balanced, while \"(()\" and \"(()))(\" are not.Given a balanced bracket sequence $$$s$$$, a pair of indices $$$(i,j)$$$ ($$$i<j$$$) is called a good pair if $$$s_i$$$ is '(', $$$s_j$$$ is ')', and the two brackets are added simultaneously with respect to Rule 2 while constructing the sequence $$$s$$$. For example, the sequence \"(())()\" has three different good pairs, which are $$$(1,4)$$$, $$$(2,3)$$$, and $$$(5,6)$$$. One can show that any balanced bracket sequence of $$$2n$$$ brackets contains exactly $$$n$$$ different good pairs, and using any order of rules to construct the same bracket sequence will yield the same set of good pairs.Emily will play a bracket guessing game with John. The game is played as follows.Initially, John has a balanced bracket sequence $$$s$$$ containing $$$n$$$ different good pairs, which is not known to Emily. John tells Emily the value of $$$n$$$ and asks Emily to guess the sequence.Throughout $$$n$$$ turns, John gives Emily the following kind of clue on each turn.  $$$l\\;r$$$: The sequence $$$s$$$ contains a good pair $$$(l,r)$$$. The clues that John gives Emily are pairwise distinct and do not contradict each other.At a certain point, Emily can be certain that the balanced bracket sequence satisfying the clues given so far is unique. For example, assume Emily knows that $$$s$$$ has $$$3$$$ good pairs, and it contains the good pair $$$(2,5)$$$. Out of $$$5$$$ balanced bracket sequences with $$$3$$$ good pairs, there exists only one such sequence \"((()))\" with the good pair $$$(2,5)$$$. Therefore, one can see that Emily does not always need $$$n$$$ turns to guess $$$s$$$.To find out the content of $$$s$$$ as early as possible, Emily wants to know the number of different balanced bracket sequences that match the clues after each turn. Surely, this is not an easy job for Emily, especially when she is given so many good pairs. Now it is your turn to help Emily. Given the clues, you must find the answer before and after each turn. As the answers may be huge, you need to find them modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Triangle Tree",
    "url": "https://codeforces.com/problemset/problem/2063/E",
    "description": "    One day, a giant tree grew in the countryside. Little John, with his childhood eagle, decided to make it his home. Little John will build a structure on the tree with galvanized square steel. However, little did he know, he could not build what is physically impossible. You are given a rooted tree$$$^{\\text{∗}}$$$ containing $$$n$$$ vertices rooted at vertex $$$1$$$. A pair of vertices $$$(u,v)$$$ is called a good pair if $$$u$$$ is not an ancestor$$$^{\\text{†}}$$$ of $$$v$$$ and $$$v$$$ is not an ancestor of $$$u$$$. For any two vertices, $$$\\text{dist}(u,v)$$$ is defined as the number of edges on the unique simple path from $$$u$$$ to $$$v$$$, and $$$\\text{lca}(u,v)$$$ is defined as their lowest common ancestor.A function $$$f(u,v)$$$ is defined as follows.  If $$$(u,v)$$$ is a good pair, $$$f(u,v)$$$ is the number of distinct integer values $$$x$$$ such that there exists a non-degenerate triangle$$$^{\\text{‡}}$$$ formed by side lengths $$$\\text{dist}(u,\\text{lca}(u,v))$$$, $$$\\text{dist}(v,\\text{lca}(u,v))$$$, and $$$x$$$.  Otherwise, $$$f(u,v)$$$ is $$$0$$$. You need to find the following value: $$$$$$\\sum_{i = 1}^{n-1} \\sum_{j = i+1}^n f(i,j).$$$$$$$$$^{\\text{∗}}$$$A tree is a connected graph without cycles.  A rooted tree is a tree where one vertex is special and called the root. $$$^{\\text{†}}$$$An ancestor of vertex $$$v$$$ is any vertex on the simple path from $$$v$$$ to the root, including the root, but not including $$$v$$$. The root has no ancestors. $$$^{\\text{‡}}$$$A triangle with side lengths $$$a$$$, $$$b$$$, $$$c$$$ is non-degenerate when $$$a+b > c$$$, $$$a+c > b$$$, $$$b+c > a$$$."
  },
  {
    "title": "Game With Triangles",
    "url": "https://codeforces.com/problemset/problem/2063/D",
    "description": " Even Little John needs money to buy a house. But he recently lost his job; how will he earn money now? Of course, by playing a game that gives him money as a reward! Oh well, maybe not those kinds of games you are thinking about. There are $$$n+m$$$ distinct points $$$(a_1,0), (a_2,0), \\ldots, (a_{n},0), (b_1,2), (b_2,2), \\ldots, (b_{m},2)$$$ on the plane. Initially, your score is $$$0$$$. To increase your score, you can perform the following operation:  Choose three distinct points which are not collinear;  Increase your score by the area of the triangle formed by these three points;  Then, erase the three points from the plane.      An instance of the game, where the operation is performed twice.   Let $$$k_{\\max}$$$ be the maximum number of operations that can be performed. For example, if it is impossible to perform any operation, $$$k_\\max$$$ is $$$0$$$. Additionally, define $$$f(k)$$$ as the maximum possible score achievable by performing the operation exactly $$$k$$$ times. Here, $$$f(k)$$$ is defined for all integers $$$k$$$ such that $$$0 \\le k \\le k_{\\max}$$$.Find the value of $$$k_{\\max}$$$, and find the values of $$$f(x)$$$ for all integers $$$x=1,2,\\ldots,k_{\\max}$$$ independently."
  },
  {
    "title": "Remove Exactly Two",
    "url": "https://codeforces.com/problemset/problem/2063/C",
    "description": "  Recently, Little John got a tree from his aunt to decorate his house. But as it seems, just one tree is not enough to decorate the entire house. Little John has an idea. Maybe he can remove a few vertices from the tree. That will turn it into more trees! Right? You are given a tree$$$^{\\text{∗}}$$$ of $$$n$$$ vertices. You must perform the following operation exactly twice.   Select a vertex $$$v$$$;  Remove all edges incident to $$$v$$$, and also the vertex $$$v$$$. Please find the maximum number of connected components after performing the operation exactly twice.Two vertices $$$x$$$ and $$$y$$$ are in the same connected component if and only if there exists a path from $$$x$$$ to $$$y$$$. For clarity, note that the graph with $$$0$$$ vertices has $$$0$$$ connected components by definition.$$$^{\\text{†}}$$$$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$But is such a graph connected?"
  },
  {
    "title": "Subsequence Update",
    "url": "https://codeforces.com/problemset/problem/2063/B",
    "description": "  After Little John borrowed expansion screws from auntie a few hundred times, eventually she decided to come and take back the unused ones.But as they are a crucial part of home design, Little John decides to hide some in the most unreachable places — under the eco-friendly wood veneers. You are given an integer sequence $$$a_1, a_2, \\ldots, a_n$$$, and a segment $$$[l,r]$$$ ($$$1 \\le l \\le r \\le n$$$).You must perform the following operation on the sequence exactly once.  Choose any subsequence$$$^{\\text{∗}}$$$ of the sequence $$$a$$$, and reverse it. Note that the subsequence does not have to be contiguous. Formally, choose any number of indices $$$i_1,i_2,\\ldots,i_k$$$ such that $$$1 \\le i_1 < i_2 < \\ldots < i_k \\le n$$$. Then, change the $$$i_x$$$-th element to the original value of the $$$i_{k-x+1}$$$-th element simultaneously for all $$$1 \\le x \\le k$$$.Find the minimum value of $$$a_l+a_{l+1}+\\ldots+a_{r-1}+a_r$$$ after performing the operation.$$$^{\\text{∗}}$$$A sequence $$$b$$$ is a subsequence of a sequence $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Minimal Coprime",
    "url": "https://codeforces.com/problemset/problem/2063/A",
    "description": " Today, Little John used all his savings to buy a segment. He wants to build a house on this segment. A segment of positive integers $$$[l,r]$$$ is called coprime if $$$l$$$ and $$$r$$$ are coprime$$$^{\\text{∗}}$$$.A coprime segment $$$[l,r]$$$ is called minimal coprime if it does not contain$$$^{\\text{†}}$$$ any coprime segment not equal to itself. To better understand this statement, you can refer to the notes.Given $$$[l,r]$$$, a segment of positive integers, find the number of minimal coprime segments contained in $$$[l,r]$$$.$$$^{\\text{∗}}$$$Two integers $$$a$$$ and $$$b$$$ are coprime if they share only one positive common divisor. For example, the numbers $$$2$$$ and $$$4$$$ are not coprime because they are both divided by $$$2$$$ and $$$1$$$, but the numbers $$$7$$$ and $$$9$$$ are coprime because their only positive common divisor is $$$1$$$.$$$^{\\text{†}}$$$A segment $$$[l',r']$$$ is contained in the segment $$$[l,r]$$$ if and only if $$$l \\le l' \\le r' \\le r$$$."
  },
  {
    "title": "Galaxy Generator",
    "url": "https://codeforces.com/problemset/problem/2062/H",
    "description": "In a two-dimensional universe, a star can be represented by a point $$$(x,y)$$$ on a two-dimensional plane. Two stars are directly connected if and only if their $$$x$$$ or $$$y$$$ coordinates are the same, and there are no other stars on the line segment between them. Define a galaxy as a connected component composed of stars connected directly or indirectly (through other stars).For a set of stars, its value is defined as the minimum number of galaxies that can be obtained after performing the following operation for any (possibly, zero) times: in each operation, you can select a point $$$(x,y)$$$ without stars. If a star can be directly connected to at least $$$3$$$ stars after creating it here, then you create a star here.You are given a $$$n\\times n$$$ matrix $$$a$$$ consisting of $$$0$$$ and $$$1$$$ describing a set $$$S$$$ of stars. There is a star at $$$(x,y)$$$ if and only if $$$a_{x,y}=1$$$. Calculate the sum, modulo $$$10^9 + 7$$$, of the values of all non-empty subsets of $$$S$$$."
  },
  {
    "title": "Permutation Factory",
    "url": "https://codeforces.com/problemset/problem/2062/G",
    "description": "You are given two permutations $$$p_1,p_2,\\ldots,p_n$$$ and $$$q_1,q_2,\\ldots,q_n$$$ of length $$$n$$$. In one operation, you can select two integers $$$1\\leq i,j\\leq n,i\\neq j$$$ and swap $$$p_i$$$ and $$$p_j$$$. The cost of the operation is $$$\\min (|i-j|,|p_i-p_j|)$$$.Find the minimum cost to make $$$p_i = q_i$$$ hold for all $$$1\\leq i\\leq n$$$ and output a sequence of operations to achieve the minimum cost.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Traveling Salescat",
    "url": "https://codeforces.com/problemset/problem/2062/F",
    "description": "You are a cat selling fun algorithm problems. Today, you want to recommend your fun algorithm problems to $$$k$$$ cities.There are a total of $$$n$$$ cities, each with two parameters $$$a_i$$$ and $$$b_i$$$. Between any two cities $$$i,j$$$ ($$$i\\ne j$$$), there is a bidirectional road with a length of $$$\\max(a_i + b_j , b_i + a_j)$$$. The cost of a path is defined as the total length of roads between every two adjacent cities along the path.For $$$k=2,3,\\ldots,n$$$, find the minimum cost among all simple paths containing exactly $$$k$$$ distinct cities."
  },
  {
    "title": "The Game (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2062/E2",
    "description": " This is the hard version of the problem. The difference between the versions is that in this version, you need to find all possible nodes Cirno may choose. You can hack only if you solved all versions of this problem. Cirno and Daiyousei are playing a game with a tree$$$^{\\text{∗}}$$$ of $$$n$$$ nodes, rooted at node $$$1$$$. The value of the $$$i$$$-th node is $$$w_i$$$. They take turns to play the game; Cirno goes first.In each turn, assuming the opponent chooses $$$j$$$ in the last turn, the player can choose any remaining node $$$i$$$ satisfying $$$w_i>w_j$$$ and delete the subtree$$$^{\\text{†}}$$$ of node $$$i$$$. In particular, Cirno can choose any node and delete its subtree in the first turn.The first player who can not operate wins, and they all hope to win. Find all possible nodes Cirno may choose in the first turn so that she wins if both of them play optimally.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$Node $$$u$$$ is considered in the subtree of node $$$i$$$ if any path from $$$1$$$ to $$$u$$$ must go through $$$i$$$."
  },
  {
    "title": "The Game (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2062/E1",
    "description": " This is the easy version of the problem. The difference between the versions is that in this version, you only need to find one of the possible nodes Cirno may choose. You can hack only if you solved all versions of this problem. Cirno and Daiyousei are playing a game with a tree$$$^{\\text{∗}}$$$ of $$$n$$$ nodes, rooted at node $$$1$$$. The value of the $$$i$$$-th node is $$$w_i$$$. They take turns to play the game; Cirno goes first.In each turn, assuming the opponent chooses $$$j$$$ in the last turn, the player can choose any remaining node $$$i$$$ satisfying $$$w_i>w_j$$$ and delete the subtree$$$^{\\text{†}}$$$ of node $$$i$$$. In particular, Cirno can choose any node and delete its subtree in the first turn.The first player who can not operate wins, and they all hope to win. Find one of the possible nodes Cirno may choose so that she wins if both of them play optimally.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$Node $$$u$$$ is considered in the subtree of node $$$i$$$ if any path from $$$1$$$ to $$$u$$$ must go through $$$i$$$."
  },
  {
    "title": "Balanced Tree",
    "url": "https://codeforces.com/problemset/problem/2062/D",
    "description": "You are given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ nodes and values $$$l_i, r_i$$$ for each node. You can choose an initial value $$$a_i$$$ satisfying $$$l_i\\le a_i\\le r_i$$$ for the $$$i$$$-th node. A tree is balanced if all node values are equal, and the value of a balanced tree is defined as the value of any node.In one operation, you can choose two nodes $$$u$$$ and $$$v$$$, and increase the values of all nodes in the subtree$$$^{\\text{†}}$$$ of node $$$v$$$ by $$$1$$$ while considering $$$u$$$ as the root of the entire tree. Note that $$$u$$$ may be equal to $$$v$$$.Your goal is to perform a series of operations so that the tree becomes balanced. Find the minimum possible value of the tree after performing these operations. Note that you don't need to minimize the number of operations.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$Node $$$w$$$ is considered in the subtree of node $$$v$$$ if any path from root $$$u$$$ to $$$w$$$ must go through $$$v$$$."
  },
  {
    "title": "Cirno and Operations",
    "url": "https://codeforces.com/problemset/problem/2062/C",
    "description": "Cirno has a sequence $$$a$$$ of length $$$n$$$. She can perform either of the following two operations for any (possibly, zero) times unless the current length of $$$a$$$ is $$$1$$$:  Reverse the sequence. Formally, $$$[a_1,a_2,\\ldots,a_n]$$$ becomes $$$[a_n,a_{n-1},\\ldots,a_1]$$$ after the operation.  Replace the sequence with its difference sequence. Formally, $$$[a_1,a_2,\\ldots,a_n]$$$ becomes $$$[a_2-a_1,a_3-a_2,\\ldots,a_n-a_{n-1}]$$$ after the operation. Find the maximum possible sum of elements of $$$a$$$ after all operations."
  },
  {
    "title": "Clockwork",
    "url": "https://codeforces.com/problemset/problem/2062/B",
    "description": "You have a sequence of $$$n$$$ time clocks arranged in a line, where the initial time on the $$$i$$$-th clock is $$$a_i$$$. In each second, the following happens in order:  Each clock's time decreases by $$$1$$$. If any clock's time reaches $$$0$$$, you lose immediately.  You can choose to move to an adjacent clock or stay at the clock you are currently on.  You can reset the time of the clock you are on back to its initial value $$$a_i$$$. Note that the above events happen in order. If the time of a clock reaches $$$0$$$ in a certain second, even if you can move to this clock and reset its time during that second, you will still lose.You can start from any clock. Determine if it is possible to continue this process indefinitely without losing."
  },
  {
    "title": "String",
    "url": "https://codeforces.com/problemset/problem/2062/A",
    "description": "You are given a string $$$s$$$ of length $$$n$$$ consisting of $$$\\mathtt{0}$$$ and/or $$$\\mathtt{1}$$$. In one operation, you can select a non-empty subsequence $$$t$$$ from $$$s$$$ such that any two adjacent characters in $$$t$$$ are different. Then, you flip each character of $$$t$$$ ($$$\\mathtt{0}$$$ becomes $$$\\mathtt{1}$$$ and $$$\\mathtt{1}$$$ becomes $$$\\mathtt{0}$$$). For example, if $$$s=\\mathtt{\\underline{0}0\\underline{101}}$$$ and $$$t=s_1s_3s_4s_5=\\mathtt{0101}$$$, after the operation, $$$s$$$ becomes $$$\\mathtt{\\underline{1}0\\underline{010}}$$$.Calculate the minimum number of operations required to change all characters in $$$s$$$ to $$$\\mathtt{0}$$$.Recall that for a string $$$s = s_1s_2\\ldots s_n$$$, any string $$$t=s_{i_1}s_{i_2}\\ldots s_{i_k}$$$ ($$$k\\ge 1$$$) where $$$1\\leq i_1 < i_2 < \\ldots <i_k\\leq n$$$ is a subsequence of $$$s$$$."
  },
  {
    "title": "Kevin and Nivek",
    "url": "https://codeforces.com/problemset/problem/2061/I",
    "description": " Kevin and Nivek are competing for the title of \"The Best Kevin\". They aim to determine the winner through $$$n$$$ matches.The $$$i$$$-th match can be one of two types:  Type 1: Kevin needs to spend $$$a_i$$$ time to defeat Nivek and win the match. If Kevin doesn't spend $$$a_i$$$ time on it, Nivek will win the match.  Type 2: The outcome of this match depends on their historical records. If Kevin's number of wins is greater than or equal to Nivek's up to this match, then Kevin wins. Otherwise, Nivek wins. Kevin wants to know the minimum amount of time he needs to spend to ensure he wins at least $$$k$$$ matches.Output the answers for $$$k = 0, 1, \\ldots, n$$$."
  },
  {
    "title": "Kevin and Stones (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2061/H2",
    "description": "  This is the hard version of the problem. The difference between the versions is that in this version, you need to output a valid sequence of operations if one exists. You can hack only if you solved all versions of this problem. Kevin has an undirected graph with $$$n$$$ vertices and $$$m$$$ edges. Initially, some vertices contain stones, which Kevin wants to move to new positions. Kevin can perform the following operation:  For each stone at $$$u_i$$$, select a neighboring vertex $$$v_i$$$. Simultaneously move each stone from $$$u_i$$$ to its corresponding $$$v_i$$$. At any time, each vertex can contain at most one stone.Determine whether a valid sequence of operations exists that moves the stones from the initial state to the target state. Output a valid sequence of operations with no more than $$$2n$$$ moves if one exists. It can be proven that if a valid sequence exists, a valid sequence with no more than $$$2n$$$ moves exists."
  },
  {
    "title": "Kevin and Stones (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2061/H1",
    "description": "  This is the easy version of the problem. The difference between the versions is that in this version, you only need to determine whether a valid sequence of operations exists. You can hack only if you solved all versions of this problem. Kevin has an undirected graph with $$$n$$$ vertices and $$$m$$$ edges. Initially, some vertices contain stones, which Kevin wants to move to new positions. Kevin can perform the following operation:  For each stone at $$$u_i$$$, select a neighboring vertex $$$v_i$$$. Simultaneously move each stone from $$$u_i$$$ to its corresponding $$$v_i$$$. At any time, each vertex can contain at most one stone.Determine whether a valid sequence of operations exists that moves the stones from the initial state to the target state."
  },
  {
    "title": "Kevin and Teams",
    "url": "https://codeforces.com/problemset/problem/2061/G",
    "description": "   This is an interactive problem. Kevin has $$$n$$$ classmates, numbered $$$1, 2, \\ldots, n$$$. Any two of them may either be friends or not friends.Kevin wants to select $$$2k$$$ classmates to form $$$k$$$ teams, where each team contains exactly $$$2$$$ people. Each person can belong to at most one team.Let $$$u_i$$$ and $$$v_i$$$ be two people in the $$$i$$$-th team. To avoid potential conflicts during team formation, the team members must satisfy one of the following two conditions:  For all $$$i$$$ ($$$1\\leq i \\leq k$$$), classmate $$$u_i$$$ and $$$v_i$$$ are friends.  For all $$$i$$$ ($$$1\\leq i \\leq k$$$), classmate $$$u_i$$$ and $$$v_i$$$ are not friends. Kevin wants to determine the maximum $$$k$$$ such that, regardless of the friendship relationships among the $$$n$$$ people, he can always find $$$2k$$$ people to form the teams. After that, he needs to form $$$k$$$ teams. But asking whether two classmates are friends is awkward, so Kevin wants to achieve this while asking about the friendship status of no more than $$$n$$$ pairs of classmates.The interactor is adaptive. It means that the hidden relationship between classmates is not fixed before the interaction and will change during the interaction."
  },
  {
    "title": "Kevin and Binary String (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2061/F2",
    "description": "  This is the hard version of the problem. The difference between the versions is that in this version, string $$$t$$$ consists of '0', '1' and '?'. You can hack only if you solved all versions of this problem. Kevin has a binary string $$$s$$$ of length $$$n$$$. Kevin can perform the following operation:   Choose two adjacent blocks of $$$s$$$ and swap them. A block is a maximal substring$$$^{\\text{∗}}$$$ of identical characters. Formally, denote $$$s[l,r]$$$ as the substring $$$s_l s_{l+1} \\ldots s_r$$$. A block is $$$s[l,r]$$$ satisfying:   $$$l=1$$$ or $$$s_l\\not=s_{l-1}$$$.  $$$s_l=s_{l+1} = \\ldots = s_{r}$$$.  $$$r=n$$$ or $$$s_r\\not=s_{r+1}$$$. Adjacent blocks are two blocks $$$s[l_1,r_1]$$$ and $$$s[l_2,r_2]$$$ satisfying $$$r_1+1=l_2$$$.For example, if $$$s=\\mathtt{000}\\,\\mathbf{11}\\,\\mathbf{00}\\,\\mathtt{111}$$$, Kevin can choose the two blocks $$$s[4,5]$$$ and $$$s[6,7]$$$ and swap them, transforming $$$s$$$ into $$$\\mathtt{000}\\,\\mathbf{00}\\,\\mathbf{11}\\,\\mathtt{111}$$$.Given a string $$$t$$$ of length $$$n$$$ consisting of '0', '1' and '?', Kevin wants to determine the minimum number of operations required to perform such that for any index $$$i$$$ ($$$1\\le i\\le n$$$), if $$$t_i\\not=$$$ '?' then $$$s_i=t_i$$$. If it is impossible, output $$$-1$$$.$$$^{\\text{∗}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. "
  },
  {
    "title": "Kevin and Binary String (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2061/F1",
    "description": "  This is the easy version of the problem. The difference between the versions is that in this version, string $$$t$$$ consists of only '0' and '1'. You can hack only if you solved all versions of this problem. Kevin has a binary string $$$s$$$ of length $$$n$$$. Kevin can perform the following operation:   Choose two adjacent blocks of $$$s$$$ and swap them. A block is a maximal substring$$$^{\\text{∗}}$$$ of identical characters. Formally, denote $$$s[l,r]$$$ as the substring $$$s_l s_{l+1} \\ldots s_r$$$. A block is $$$s[l,r]$$$ satisfying:   $$$l=1$$$ or $$$s_l\\not=s_{l-1}$$$.  $$$s_l=s_{l+1} = \\ldots = s_{r}$$$.  $$$r=n$$$ or $$$s_r\\not=s_{r+1}$$$. Adjacent blocks are two blocks $$$s[l_1,r_1]$$$ and $$$s[l_2,r_2]$$$ satisfying $$$r_1+1=l_2$$$.For example, if $$$s=\\mathtt{000}\\,\\mathbf{11}\\,\\mathbf{00}\\,\\mathtt{111}$$$, Kevin can choose the two blocks $$$s[4,5]$$$ and $$$s[6,7]$$$ and swap them, transforming $$$s$$$ into $$$\\mathtt{000}\\,\\mathbf{00}\\,\\mathbf{11}\\,\\mathtt{111}$$$.Given a string $$$t$$$ of length $$$n$$$ consisting of '0', '1' and '?', Kevin wants to determine the minimum number of operations required to perform such that for any index $$$i$$$ ($$$1\\le i\\le n$$$), if $$$t_i\\not=$$$ '?' then $$$s_i=t_i$$$. If it is impossible, output $$$-1$$$.$$$^{\\text{∗}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. "
  },
  {
    "title": "Kevin and And",
    "url": "https://codeforces.com/problemset/problem/2061/E",
    "description": " Kevin has an integer sequence $$$a$$$ of length $$$n$$$. At the same time, Kevin has $$$m$$$ types of magic, where the $$$i$$$-th type of magic can be represented by an integer $$$b_i$$$.Kevin can perform at most $$$k$$$ (possibly zero) magic operations. In each operation, Kevin can do the following:  Choose two indices $$$i$$$ ($$$1\\leq i\\leq n$$$) and $$$j$$$ ($$$1\\leq j\\leq m$$$), and then update $$$a_i$$$ to $$$a_i\\ \\&\\ b_j$$$. Here, $$$\\&$$$ denotes the bitwise AND operation. Find the minimum possible sum of all numbers in the sequence $$$a$$$ after performing at most $$$k$$$ operations."
  },
  {
    "title": "Kevin and Numbers",
    "url": "https://codeforces.com/problemset/problem/2061/D",
    "description": " Kevin wrote an integer sequence $$$a$$$ of length $$$n$$$ on the blackboard.Kevin can perform the following operation any number of times:  Select two integers $$$x, y$$$ on the blackboard such that $$$|x - y| \\leq 1$$$, erase them, and then write down an integer $$$x + y$$$ instead. Kevin wants to know if it is possible to transform these integers into an integer sequence $$$b$$$ of length $$$m$$$ through some sequence of operations.Two sequences $$$a$$$ and $$$b$$$ are considered the same if and only if their multisets are identical. In other words, for any number $$$x$$$, the number of times it appears in $$$a$$$ must be equal to the number of times it appears in $$$b$$$."
  },
  {
    "title": "Kevin and Puzzle",
    "url": "https://codeforces.com/problemset/problem/2061/C",
    "description": " Kevin enjoys logic puzzles.He played a game with $$$n$$$ classmates who stand in a line. The $$$i$$$-th person from the left says that there are $$$a_i$$$ liars to their left (not including themselves).Each classmate is either honest or a liar, with the restriction that no two liars can stand next to each other. Honest classmates always say the truth. Liars can say either the truth or lies, meaning their statements are considered unreliable.Kevin wants to determine the number of distinct possible game configurations modulo $$$998\\,244\\,353$$$. Two configurations are considered different if at least one classmate is honest in one configuration and a liar in the other."
  },
  {
    "title": "Kevin and Geometry",
    "url": "https://codeforces.com/problemset/problem/2061/B",
    "description": " Kevin has $$$n$$$ sticks with length $$$a_1,a_2,\\ldots,a_n$$$.Kevin wants to select $$$4$$$ sticks from these to form an isosceles trapezoid$$$^{\\text{∗}}$$$ with a positive area. Note that rectangles and squares are also considered isosceles trapezoids. Help Kevin find a solution. If no solution exists, output $$$-1$$$.$$$^{\\text{∗}}$$$An isosceles trapezoid is a convex quadrilateral with a line of symmetry bisecting one pair of opposite sides. In any isosceles trapezoid, two opposite sides (the bases) are parallel, and the two other sides (the legs) are of equal length."
  },
  {
    "title": "Kevin and Arithmetic",
    "url": "https://codeforces.com/problemset/problem/2061/A",
    "description": "To train young Kevin's arithmetic skills, his mother devised the following problem.Given $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ and a sum $$$s$$$ initialized to $$$0$$$, Kevin performs the following operation for $$$i = 1, 2, \\ldots, n$$$ in order:   Add $$$a_i$$$ to $$$s$$$. If the resulting $$$s$$$ is even, Kevin earns a point and repeatedly divides $$$s$$$ by $$$2$$$ until it becomes odd. Note that Kevin can earn at most one point per operation, regardless of how many divisions he does.Since these divisions are considered more beneficial for Kevin's development, his mother wants to rearrange $$$a$$$ so that the number of Kevin's total points is maximized. Determine the maximum number of points."
  },
  {
    "title": "Bugged Sort",
    "url": "https://codeforces.com/problemset/problem/2060/G",
    "description": "Today, Alice has given Bob arrays for him to sort in increasing order again! At this point, no one really knows how many times she has done this.Bob is given two sequences $$$a$$$ and $$$b$$$, both of length $$$n$$$. All integers in the range from $$$1$$$ to $$$2n$$$ appear exactly once in either $$$a$$$ or $$$b$$$. In other words, the concatenated$$$^{\\text{∗}}$$$ sequence $$$a+b$$$ is a permutation$$$^{\\text{†}}$$$ of length $$$2n$$$.Bob must sort both sequences in increasing order at the same time using Alice's swap function. Alice's swap function is implemented as follows:  Given two indices $$$i$$$ and $$$j$$$ ($$$i \\neq j$$$), it swaps $$$a_i$$$ with $$$b_j$$$, and swaps $$$b_i$$$ with $$$a_j$$$. Given sequences $$$a$$$ and $$$b$$$, please determine if both sequences can be sorted in increasing order simultaneously after using Alice's swap function any number of times.$$$^{\\text{∗}}$$$The concatenated sequence $$$a+b$$$ denotes the sequence $$$[a_1, a_2, a_3, \\ldots , b_1, b_2, b_3, \\ldots]$$$.$$$^{\\text{†}}$$$A permutation of length $$$m$$$ contains all integers from $$$1$$$ to $$$m$$$ in some order."
  },
  {
    "title": "Multiplicative Arrays",
    "url": "https://codeforces.com/problemset/problem/2060/F",
    "description": "You're given integers $$$k$$$ and $$$n$$$. For each integer $$$x$$$ from $$$1$$$ to $$$k$$$, count the number of integer arrays $$$a$$$ such that all of the following are satisfied:  $$$1 \\leq |a| \\leq n$$$ where $$$|a|$$$ represents the length of $$$a$$$.  $$$1 \\leq a_i \\leq k$$$ for all $$$1 \\leq i \\leq |a|$$$.  $$$a_1 \\times a_2 \\times \\dots \\times a_{|a|}=x$$$ (i.e., the product of all elements is $$$x$$$). Note that two arrays $$$b$$$ and $$$c$$$ are different if either their lengths are different, or if there exists an index $$$1 \\leq i \\leq |b|$$$ such that $$$b_i\\neq c_i$$$.Output the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Graph Composition",
    "url": "https://codeforces.com/problemset/problem/2060/E",
    "description": "You are given two simple undirected graphs $$$F$$$ and $$$G$$$ with $$$n$$$ vertices. $$$F$$$ has $$$m_1$$$ edges while $$$G$$$ has $$$m_2$$$ edges. You may perform one of the following two types of operations any number of times:  Select two integers $$$u$$$ and $$$v$$$ ($$$1 \\leq u,v \\leq n$$$) such that there is an edge between $$$u$$$ and $$$v$$$ in $$$F$$$. Then, remove that edge from $$$F$$$.  Select two integers $$$u$$$ and $$$v$$$ ($$$1 \\leq u,v \\leq n$$$) such that there is no edge between $$$u$$$ and $$$v$$$ in $$$F$$$. Then, add an edge between $$$u$$$ and $$$v$$$ in $$$F$$$. Determine the minimum number of operations required such that for all integers $$$u$$$ and $$$v$$$ ($$$1 \\leq u,v \\leq n$$$), there is a path from $$$u$$$ to $$$v$$$ in $$$F$$$ if and only if there is a path from $$$u$$$ to $$$v$$$ in $$$G$$$."
  },
  {
    "title": "Subtract Min Sort",
    "url": "https://codeforces.com/problemset/problem/2060/D",
    "description": "You are given a sequence $$$a$$$ consisting of $$$n$$$ positive integers.You can perform the following operation any number of times.  Select an index $$$i$$$ ($$$1 \\le i < n$$$), and subtract $$$\\min(a_i,a_{i+1})$$$ from both $$$a_i$$$ and $$$a_{i+1}$$$. Determine if it is possible to make the sequence non-decreasing by using the operation any number of times."
  },
  {
    "title": "Game of Mathletes",
    "url": "https://codeforces.com/problemset/problem/2060/C",
    "description": "Alice and Bob are playing a game. There are $$$n$$$ ($$$n$$$ is even) integers written on a blackboard, represented by $$$x_1, x_2, \\ldots, x_n$$$. There is also a given integer $$$k$$$ and an integer score that is initially $$$0$$$. The game lasts for $$$\\frac{n}{2}$$$ turns, in which the following events happen sequentially:  Alice selects an integer from the blackboard and erases it. Let's call Alice's chosen integer $$$a$$$.  Bob selects an integer from the blackboard and erases it. Let's call Bob's chosen integer $$$b$$$.  If $$$a+b=k$$$, add $$$1$$$ to score. Alice is playing to minimize the score while Bob is playing to maximize the score. Assuming both players use optimal strategies, what is the score after the game ends?"
  },
  {
    "title": "Farmer John's Card Game",
    "url": "https://codeforces.com/problemset/problem/2060/B",
    "description": "Farmer John's $$$n$$$ cows are playing a card game! Farmer John has a deck of $$$n \\cdot m$$$ cards numbered from $$$0$$$ to $$$n \\cdot m-1$$$. He distributes $$$m$$$ cards to each of his $$$n$$$ cows.Farmer John wants the game to be fair, so each cow should only be able to play $$$1$$$ card per round. He decides to determine a turn order, determined by a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$, such that the $$$p_i$$$'th cow will be the $$$i$$$'th cow to place a card on top of the center pile in a round.In other words, the following events happen in order in each round:   The $$$p_1$$$'th cow places any card from their deck on top of the center pile.  The $$$p_2$$$'th cow places any card from their deck on top of the center pile.  ...  The $$$p_n$$$'th cow places any card from their deck on top of the center pile. There is a catch. Initially, the center pile contains a card numbered $$$-1$$$. In order to place a card, the number of the card must be greater than the number of the card on top of the center pile. Then, the newly placed card becomes the top card of the center pile. If a cow cannot place any card in their deck, the game is considered to be lost.Farmer John wonders: does there exist $$$p$$$ such that it is possible for all of his cows to empty their deck after playing all $$$m$$$ rounds of the game? If so, output any valid $$$p$$$. Otherwise, output $$$-1$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ contains each integer from $$$1$$$ to $$$n$$$ exactly once"
  },
  {
    "title": "Fibonacciness",
    "url": "https://codeforces.com/problemset/problem/2060/A",
    "description": "There is an array of $$$5$$$ integers. Initially, you only know $$$a_1,a_2,a_4,a_5$$$. You may set $$$a_3$$$ to any positive integer, negative integer, or zero. The Fibonacciness of the array is the number of integers $$$i$$$ ($$$1 \\leq i \\leq 3$$$) such that $$$a_{i+2}=a_i+a_{i+1}$$$. Find the maximum Fibonacciness over all integer values of $$$a_3$$$."
  },
  {
    "title": "Stop Gaming (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2059/E2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version you need to output all the operations that need to be performed. You can hack only if you solved all versions of this problem.You are given $$$n$$$ arrays, each of which has a length of $$$m$$$. Let the $$$j$$$-th element of the $$$i$$$-th array be denoted as $$$a_{i, j}$$$. It is guaranteed that all $$$a_{i, j}$$$ are pairwise distinct. In one operation, you can do the following:  Choose some integer $$$i$$$ ($$$1 \\le i \\le n$$$) and an integer $$$x$$$ ($$$1 \\le x \\le 2 \\cdot n \\cdot m$$$).  For all integers $$$k$$$ from $$$i$$$ to $$$n$$$ in increasing order, do the following:   Add the element $$$x$$$ to the beginning of the $$$k$$$-th array.  Assign $$$x$$$ the value of the last element in the $$$k$$$-th array.  Remove the last element from the $$$k$$$-th array. In other words, you can insert an element at the beginning of any array, after which all elements in this and all following arrays are shifted by one to the right. The last element of the last array is removed.You are also given a description of the arrays that need to be obtained after all operations. That is, after performing the operations, the $$$j$$$-th element of the $$$i$$$-th array should be equal to $$$b_{i, j}$$$. It is guaranteed that all $$$b_{i, j}$$$ are pairwise distinct.Determine the minimum number of operations that need to be performed to obtain the desired arrays, and also output the sequence of all operations itself."
  },
  {
    "title": "Stop Gaming (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2059/E1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version you only need to find the minimum number of operations. You can hack only if you solved all versions of this problem.You are given $$$n$$$ arrays, each of which has a length of $$$m$$$. Let the $$$j$$$-th element of the $$$i$$$-th array be denoted as $$$a_{i, j}$$$. It is guaranteed that all $$$a_{i, j}$$$ are pairwise distinct. In one operation, you can do the following:  Choose some integer $$$i$$$ ($$$1 \\le i \\le n$$$) and an integer $$$x$$$ ($$$1 \\le x \\le 2 \\cdot n \\cdot m$$$).  For all integers $$$k$$$ from $$$i$$$ to $$$n$$$ in increasing order, do the following:   Add the element $$$x$$$ to the beginning of the $$$k$$$-th array.  Assign $$$x$$$ the value of the last element in the $$$k$$$-th array.  Remove the last element from the $$$k$$$-th array. In other words, you can insert an element at the beginning of any array, after which all elements in this and all following arrays are shifted by one to the right. The last element of the last array is removed.You are also given a description of the arrays that need to be obtained after all operations. That is, after performing the operations, the $$$j$$$-th element of the $$$i$$$-th array should be equal to $$$b_{i, j}$$$. It is guaranteed that all $$$b_{i, j}$$$ are pairwise distinct.Determine the minimum number of operations that need to be performed to obtain the desired arrays."
  },
  {
    "title": "Graph and Graph",
    "url": "https://codeforces.com/problemset/problem/2059/D",
    "description": "You are given two connected undirected graphs with the same number of vertices. In both graphs, there is a token located at some vertex. In the first graph, the token is initially at vertex $$$s_1$$$, and in the second graph, the token is initially at vertex $$$s_2$$$. The following operation is repeated an infinite number of times:  Let the token currently be at vertex $$$v_1$$$ in the first graph and at vertex $$$v_2$$$ in the second graph.  A vertex $$$u_1$$$, adjacent to $$$v_1$$$, is chosen in the first graph.  A vertex $$$u_2$$$, adjacent to $$$v_2$$$, is chosen in the second graph.  The tokens are moved to the chosen vertices: in the first graph, the token moves from $$$v_1$$$ to $$$u_1$$$, and in the second graph, from $$$v_2$$$ to $$$u_2$$$.  The cost of such an operation is equal to $$$|u_1 - u_2|$$$. Determine the minimum possible total cost of all operations or report that this value will be infinitely large."
  },
  {
    "title": "Customer Service",
    "url": "https://codeforces.com/problemset/problem/2059/C",
    "description": "Nikyr has started working as a queue manager at the company \"Black Contour.\" He needs to choose the order of servicing customers. There are a total of $$$n$$$ queues, each initially containing $$$0$$$ people. In each of the next $$$n$$$ moments of time, there are two sequential events: New customers arrive in all queues. More formally, at the $$$j$$$-th moment of time, the number of people in the $$$i$$$-th queue increases by a positive integer $$$a_{i,j}$$$. Nikyr chooses exactly one of the $$$n$$$ queues to be served at that moment in time. The number of customers in this queue becomes $$$0$$$.Let the number of people in the $$$i$$$-th queue after all events be $$$x_i$$$. Nikyr wants MEX$$$^{\\dagger}$$$ of the collection $$$x_1, x_2, \\ldots, x_n$$$ to be as large as possible. Help him determine the maximum value he can achieve with an optimal order of servicing the queues.$$$^{\\dagger}$$$The minimum excluded (MEX) of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$y$$$ which does not occur in the collection $$$c$$$. For example:   $$$\\operatorname{MEX}([2,2,1])= 0$$$, since $$$0$$$ does not belong to the array.  $$$\\operatorname{MEX}([3,1,0,1]) = 2$$$, since $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  $$$\\operatorname{MEX}([0,3,1,2]) = 4$$$, since $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Cost of the Array",
    "url": "https://codeforces.com/problemset/problem/2059/B",
    "description": "You are given an array $$$a$$$ of length $$$n$$$ and an even integer $$$k$$$ ($$$2 \\le k \\le n$$$). You need to split the array $$$a$$$ into exactly $$$k$$$ non-empty subarrays$$$^{\\dagger}$$$ such that each element of the array $$$a$$$ belongs to exactly one subarray.Next, all subarrays with even indices (second, fourth, $$$\\ldots$$$, $$$k$$$-th) are concatenated into a single array $$$b$$$. After that, $$$0$$$ is added to the end of the array $$$b$$$.The cost of the array $$$b$$$ is defined as the minimum index $$$i$$$ such that $$$b_i \\neq i$$$. For example, the cost of the array $$$b = [1, 2, 4, 5, 0]$$$ is $$$3$$$, since $$$b_1 = 1$$$, $$$b_2 = 2$$$, and $$$b_3 \\neq 3$$$. Determine the minimum cost of the array $$$b$$$ that can be obtained with an optimal partitioning of the array $$$a$$$ into subarrays.$$$^{\\dagger}$$$An array $$$x$$$ is a subarray of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Milya and Two Arrays",
    "url": "https://codeforces.com/problemset/problem/2059/A",
    "description": "An array is called good if for any element $$$x$$$ that appears in this array, it holds that $$$x$$$ appears at least twice in this array. For example, the arrays $$$[1, 2, 1, 1, 2]$$$, $$$[3, 3]$$$, and $$$[1, 2, 4, 1, 2, 4]$$$ are good, while the arrays $$$[1]$$$, $$$[1, 2, 1]$$$, and $$$[2, 3, 4, 4]$$$ are not good.Milya has two good arrays $$$a$$$ and $$$b$$$ of length $$$n$$$. She can rearrange the elements in array $$$a$$$ in any way. After that, she obtains an array $$$c$$$ of length $$$n$$$, where $$$c_i = a_i + b_i$$$ ($$$1 \\le i \\le n$$$).Determine whether Milya can rearrange the elements in array $$$a$$$ such that there are at least $$$3$$$ distinct elements in array $$$c$$$."
  },
  {
    "title": "Coffee Break",
    "url": "https://codeforces.com/problemset/problem/2057/H",
    "description": "There are very long classes in the T-Generation. In one day, you need to have time to analyze the training and thematic contests, give a lecture with new material, and, if possible, also hold a mini-seminar. Therefore, there is a break where students can go to drink coffee and chat with each other.There are a total of $$$n+2$$$ coffee machines located in sequentially arranged rooms along a long corridor. The coffee machines are numbered from $$$0$$$ to $$$n+1$$$, and immediately after the break starts, there are $$$a_i$$$ students gathered around the $$$i$$$-th coffee machine.The students are talking too loudly among themselves, and the teachers need to make a very important announcement. Therefore, they want to gather the maximum number of students around some single coffee machine. The teachers are too lazy to run around the corridors and gather the students, so they came up with a more sophisticated way to manipulate them:  At any moment, the teachers can choose room $$$i$$$ ($$$1 \\le i \\le n$$$) and turn off the lights there;  If there were $$$x$$$ students in that room, then after turning off the lights, $$$\\lfloor \\frac12 x \\rfloor$$$ students will go to room $$$(i-1)$$$, and $$$\\lfloor \\frac12 x \\rfloor$$$ other students will go to room $$$(i+1)$$$.  If $$$x$$$ was odd, then one student remains in the same room.  After that, the lights in room $$$i$$$ are turned back on. The teachers have not yet decided where they will gather the students, so for each $$$i$$$ from $$$1$$$ to $$$n$$$, you should determine what is the maximum number of students that can be gathered around the $$$i$$$-th coffee machine.The teachers can turn off the lights in any rooms at their discretion, in any order, possibly turning off the lights in the same room multiple times.Note that the values of $$$a_0$$$ and $$$a_{n+1}$$$ do not affect the answer to the problem, so their values will not be given to you."
  },
  {
    "title": "Secret Message",
    "url": "https://codeforces.com/problemset/problem/2057/G",
    "description": "Every Saturday, Alexander B., a teacher of parallel X, writes a secret message to Alexander G., a teacher of parallel B, in the evening. Since Alexander G. is giving a lecture at that time and the message is very important, Alexander B. has to write this message on an interactive online board.The interactive online board is a grid consisting of $$$n$$$ rows and $$$m$$$ columns, where each cell is $$$1 \\times 1$$$ in size. Some cells of this board are already filled in, and it is impossible to write a message in them; such cells are marked with the symbol \".\", while the remaining cells are called free and are marked with the symbol \"#\".Let us introduce two characteristics of the online board:  $$$s$$$ is the number of free cells.  $$$p$$$ is the perimeter of the grid figure formed by the union of free cells. Let $$$A$$$ be the set of free cells. Your goal is to find a set of cells $$$S \\subseteq A$$$ that satisfies the following properties:  $$$|S| \\le \\frac{1}{5} \\cdot (s+p)$$$.  Any cell from $$$A$$$ either lies in $$$S$$$ or shares a side with some cell from $$$S$$$. We can show that at least one set $$$S$$$ satisfying these properties exists; you are required to find any suitable one."
  },
  {
    "title": "Formation",
    "url": "https://codeforces.com/problemset/problem/2057/F",
    "description": "One day, the teachers of \"T-generation\" decided to instill discipline in the pupils, so they lined them up and made them calculate in order. There are a total of $$$n$$$ pupils, the height of the $$$i$$$-th pupil in line is $$$a_i$$$. The line is comfortable, if for each $$$i$$$ from $$$1$$$ to $$$n - 1$$$, the following condition holds: $$$a_i \\cdot 2 \\ge a_{i + 1}$$$. Initially, the line is comfortable.The teachers do not like that the maximum height in the line is too small, so they want to feed the pupils pizza. You know that when a pupil eats one pizza, their height increases by $$$1$$$. One pizza can only be eaten by only one pupil, but each pupil can eat an unlimited number of pizzas. It is important that after all the pupils have eaten their pizzas, the line is comfortable.The teachers have $$$q$$$ options for how many pizzas they will order. For each option $$$k_i$$$, answer the question: what is the maximum height $$$\\max(a_1, a_2, \\ldots, a_n)$$$ that can be achieved if the pupils eat at most $$$k_i$$$ pizzas."
  },
  {
    "title": "Another Exercise on Graphs (hard version)",
    "url": "https://codeforces.com/problemset/problem/2057/E2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version, there is no additional constraint on $$$m$$$. You can hack only if you solved all versions of this problem. Recently, the instructors of \"T-generation\" needed to create a training contest. They were missing one problem, and there was not a single problem on graphs in the contest, so they came up with the following problem.You are given a connected weighted undirected graph with $$$n$$$ vertices and $$$m$$$ edges, which does not contain self-loops or multiple edges.There are $$$q$$$ queries of the form $$$(a, b, k)$$$: among all paths from vertex $$$a$$$ to vertex $$$b$$$, find the smallest $$$k$$$-th maximum weight of edges on the path$$$^{\\dagger}$$$.The instructors thought that the problem sounded very interesting, but there is one catch. They do not know how to solve it. Help them and solve the problem, as there are only a few hours left until the contest starts.$$$^{\\dagger}$$$ Let $$$w_1 \\ge w_2 \\ge \\ldots \\ge w_{h}$$$ be the weights of all edges in a path, in non-increasing order. The $$$k$$$-th maximum weight of the edges on this path is $$$w_{k}$$$."
  },
  {
    "title": "Another Exercise on Graphs (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2057/E1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version, there is an additional constraint on $$$m$$$. You can hack only if you solved all versions of this problem. Recently, the instructors of \"T-generation\" needed to create a training contest. They were missing one problem, and there was not a single problem on graphs in the contest, so they came up with the following problem.You are given a connected weighted undirected graph with $$$n$$$ vertices and $$$m$$$ edges, which does not contain self-loops or multiple edges.There are $$$q$$$ queries of the form $$$(a, b, k)$$$: among all paths from vertex $$$a$$$ to vertex $$$b$$$, find the smallest $$$k$$$-th maximum weight of edges on the path$$$^{\\dagger}$$$.The instructors thought that the problem sounded very interesting, but there is one catch. They do not know how to solve it. Help them and solve the problem, as there are only a few hours left until the contest starts.$$$^{\\dagger}$$$ Let $$$w_1 \\ge w_2 \\ge \\ldots \\ge w_{h}$$$ be the weights of all edges in a path, in non-increasing order. The $$$k$$$-th maximum weight of the edges on this path is $$$w_{k}$$$."
  },
  {
    "title": "Gifts Order",
    "url": "https://codeforces.com/problemset/problem/2057/D",
    "description": "\"T-Generation\" has decided to purchase gifts for various needs; thus, they have $$$n$$$ different sweaters numbered from $$$1$$$ to $$$n$$$. The $$$i$$$-th sweater has a size of $$$a_i$$$. Now they need to send some subsegment of sweaters to an olympiad. It is necessary that the sweaters fit as many people as possible, but without having to take too many of them.They need to choose two indices $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$) to maximize the convenience equal to $$$$$$\\operatorname{max} (a_l, a_{l + 1}, \\ldots, a_r) - \\operatorname{min} (a_l, a_{l + 1}, \\ldots, a_r) - (r - l),$$$$$$ that is, the range of sizes minus the number of sweaters.Sometimes the sizes of the sweaters change; it is known that there have been $$$q$$$ changes, in each change, the size of the $$$p$$$-th sweater becomes $$$x$$$. Help the \"T-Generation\" team and determine the maximum convenience among all possible pairs $$$(l, r)$$$ initially, as well as after each size change."
  },
  {
    "title": "Trip to the Olympiad",
    "url": "https://codeforces.com/problemset/problem/2057/C",
    "description": "In the upcoming year, there will be many team olympiads, so the teachers of \"T-generation\" need to assemble a team of three pupils to participate in them. Any three pupils will show a worthy result in any team olympiad. But winning the olympiad is only half the battle; first, you need to get there...Each pupil has an independence level, expressed as an integer. In \"T-generation\", there is exactly one student with each independence levels from $$$l$$$ to $$$r$$$, inclusive. For a team of three pupils with independence levels $$$a$$$, $$$b$$$, and $$$c$$$, the value of their team independence is equal to $$$(a \\oplus b) + (b \\oplus c) + (a \\oplus c)$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. Your task is to choose any trio of students with the maximum possible team independence."
  },
  {
    "title": "Gorilla and the Exam",
    "url": "https://codeforces.com/problemset/problem/2057/B",
    "description": "Due to a shortage of teachers in the senior class of the \"T-generation\", it was decided to have a huge male gorilla conduct exams for the students. However, it is not that simple; to prove his competence, he needs to solve the following problem.For an array $$$b$$$, we define the function $$$f(b)$$$ as the smallest number of the following operations required to make the array $$$b$$$ empty:   take two integers $$$l$$$ and $$$r$$$, such that $$$l \\le r$$$, and let $$$x$$$ be the $$$\\min(b_l, b_{l+1}, \\ldots, b_r)$$$; then  remove all such $$$b_i$$$ that $$$l \\le i \\le r$$$ and $$$b_i = x$$$ from the array, the deleted elements are removed, the indices are renumerated. You are given an array $$$a$$$ of length $$$n$$$ and an integer $$$k$$$. No more than $$$k$$$ times, you can choose any index $$$i$$$ ($$$1 \\le i \\le n$$$) and any integer $$$p$$$, and replace $$$a_i$$$ with $$$p$$$.Help the gorilla to determine the smallest value of $$$f(a)$$$ that can be achieved after such replacements."
  },
  {
    "title": "MEX Table",
    "url": "https://codeforces.com/problemset/problem/2057/A",
    "description": "One day, the schoolboy Mark misbehaved, so the teacher Sasha called him to the whiteboard.Sasha gave Mark a table with $$$n$$$ rows and $$$m$$$ columns. His task is to arrange the numbers $$$0, 1, \\ldots, n \\cdot m - 1$$$ in the table (each number must be used exactly once) in such a way as to maximize the sum of MEX$$$^{\\text{∗}}$$$ across all rows and columns. More formally, he needs to maximize $$$$$$\\sum\\limits_{i = 1}^{n} \\operatorname{mex}(\\{a_{i,1}, a_{i,2}, \\ldots, a_{i,m}\\}) + \\sum\\limits_{j = 1}^{m} \\operatorname{mex}(\\{a_{1,j}, a_{2,j}, \\ldots, a_{n,j}\\}),$$$$$$ where $$$a_{i,j}$$$ is the number in the $$$i$$$-th row and $$$j$$$-th column.Sasha is not interested in how Mark arranges the numbers, so he only asks him to state one number — the maximum sum of MEX across all rows and columns that can be achieved.$$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$c$$$. For example:   $$$\\operatorname{mex}([2,2,1])= 0$$$, since $$$0$$$ does not belong to the array.  $$$\\operatorname{mex}([3,1,0,1]) = 2$$$, since $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  $$$\\operatorname{mex}([0,3,1,2]) = 4$$$, since $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Xor of Median (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2056/F2",
    "description": "  This is the hard version of the problem. The difference between the versions is that in this version, the constraints on $$$t$$$, $$$k$$$, and $$$m$$$ are higher. You can hack only if you solved all versions of this problem. A sequence $$$a$$$ of $$$n$$$ integers is called good if the following condition holds:  Let $$$\\text{cnt}_x$$$ be the number of occurrences of $$$x$$$ in sequence $$$a$$$. For all pairs $$$0 \\le i < j < m$$$, at least one of the following has to be true: $$$\\text{cnt}_i = 0$$$, $$$\\text{cnt}_j = 0$$$, or $$$\\text{cnt}_i \\le \\text{cnt}_j$$$. In other words, if both $$$i$$$ and $$$j$$$ are present in sequence $$$a$$$, then the number of occurrences of $$$i$$$ in $$$a$$$ is less than or equal to the number of occurrences of $$$j$$$ in $$$a$$$. You are given integers $$$n$$$ and $$$m$$$. Calculate the value of the bitwise XOR of the median$$$^{\\text{∗}}$$$ of all good sequences $$$a$$$ of length $$$n$$$ with $$$0\\le a_i < m$$$. Note that the value of $$$n$$$ can be very large, so you are given its binary representation instead.$$$^{\\text{∗}}$$$The median of a sequence $$$a$$$ of length $$$n$$$ is defined as the $$$\\left\\lfloor\\frac{n + 1}{2}\\right\\rfloor$$$-th smallest value in the sequence."
  },
  {
    "title": "Xor of Median (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2056/F1",
    "description": "  This is the easy version of the problem. The difference between the versions is that in this version, the constraints on $$$t$$$, $$$k$$$, and $$$m$$$ are lower. You can hack only if you solved all versions of this problem. A sequence $$$a$$$ of $$$n$$$ integers is called good if the following condition holds:  Let $$$\\text{cnt}_x$$$ be the number of occurrences of $$$x$$$ in sequence $$$a$$$. For all pairs $$$0 \\le i < j < m$$$, at least one of the following has to be true: $$$\\text{cnt}_i = 0$$$, $$$\\text{cnt}_j = 0$$$, or $$$\\text{cnt}_i \\le \\text{cnt}_j$$$. In other words, if both $$$i$$$ and $$$j$$$ are present in sequence $$$a$$$, then the number of occurrences of $$$i$$$ in $$$a$$$ is less than or equal to the number of occurrences of $$$j$$$ in $$$a$$$. You are given integers $$$n$$$ and $$$m$$$. Calculate the value of the bitwise XOR of the median$$$^{\\text{∗}}$$$ of all good sequences $$$a$$$ of length $$$n$$$ with $$$0\\le a_i < m$$$. Note that the value of $$$n$$$ can be very large, so you are given its binary representation instead.$$$^{\\text{∗}}$$$The median of a sequence $$$a$$$ of length $$$n$$$ is defined as the $$$\\left\\lfloor\\frac{n + 1}{2}\\right\\rfloor$$$-th smallest value in the sequence."
  },
  {
    "title": "Nested Segments",
    "url": "https://codeforces.com/problemset/problem/2056/E",
    "description": "A set $$$A$$$ consisting of pairwise distinct segments $$$[l, r]$$$ with integer endpoints is called good if $$$1\\le l\\le r\\le n$$$, and for any pair of distinct segments $$$[l_i, r_i], [l_j, r_j]$$$ in $$$A$$$, exactly one of the following conditions holds:  $$$r_i < l_j$$$ or $$$r_j < l_i$$$ (the segments do not intersect)  $$$l_i \\le l_j \\le r_j \\le r_i$$$ or $$$l_j \\le l_i \\le r_i \\le r_j$$$ (one segment is fully contained within the other) You are given a good set $$$S$$$ consisting of $$$m$$$ pairwise distinct segments $$$[l_i, r_i]$$$ with integer endpoints. You want to add as many additional segments to the set $$$S$$$ as possible while ensuring that set $$$S$$$ remains good. Since this task is too easy, you need to determine the number of different ways to add the maximum number of additional segments to $$$S$$$, ensuring that the set remains good. Two ways are considered different if there exists a segment that is being added in one of the ways, but not in the other.Formally, you need to find the number of good sets $$$T$$$ of distinct segments, such that $$$S$$$ is a subset of $$$T$$$ and $$$T$$$ has the maximum possible size. Since the result might be very large, compute the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Unique Median",
    "url": "https://codeforces.com/problemset/problem/2056/D",
    "description": "  An array $$$b$$$ of $$$m$$$ integers is called good if, when it is sorted, $$$b_{\\left\\lfloor \\frac{m + 1}{2} \\right\\rfloor} = b_{\\left\\lceil \\frac{m + 1}{2} \\right\\rceil}$$$. In other words, $$$b$$$ is good if both of its medians are equal. In particular, $$$\\left\\lfloor \\frac{m + 1}{2} \\right\\rfloor = \\left\\lceil \\frac{m + 1}{2} \\right\\rceil$$$ when $$$m$$$ is odd, so $$$b$$$ is guaranteed to be good if it has an odd length.You are given an array $$$a$$$ of $$$n$$$ integers. Calculate the number of good subarrays$$$^{\\text{∗}}$$$ in $$$a$$$.$$$^{\\text{∗}}$$$An array $$$x$$$ is a subarray of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Palindromic Subsequences",
    "url": "https://codeforces.com/problemset/problem/2056/C",
    "description": " For an integer sequence $$$a = [a_1, a_2, \\ldots, a_n]$$$, we define $$$f(a)$$$ as the length of the longest subsequence$$$^{\\text{∗}}$$$ of $$$a$$$ that is a palindrome$$$^{\\text{†}}$$$. Let $$$g(a)$$$ represent the number of subsequences of length $$$f(a)$$$ that are palindromes. In other words, $$$g(a)$$$ counts the number of palindromic subsequences in $$$a$$$ that have the maximum length.Given an integer $$$n$$$, your task is to find any sequence $$$a$$$ of $$$n$$$ integers that satisfies the following conditions:  $$$1 \\le a_i \\le n$$$ for all $$$1 \\le i \\le n$$$.  $$$g(a) > n$$$ It can be proven that such a sequence always exists under the given constraints.$$$^{\\text{∗}}$$$A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. $$$^{\\text{†}}$$$A palindrome is a sequence that reads the same from left to right as from right to left. For example, $$$[1, 2, 1, 3, 1, 2, 1]$$$, $$$[5, 5, 5, 5]$$$, and $$$[4, 3, 3, 4]$$$ are palindromes, while $$$[1, 2]$$$ and $$$[2, 3, 3, 3, 3]$$$ are not."
  },
  {
    "title": "Find the Permutation",
    "url": "https://codeforces.com/problemset/problem/2056/B",
    "description": "  You are given an undirected graph with $$$n$$$ vertices, labeled from $$$1$$$ to $$$n$$$. This graph encodes a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of size $$$n$$$. The graph is constructed as follows:  For every pair of integers $$$1 \\le i < j \\le n$$$, an undirected edge is added between vertex $$$p_i$$$ and vertex $$$p_j$$$ if and only if $$$p_i < p_j$$$. Note that the edge is not added between vertices $$$i$$$ and $$$j$$$, but between the vertices of their respective elements. Refer to the notes section for better understanding. Your task is to reconstruct and output the permutation $$$p$$$. It can be proven that permutation $$$p$$$ can be uniquely determined.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Shape Perimeter",
    "url": "https://codeforces.com/problemset/problem/2056/A",
    "description": "There is an $$$m$$$ by $$$m$$$ square stamp on an infinite piece of paper. Initially, the bottom-left corner of the square stamp is aligned with the bottom-left corner of the paper. You are given two integer sequences $$$x$$$ and $$$y$$$, each of length $$$n$$$. For each step $$$i$$$ from $$$1$$$ to $$$n$$$, the following happens:  Move the stamp $$$x_i$$$ units to the right and $$$y_i$$$ units upwards.  Press the stamp onto the paper, leaving an $$$m$$$ by $$$m$$$ colored square at its current position. Note that the elements of sequences $$$x$$$ and $$$y$$$ have a special constraint: $$$1\\le x_i, y_i\\le m - 1$$$.Note that you do not press the stamp at the bottom-left corner of the paper. Refer to the notes section for better understanding.It can be proven that after all the operations, the colored shape on the paper formed by the stamp is a single connected region. Find the perimeter of this colored shape."
  },
  {
    "title": "Cosmic Divide",
    "url": "https://codeforces.com/problemset/problem/2055/F",
    "description": " With the artifact in hand, the fabric of reality gives way to its true master — Florida Man.A polyomino is a connected$$$^{\\text{∗}}$$$ figure constructed by joining one or more equal $$$1 \\times 1$$$ unit squares edge to edge. A polyomino is convex if, for any two squares in the polyomino that share the same row or the same column, all squares between them are also part of the polyomino. Below are four polyominoes, only the first and second of which are convex.  You are given a convex polyomino with $$$n$$$ rows and an even area. For each row $$$i$$$ from $$$1$$$ to $$$n$$$, the unit squares from column $$$l_i$$$ to column $$$r_i$$$ are part of the polyomino. In other words, there are $$$r_i - l_i + 1$$$ unit squares that are part of the polyomino in the $$$i$$$-th row: $$$(i, l_i), (i, l_i + 1), \\ldots, (i, r_i-1), (i, r_i)$$$.Two polyominoes are congruent if and only if you can make them fit exactly on top of each other by translating the polyominoes. Note that you are not allowed to rotate or reflect the polyominoes. Determine whether it is possible to partition the given convex polyomino into two disjoint connected polyominoes that are congruent to each other. The following examples illustrate a valid partition of each of the two convex polyominoes shown above:  The partitioned polyominoes do not need to be convex, and each unit square should belong to exactly one of the two partitioned polyominoes.$$$^{\\text{∗}}$$$A polyomino is connected if and only if for every two unit squares $$$u \\neq v$$$ that are part of the polyomino, there exists a sequence of distinct squares $$$s_1, s_2, \\ldots, s_k$$$, such that $$$s_1 = u$$$, $$$s_k = v$$$, $$$s_i$$$ are all part of the polyomino, and $$$s_i, s_{i+1}$$$ share an edge for each $$$1 \\le i \\le k - 1$$$."
  },
  {
    "title": "Haystacks",
    "url": "https://codeforces.com/problemset/problem/2055/E",
    "description": " On the next new moon, the universe will reset, beginning with Florida. It's up to Florida Man to stop it, but he first needs to find an important item.There are $$$n$$$ haystacks labelled from $$$1$$$ to $$$n$$$, where haystack $$$i$$$ contains $$$a_i$$$ haybales. One of the haystacks has a needle hidden beneath it, but you do not know which one. Your task is to move the haybales so that each haystack is emptied at least once, allowing you to check if the needle is hidden under that particular haystack.However, the process is not that simple. Once a haystack $$$i$$$ is emptied for the first time, it will be assigned a height limit and can no longer contain more than $$$b_i$$$ haybales. More formally, a move is described as follows:  Choose two haystacks $$$i$$$ and $$$j$$$. If haystack $$$i$$$ has not been emptied before, or haystack $$$i$$$ contains strictly less than $$$b_i$$$ haybales, you may move exactly $$$1$$$ haybale from haystack $$$j$$$ to haystack $$$i$$$. Note: Before a haystack is emptied, it has no height limit, and you can move as many haybales as you want onto that haystack.Compute the minimum number of moves required to ensure that each haystack is emptied at least once, or report that it is impossible."
  },
  {
    "title": "Scarecrow",
    "url": "https://codeforces.com/problemset/problem/2055/D",
    "description": " At his orange orchard, Florida Man receives yet another spam letter, delivered by a crow. Naturally, he's sending it back in the most inconvenient manner possible.A crow is sitting at position $$$0$$$ of the number line. There are $$$n$$$ scarecrows positioned at integer coordinates $$$a_1, a_2, \\ldots, a_n$$$ along the number line. These scarecrows have been enchanted, allowing them to move left and right at a speed of $$$1$$$ unit per second.The crow is afraid of scarecrows and wants to stay at least a distance of $$$k$$$ ahead of the nearest scarecrow positioned at or before it. To do so, the crow uses its teleportation ability as follows:  Let $$$x$$$ be the current position of the crow, and let $$$y$$$ be the largest position of a scarecrow such that $$$y \\le x$$$. If $$$x - y < k$$$, meaning the scarecrow is too close, the crow will instantly teleport to position $$$y + k$$$. This teleportation happens instantly and continuously. The crow will keep checking for scarecrows positioned at or to the left of him and teleport whenever one gets too close (which could happen at non-integral times). Note that besides this teleportation ability, the crow will not move on its own.Your task is to determine the minimum time required to make the crow teleport to a position greater than or equal to $$$\\ell$$$, assuming the scarecrows move optimally to allow the crow to reach its goal. For convenience, you are asked to output twice the minimum time needed for the crow to reach the target position $$$\\ell$$$. It can be proven that this value will always be an integer.Note that the scarecrows can start, stop, or change direction at any time (possibly at non-integral times)."
  },
  {
    "title": "The Trail",
    "url": "https://codeforces.com/problemset/problem/2055/C",
    "description": " There are no mountains in Florida, and Florida Man cannot comprehend their existence. As such, he really needs your help with this one.In the wilderness lies a region of mountainous terrain represented as a rectangular grid with $$$n$$$ rows and $$$m$$$ columns. Each cell in the grid is identified by its position $$$(i, j)$$$, where $$$i$$$ is the row index and $$$j$$$ is the column index. The altitude of cell $$$(i, j)$$$ is denoted by $$$a_{i,j}$$$.However, this region has been tampered with. A path consisting of $$$n + m - 1$$$ cells, starting from the top-left corner $$$(1, 1)$$$ and ending at the bottom-right corner $$$(n, m)$$$, has been cleared. For every cell $$$(i, j)$$$ along this path, the altitude $$$a_{i,j}$$$ has been set to $$$0$$$. The path moves strictly via downward ($$$\\mathtt{D}$$$) or rightward ($$$\\mathtt{R}$$$) steps.To restore the terrain to its original state, it is known that the region possessed a magical property before it was tampered with: all rows and all columns shared the same sum of altitudes. More formally, there exists an integer $$$x$$$ such that $$$\\sum_{j=1}^m a_{i, j} = x$$$ for all $$$1\\le i\\le n$$$, and $$$\\sum_{i=1}^n a_{i, j} = x$$$ for all $$$1\\le j\\le m$$$.Your task is to assign new altitudes to the cells on the path such that the above magical property is restored. It can be proven that a solution always exists. If there are multiple solutions that satisfy the property, any one of them may be provided."
  },
  {
    "title": "Crafting",
    "url": "https://codeforces.com/problemset/problem/2055/B",
    "description": " As you'd expect, Florida is home to many bizarre magical forces, and Florida Man seeks to tame them.There are $$$n$$$ different types of magical materials, numbered from $$$1$$$ to $$$n$$$. Initially, you have $$$a_i$$$ units of material $$$i$$$ for each $$$i$$$ from $$$1$$$ to $$$n$$$. You are allowed to perform the following operation:  Select a material $$$i$$$ (where $$$1\\le i\\le n$$$). Then, spend $$$1$$$ unit of every other material $$$j$$$ (in other words, $$$j\\neq i$$$) to gain $$$1$$$ unit of material $$$i$$$. More formally, after selecting material $$$i$$$, update array $$$a$$$ as follows: $$$a_i := a_i + 1$$$, and $$$a_j := a_j - 1$$$ for all $$$j$$$ where $$$j\\neq i$$$ and $$$1\\le j\\le n$$$. Note that all $$$a_j$$$ must remain non-negative, i.e. you cannot spend resources you do not have. You are trying to craft an artifact using these materials. To successfully craft the artifact, you must have at least $$$b_i$$$ units of material $$$i$$$ for each $$$i$$$ from $$$1$$$ to $$$n$$$. Determine if it is possible to craft the artifact by performing the operation any number of times (including zero)."
  },
  {
    "title": "Two Frogs",
    "url": "https://codeforces.com/problemset/problem/2055/A",
    "description": "Roaming through the alligator-infested Everglades, Florida Man encounters a most peculiar showdown.There are $$$n$$$ lilypads arranged in a row, numbered from $$$1$$$ to $$$n$$$ from left to right. Alice and Bob are frogs initially positioned on distinct lilypads, $$$a$$$ and $$$b$$$, respectively. They take turns jumping, starting with Alice. During a frog's turn, it can jump either one space to the left or one space to the right, as long as the destination lilypad exists. For example, on Alice's first turn, she can jump to either lilypad $$$a-1$$$ or $$$a+1$$$, provided these lilypads are within bounds. It is important to note that each frog must jump during its turn and cannot remain on the same lilypad.However, there are some restrictions:  The two frogs cannot occupy the same lilypad. This means that Alice cannot jump to a lilypad that Bob is currently occupying, and vice versa.  If a frog cannot make a valid jump on its turn, it loses the game. As a result, the other frog wins. Determine whether Alice can guarantee a win, assuming that both players play optimally. It can be proven that the game will end after a finite number of moves if both players play optimally."
  },
  {
    "title": "Affectionate Arrays (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2053/I2",
    "description": "  Note that this statement is different to the version used in the official round. The statement has been corrected to a solvable version. In the official round, all submissions to this problem have been removed.This is the hard version of the problem. The difference between the versions is that in this version, you need to compute the sum of value of different arrays. You can hack only if you solved all versions of this problem. Iris treasures an integer array $$$a_1, a_2, \\ldots, a_n$$$. She knows this array has an interesting property: the maximum absolute value of all elements is less than or equal to the sum of all elements, that is, $$$\\max(\\lvert a_i\\rvert) \\leq \\sum a_i$$$.Iris defines the boredom of an array as its maximum subarray$$$^{\\text{∗}}$$$ sum. Iris's birthday is coming, and Victor is going to send her another array $$$b_1, b_2, \\ldots, b_m$$$ as a gift. For some seemingly obvious reasons, he decides the array $$$b_1, b_2, \\ldots, b_m$$$ should have the following properties.  $$$a_1, a_2, \\ldots, a_n$$$ should be a subsequence$$$^{\\text{†}}$$$ of $$$b_1, b_2, \\ldots, b_m$$$.  The two arrays have the same sum. That is, $$$\\sum\\limits_{i=1}^n a_i = \\sum\\limits_{i=1}^m b_i$$$.  The boredom of $$$b_1, b_2, \\ldots, b_m$$$ is the smallest possible.  Among the arrays with the smallest boredom, the length of the array $$$b$$$ (i.e., $$$m$$$) is the smallest possible. And in this case, Iris will understand his regard as soon as possible! For a possible array $$$b_1, b_2, \\ldots, b_m$$$ satisfying all the conditions above, Victor defines the value of the array as the number of occurrences of array $$$a$$$ as subsequences in array $$$b$$$. That is, he counts the number of array $$$c_1, c_2, \\ldots, c_{n}$$$ that $$$1\\le c_1< c_2< \\ldots< c_n\\le m$$$ and for all integer $$$i$$$ that $$$1\\le i\\le n$$$, $$$b_{c_{i}}=a_i$$$ is satisfied, and let this be the value of array $$$b$$$.Even constrained as above, there are still too many possible gifts. So Victor asks you to calculate the sum of value of all possible arrays $$$b_1, b_2, \\ldots, b_m$$$. Since the answer may be large, Victor only needs the number modulo $$$998\\,244\\,353$$$. He promises you: if you help him successfully, he will share a bit of Iris's birthday cake with you.$$$^{\\text{∗}}$$$An array $$$c$$$ is a subarray of an array $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{†}}$$$A sequence $$$c$$$ is a subsequence of a sequence $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Affectionate Arrays (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2053/I1",
    "description": "  You are the beginning of the letter, the development of a poem, and the end of a fairy tale.— ilem, Pinky PromiseThis is the easy version of the problem. The difference between the versions is that in this version, you need to compute the minimum length of the arrays. You can hack only if you solved all versions of this problem. Iris treasures an integer array $$$a_1, a_2, \\ldots, a_n$$$. She knows this array has an interesting property: the maximum absolute value of all elements is less than or equal to the sum of all elements, that is, $$$\\max(\\lvert a_i\\rvert) \\leq \\sum a_i$$$.Iris defines the boredom of an array as its maximum subarray$$$^{\\text{∗}}$$$ sum. Iris's birthday is coming, and Victor is going to send her another array $$$b_1, b_2, \\ldots, b_m$$$ as a gift. For some seemingly obvious reasons, he decides the array $$$b_1, b_2, \\ldots, b_m$$$ should have the following properties.  $$$a_1, a_2, \\ldots, a_n$$$ should be a subsequence$$$^{\\text{†}}$$$ of $$$b_1, b_2, \\ldots, b_m$$$.  The two arrays have the same sum. That is, $$$\\sum\\limits_{i=1}^n a_i = \\sum\\limits_{i=1}^m b_i$$$.  The boredom of $$$b_1, b_2, \\ldots, b_m$$$ is the smallest possible.  Among the arrays with the smallest boredom, the length of the array $$$b$$$ (i.e., $$$m$$$) is the smallest possible. And in this case, Iris will understand his regard as soon as possible! Even constrained as above, there are still too many possible gifts. So Victor asks you to compute the value of $$$\\boldsymbol{m}$$$ of any array $$$b_1, b_2, \\ldots, b_m$$$ satisfying all the conditions above. He promises you: if you help him successfully, he will share a bit of Iris's birthday cake with you.Note: since the input is large, you may need to optimize it for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function:int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(nullptr); std::cout.tie(nullptr);}$$$^{\\text{∗}}$$$An array $$$c$$$ is a subarray of an array $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{†}}$$$A sequence $$$c$$$ is a subsequence of a sequence $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. "
  },
  {
    "title": "Delicate Anti-monotonous Operations",
    "url": "https://codeforces.com/problemset/problem/2053/H",
    "description": "I shall be looking for you who would be out of Existence.— HyuN, DisorderThere are always many repetitive tasks in life. Iris always dislikes them, so she refuses to repeat them. However, time cannot be turned back; we only have to move forward.Formally, Iris has an integer sequence $$$a_1, a_2, \\ldots, a_n$$$, where each number in the sequence is between $$$1$$$ and $$$w$$$, inclusive. It is guaranteed that $$$w \\geq 2$$$.Iris defines an operation as selecting two numbers $$$a_i, a_{i+1}$$$ satisfying $$$a_i = a_{i+1}$$$, and then changing them to two arbitrary integers within the range $$$[1, w]$$$. Iris does not like equality, so she must guarantee that $$$a_i \\neq a_{i+1}$$$ after the operation. Two identical pairs $$$a_i, a_{i+1}$$$ can be selected multiple times.Iris wants to know the maximum possible sum of all elements of $$$a$$$ after several (possible, zero) operations, as well as the minimum number of operations required to achieve this maximum value."
  },
  {
    "title": "Naive String Splits",
    "url": "https://codeforces.com/problemset/problem/2053/G",
    "description": "And I will: love the world that you've adored; wish the smile that you've longed for. Your hand in mine as we explore, please take me to tomorrow's shore. — Faye Wong, As WishedCocoly has a string $$$t$$$ of length $$$m$$$, consisting of lowercase English letters, and he would like to split it into parts. He calls a pair of strings $$$(x, y)$$$ beautiful if and only if there exists a sequence of strings $$$a_1, a_2, \\ldots, a_k$$$, such that:  $$$t = a_1 + a_2 + \\ldots + a_k$$$, where $$$+$$$ denotes string concatenation.  For each $$$1 \\leq i \\leq k$$$, at least one of the following holds: $$$a_i = x$$$, or $$$a_i = y$$$. Cocoly has another string $$$s$$$ of length $$$n$$$, consisting of lowercase English letters. Now, for each $$$1 \\leq i < n$$$, Cocoly wants you to determine whether the pair of strings $$$(s_1s_2 \\ldots s_i, \\, s_{i+1}s_{i+2} \\ldots s_n)$$$ is beautiful.Note: since the input and output are large, you may need to optimize them for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function:int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(nullptr); std::cout.tie(nullptr);}"
  },
  {
    "title": "Earnest Matrix Complement",
    "url": "https://codeforces.com/problemset/problem/2053/F",
    "description": "3, 2, 1, ... We are the — RiOI Team!— Felix & All, Special Thanks 3  Peter: Good news: My problem T311013 is approved!  $$$\\delta$$$: I'm glad my computer had gone out of battery so that I wouldn't have participated in wyrqwq's round and gained a negative delta.  Felix: [thumbs_up] The problem statement concerning a removed song!  Aquawave: Do I mourn my Chemistry?  E.Space: ahh?  Trine: Bread.  Iris: So why am I always testing problems? Time will pass, and we might meet again. Looking back at the past, everybody has lived the life they wanted.Aquawave has a matrix $$$A$$$ of size $$$n\\times m$$$, whose elements can only be integers in the range $$$[1, k]$$$, inclusive. In the matrix, some cells are already filled with an integer, while the rest are currently not filled, denoted by $$$-1$$$.You are going to fill in all the unfilled places in $$$A$$$. After that, let $$$c_{u,i}$$$ be the number of occurrences of element $$$u$$$ in the $$$i$$$-th row. Aquawave defines the beauty of the matrix as$$$$$$\\sum_{u=1}^k \\sum_{i=1}^{n-1} c_{u,i} \\cdot c_{u,i+1}.$$$$$$You have to find the maximum possible beauty of $$$A$$$ after filling in the blanks optimally."
  },
  {
    "title": "Resourceful Caterpillar Sequence",
    "url": "https://codeforces.com/problemset/problem/2053/E",
    "description": "Endless Repeating 7 Days— r-906, PanopticonThere is a tree consisting of $$$n$$$ vertices. Let a caterpillar be denoted by an integer pair $$$(p, q)$$$ ($$$1 \\leq p, q \\leq n$$$, $$$p \\neq q$$$): its head is at vertex $$$p$$$, its tail is at vertex $$$q$$$, and it dominates all the vertices on the simple path from $$$p$$$ to $$$q$$$ (including $$$p$$$ and $$$q$$$). The caterpillar sequence of $$$(p, q)$$$ is defined as the sequence consisting only of the vertices on the simple path, sorted in the ascending order of the distance to $$$p$$$.Nora and Aron are taking turns moving the caterpillar, with Nora going first. Both players will be using his or her own optimal strategy:  They will play to make himself or herself win;  However, if it is impossible, they will play to prevent the other person from winning (thus, the game will end in a tie). In Nora's turn, she must choose a vertex $$$u$$$ adjacent to vertex $$$p$$$, which is not dominated by the caterpillar, and move all the vertices in it by one edge towards vertex $$$u$$$$$$^{\\text{∗}}$$$. In Aron's turn, he must choose a vertex $$$v$$$ adjacent to vertex $$$q$$$, which is not dominated by the caterpillar, and move all the vertices in it by one edge towards vertex $$$v$$$. Note that the moves allowed to the two players are different.Whenever $$$p$$$ is a leaf$$$^{\\text{†}}$$$, Nora wins$$$^{\\text{‡}}$$$. Whenever $$$q$$$ is a leaf, Aron wins. If either initially both $$$p$$$ and $$$q$$$ are leaves, or after $$$10^{100}$$$ turns the game has not ended, the result is a tie.Please count the number of integer pairs $$$(p, q)$$$ with $$$1 \\leq p, q \\leq n$$$ and $$$p \\neq q$$$ such that, if the caterpillar is initially $$$(p, q)$$$, Aron wins the game.$$$^{\\text{∗}}$$$In other words: Let the current caterpillar sequence be $$$c_1, c_2, \\ldots, c_k$$$, then after the move, the new caterpillar sequence becomes $$$d(u, c_1), d(u, c_2), \\ldots, d(u, c_k)$$$. Here, $$$d(x, y)$$$ is the next vertex on the simple path from $$$y$$$ to $$$x$$$.$$$^{\\text{†}}$$$In a tree, a vertex is called a leaf if and only if its degree is $$$1$$$.$$$^{\\text{‡}}$$$Therefore, Nora never fails to choose a vertex $$$u$$$ when the game has not ended. The same goes for Aron."
  },
  {
    "title": "Refined Product Optimality",
    "url": "https://codeforces.com/problemset/problem/2053/D",
    "description": "As a tester, when my solution has a different output from the example during testing, I suspect the author first.— Chris, a commentAlthough Iris occasionally sets a problem where the solution is possibly wrong, she still insists on creating problems with her imagination; after all, everyone has always been on the road with their stubbornness... And like ever before, Iris has set a problem to which she gave a wrong solution, but Chris is always supposed to save it! You are going to play the role of Chris now:  Chris is given two arrays $$$a$$$ and $$$b$$$, both consisting of $$$n$$$ integers.  Iris is interested in the largest possible value of $$$P = \\prod\\limits_{i=1}^n \\min(a_i, b_i)$$$ after an arbitrary rearrangement of $$$b$$$. Note that she only wants to know the maximum value of $$$P$$$, and no actual rearrangement is performed on $$$b$$$.  There will be $$$q$$$ modifications. Each modification can be denoted by two integers $$$o$$$ and $$$x$$$ ($$$o$$$ is either $$$1$$$ or $$$2$$$, $$$1 \\leq x \\leq n$$$). If $$$o = 1$$$, then Iris will increase $$$a_x$$$ by $$$1$$$; otherwise, she will increase $$$b_x$$$ by $$$1$$$.  Iris asks Chris the maximum value of $$$P$$$ for $$$q + 1$$$ times: once before any modification, then after every modification.  Since $$$P$$$ might be huge, Chris only needs to calculate it modulo $$$998\\,244\\,353$$$. Chris soon worked out this problem, but he was so tired that he fell asleep. Besides saying thanks to Chris, now it is your turn to write a program to calculate the answers for given input data.Note: since the input and output are large, you may need to optimize them for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function:int main() {    std::ios::sync_with_stdio(false);    std::cin.tie(nullptr); std::cout.tie(nullptr);}"
  },
  {
    "title": "Bewitching Stargazer",
    "url": "https://codeforces.com/problemset/problem/2053/C",
    "description": "I'm praying for owning a transparent heart; as well as eyes with tears more than enough...— Escape Plan, Brightest Star in the DarkIris looked at the stars and a beautiful problem emerged in her mind. She is inviting you to solve it so that a meteor shower is believed to form.There are $$$n$$$ stars in the sky, arranged in a row. Iris has a telescope, which she uses to look at the stars.Initially, Iris observes stars in the segment $$$[1, n]$$$, and she has a lucky value of $$$0$$$. Iris wants to look for the star in the middle position for each segment $$$[l, r]$$$ that she observes. So the following recursive procedure is used:  First, she will calculate $$$m = \\left\\lfloor \\frac{l+r}{2} \\right\\rfloor$$$.  If the length of the segment (i.e. $$$r - l + 1$$$) is even, Iris will divide it into two equally long segments $$$[l, m]$$$ and $$$[m+1, r]$$$ for further observation.  Otherwise, Iris will aim the telescope at star $$$m$$$, and her lucky value will increase by $$$m$$$; subsequently, if $$$l \\neq r$$$, Iris will continue to observe two segments $$$[l, m-1]$$$ and $$$[m+1, r]$$$. Iris is a bit lazy. She defines her laziness by an integer $$$k$$$: as the observation progresses, she will not continue to observe any segment $$$[l, r]$$$ with a length strictly less than $$$k$$$. In this case, please predict her final lucky value."
  },
  {
    "title": "Outstanding Impressionist",
    "url": "https://codeforces.com/problemset/problem/2053/B",
    "description": "If it was so, then let's make it a deal...— MayDay, GentlenessEven after copying the paintings from famous artists for ten years, unfortunately, Eric is still unable to become a skillful impressionist painter. He wants to forget something, but the white bear phenomenon just keeps hanging over him.Eric still remembers $$$n$$$ pieces of impressions in the form of an integer array. He records them as $$$w_1, w_2, \\ldots, w_n$$$. However, he has a poor memory of the impressions. For each $$$1 \\leq i \\leq n$$$, he can only remember that $$$l_i \\leq w_i \\leq r_i$$$.Eric believes that impression $$$i$$$ is unique if and only if there exists a possible array $$$w_1, w_2, \\ldots, w_n$$$ such that $$$w_i \\neq w_j$$$ holds for all $$$1 \\leq j \\leq n$$$ with $$$j \\neq i$$$.Please help Eric determine whether impression $$$i$$$ is unique for every $$$1 \\leq i \\leq n$$$, independently for each $$$i$$$. Perhaps your judgment can help rewrite the final story."
  },
  {
    "title": "Tender Carpenter",
    "url": "https://codeforces.com/problemset/problem/2053/A",
    "description": "I would use a firework to announce, a wave to bid farewell, and a bow to say thanks: bygones are bygones; not only on the following path will I be walking leisurely and joyfully, but also the footsteps won't halt as time never leaves out flowing; for in the next year, we will meet again.— Cocoly1990, Goodbye 2022In his dream, Cocoly would go on a long holiday with no worries around him. So he would try out for many new things, such as... being a carpenter. To learn it well, Cocoly decides to become an apprentice of Master, but in front of him lies a hard task waiting for him to solve.Cocoly is given an array $$$a_1, a_2,\\ldots, a_n$$$. Master calls a set of integers $$$S$$$ stable if and only if, for any possible $$$u$$$, $$$v$$$, and $$$w$$$ from the set $$$S$$$ (note that $$$u$$$, $$$v$$$, and $$$w$$$ do not necessarily have to be pairwise distinct), sticks of length $$$u$$$, $$$v$$$, and $$$w$$$ can form a non-degenerate triangle$$$^{\\text{∗}}$$$.Cocoly is asked to partition the array $$$a$$$ into several (possibly, $$$1$$$ or $$$n$$$) non-empty continuous subsegments$$$^{\\text{†}}$$$, such that: for each of the subsegments, the set containing all the elements in it is stable.Master wants Cocoly to partition $$$a$$$ in at least two different$$$^{\\text{‡}}$$$ ways. You have to help him determine whether it is possible.$$$^{\\text{∗}}$$$A triangle with side lengths $$$x$$$, $$$y$$$, and $$$z$$$ is called non-degenerate if and only if:   $$$x + y > z$$$,  $$$y + z > x$$$, and  $$$z + x > y$$$. $$$^{\\text{†}}$$$A sequence $$$b$$$ is a subsegment of a sequence $$$c$$$ if $$$b$$$ can be obtained from $$$c$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{‡}}$$$Two partitions are considered different if and only if at least one of the following holds:   the numbers of continuous subsegments split in two partitions are different;  there is an integer $$$k$$$ such that the lengths of the $$$k$$$-th subsegment in two partitions are different. "
  },
  {
    "title": "Judicious Watching",
    "url": "https://codeforces.com/problemset/problem/2052/J",
    "description": "Jill loves having good grades in university, so she never misses deadlines for her homework assignments. But even more, she loves watching the series and discussing it with her best friend Johnny. And unfortunately, today she needs to choose between these two activities!Jill needs to complete $$$n$$$ homework tasks. The $$$i$$$-th task would require $$$a_i$$$ minutes to complete and needs to be submitted to the teacher at most $$$d_i$$$ minutes from now. Also, there are $$$m$$$ new episodes of the series that Johnny and Jill want to discuss. The $$$j$$$-th episode lasts $$$l_j$$$ minutes. Jill can complete tasks in any order, but she needs to watch the episodes in the order they come. Neither completing a homework task nor watching an episode can be interrupted after starting. Johnny and Jill need to agree on a time $$$t_k$$$ when they would have a call to discuss the series. They are not sure yet which time to choose. For each possible time, compute the maximum number of episodes Jill could watch before that time while still being able to complete all $$$n$$$ homework tasks in time.Note that for the purpose of this problem we assume that discussing the series with Johnny at time $$$t_k$$$ does not consume significant time from Jill and can happen even if she is in the middle of completing any of her homework tasks."
  },
  {
    "title": "Geometric Balance",
    "url": "https://codeforces.com/problemset/problem/2052/G",
    "description": "Peter's little brother Ivan likes to play with a turtle. The turtle is a special toy that lives on the plane and can execute three commands:   Rotate $$$a$$$ degrees counterclockwise.  Draw $$$d$$$ units in the direction it is facing while dispensing ink. No segment of the plane will be covered by ink more than once.  Move $$$d$$$ units in the direction it is facing without drawing. Ivan just learned about the compass, so he will only rotate his turtle so it faces one of eight cardinal or ordinal directions (angles $$$a$$$ in rotate commands are always divisible by 45). Also, he will perform at least one draw command.Peter has noted all the commands Ivan has given to his turtle. He thinks that the image drawn by the turtle is adorable. Now Peter wonders about the smallest positive angle $$$b$$$ such that he can perform the following operations: move the turtle to a point of his choosing, rotate it by $$$b$$$ degrees, and execute all the commands in the same order. These operations should produce the same image as the original one. Can you help Peter?Note, two images are considered the same if the sets of points covered by ink on the plane are the same in both of the images."
  },
  {
    "title": "Fix Flooded Floor",
    "url": "https://codeforces.com/problemset/problem/2052/F",
    "description": "Archimedes conducted his famous experiments on buoyancy. But not everyone knows that while he was taking a bath, he was too focused and didn't notice the moment when the water overflowed over the edge of the bath and flooded the floor near the wall. His expensive parquet was irreversibly damaged!Archimedes noticed that not all was lost, and there were still several undamaged parquet pieces. The parquet near the wall had the shape of a long narrow stripe of $$$2\\times n$$$ cells. Archimedes had an unlimited supply of $$$1\\times 2$$$ parquet pieces that could be placed parallel or perpendicular to the wall. Archimedes didn't want to cut the parquet pieces. As a great scientist, he figured out that there was exactly one way to restore the parquet by filling the damaged area of the parquet with the non-overlapping $$$1\\times 2$$$ cell shaped pieces.Help historians to check Archimedes' calculations. For the given configuration of the $$$2\\times n$$$ parquet floor, determine whether there is exactly one way to fill the damaged parquet cells with the $$$1\\times 2$$$ cell parquet pieces. If Archimedes was wrong, find out whether there are multiple ways to restore the parquet, or there are no ways at all."
  },
  {
    "title": "Expression Correction",
    "url": "https://codeforces.com/problemset/problem/2052/E",
    "description": "Eve is studying mathematics in school. They've already learned how to perform addition and subtraction of decimal numbers and are practicing it by solving fun puzzles. The specific type of the puzzle they are solving is described below. They are given an equality with addition and subtraction which may or may not be a correct one. They have to verify the equality, and if it is not a correct one, then they have to tell if it is possible to turn it into a correct one by moving one digit to a different place in the equality.Let us formally define the equality in this puzzle:   Number is a string of at least one and at most 10 decimal digits ('0' to '9') that has no extra leading zeroes (the only number that is allowed to start with the zero digit is \"0\").  Expression is a string composed of one or more numbers, as defined above, that are separated with addition ('+') or subtraction ('-') operators.  Equality is a string composed of an expression, as defined above, followed by an equals sign ('='), followed by another expression.  Correct equality is an equality where both expressions on the left and right hand sides of the equals sign evaluate to the same decimal number according to the standard arithmetic. Note that while all the numbers in the expression are positive, the evaluated number can be negative. Also, the evaluated number can be longer than 10 digits.  Moving a digit in an equality means removing a digit from any position in the string and inserting it into another position so that the resulting string is again an equality. The puzzle is pretty straightforward once you know how to add and subtract decimal numbers, but it is tenuous. It is easy to get distracted and make a mistake while performing computation. Your task is to write a program that solves the expression correction puzzle to help Eve."
  },
  {
    "title": "DAG Serialization",
    "url": "https://codeforces.com/problemset/problem/2052/D",
    "description": "Consider a simple single-bit boolean register that supports two operations:  set — sets the register to true if it was false, and returns true; otherwise, it returns false;  unset — sets the register to false if it was true, and returns true; otherwise, it returns false. The initial state of the register is false. Suppose there were $$$n$$$ operations $$$op_i$$$ (for $$$1 \\le i \\le n$$$) where at most two operations returned true. Also, we are given the partial order of operations as a directed acyclic graph (DAG): an edge $$$i \\rightarrow j$$$ means that $$$op_i$$$ happened before $$$op_j$$$. You are asked whether it is possible to put these operations in some linear sequential order that satisfies the given partial order and such that if operations are applied to the register in that order, their results are the same as given."
  },
  {
    "title": "Adrenaline Rush",
    "url": "https://codeforces.com/problemset/problem/2052/A",
    "description": "Alice's friend is a big fan of the Adrenaline Rush racing competition and always strives to attend every race. However, this time, Alice is the one watching the race. To ensure her friend does not miss any important details, Alice decides to take notes on everything that happens on the track.The first thing Alice notices before the race begins is the numbering of the cars. All the cars line up in front of the starting line in a specific order. The car closest to the line is numbered $$$1$$$, the second car is numbered $$$2$$$, and so on, up to the last car, which is numbered $$$n$$$. How convenient! — Alice thought.The race begins with the countdown: \"Three! Two! One! Go!\". Alice observes that the cars start in their original order. However, as the race progresses, their order changes. She records whenever one car overtakes another, essentially swapping places with it on the track.During the race, Alice notices something curious: no car overtakes another more than once. In other words, for any two cars $$$x$$$ and $$$y$$$, there are at most two overtakes between them during the race: \"$$$x$$$ overtakes $$$y$$$\" and/or \"$$$y$$$ overtakes $$$x$$$\".At the end of the race, Alice carefully writes down the final order of the cars $$$c_1, c_2, \\ldots, c_n$$$, where $$$c_1$$$ represents the winner of the race.Alice's friend, however, is only interested in the final ranking and discards all of Alice's notes except for the final ordering. As Alice is quite curious, she wonders: What is the longest possible sequence of overtakes she could have observed during the race? Your task is to help Alice answer this question."
  },
  {
    "title": "Snakes",
    "url": "https://codeforces.com/problemset/problem/2051/G",
    "description": "Suppose you play a game where the game field looks like a strip of $$$1 \\times 10^9$$$ square cells, numbered from $$$1$$$ to $$$10^9$$$.You have $$$n$$$ snakes (numbered from $$$1$$$ to $$$n$$$) you need to place into some cells. Initially, each snake occupies exactly one cell, and you can't place more than one snake into one cell. After that, the game starts.The game lasts for $$$q$$$ seconds. There are two types of events that may happen each second:   snake $$$s_i$$$ enlarges: if snake $$$s_i$$$ occupied cells $$$[l, r]$$$, it enlarges to a segment $$$[l, r + 1]$$$;  snake $$$s_i$$$ shrinks: if snake $$$s_i$$$ occupied cells $$$[l, r]$$$, it shrinks to a segment $$$[l + 1, r]$$$. Each second, exactly one of the events happens.If at any moment of time, any snake runs into some obstacle (either another snake or the end of the strip), you lose. Otherwise, you win with the score equal to the maximum cell occupied by any snake so far.What is the minimum possible score you can achieve?"
  },
  {
    "title": "Joker",
    "url": "https://codeforces.com/problemset/problem/2051/F",
    "description": "Consider a deck of $$$n$$$ cards. The positions in the deck are numbered from $$$1$$$ to $$$n$$$ from top to bottom. A joker is located at position $$$m$$$.$$$q$$$ operations are applied sequentially to the deck. During the $$$i$$$-th operation, you need to take the card at position $$$a_i$$$ and move it either to the beginning or to the end of the deck. For example, if the deck is $$$[2, 1, 3, 5, 4]$$$, and $$$a_i=2$$$, then after the operation the deck will be either $$$[1, 2, 3, 5, 4]$$$ (the card from the second position moved to the beginning) or $$$[2, 3, 5, 4, 1]$$$ (the card from the second position moved to the end).Your task is to calculate the number of distinct positions where the joker can be after each operation."
  },
  {
    "title": "Best Price",
    "url": "https://codeforces.com/problemset/problem/2051/E",
    "description": "A batch of Christmas trees has arrived at the largest store in Berland. $$$n$$$ customers have already come to the store, wanting to buy them.Before the sales begin, the store needs to determine the price for one tree (the price is the same for all customers). To do this, the store has some information about each customer.For the $$$i$$$-th customer, two integers $$$a_i$$$ and $$$b_i$$$ are known, which define their behavior:   if the price of the product is at most $$$a_i$$$, the customer will buy a tree and leave a positive review;  otherwise, if the price of the product is at most $$$b_i$$$, the customer will buy a tree but leave a negative review;  otherwise, the customer will not buy a tree at all. Your task is to calculate the maximum possible earnings for the store, given that it can receive no more than $$$k$$$ negative reviews."
  },
  {
    "title": "Counting Pairs",
    "url": "https://codeforces.com/problemset/problem/2051/D",
    "description": "You are given a sequence $$$a$$$, consisting of $$$n$$$ integers, where the $$$i$$$-th element of the sequence is equal to $$$a_i$$$. You are also given two integers $$$x$$$ and $$$y$$$ ($$$x \\le y$$$).A pair of integers $$$(i, j)$$$ is considered interesting if the following conditions are met:  $$$1 \\le i < j \\le n$$$;  if you simultaneously remove the elements at positions $$$i$$$ and $$$j$$$ from the sequence $$$a$$$, the sum of the remaining elements is at least $$$x$$$ and at most $$$y$$$. Your task is to determine the number of interesting pairs of integers for the given sequence $$$a$$$."
  },
  {
    "title": "Preparing for the Exam",
    "url": "https://codeforces.com/problemset/problem/2051/C",
    "description": "Monocarp is preparing for his first exam at the university. There are $$$n$$$ different questions which can be asked during the exam, numbered from $$$1$$$ to $$$n$$$. There are $$$m$$$ different lists of questions; each list consists of exactly $$$n-1$$$ different questions. Each list $$$i$$$ is characterized by one integer $$$a_i$$$, which is the index of the only question which is not present in the $$$i$$$-th list. For example, if $$$n = 4$$$ and $$$a_i = 3$$$, the $$$i$$$-th list contains questions $$$[1, 2, 4]$$$.During the exam, Monocarp will receive one of these $$$m$$$ lists of questions. Then, the professor will make Monocarp answer all questions from the list. So, Monocarp will pass only if he knows all questions from the list.Monocarp knows the answers for $$$k$$$ questions $$$q_1, q_2, \\dots, q_k$$$. For each list, determine if Monocarp will pass the exam if he receives that list."
  },
  {
    "title": "Journey",
    "url": "https://codeforces.com/problemset/problem/2051/B",
    "description": "Monocarp decided to embark on a long hiking journey.He decided that on the first day he would walk $$$a$$$ kilometers, on the second day he would walk $$$b$$$ kilometers, on the third day he would walk $$$c$$$ kilometers, on the fourth day, just like on the first, he would walk $$$a$$$ kilometers, on the fifth day, just like on the second, he would walk $$$b$$$ kilometers, on the sixth day, just like on the third, he would walk $$$c$$$ kilometers, and so on.Monocarp will complete his journey on the day when he has walked at least $$$n$$$ kilometers in total. Your task is to determine the day on which Monocarp will complete his journey."
  },
  {
    "title": "Preparing for the Olympiad",
    "url": "https://codeforces.com/problemset/problem/2051/A",
    "description": "Monocarp and Stereocarp are preparing for the Olympiad. There are $$$n$$$ days left until the Olympiad. On the $$$i$$$-th day, if Monocarp plans to practice, he will solve $$$a_i$$$ problems. Similarly, if Stereocarp plans to practice on the same day, he will solve $$$b_i$$$ problems.Monocarp can train on any day he wants. However, Stereocarp watches Monocarp and follows a different schedule: if Monocarp trained on day $$$i$$$ and $$$i < n$$$, then Stereocarp will train on day $$$(i+1)$$$.Monocarp wants to organize his training process in a way that the difference between the number of problems he solves and the number of problems Stereocarp solves is as large as possible. Formally, Monocarp wants to maximize the value of $$$(m-s)$$$, where $$$m$$$ is the number of problems he solves, and $$$s$$$ is the number of problems Stereocarp solves. Help Monocarp determine the maximum possible difference in the number of solved problems between them."
  },
  {
    "title": "Tree Destruction",
    "url": "https://codeforces.com/problemset/problem/2050/G",
    "description": "Given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices. You can choose two vertices $$$a$$$ and $$$b$$$ once and remove all vertices on the path from $$$a$$$ to $$$b$$$, including the vertices themselves. If you choose $$$a=b$$$, only one vertex will be removed.Your task is to find the maximum number of connected components$$$^{\\text{†}}$$$ that can be formed after removing the path from the tree.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$A connected component is a set of vertices such that there is a path along the edges from any vertex to any other vertex in the set (and it is not possible to reach vertices not belonging to this set)"
  },
  {
    "title": "Maximum modulo equality",
    "url": "https://codeforces.com/problemset/problem/2050/F",
    "description": "You are given an array $$$a$$$ of length $$$n$$$ and $$$q$$$ queries $$$l$$$, $$$r$$$.For each query, find the maximum possible $$$m$$$, such that all elements $$$a_l$$$, $$$a_{l+1}$$$, ..., $$$a_r$$$ are equal modulo $$$m$$$. In other words, $$$a_l \\bmod m = a_{l+1} \\bmod m = \\dots = a_r \\bmod m$$$, where $$$a \\bmod b$$$ — is the remainder of division $$$a$$$ by $$$b$$$. In particular, when $$$m$$$ can be infinite, print $$$0$$$."
  },
  {
    "title": "Three Strings",
    "url": "https://codeforces.com/problemset/problem/2050/E",
    "description": "You are given three strings: $$$a$$$, $$$b$$$, and $$$c$$$, consisting of lowercase Latin letters. The string $$$c$$$ was obtained in the following way:  At each step, either string $$$a$$$ or string $$$b$$$ was randomly chosen, and the first character of the chosen string was removed from it and appended to the end of string $$$c$$$, until one of the strings ran out. After that, the remaining characters of the non-empty string were added to the end of $$$c$$$.  Then, a certain number of characters in string $$$c$$$ were randomly changed. For example, from the strings $$$a=\\color{red}{\\text{abra}}$$$ and $$$b=\\color{blue}{\\text{cada}}$$$, without character replacements, the strings $$$\\color{blue}{\\text{ca}}\\color{red}{\\text{ab}}\\color{blue}{\\text{d}}\\color{red}{\\text{ra}}\\color{blue}{\\text{a}}$$$, $$$\\color{red}{\\text{abra}}\\color{blue}{\\text{cada}}$$$, $$$\\color{red}{\\text{a}}\\color{blue}{\\text{cada}}\\color{red}{\\text{bra}}$$$ could be obtained.Find the minimum number of characters that could have been changed in string $$$c$$$."
  },
  {
    "title": "Digital string maximization",
    "url": "https://codeforces.com/problemset/problem/2050/D",
    "description": "You are given a string $$$s$$$, consisting of digits from $$$0$$$ to $$$9$$$. In one operation, you can pick any digit in this string, except for $$$0$$$ or the leftmost digit, decrease it by $$$1$$$, and then swap it with the digit left to the picked.For example, in one operation from the string $$$1023$$$, you can get $$$1103$$$ or $$$1022$$$.Find the lexicographically maximum string you can obtain after any number of operations."
  },
  {
    "title": "Uninteresting Number",
    "url": "https://codeforces.com/problemset/problem/2050/C",
    "description": "You are given a number $$$n$$$ with a length of no more than $$$10^5$$$.You can perform the following operation any number of times: choose one of its digits, square it, and replace the original digit with the result. The result must be a digit (that is, if you choose the digit $$$x$$$, then the value of $$$x^2$$$ must be less than $$$10$$$).Is it possible to obtain a number that is divisible by $$$9$$$ through these operations?"
  },
  {
    "title": "Transfusion",
    "url": "https://codeforces.com/problemset/problem/2050/B",
    "description": "You are given an array $$$a$$$ of length $$$n$$$. In one operation, you can pick an index $$$i$$$ from $$$2$$$ to $$$n-1$$$ inclusive, and do one of the following actions:  Decrease $$$a_{i-1}$$$ by $$$1$$$, then increase $$$a_{i+1}$$$ by $$$1$$$.  Decrease $$$a_{i+1}$$$ by $$$1$$$, then increase $$$a_{i-1}$$$ by $$$1$$$. After each operation, all the values must be non-negative. Can you make all the elements equal after any number of operations?"
  },
  {
    "title": "Line Breaks",
    "url": "https://codeforces.com/problemset/problem/2050/A",
    "description": "Kostya has a text $$$s$$$ consisting of $$$n$$$ words made up of Latin alphabet letters. He also has two strips on which he must write the text. The first strip can hold $$$m$$$ characters, while the second can hold as many as needed.Kostya must choose a number $$$x$$$ and write the first $$$x$$$ words from $$$s$$$ on the first strip, while all the remaining words are written on the second strip. To save space, the words are written without gaps, but each word must be entirely on one strip.Since space on the second strip is very valuable, Kostya asks you to choose the maximum possible number $$$x$$$ such that all words $$$s_1, s_2, \\dots, s_x$$$ fit on the first strip of length $$$m$$$."
  },
  {
    "title": "MEX OR Mania",
    "url": "https://codeforces.com/problemset/problem/2049/F",
    "description": "  An integer sequence $$$b_1, b_2, \\ldots, b_n$$$ is good if $$$\\operatorname{mex}(b_1, b_2, \\ldots, b_n) - (b_1 | b_2 | \\ldots | b_n) = 1$$$. Here, $$$\\operatorname{mex(c)}$$$ denotes the MEX$$$^{\\text{∗}}$$$ of the collection $$$c$$$, and $$$|$$$ is the bitwise OR operator.Shohag has an integer sequence $$$a_1, a_2, \\ldots, a_n$$$. He will perform the following $$$q$$$ updates on $$$a$$$:  $$$i$$$ $$$x$$$ — increase $$$a_i$$$ by $$$x$$$. After each update, help him find the length of the longest good subarray$$$^{\\text{†}}$$$ of $$$a$$$.$$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$y$$$ which does not occur in the collection $$$c$$$. $$$^{\\text{†}}$$$An array $$$d$$$ is a subarray of an array $$$f$$$ if $$$d$$$ can be obtained from $$$f$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Broken Queries",
    "url": "https://codeforces.com/problemset/problem/2049/E",
    "description": " You, a wizard whose creation was destroyed by a dragon, are determined to hunt it down with a magical AOE tracker. But it seems to be toyed with...This is an interactive problem.There is a hidden binary array $$$a$$$ of length $$$n$$$ ($$$\\mathbf{n}$$$ is a power of 2) and a hidden integer $$$k\\ (2 \\le k \\le n - 1)$$$. The array $$$a$$$ contains exactly one 1 (and all other elements are 0). For two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$), define the range sum $$$s(l, r) = a_l + a_{l+1} + \\cdots + a_r$$$.You have a magical device that takes ranges and returns range sums, but it returns the opposite result when the range has length at least $$$k$$$. Formally, in one query, you can give it a pair of integers $$$[l, r]$$$ where $$$1 \\le l \\le r \\le n$$$, and it will return either $$$0$$$ or $$$1$$$ according to the following rules:   If $$$r - l + 1 < k$$$, it will return $$$s(l, r)$$$.  If $$$r - l + 1 \\ge k$$$, it will return $$$1 - s(l, r)$$$. Find $$$k$$$ using at most $$$33$$$ queries.The device is not adaptive. It means that the hidden $$$a$$$ and $$$k$$$ are fixed before the interaction and will not change during the interaction."
  },
  {
    "title": "Shift + Esc",
    "url": "https://codeforces.com/problemset/problem/2049/D",
    "description": " After having fun with a certain contraption and getting caught, Evirir the dragon decides to put their magical skills to good use — warping reality to escape fast!You are given a grid with $$$n$$$ rows and $$$m$$$ columns of non-negative integers and an integer $$$k$$$. Let $$$(i, j)$$$ denote the cell in the $$$i$$$-th row from the top and $$$j$$$-th column from the left ($$$1 \\le i \\le n$$$, $$$1 \\le j \\le m$$$). For every cell $$$(i, j)$$$, the integer $$$a_{i, j}$$$ is written on the cell $$$(i, j)$$$.You are initially at $$$(1, 1)$$$ and want to go to $$$(n, m)$$$. You may only move down or right. That is, if you are at $$$(i, j)$$$, you can only move to $$$(i+1, j)$$$ or $$$(i, j+1)$$$ (if the corresponding cell exists). Before you begin moving, you may do the following operation any number of times:   Choose an integer $$$i$$$ between $$$1$$$ and $$$n$$$ and cyclically shift row $$$i$$$ to the left by $$$1$$$. Formally, simultaneously set $$$a_{i,j}$$$ to $$$a_{i,(j \\bmod m) + 1}$$$ for all integers $$$j$$$ ($$$1 \\le j \\le m$$$).  Note that you may not do any operation after you start moving.After moving from $$$(1, 1)$$$ to $$$(n, m)$$$, let $$$x$$$ be the number of operations you have performed before moving, and let $$$y$$$ be the sum of the integers written on visited cells (including $$$(1, 1)$$$ and $$$(n, m)$$$). Then the cost is defined as $$$kx + y$$$.Find the minimum cost to move from $$$(1, 1)$$$ to $$$(n, m)$$$."
  },
  {
    "title": "MEX Cycle",
    "url": "https://codeforces.com/problemset/problem/2049/C",
    "description": "  Evirir the dragon has many friends. They have 3 friends! That is one more than the average dragon.You are given integers $$$n$$$, $$$x$$$, and $$$y$$$. There are $$$n$$$ dragons sitting in a circle. The dragons are numbered $$$1, 2, \\ldots, n$$$. For each $$$i$$$ ($$$1 \\le i \\le n$$$), dragon $$$i$$$ is friends with dragon $$$i - 1$$$ and $$$i + 1$$$, where dragon $$$0$$$ is defined to be dragon $$$n$$$ and dragon $$$n + 1$$$ is defined to be dragon $$$1$$$. Additionally, dragons $$$x$$$ and $$$y$$$ are friends with each other (if they are already friends, this changes nothing). Note that all friendships are mutual.Output $$$n$$$ non-negative integers $$$a_1, a_2, \\ldots, a_n$$$ such that for each dragon $$$i$$$ ($$$1 \\le i \\le n$$$), the following holds:   Let $$$f_1, f_2, \\ldots, f_k$$$ be the friends of dragon $$$i$$$. Then $$$a_i = \\operatorname{mex}(a_{f_1}, a_{f_2}, \\ldots, a_{f_k})$$$.$$$^{\\text{∗}}$$$ $$$^{\\text{∗}}$$$The minimum excluded (MEX) of a collection of integers $$$c_1, c_2, \\ldots, c_m$$$ is defined as the smallest non-negative integer $$$t$$$ which does not occur in the collection $$$c$$$. "
  },
  {
    "title": "pspspsps",
    "url": "https://codeforces.com/problemset/problem/2049/B",
    "description": "  Cats are attracted to pspspsps, but Evirir, being a dignified dragon, is only attracted to pspspsps with oddly specific requirements...Given a string $$$s = s_1s_2\\ldots s_n$$$ of length $$$n$$$ consisting of characters p, s, and . (dot), determine whether a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$ exists, such that for all integers $$$i$$$ ($$$1 \\le i \\le n$$$):   If $$$s_i$$$ is p, then $$$[p_1, p_2, \\ldots, p_i]$$$ forms a permutation (of length $$$i$$$);  If $$$s_i$$$ is s, then $$$[p_i, p_{i+1}, \\ldots, p_{n}]$$$ forms a permutation (of length $$$n-i+1$$$);  If $$$s_i$$$ is ., then there is no additional restriction. $$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "MEX Destruction",
    "url": "https://codeforces.com/problemset/problem/2049/A",
    "description": "   Evirir the dragon snuck into a wizard's castle and found a mysterious contraption, and their playful instincts caused them to play with (destroy) it...Evirir the dragon found an array $$$a_1, a_2, \\ldots, a_n$$$ of $$$n$$$ non-negative integers.In one operation, they can choose a non-empty subarray$$$^{\\text{∗}}$$$ $$$b$$$ of $$$a$$$ and replace it with the integer $$$\\operatorname{mex}(b)$$$$$$^{\\text{†}}$$$. They want to use this operation any number of times to make $$$a$$$ only contain zeros. It can be proven that this is always possible under the problem constraints.What is the minimum number of operations needed?$$$^{\\text{∗}}$$$An array $$$c$$$ is a subarray of an array $$$d$$$ if $$$c$$$ can be obtained from $$$d$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. $$$^{\\text{†}}$$$The minimum excluded (MEX) of a collection of integers $$$f_1, f_2, \\ldots, f_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$f$$$. "
  },
  {
    "title": "Kevin and Puzzle (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2048/I2",
    "description": "This is the hard version of the problem. The difference between the versions is that in this version, you need to count the number of good arrays. You can hack only if you solved all versions of this problem. Kevin is visiting the Red Church, and he found a puzzle on the wall.For an array $$$ a $$$, let $$$ c(l,r) $$$ indicate how many distinct numbers are among $$$ a_l, a_{l+1}, \\ldots, a_r $$$. In particular, if $$$ l > r $$$, define $$$ c(l,r) = 0 $$$.You are given a string $$$ s $$$ of length $$$ n $$$ consisting of letters $$$ \\texttt{L} $$$ and $$$ \\texttt{R} $$$ only. Let a non-negative array $$$ a $$$ be called good, if the following conditions hold for $$$ 1 \\leq i \\leq n $$$:   if $$$s_i=\\verb!L!$$$, then $$$c(1,i-1)=a_i$$$;  if $$$s_i=\\verb!R!$$$, then $$$c(i+1,n)=a_i$$$. You need to count the number of good arrays $$$a$$$. Since the answer may be large, you only need to output the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Kevin and Puzzle (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2048/I1",
    "description": "This is the easy version of the problem. The difference between the versions is that in this version, you need to find any one good array. You can hack only if you solved all versions of this problem. Kevin is visiting the Red Church, and he found a puzzle on the wall.For an array $$$ a $$$, let $$$ c(l,r) $$$ indicate how many distinct numbers are among $$$ a_l, a_{l+1}, \\ldots, a_r $$$. In particular, if $$$ l > r $$$, define $$$ c(l,r) = 0 $$$.You are given a string $$$ s $$$ of length $$$ n $$$ consisting of letters $$$ \\texttt{L} $$$ and $$$ \\texttt{R} $$$ only. Let a non-negative array $$$ a $$$ be called good, if the following conditions hold for $$$ 1 \\leq i \\leq n $$$:   if $$$s_i=\\verb!L!$$$, then $$$c(1,i-1)=a_i$$$;  if $$$s_i=\\verb!R!$$$, then $$$c(i+1,n)=a_i$$$. If there is a good array $$$a$$$, print any of the good arrays. Otherwise, report that no such arrays exists."
  },
  {
    "title": "Kevin and Strange Operation",
    "url": "https://codeforces.com/problemset/problem/2048/H",
    "description": "Kevin is exploring problems related to binary strings in Chinatown. When he was at a loss, a stranger approached him and introduced a peculiar operation:  Suppose the current binary string is $$$ t $$$, with a length of $$$ \\vert t \\vert $$$. Choose an integer $$$ 1 \\leq p \\leq \\vert t \\vert $$$. For all $$$ 1 \\leq i < p $$$, simultaneously perform the operation $$$ t_i = \\max(t_i, t_{i+1}) $$$, and then delete $$$ t_p $$$. For example, suppose the current binary string is 01001, and you choose $$$ p = 4 $$$. Perform $$$ t_i = \\max(t_i, t_{i+1}) $$$ for $$$t_1$$$, $$$t_2$$$, and $$$ t_3 $$$, transforming the string into 11001, then delete $$$ t_4 $$$, resulting in 1101.Kevin finds this strange operation quite interesting. Thus, he wants to ask you: Given a binary string $$$ s $$$, how many distinct non-empty binary strings can you obtain through any number of operations (possibly zero)?Since the answer may be very large, you only need to output the result modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Kevin and Matrices",
    "url": "https://codeforces.com/problemset/problem/2048/G",
    "description": "Kevin has been transported to Sacred Heart Hospital, which contains all the $$$ n \\times m $$$ matrices with integer values in the range $$$ [1,v] $$$.Now, Kevin wants to befriend some matrices, but he is willing to befriend a matrix $$$ a $$$ if and only if the following condition is satisfied:$$$$$$ \\min_{1\\le i\\le n}\\left(\\max_{1\\le j\\le m}a_{i,j}\\right)\\le\\max_{1\\le j\\le m}\\left(\\min_{1\\le i\\le n}a_{i,j}\\right). $$$$$$Please count how many matrices in Sacred Heart Hospital can be friends with Kevin.Since Kevin is very friendly, there could be many matrices that meet this condition. Therefore, you only need to output the result modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Kevin and Math Class",
    "url": "https://codeforces.com/problemset/problem/2048/F",
    "description": "Kevin is a student from Eversleeping Town, currently attending a math class where the teacher is giving him division exercises.On the board, there are two rows of positive integers written, each containing $$$ n $$$ numbers. The first row is $$$ a_1, a_2, \\ldots, a_n $$$, and the second row is $$$ b_1, b_2, \\ldots, b_n $$$. For each division exercise, Kevin can choose any segment $$$ [l, r] $$$ and find the smallest value $$$ x $$$ among $$$ b_l, b_{l+1}, \\ldots, b_r $$$. He will then modify each $$$ a_i $$$ for $$$ l \\leq i \\leq r $$$ to be the ceiling of $$$ a_i $$$ divided by $$$ x $$$.Formally, he selects two integers $$$ 1 \\leq l \\leq r \\leq n $$$, sets $$$ x = \\min_{l \\leq i \\leq r} b_i $$$, and changes all $$$ a_i $$$ for $$$ l \\leq i \\leq r $$$ to $$$ \\lceil \\frac{a_i}{x} \\rceil $$$.Kevin can leave class and go home when all $$$ a_i $$$ become $$$ 1 $$$. He is eager to leave and wants to know the minimum number of division exercises required to achieve this."
  },
  {
    "title": "Kevin and Bipartite Graph",
    "url": "https://codeforces.com/problemset/problem/2048/E",
    "description": "The Arms Factory needs a poster design pattern and finds Kevin for help.A poster design pattern is a bipartite graph with $$$ 2n $$$ vertices in the left part and $$$ m $$$ vertices in the right part, where there is an edge between each vertex in the left part and each vertex in the right part, resulting in a total of $$$ 2nm $$$ edges.Kevin must color each edge with a positive integer in the range $$$ [1, n] $$$. A poster design pattern is good if there are no monochromatic cycles$$$^{\\text{∗}}$$$ in the bipartite graph.Kevin needs your assistance in constructing a good bipartite graph or informing him if it is impossible.$$$^{\\text{∗}}$$$A monochromatic cycle refers to a simple cycle in which all the edges are colored with the same color."
  },
  {
    "title": "Kevin and Competition Memories",
    "url": "https://codeforces.com/problemset/problem/2048/D",
    "description": "Kevin used to get into Rio's Memories, and in Rio's Memories, a series of contests was once held. Kevin remembers all the participants and all the contest problems from that time, but he has forgotten the specific rounds, the distribution of problems, and the exact rankings.There are $$$ m $$$ problems in total, with the $$$ i $$$-th problem having a difficulty of $$$ b_i $$$. Let each contest consist of $$$ k $$$ problems, resulting in a total of $$$ \\lfloor \\frac{m}{k} \\rfloor $$$ contests. This means that you select exactly $$$ \\lfloor \\frac{m}{k} \\rfloor \\cdot k $$$ problems for the contests in any combination you want, with each problem being selected at most once, and the remaining $$$m\\bmod k$$$ problems are left unused. For example, if $$$m = 17$$$ and $$$k = 3$$$, you should create exactly $$$5$$$ contests consisting of $$$3$$$ problems each, and exactly $$$2$$$ problems will be left unused.There are $$$ n $$$ participants in the contests, with Kevin being the $$$1$$$-st participant. The $$$ i $$$-th participant has a rating of $$$ a_i $$$. During the contests, each participant solves all problems with a difficulty not exceeding their rating, meaning the $$$ i $$$-th participant solves the $$$ j $$$-th problem if and only if $$$ a_i \\geq b_j $$$. In each contest, Kevin's rank is one plus the number of participants who solve more problems than he does.For each $$$ k = 1, 2, \\ldots, m $$$, Kevin wants to know the minimum sum of his ranks across all $$$ \\lfloor \\frac{m}{k} \\rfloor $$$ contests. In other words, for some value of $$$k$$$, after selecting the problems for each contest, you calculate the rank of Kevin in each contest and sum up these ranks over all $$$ \\lfloor \\frac{m}{k} \\rfloor $$$ contests. Your goal is to minimize this value.Note that contests for different values of $$$k$$$ are independent. It means that for different values of $$$k$$$, you can select the distribution of problems into the contests independently."
  },
  {
    "title": "Kevin and Binary Strings",
    "url": "https://codeforces.com/problemset/problem/2048/C",
    "description": "Kevin discovered a binary string $$$s$$$ that starts with 1 in the river at Moonlit River Park and handed it over to you. Your task is to select two non-empty substrings$$$^{\\text{∗}}$$$ of $$$s$$$ (which can be overlapped) to maximize the XOR value of these two substrings.The XOR of two binary strings $$$a$$$ and $$$b$$$ is defined as the result of the $$$\\oplus$$$ operation applied to the two numbers obtained by interpreting $$$a$$$ and $$$b$$$ as binary numbers, with the leftmost bit representing the highest value. Here, $$$\\oplus$$$ denotes the bitwise XOR operation.The strings you choose may have leading zeros.$$$^{\\text{∗}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. "
  },
  {
    "title": "Kevin and Permutation",
    "url": "https://codeforces.com/problemset/problem/2048/B",
    "description": " Kevin is a master of permutation-related problems. You are taking a walk with Kevin in Darkwoods, and during your leisure time, he wants to ask you the following question.Given two positive integers $$$ n $$$ and $$$ k $$$, construct a permutation$$$^{\\text{∗}}$$$ $$$ p $$$ of length $$$ n $$$ to minimize the sum of the minimum values of all subarrays$$$^{\\text{†}}$$$ of length $$$ k $$$. Formally, you need to minimize$$$$$$ \\sum_{i=1}^{n-k+1}\\left( \\min_{j=i}^{i+k-1} p_j\\right). $$$$$$$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$An array $$$a$$$ is a subarray of an array $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. Two subarrays are considered different if the sets of positions of the deleted elements are different. "
  },
  {
    "title": "Kevin and Combination Lock",
    "url": "https://codeforces.com/problemset/problem/2048/A",
    "description": "Kevin is trapped in Lakeside Village by Grace. At the exit of the village, there is a combination lock that can only be unlocked if Kevin solves it.The combination lock starts with an integer $$$ x $$$. Kevin can perform one of the following two operations zero or more times:   If $$$ x \\neq 33 $$$, he can select two consecutive digits $$$ 3 $$$ from $$$ x $$$ and remove them simultaneously. For example, if $$$ x = 13\\,323 $$$, he can remove the second and third $$$ 3 $$$, changing $$$ x $$$ to $$$ 123 $$$.  If $$$ x \\geq 33 $$$, he can change $$$ x $$$ to $$$ x - 33 $$$. For example, if $$$ x = 99 $$$, he can choose this operation to change $$$ x $$$ to $$$ 99 - 33 = 66 $$$. When the value of $$$ x $$$ on the combination lock becomes $$$ 0 $$$, Kevin can unlock the lock and escape from Lakeside Village. Please determine whether it is possible for Kevin to unlock the combination lock and escape."
  },
  {
    "title": "Replace Character",
    "url": "https://codeforces.com/problemset/problem/2047/B",
    "description": "You're given a string $$$s$$$ of length $$$n$$$, consisting of only lowercase English letters. You must do the following operation exactly once:   Choose any two indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$). You can choose $$$i = j$$$.  Set $$$s_i := s_j$$$. You need to minimize the number of distinct permutations$$$^\\dagger$$$ of $$$s$$$. Output any string with the smallest number of distinct permutations after performing exactly one operation.$$$^\\dagger$$$ A permutation of the string is an arrangement of its characters into any order. For example, \"bac\" is a permutation of \"abc\" but \"bcc\" is not."
  },
  {
    "title": "Alyona and a Square Jigsaw Puzzle",
    "url": "https://codeforces.com/problemset/problem/2047/A",
    "description": "Alyona assembles an unusual square Jigsaw Puzzle. She does so in $$$n$$$ days in the following manner:   On the first day, she starts by placing the central piece in the center of the table.  On each day after the first one, she places a certain number of pieces around the central piece in clockwise order, always finishing each square layer completely before starting a new one. For example, she places the first $$$14$$$ pieces in the following order:   The colors denote the layers. The third layer is still unfinished. Alyona is happy if at the end of the day the assembled part of the puzzle does not have any started but unfinished layers. Given the number of pieces she assembles on each day, find the number of days Alyona is happy on."
  },
  {
    "title": "Yandex Cuneiform (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2046/F2",
    "description": "  This is the hard version of the problem. The difference between the versions is that in this version, there is no restriction on the number of question marks. You can hack only if you solved all versions of this problem. For a long time, no one could decipher Sumerian cuneiform. However, it has finally succumbed to pressure! Today, you have the chance to decipher Yandex cuneiform.Yandex cuneiform is defined by the following rules:   An empty string is a Yandex cuneiform.  If you insert exactly one copy of each of the three letters 'Y', 'D', and 'X' into a Yandex cuneiform in such a way that no two adjacent letters become equal after the operation, you obtain a Yandex cuneiform.  If a string can't be obtained using the above rules, it is not a Yandex cuneiform. You are given a template. A template is a string consisting of the characters 'Y', 'D', 'X', and '?'.You need to check whether there exists a way to replace each question mark with 'Y', 'D', or 'X' to obtain a Yandex cuneiform, and if it exists, output any of the matching options, as well as a sequence of insertion operations to obtain the resulting cuneiform.In this version of the problem, the number of question marks in the template can be arbitrary."
  },
  {
    "title": "Yandex Cuneiform (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2046/F1",
    "description": "  This is the easy version of the problem. The difference between the versions is that in this version, there are no question marks. You can hack only if you solved all versions of this problem. For a long time, no one could decipher Sumerian cuneiform. However, it has finally succumbed to pressure! Today, you have the chance to decipher Yandex cuneiform.Yandex cuneiform is defined by the following rules:   An empty string is a Yandex cuneiform.  If you insert exactly one copy of each of the three letters 'Y', 'D', and 'X' into a Yandex cuneiform in such a way that no two adjacent letters become equal after the operation, you obtain a Yandex cuneiform.  If a string can't be obtained using the above rules, it is not a Yandex cuneiform. You are given a template. A template is a string consisting of the characters 'Y', 'D', 'X', and '?'.You need to check whether there exists a way to replace each question mark with 'Y', 'D', or 'X' to obtain a Yandex cuneiform, and if it exists, output any of the matching options, as well as a sequence of insertion operations to obtain the resulting cuneiform.In this version of the problem, there are no question marks in the template."
  },
  {
    "title": "Cheops and a Contest (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2046/E2",
    "description": "  This is the hard version of the problem. The difference between the versions is that in this version, $$$m$$$ is arbitrary. You can hack only if you solved all versions of this problem. There is a problem-solving competition in Ancient Egypt with $$$n$$$ participants, numbered from $$$1$$$ to $$$n$$$. Each participant comes from a certain city; the cities are numbered from $$$1$$$ to $$$m$$$. There is at least one participant from each city.The $$$i$$$-th participant has strength $$$a_i$$$, specialization $$$s_i$$$, and wisdom $$$b_i$$$, so that $$$b_i \\ge a_i$$$. Each problem in the competition will have a difficulty $$$d$$$ and a unique topic $$$t$$$. The $$$i$$$-th participant will solve the problem if   $$$a_i \\ge d$$$, i.e., their strength is not less than the problem's difficulty, or  $$$s_i = t$$$, and $$$b_i \\ge d$$$, i.e., their specialization matches the problem's topic, and their wisdom is not less than the problem's difficulty. Cheops wants to choose the problems in such a way that each participant from city $$$i$$$ will solve strictly more problems than each participant from city $$$j$$$, for all $$$i < j$$$.Please find a set of at most $$$5n$$$ problems, where the topics of all problems are distinct, so that Cheops' will is satisfied, or state that it is impossible."
  },
  {
    "title": "Cheops and a Contest (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2046/E1",
    "description": "  This is the easy version of the problem. The difference between the versions is that in this version, $$$m$$$ equals $$$2$$$. You can hack only if you solved all versions of this problem. There is a problem-solving competition in Ancient Egypt with $$$n$$$ participants, numbered from $$$1$$$ to $$$n$$$. Each participant comes from a certain city; the cities are numbered from $$$1$$$ to $$$m$$$. There is at least one participant from each city.The $$$i$$$-th participant has strength $$$a_i$$$, specialization $$$s_i$$$, and wisdom $$$b_i$$$, so that $$$b_i \\ge a_i$$$. Each problem in the competition will have a difficulty $$$d$$$ and a unique topic $$$t$$$. The $$$i$$$-th participant will solve the problem if   $$$a_i \\ge d$$$, i.e., their strength is not less than the problem's difficulty, or  $$$s_i = t$$$, and $$$b_i \\ge d$$$, i.e., their specialization matches the problem's topic, and their wisdom is not less than the problem's difficulty. Cheops wants to choose the problems in such a way that each participant from city $$$i$$$ will solve strictly more problems than each participant from city $$$j$$$, for all $$$i < j$$$.Please find a set of at most $$$5n$$$ problems, where the topics of all problems are distinct, so that Cheops' will is satisfied, or state that it is impossible."
  },
  {
    "title": "For the Emperor!",
    "url": "https://codeforces.com/problemset/problem/2046/D",
    "description": " In Ancient Rome, a plan to defeat the barbarians was developed, but for its implementation, each city must be informed about it.The northern part of the Roman Empire consists of $$$n$$$ cities connected by $$$m$$$ one-way roads. Initially, the $$$i$$$-th city has $$$a_i$$$ messengers, and each messenger can freely move between cities following the existing roads. A messenger can carry a copy of the plan with him and inform the cities he visits, and can make unlimited copies for other messengers in the city he is currently in.At the start, you will produce some number of plans and deliver them to messengers of your choice. Your goal is to make sure that every city is visited by a messenger with a plan. Find the smallest number of the plans you need to produce originally, so that the messengers will deliver them to every city, or determine that it is impossible to do so at all."
  },
  {
    "title": "Adventurers",
    "url": "https://codeforces.com/problemset/problem/2046/C",
    "description": " Once, four Roman merchants met in a Roman mansion to discuss their trading plans. They faced the following problem: they traded the same type of goods, and if they traded in the same city, they would inevitably incur losses. They decided to divide up the cities between them where they would trade.The map of Rome can be represented in this problem as a plane with certain points marked — the cities of the Roman Empire.The merchants decided to choose a certain dividing point $$$(x_0, y_0)$$$. Then, in a city with coordinates $$$(x_i, y_i)$$$,   the first merchant sells goods if $$$x_0 \\le x_i$$$ and $$$y_0 \\le y_i$$$;  the second merchant sells goods if $$$x_0 > x_i$$$ and $$$y_0 \\le y_i$$$;  the third merchant sells goods if $$$x_0 \\le x_i$$$ and $$$y_0 > y_i$$$;  the fourth merchant sells goods if $$$x_0 > x_i$$$ and $$$y_0 > y_i$$$. The merchants want to choose $$$(x_0, y_0)$$$ in such a way as to maximize the smallest number of cities that any of them gets (i. e., as fair as possible). Please find such a point for them."
  },
  {
    "title": "Move Back at a Cost",
    "url": "https://codeforces.com/problemset/problem/2046/B",
    "description": "  You are given an array of integers $$$a$$$ of length $$$n$$$. You can perform the following operation zero or more times:   In one operation choose an index $$$i$$$ ($$$1 \\le i \\le n$$$), assign $$$a_i := a_i + 1$$$, and then move $$$a_i$$$ to the back of the array (to the rightmost position). For example, if $$$a = [3, 5, 1, 9]$$$, and you choose $$$i = 2$$$, the array becomes $$$[3, 1, 9, 6]$$$. Find the lexicographically smallest$$$^{\\text{∗}}$$$ array you can get by performing these operations.$$$^{\\text{∗}}$$$An array $$$c$$$ is lexicographically smaller than an array $$$d$$$ if and only if one of the following holds:   $$$c$$$ is a prefix of $$$d$$$, but $$$c \\ne d$$$; or  in the first position where $$$c$$$ and $$$d$$$ differ, the array $$$c$$$ has a smaller element than the corresponding element in $$$d$$$.  "
  },
  {
    "title": "Swap Columns and Find a Path",
    "url": "https://codeforces.com/problemset/problem/2046/A",
    "description": " There is a matrix consisting of $$$2$$$ rows and $$$n$$$ columns. The rows are numbered from $$$1$$$ to $$$2$$$ from top to bottom; the columns are numbered from $$$1$$$ to $$$n$$$ from left to right. Let's denote the cell on the intersection of the $$$i$$$-th row and the $$$j$$$-th column as $$$(i,j)$$$. Each cell contains an integer; initially, the integer in the cell $$$(i,j)$$$ is $$$a_{i,j}$$$.You can perform the following operation any number of times (possibly zero):  choose two columns and swap them (i. e. choose two integers $$$x$$$ and $$$y$$$ such that $$$1 \\le x < y \\le n$$$, then swap $$$a_{1,x}$$$ with $$$a_{1,y}$$$, and then swap $$$a_{2,x}$$$ with $$$a_{2,y}$$$). After performing the operations, you have to choose a path from the cell $$$(1,1)$$$ to the cell $$$(2,n)$$$. For every cell $$$(i,j)$$$ in the path except for the last, the next cell should be either $$$(i+1,j)$$$ or $$$(i,j+1)$$$. Obviously, the path cannot go outside the matrix.The cost of the path is the sum of all integers in all $$$(n+1)$$$ cells belonging to the path. You have to perform the operations and choose a path so that its cost is maximum possible."
  },
  {
    "title": "Mirror Maze",
    "url": "https://codeforces.com/problemset/problem/2045/M",
    "description": "You are given a grid of $$$R$$$ rows (numbered from $$$1$$$ to $$$R$$$ from north to south) and $$$C$$$ columns (numbered from $$$1$$$ to $$$C$$$ from west to east). Every cell in this grid is a square of the same size. The cell located at row $$$r$$$ and column $$$c$$$ is denoted as $$$(r, c)$$$. Each cell can either be empty or have a mirror in one of the cell's diagonals. Each mirror is represented by a line segment. The mirror is type $$$1$$$ if it is positioned diagonally from the southwest corner to the northeast corner of the cell, or type $$$2$$$ for the other diagonal.These mirrors follow the law of reflection, that is, the angle of reflection equals the angle of incidence. Formally, for type $$$1$$$ mirror, if a beam of light comes from the north, south, west, or east of the cell, then it will be reflected to the west, east, north, and south of the cell, respectively. Similarly, for type $$$2$$$ mirror, if a beam of light comes from the north, south, west, or east of the cell, then it will be reflected to the east, west, south, and north of the cell, respectively.  You want to put a laser from outside the grid such that all mirrors are hit by the laser beam. There are $$$2 \\cdot (R+C)$$$ possible locations to put the laser:  from the north side of the grid at column $$$c$$$, for $$$1 \\leq c \\leq C$$$, shooting a laser beam to the south;  from the south side of the grid at column $$$c$$$, for $$$1 \\leq c \\leq C$$$, shooting a laser beam to the north;  from the east side of the grid at row $$$r$$$, for $$$1 \\leq r \\leq R$$$, shooting a laser beam to the west; and  from the west side of the grid at row $$$r$$$, for $$$1 \\leq r \\leq R$$$, shooting a laser beam to the east.   Determine all possible locations for the laser such that all mirrors are hit by the laser beam."
  },
  {
    "title": "Buggy DFS",
    "url": "https://codeforces.com/problemset/problem/2045/L",
    "description": "You are currently studying a graph traversal algorithm called the Depth First Search (DFS). However, due to a bug, your algorithm is slightly different from the standard DFS. The following is an algorithm for your Buggy DFS (BDFS), assuming the graph has $$$N$$$ nodes (numbered from $$$1$$$ to $$$N$$$).  BDFS():    let S be an empty stack    let FLAG be a boolean array of size N which are all false initially    let counter be an integer initialized with 0    push 1 to S    while S is not empty:      pop the top element of S into u      FLAG[u] = true      for each v neighbour of u in ascending order:        counter = counter + 1        if FLAG[v] is false:          push v to S    return counterYou realized that the bug made the algorithm slower than standard DFS, which can be investigated by the return value of the function BDFS(). To investigate the behavior of this algorithm, you want to make some test cases by constructing an undirected simple graph such that the function BDFS() returns $$$K$$$, or determine if it is impossible to do so."
  },
  {
    "title": "GCDDCG",
    "url": "https://codeforces.com/problemset/problem/2045/K",
    "description": "You are playing the Greatest Common Divisor Deck-Building Card Game (GCDDCG). There are $$$N$$$ cards (numbered from $$$1$$$ to $$$N$$$). Card $$$i$$$ has the value of $$$A_i$$$, which is an integer between $$$1$$$ and $$$N$$$ (inclusive).The game consists of $$$N$$$ rounds (numbered from $$$1$$$ to $$$N$$$). Within each round, you need to build two non-empty decks, deck $$$1$$$ and deck $$$2$$$. A card cannot be inside both decks, and it is allowed to not use all $$$N$$$ cards. In round $$$i$$$, the greatest common divisor (GCD) of the card values in each deck must equal $$$i$$$.Your creativity point during round $$$i$$$ is the product of $$$i$$$ and the number of ways to build two valid decks. Two ways are considered different if one of the decks contains different cards.Find the sum of creativity points across all $$$N$$$ rounds. Since the sum can be very large, calculate the sum modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Xorderable Array",
    "url": "https://codeforces.com/problemset/problem/2045/J",
    "description": "You are given an array $$$A$$$ of $$$N$$$ integers: $$$[A_1, A_2, \\dots, A_N]$$$.The array $$$A$$$ is $$$(p, q)$$$-xorderable if it is possible to rearrange $$$A$$$ such that for each pair $$$(i, j)$$$ that satisfies $$$1 \\leq i < j \\leq N$$$, the following conditions must be satisfied after the rearrangement: $$$A_i \\oplus p \\leq A_j \\oplus q$$$ and $$$A_i \\oplus q \\leq A_j \\oplus p$$$. The operator $$$\\oplus$$$ represents the bitwise xor.You are given another array $$$X$$$ of length $$$M$$$: $$$[X_1, X_2, \\dots, X_M]$$$. Calculate the number of pairs $$$(u, v)$$$ where array $$$A$$$ is $$$(X_u, X_v)$$$-xorderable for $$$1 \\leq u < v \\leq M$$$."
  },
  {
    "title": "Microwavable Subsequence",
    "url": "https://codeforces.com/problemset/problem/2045/I",
    "description": "You are given an array of $$$N$$$ integers: $$$[A_1, A_2, \\dots, A_N]$$$.A subsequence can be derived from an array by removing zero or more elements without changing the order of the remaining elements. For example, $$$[2, 1, 2]$$$, $$$[3, 3]$$$, $$$[1]$$$, and $$$[3, 2, 1, 3, 2]$$$ are subsequences of array $$$[3, 2, 1, 3, 2]$$$, while $$$[1, 2, 3]$$$ is not a subsequence of array $$$[3, 2, 1, 3, 2]$$$.A subsequence is microwavable if the subsequence consists of at most two distinct values and each element differs from its adjacent elements. For example, $$$[2, 1, 2]$$$, $$$[3, 2, 3, 2]$$$, and $$$[1]$$$ are microwavable, while $$$[3, 3]$$$ and $$$[3, 2, 1, 3, 2]$$$ are not microwavable.Denote a function $$$f(x, y)$$$ as the length of the longest microwavable subsequence of array $$$A$$$ such that each element within the subsequence is either $$$x$$$ or $$$y$$$. Find the sum of $$$f(x, y)$$$ for all $$$1 \\leq x < y \\leq M$$$."
  },
  {
    "title": "Missing Separators",
    "url": "https://codeforces.com/problemset/problem/2045/H",
    "description": "You have a dictionary, which is a list of distinct words sorted in alphabetical order. Each word consists of uppercase English letters.You want to print this dictionary. However, there is a bug with the printing system, and all words in the list are printed next to each other without any separators between words. Now, you ended up with a string $$$S$$$ that is a concatenation of all the words in the dictionary in the listed order.Your task is to reconstruct the dictionary by splitting $$$S$$$ into one or more words. Note that the reconstructed dictionary must consist of distinct words sorted in alphabetical order. Furthermore, you want to maximize the number of words in the dictionary. If there are several possible dictionaries with the maximum number of words, you can choose any of them."
  },
  {
    "title": "X Aura",
    "url": "https://codeforces.com/problemset/problem/2045/G",
    "description": "Mount ICPC can be represented as a grid of $$$R$$$ rows (numbered from $$$1$$$ to $$$R$$$) and $$$C$$$ columns (numbered from $$$1$$$ to $$$C$$$). The cell located at row $$$r$$$ and column $$$c$$$ is denoted as $$$(r, c)$$$ and has a height of $$$H_{r, c}$$$. Two cells are adjacent to each other if they share a side. Formally, $$$(r, c)$$$ is adjacent to $$$(r-1, c)$$$, $$$(r+1, c)$$$, $$$(r, c-1)$$$, and $$$(r, c+1)$$$, if any exists.You can move only between adjacent cells, and each move comes with a penalty. With an aura of an odd positive integer $$$X$$$, moving from a cell with height $$$h_1$$$ to a cell with height $$$h_2$$$ gives you a penalty of $$$(h_1 - h_2)^X$$$. Note that the penalty can be negative.You want to answer $$$Q$$$ independent scenarios. In each scenario, you start at the starting cell $$$(R_s, C_s)$$$ and you want to go to the destination cell $$$(R_f, C_f)$$$ with minimum total penalty. In some scenarios, the total penalty might become arbitrarily small; such a scenario is called invalid. Find the minimum total penalty to move from the starting cell to the destination cell, or determine if the scenario is invalid."
  },
  {
    "title": "Grid Game 3-angle",
    "url": "https://codeforces.com/problemset/problem/2045/F",
    "description": "Your friends, Anda and Kamu decide to play a game called Grid Game and ask you to become the gamemaster. As the gamemaster, you set up a triangular grid of size $$$N$$$. The grid has $$$N$$$ rows (numbered from $$$1$$$ to $$$N$$$). Row $$$r$$$ has $$$r$$$ cells; the $$$c$$$-th cell of row $$$r$$$ is denoted as $$$(r, c)$$$.  Before the game starts, $$$M$$$ different cells (numbered from $$$1$$$ to $$$M$$$) are chosen: at cell $$$(R_i, C_i)$$$, you add $$$A_i$$$ stones on it. You then give Anda and Kamu an integer $$$K$$$ and commence the game.Anda and Kamu will take turns alternately with Anda taking the first turn. A player on their turn will do the following.  Choose a cell $$$(r, c)$$$ with at least one stone on it.  Remove at least one but at most $$$K$$$ stones from the chosen cell.  For each cell $$$(x, y)$$$ such that $$$r + 1 \\leq x \\leq \\min(N, r + K)$$$ and $$$c \\leq y \\leq c + x - r$$$, add zero or more stones but at most $$$K$$$ stones to cell $$$(x, y)$$$. The following illustrations show all the possible cells in which you can add stones for $$$K = 3$$$. You choose the cell $$$(2, 1)$$$ for the left illustration and the cell $$$(4, 3)$$$ for the right illustration.  A player who is unable to complete their turn (because there are no more stones on the grid) will lose the game, and the opposing player wins. Determine who will win the game if both players play optimally."
  },
  {
    "title": "Narrower Passageway",
    "url": "https://codeforces.com/problemset/problem/2045/E",
    "description": "You are a strategist of The ICPC Kingdom. You received an intel that there will be monster attacks on a narrow passageway near the kingdom. The narrow passageway can be represented as a grid with $$$2$$$ rows (numbered from $$$1$$$ to $$$2$$$) and $$$N$$$ columns (numbered from $$$1$$$ to $$$N$$$). Denote $$$(r, c)$$$ as the cell in row $$$r$$$ and column $$$c$$$. A soldier with a power of $$$P_{r, c}$$$ is assigned to protect $$$(r, c)$$$ every single day.It is known that the passageway is very foggy. Within a day, each column in the passageway has a $$$50\\%$$$ chance of being covered in fog. If a column is covered in fog, the two soldiers assigned to that column are not deployed that day. Otherwise, the assigned soldiers will be deployed.Define a connected area $$$[u, v]$$$ ($$$u \\leq v$$$) as a maximal set of consecutive columns from $$$u$$$ to $$$v$$$ (inclusive) such that each column in the set is not covered in fog. The following illustration is an example of connected areas. The grayed cells are cells covered in fog. There are $$$4$$$ connected areas: $$$[1, 2]$$$, $$$[4, 6]$$$, $$$[9, 9]$$$, and $$$[11, 11]$$$.  The strength of a connected area $$$[u, v]$$$ can be calculated as follows. Let $$$m_1$$$ and $$$m_2$$$ be the maximum power of the soldiers in the first and second rows of the connected area, respectively. Formally, $$$m_r = \\max (P_{r, u}, P_{r, u + 1}, \\dots, P_{r, v})$$$ for $$$r \\in \\{ 1, 2\\}$$$. If $$$m_1 = m_2$$$, then the strength is $$$0$$$. Otherwise, the strength is $$$\\min (m_1, m_2)$$$.The total strength of the deployment is the sum of the strengths for all connected areas. Determine the expected total strength of the deployment on any single day."
  },
  {
    "title": "Aquatic Dragon",
    "url": "https://codeforces.com/problemset/problem/2045/D",
    "description": "You live in an archipelago consisting of $$$N$$$ islands (numbered from $$$1$$$ to $$$N$$$) laid out in a single line. Island $$$i$$$ is adjacent to island $$$i+1$$$, for $$$1 \\leq i < N$$$. Between adjacent islands $$$i$$$ and $$$i+1$$$, there is a pair of one-directional underwater tunnels: one that allows you to walk from island $$$i$$$ to island $$$i+1$$$ and one for the opposite direction. Each tunnel can only be traversed at most once.You also have a dragon with you. It has a stamina represented by a non-negative integer. The stamina is required for the dragon to perform its abilities: swim and fly. Initially, its stamina is $$$0$$$.Your dragon's stamina can be increased as follows. There is a magical shrine on each island $$$i$$$ that will immediately increase your dragon's stamina by $$$P_i$$$ (regardless the position of the dragon) when you visit island $$$i$$$ for the first time. This event takes no time.When you are on an island, there are $$$3$$$ moves that you can perform.  Swim with your dragon to an adjacent island if your dragon and you are on the same island. You can perform if your dragon's stamina is at least $$$D$$$. This move reduces your dragon's stamina by $$$D$$$, and it takes $$$T_s$$$ seconds to perform.  Fly with your dragon to an adjacent island if your dragon and you are on the same island. You can perform this move if your dragon's stamina is not $$$0$$$. This move sets your dragon's stamina to $$$0$$$, and it takes $$$T_f$$$ seconds to perform.  Walk alone without your dragon to an adjacent island through the underwater tunnel. This move takes $$$T_w$$$ seconds to perform. Once you walk through this tunnel, it cannot be used again. Note that both swimming and flying do not use tunnels.Your dragon and you are currently on island $$$1$$$. Your mission is to go to island $$$N$$$ with your dragon. Determine the minimum possible time to complete your mission."
  },
  {
    "title": "Saraga",
    "url": "https://codeforces.com/problemset/problem/2045/C",
    "description": "The word saraga is an abbreviation of sarana olahraga, an Indonesian term for a sports facility. It is created by taking the prefix sara of the word sarana and the suffix ga of the word olahraga. Interestingly, it can also be created by the prefix sa of the word sarana and the suffix raga of the word olahraga.An abbreviation of two strings $$$S$$$ and $$$T$$$ is interesting if there are at least two different ways to split the abbreviation into two non-empty substrings such that the first substring is a prefix of $$$S$$$ and the second substring is a suffix of $$$T$$$.You are given two strings $$$S$$$ and $$$T$$$. You want to create an interesting abbreviation of strings $$$S$$$ and $$$T$$$ with minimum length, or determine if it is impossible to create an interesting abbreviation."
  },
  {
    "title": "ICPC Square",
    "url": "https://codeforces.com/problemset/problem/2045/B",
    "description": "ICPC Square is a hotel provided by the ICPC Committee for the accommodation of the participants. It consists of $$$N$$$ floors (numbered from $$$1$$$ to $$$N$$$). This hotel has a very unique elevator. If a person is currently at floor $$$x$$$, by riding the elevator once, they can go to floor $$$y$$$ if and only if $$$y$$$ is a multiple of $$$x$$$ and $$$y - x \\leq D$$$.You are currently at floor $$$S$$$. You want to go to the highest possible floor by riding the elevator zero or more times. Determine the highest floor you can reach."
  },
  {
    "title": "Scrambled Scrabble",
    "url": "https://codeforces.com/problemset/problem/2045/A",
    "description": "You are playing a word game using a standard set of $$$26$$$ uppercase English letters: A — Z. In this game, you can form vowels and consonants as follows.  The letters A, E, I, O, and U can only form a vowel.  The letter Y can form either a vowel or a consonant.  Each of the remaining letters other than A, E, I, O, U, and Y can only form a consonant.  The string NG can form a single consonant when concatenated together. Denote a syllable as a concatenation of a consonant, a vowel, and a consonant in that order. A word is a concatenation of one or more syllables.You are given a string $$$S$$$ and you want to create a word from it. You are allowed to delete zero or more letters from $$$S$$$ and rearrange the remaining letters to form the word. Find the length of the longest word that can be created, or determine if no words can be created."
  },
  {
    "title": "Hard Demon Problem",
    "url": "https://codeforces.com/problemset/problem/2044/H",
    "description": "Swing is opening a pancake factory! A good pancake factory must be good at flattening things, so Swing is going to test his new equipment on 2D matrices.Swing is given an $$$n \\times n$$$ matrix $$$M$$$ containing positive integers. He has $$$q$$$ queries to ask you. For each query, he gives you four integers $$$x_1$$$, $$$y_1$$$, $$$x_2$$$, $$$y_2$$$ and asks you to flatten the submatrix bounded by $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ into an array $$$A$$$. Formally, $$$A = [M_{(x1,y1)}, M_{(x1,y1+1)}, \\ldots, M_{(x1,y2)}, M_{(x1+1,y1)}, M_{(x1+1,y1+1)}, \\ldots, M_{(x2,y2)}]$$$. The following image depicts the flattening of a submatrix bounded by the red dotted lines. The orange arrows denote the direction that the elements of the submatrix are appended to the back of $$$A$$$, and $$$A$$$ is shown at the bottom of the image.     Afterwards, he asks you for the value of $$$\\sum_{i=1}^{|A|} A_i \\cdot i$$$ (sum of $$$A_i \\cdot i$$$ over all $$$i$$$)."
  },
  {
    "title": "Medium Demon Problem (hard version)",
    "url": "https://codeforces.com/problemset/problem/2044/G2",
    "description": "This is the hard version of the problem. The key difference between the two versions is highlighted in bold.A group of $$$n$$$ spiders has come together to exchange plushies. Initially, each spider has $$$1$$$ plushie. Every year, if spider $$$i$$$ has at least one plushie, he will give exactly one plushie to spider $$$r_i$$$. Otherwise, he will do nothing. Note that all plushie transfers happen at the same time. In this version, each spider is allowed to have more than 1 plushie at any point in time.The process is stable in the current year if each spider has the same number of plushies (before the current year's exchange) as he did the previous year (before the previous year's exchange). Note that year $$$1$$$ can never be stable.Find the first year in which the process becomes stable."
  },
  {
    "title": "Medium Demon Problem (easy version)",
    "url": "https://codeforces.com/problemset/problem/2044/G1",
    "description": "This is the easy version of the problem. The key difference between the two versions is highlighted in bold.A group of $$$n$$$ spiders has come together to exchange plushies. Initially, each spider has $$$1$$$ plushie. Every year, if spider $$$i$$$ has at least one plushie, he will give exactly one plushie to spider $$$r_i$$$. Otherwise, he will do nothing. Note that all plushie transfers happen at the same time. In this version, if any spider has more than $$$1$$$ plushie at any point in time, they will throw all but $$$1$$$ away.The process is stable in the current year if each spider has the same number of plushies (before the current year's exchange) as he did the previous year (before the previous year's exchange). Note that year $$$1$$$ can never be stable.Find the first year in which the process becomes stable."
  },
  {
    "title": "Easy Demon Problem",
    "url": "https://codeforces.com/problemset/problem/2044/F",
    "description": "For an arbitrary grid, Robot defines its beauty to be the sum of elements in the grid. Robot gives you an array $$$a$$$ of length $$$n$$$ and an array $$$b$$$ of length $$$m$$$. You construct a $$$n$$$ by $$$m$$$ grid $$$M$$$ such that $$$M_{i,j}=a_i\\cdot b_j$$$ for all $$$1 \\leq i \\leq n$$$ and $$$1 \\leq j \\leq m$$$.Then, Robot gives you $$$q$$$ queries, each consisting of a single integer $$$x$$$. For each query, determine whether or not it is possible to perform the following operation exactly once so that $$$M$$$ has a beauty of $$$x$$$:  Choose integers $$$r$$$ and $$$c$$$ such that $$$1 \\leq r \\leq n$$$ and $$$1 \\leq c \\leq m$$$  Set $$$M_{i,j}$$$ to be $$$0$$$ for all ordered pairs $$$(i,j)$$$ such that $$$i=r$$$, $$$j=c$$$, or both. Note that queries are not persistent, meaning that you do not actually set any elements to $$$0$$$ in the process — you are only required to output if it is possible to find $$$r$$$ and $$$c$$$ such that if the above operation is performed, the beauty of the grid will be $$$x$$$. Also, note that you must perform the operation for each query, even if the beauty of the original grid is already $$$x$$$."
  },
  {
    "title": "Insane Problem",
    "url": "https://codeforces.com/problemset/problem/2044/E",
    "description": "Wave is given five integers $$$k$$$, $$$l_1$$$, $$$r_1$$$, $$$l_2$$$, and $$$r_2$$$. Wave wants you to help her count the number of ordered pairs $$$(x, y)$$$ such that all of the following are satisfied:  $$$l_1 \\leq x \\leq r_1$$$.  $$$l_2 \\leq y \\leq r_2$$$.  There exists a non-negative integer $$$n$$$ such that $$$\\frac{y}{x} = k^n$$$. "
  },
  {
    "title": "Harder Problem",
    "url": "https://codeforces.com/problemset/problem/2044/D",
    "description": "Given a sequence of positive integers, a positive integer is called a mode of the sequence if it occurs the maximum number of times that any positive integer occurs. For example, the mode of $$$[2,2,3]$$$ is $$$2$$$. Any of $$$9$$$, $$$8$$$, or $$$7$$$ can be considered to be a mode of the sequence $$$[9,9,8,8,7,7]$$$. You gave UFO an array $$$a$$$ of length $$$n$$$. To thank you, UFO decides to construct another array $$$b$$$ of length $$$n$$$ such that $$$a_i$$$ is a mode of the sequence $$$[b_1, b_2, \\ldots, b_i]$$$ for all $$$1 \\leq i \\leq n$$$. However, UFO doesn't know how to construct array $$$b$$$, so you must help her. Note that $$$1 \\leq b_i \\leq n$$$ must hold for your array for all $$$1 \\leq i \\leq n$$$."
  },
  {
    "title": "Hard Problem",
    "url": "https://codeforces.com/problemset/problem/2044/C",
    "description": "Ball is the teacher in Paperfold University. The seats of his classroom are arranged in $$$2$$$ rows with $$$m$$$ seats each.Ball is teaching $$$a + b + c$$$ monkeys, and he wants to assign as many monkeys to a seat as possible. Ball knows that $$$a$$$ of them only want to sit in row $$$1$$$, $$$b$$$ of them only want to sit in row $$$2$$$, and $$$c$$$ of them have no preference. Only one monkey may sit in each seat, and each monkey's preference must be followed if it is seated.What is the maximum number of monkeys that Ball can seat?"
  },
  {
    "title": "Normal Problem",
    "url": "https://codeforces.com/problemset/problem/2044/B",
    "description": "A string consisting of only characters 'p', 'q', and 'w' is painted on a glass window of a store. Ship walks past the store, standing directly in front of the glass window, and observes string $$$a$$$. Ship then heads inside the store, looks directly at the same glass window, and observes string $$$b$$$.Ship gives you string $$$a$$$. Your job is to find and output $$$b$$$."
  },
  {
    "title": "Easy Problem",
    "url": "https://codeforces.com/problemset/problem/2044/A",
    "description": "Cube is given an integer $$$n$$$. She wants to know how many ordered pairs of positive integers $$$(a,b)$$$ there are such that $$$a=n-b$$$. Since Cube is not very good at math, please help her!"
  },
  {
    "title": "Problem with Queries",
    "url": "https://codeforces.com/problemset/problem/2043/G",
    "description": "You are given an array $$$a$$$, consisting of $$$n$$$ integers. Your task is to process $$$q$$$ queries of two types:   $$$1~p~x$$$ — set the value of the element at index $$$p$$$ equal to $$$x$$$;  $$$2~l~r$$$ — count the number of pairs of indices $$$(i, j)$$$ such that $$$l \\le i < j \\le r$$$ and $$$a_i \\ne a_j$$$. Note that the queries in this task are encoded; each subsequent query can only be decoded after calculating the answer to the preceding query of the second type."
  },
  {
    "title": "Nim",
    "url": "https://codeforces.com/problemset/problem/2043/F",
    "description": "Recall the rules of the game \"Nim\". There are $$$n$$$ piles of stones, where the $$$i$$$-th pile initially contains some number of stones. Two players take turns choosing a non-empty pile and removing any positive (strictly greater than $$$0$$$) number of stones from it. The player unable to make a move loses the game.You are given an array $$$a$$$, consisting of $$$n$$$ integers. Artem and Ruslan decided to play Nim on segments of this array. Each of the $$$q$$$ rounds is defined by a segment $$$(l_i, r_i)$$$, where the elements $$$a_{l_i}, a_{l_i+1}, \\dots, a_{r_i}$$$ represent the sizes of the piles of stones.Before the game starts, Ruslan can remove any number of piles from the chosen segment. However, at least one pile must remain, so in a single round he can remove at most $$$(r_i - l_i)$$$ piles. He is allowed to remove $$$0$$$ piles. After the removal, the game is played on the remaining piles within the segment.All rounds are independent: the changes made in one round do not affect the original array or any other rounds.Ruslan wants to remove as many piles as possible so that Artem, who always makes the first move, loses.For each round, determine:   the maximum number of piles Ruslan can remove;  the number of ways to choose the maximum number of piles for removal. Two ways are considered different if there exists an index $$$i$$$ such that the pile at index $$$i$$$ is removed in one way but not in the other. Since the number of ways can be large, output it modulo $$$998\\,244\\,353$$$.If Ruslan cannot ensure Artem's loss in a particular round, output -1 for that round."
  },
  {
    "title": "Matrix Transformation",
    "url": "https://codeforces.com/problemset/problem/2043/E",
    "description": "You are given two matrices $$$A$$$ and $$$B$$$ of size $$$n \\times m$$$, filled with integers between $$$0$$$ and $$$10^9$$$. You can perform the following operations on matrix $$$A$$$ in any order and any number of times:  &=: choose two integers $$$i$$$ and $$$x$$$ ($$$1 \\le i \\le n$$$, $$$x \\ge 0$$$) and replace each element in row $$$i$$$ with the result of the bitwise AND operation between $$$x$$$ and that element. Formally, for every $$$j \\in [1, m]$$$, the element $$$A_{i,j}$$$ is replaced with $$$A_{i,j} \\text{ & } x$$$;   |=: choose two integers $$$j$$$ and $$$x$$$ ($$$1 \\le j \\le m$$$, $$$x \\ge 0$$$) and replace each element in column $$$j$$$ with the result of the bitwise OR operation between $$$x$$$ and that element. Formally, for every $$$i \\in [1, n]$$$, the element $$$A_{i,j}$$$ is replaced with $$$A_{i,j} \\text{ | } x$$$. The value of $$$x$$$ may be chosen differently for different operations.Determine whether it is possible to transform matrix $$$A$$$ into matrix $$$B$$$ using the given operations any number of times (including zero)."
  },
  {
    "title": "Problem about GCD",
    "url": "https://codeforces.com/problemset/problem/2043/D",
    "description": "Given three integers $$$l$$$, $$$r$$$, and $$$G$$$, find two integers $$$A$$$ and $$$B$$$ ($$$l \\le A \\le B \\le r$$$) such that their greatest common divisor (GCD) equals $$$G$$$ and the distance $$$|A - B|$$$ is maximized.If there are multiple such pairs, choose the one where $$$A$$$ is minimized. If no such pairs exist, output \"-1 -1\"."
  },
  {
    "title": "Sums on Segments",
    "url": "https://codeforces.com/problemset/problem/2043/C",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers, where all elements except for at most one are equal to $$$-1$$$ or $$$1$$$. The remaining element $$$x$$$ satisfies $$$-10^9 \\le x \\le 10^9$$$.Find all possible sums of subarrays of $$$a$$$, including the empty subarray, whose sum is defined as $$$0$$$. In other words, find all integers $$$x$$$ such that the array $$$a$$$ has at least one subarray (possibly empty) with sum equal to $$$x$$$. A subarray is a contiguous subsegment of an array.Output these sums in ascending order. Each sum should be printed only once, even if it is achieved by multiple subarrays."
  },
  {
    "title": "Digits",
    "url": "https://codeforces.com/problemset/problem/2043/B",
    "description": "Artem wrote the digit $$$d$$$ on the board exactly $$$n!$$$ times in a row. So, he got the number $$$dddddd \\dots ddd$$$ (exactly $$$n!$$$ digits).Now he is curious about which odd digits from $$$1$$$ to $$$9$$$ divide the number written on the board."
  },
  {
    "title": "Coin Transformation",
    "url": "https://codeforces.com/problemset/problem/2043/A",
    "description": "Initially, you have a coin with value $$$n$$$. You can perform the following operation any number of times (possibly zero):  transform one coin with value $$$x$$$, where $$$x$$$ is greater than $$$3$$$ ($$$x>3$$$), into two coins with value $$$\\lfloor \\frac{x}{4} \\rfloor$$$. What is the maximum number of coins you can have after performing this operation any number of times?"
  },
  {
    "title": "Two Subarrays",
    "url": "https://codeforces.com/problemset/problem/2042/F",
    "description": "You are given two integer arrays $$$a$$$ and $$$b$$$, both of size $$$n$$$.Let's define the cost of the subarray $$$[l, r]$$$ as $$$a_l + a_{l + 1} + \\cdots + a_{r - 1} + a_r + b_l + b_r$$$. If $$$l=r$$$, then the cost of the subarray is $$$a_l + 2 \\cdot b_l$$$.You have to perform queries of three types:   \"$$$1$$$ $$$p$$$ $$$x$$$\" — assign $$$a_{p} := x$$$;  \"$$$2$$$ $$$p$$$ $$$x$$$\" — assign $$$b_{p} := x$$$;  \"$$$3$$$ $$$l$$$ $$$r$$$\" — find two non-empty non-overlapping subarrays within the segment $$$[l, r]$$$ with the maximum total cost and print their total cost. "
  },
  {
    "title": "Vertex Pairs",
    "url": "https://codeforces.com/problemset/problem/2042/E",
    "description": "You are given a tree consisting of $$$2n$$$ vertices. Recall that a tree is a connected undirected graph with no cycles. Each vertex has an integer from $$$1$$$ to $$$n$$$ written on it. Each value from $$$1$$$ to $$$n$$$ is written on exactly two different vertices. Each vertex also has a cost —vertex $$$i$$$ costs $$$2^i$$$.You need to choose a subset of vertices of the tree such that:   the subset is connected; that is, from each vertex in the subset, you can reach every other vertex in the subset by passing only through the vertices in the subset;  each value from $$$1$$$ to $$$n$$$ is written on at least one vertex in the subset. Among all such subsets, you need to find the one with the smallest total cost of the vertices in it. Note that you are not required to minimize the number of vertices in the subset."
  },
  {
    "title": "Recommendations",
    "url": "https://codeforces.com/problemset/problem/2042/D",
    "description": "Suppose you are working in some audio streaming service. The service has nn active users and 10910^9 tracks users can listen to. Users can like tracks and, based on likes, the service should recommend them new tracks.Tracks are numbered from 11 to 10910^9. It turned out that tracks the ii-th user likes form a segment [li,ri][l_i, r_i].Let's say that the user jj is a predictor for user ii (j≠ij \\neq i) if user jj likes all tracks the ii-th user likes (and, possibly, some other tracks too).Also, let's say that a track is strongly recommended for user ii if the track is not liked by the ii-th user yet, but it is liked by every predictor for the ii-th user.Calculate the number of strongly recommended tracks for each user ii. If a user doesn't have any predictors, then print 00 for that user."
  },
  {
    "title": "Competitive Fishing",
    "url": "https://codeforces.com/problemset/problem/2042/C",
    "description": "Alice and Bob participate in a fishing contest! In total, they caught $$$n$$$ fishes, numbered from $$$1$$$ to $$$n$$$ (the bigger the fish, the greater its index). Some of these fishes were caught by Alice, others — by Bob.Their performance will be evaluated as follows. First, an integer $$$m$$$ will be chosen, and all fish will be split into $$$m$$$ non-empty groups. The first group should contain several (at least one) smallest fishes, the second group — several (at least one) next smallest fishes, and so on. Each fish should belong to exactly one group, and each group should be a contiguous subsegment of fishes. Note that the groups are numbered in exactly that order; for example, the fishes from the second group cannot be smaller than the fishes from the first group, since the first group contains the smallest fishes.Then, each fish will be assigned a value according to its group index: each fish in the first group gets value equal to $$$0$$$, each fish in the second group gets value equal to $$$1$$$, and so on. So, each fish in the $$$i$$$-th group gets value equal to $$$(i-1)$$$.The score of each contestant is simply the total value of all fishes that contestant caught.You want Bob's score to exceed Alice's score by at least $$$k$$$ points. What is the minimum number of groups ($$$m$$$) you have to split the fishes into? If it is impossible, you should report that."
  },
  {
    "title": "Game with Colored Marbles",
    "url": "https://codeforces.com/problemset/problem/2042/B",
    "description": "Alice and Bob play a game. There are $$$n$$$ marbles, the $$$i$$$-th of them has color $$$c_i$$$. The players take turns; Alice goes first, then Bob, then Alice again, then Bob again, and so on.During their turn, a player must take one of the remaining marbles and remove it from the game. If there are no marbles left (all $$$n$$$ marbles have been taken), the game ends.Alice's score at the end of the game is calculated as follows:  she receives $$$1$$$ point for every color $$$x$$$ such that she has taken at least one marble of that color;  additionally, she receives $$$1$$$ point for every color $$$x$$$ such that she has taken all marbles of that color (of course, only colors present in the game are considered). For example, suppose there are $$$5$$$ marbles, their colors are $$$[1, 3, 1, 3, 4]$$$, and the game goes as follows: Alice takes the $$$1$$$-st marble, then Bob takes the $$$3$$$-rd marble, then Alice takes the $$$5$$$-th marble, then Bob takes the $$$2$$$-nd marble, and finally, Alice takes the $$$4$$$-th marble. Then, Alice receives $$$4$$$ points: $$$3$$$ points for having at least one marble for colors $$$1$$$, $$$3$$$ and $$$4$$$, and $$$1$$$ point for having all marbles of color $$$4$$$. Note that this strategy is not necessarily optimal for both players.Alice wants to maximize her score at the end of the game. Bob wants to minimize it. Both players play optimally (i. e. Alice chooses a strategy which allows her to get as many points as possible, and Bob chooses a strategy which minimizes the amount of points Alice can get).Calculate Alice's score at the end of the game."
  },
  {
    "title": "Greedy Monocarp",
    "url": "https://codeforces.com/problemset/problem/2042/A",
    "description": "There are $$$n$$$ chests; the $$$i$$$-th chest initially contains $$$a_i$$$ coins. For each chest, you can choose any non-negative ($$$0$$$ or greater) number of coins to add to that chest, with one constraint: the total number of coins in all chests must become at least $$$k$$$.After you've finished adding coins to the chests, greedy Monocarp comes, who wants the coins. He will take the chests one by one, and since he is greedy, he will always choose the chest with the maximum number of coins. Monocarp will stop as soon as the total number of coins in chests he takes is at least $$$k$$$.You want Monocarp to take as few coins as possible, so you have to add coins to the chests in such a way that, when Monocarp stops taking chests, he will have exactly $$$k$$$ coins. Calculate the minimum number of coins you have to add."
  },
  {
    "title": "Railway Construction",
    "url": "https://codeforces.com/problemset/problem/2041/N",
    "description": "The country of Truckski is located in a rugged, mountainous region, and the geological condition has engendered a wide range of issues. The challenging terrain separates the different states in the country, resulting in an extremely inconvenient inter-state commute and more crucially a lack of central governmental control. Adding on top of that is a rampant crime rate that increases annually, and this severely disrupts the everyday lives of innocent citizens.A recent protest finally shed light on the situation, as the newly elected president has announced an ambitious project to resolve these issues. Her plan consists of two major components. The first is the construction of high-speed railways between the states to facilitate better connections and unity across the country. Since the states are mostly running independently from each other, to construct a railway between states $$$u$$$ and $$$v$$$, the government has to pay a fee of $$$a_u + a_v$$$ dollars, with $$$a_u$$$ dollars given to state $$$u$$$ and $$$a_v$$$ dollars given to state $$$v$$$. The railway operates bidirectionally, meaning that once it is built, people from state $$$u$$$ can now travel to state $$$v$$$ and vice versa. A railway can be built between almost any pair of states, except for $$$m$$$ particular pairs for which the terrain dividing them is so treacherous that the construction of a direct railroad between the two states becomes impossible.The second component of the project is to build a centralized prison that manages all criminals across the country. Given the large number of estimated prisoners, the president decided to pick one of the states to build the central prison and sever the connection from the state to the rest of the country.   An illustration for the sample input 1. (a) The costs of building direct railways between the states. (b) Consider building the central prison in State #3. All direct railroads that do not involve State #3 have to be built, with a total cost of $$$3+3+2=8$$$ dollars. Given the above, the president would like to search for the minimum cost plan to construct railroads between the states so that:  the state with the central prison should not have any railway connecting it to any other states, and  all the other states should be connected, i.e., people should be able to travel from one such state to another, possibly by taking more than one train. You are working for the team in charge of the overall planning of the construction. The meeting with the president is happening in just a few hours, at which time you will have to brief her on the cost of different construction plans. Please calculate, for each state $$$u$$$, the minimum cost plan to construct railroads between states meeting the above conditions when $$$u$$$ is where the central prison is built."
  },
  {
    "title": "Selection Sort",
    "url": "https://codeforces.com/problemset/problem/2041/M",
    "description": "  Every student enrolled in the algorithms course is required to submit an assignment this week. The task is to implement an $$$O(n^2)$$$-time algorithm to sort $$$n$$$ given integers in non-decreasing order. Alice has already completed her assignment, and her implementation is shown below. int alice_sort(int *s, int n){  for(int i = 0; i < n; ++i){    for(int j = i + 1; j < n; ++j){      if(s[i] > s[j]){        int swap = s[i];        s[i] = s[j];        s[j] = swap;      }    }  }  return 0;}While you have access to Alice's code, you prefer not to simply copy it. Instead, you want to use Alice's sorting function as a building block for your own solution. There are two ways as listed below you can utilize her function, but each of them can be applied at most once. The order in which these two operations are invoked can be arbitrary.  Prefix sort: choose a length $$$i \\in \\{1, 2, \\ldots, n\\}$$$ and call $$$\\texttt{alicesort(}s, i\\texttt{)}$$$. This sorts the first $$$i$$$ elements in the array $$$s$$$.  Suffix sort: choose a length $$$i \\in \\{1, 2, \\ldots, n\\}$$$ and call $$$\\texttt{alicesort(}s+n-i, i\\texttt{)}$$$. This sorts the last $$$i$$$ elements in the array $$$s$$$. Due to the time complexity of the sorting algorithm, the cost of performing either a prefix or suffix sort is $$$i^2$$$, where $$$i$$$ is the length of the chosen subarray. Your goal is to determine the minimum cost to sort the input array $$$s$$$ of $$$n$$$ integers in non-decreasing order using Alice's function, following the rules mentioned above.For example, Let $$$s=[3,2,5,5,4,1]$$$. We can first perform a suffix sort of length $$$4$$$, and the array becomes $$$[3,2,1,4,5,5]$$$. Then, we perform a prefix sort of length $$$3$$$, and the array becomes $$$[1,2,3,4,5,5]$$$, which is a sorted array. The cost is $$$4^2+3^2=25$$$. Here is another example, let $$$s=[4,3,2,1]$$$. We can complete the sorting by performing only a prefix sort of length $$$4$$$, and the cost is $$$4^2=16$$$."
  },
  {
    "title": "Building Castle",
    "url": "https://codeforces.com/problemset/problem/2041/L",
    "description": "A-Ju has a gorgeous castle in which she often enjoys living. However, she gets tired of living in the castle for a long time. Thus, she decides to rebuild her castle into some specific shape to make her it more beautiful.Let's say we represent A-Ju's castle as a 2D convex polygon∗^{\\text{∗}} on the 2D plane. A-Ju aims to rebuild her castle into a point symmetric convex polygon. Here, a polygon is point symmetric if there exists a center cc such that for every point pp in the polygon, the reflection p′p^\\prime of pp across cc is also in the polygon.While designing an arbitrary point symmetric convex polygon shape is easy, the cost of rebuilding is very high. After some estimation, A-Ju found that the cost of rebuilding is proportional to the area of the symmetric difference†^{\\text{†}} between the original castle and the new castle. See the following figure for an example:  In the example above, A-Ju's castle is a shape of the convex polygon formed by points (3,7)−(2,1)−(6,3)(3, 7) - (2, 1) - (6, 3). After rebuilding her castle into the shape of the polygon formed by (3,7)−(73,3)−(133,13)−(5,133)(3, 7) - (\\frac{7}{3}, 3) - (\\frac{13}{3}, \\frac{1}{3}) - (5, \\frac{13}{3}), the area of the symmetric difference between these two polygons will be 113\\frac{11}{3}. The difference can be calculated as the sum of the additional area (represented by the green grid region) and the shaved area (represented by the red line region).Please write a program that helps A-Ju design a blueprint of the new castle, such that the area of the symmetric difference between the original one and the new one is minimized. You only need to output the minimum value since A-Ju wants to estimate her cost first.∗^{\\text{∗}}A polygon PP is convex if for every two points p,q∈Pp, q \\in P, the line segment connecting them is also contained in PP, i.e., tp+(1−t)q∈Ptp + (1-t)q \\in P for all t∈[0,1]t \\in [0, 1]. Equivalently, it is a polygon whose interior angles are all less than 180∘180^{\\circ}.†^{\\text{†}}The symmetric difference of two polygons is the part of the 2D plane that belongs to exactly one polygon."
  },
  {
    "title": "Trophic Balance Species",
    "url": "https://codeforces.com/problemset/problem/2041/K",
    "description": "   Image generated by ChatGPT 4o. In an interdisciplinary collaboration, an ecosystem scientist and a computer scientist join forces to analyze the structure of a complex ecosystem using computational methods. The ecosystem scientist models the ecosystem as a directed graph $$$D = (V, A)$$$, where each species is represented by a node $$$v \\in V$$$, and each feeding relationship is represented as a directed edge $$$(x, y) \\in A$$$ from prey $$$x$$$ to predator $$$y$$$. This graph structure allows them to simulate the flow of energy throughout the ecosystem from one species to another.Two essential features of the ecosystem are defined:  Independent Trophic Group: A set $$$S$$$ of animal species is classified as an independent trophic group if no species $$$x \\in S$$$ can reach another species $$$y \\in S$$$ (for some $$$y \\ne x$$$) through a series of directed feeding relationships, meaning there is no directed path in $$$D$$$ from $$$x$$$ to $$$y$$$.  Trophic Balance Species: A species is termed a trophic balance species if it has a nearly equal number of species that affect it as directly or indirectly predators (species it can reach via a directed path in $$$D$$$, excluding itself) and species that affect it as directly or indirectly prey (species that can reach it via a directed path in $$$D$$$, excluding itself). Specifically, trophic balance species are those for which the absolute difference between the above two numbers is minimum among all species in the ecosystem. Consider an ecosystem with $$$n = 4$$$ species and $$$m = 3$$$ feeding relationships:   Species 1: Grass (Node 1)   Species 2: Rabbits (Node 2)   Species 3: Foxes (Node 3)   Species 4: Hawks (Node 4) The directed edges representing the feeding relationships are as follows:   $$$(1, 2)$$$: Grass is eaten by Rabbits.   $$$(2, 3)$$$: Rabbits are eaten by Foxes.   $$$(2, 4)$$$: Rabbits are also eaten by Hawks. Now, consider the set $$$S=\\{3,4\\}$$$ (Foxes and Hawks). There are no directed paths between Foxes (Node 3) and Hawks (Node 4); Foxes cannot reach Hawks, and Hawks cannot reach Foxes through any directed paths. Therefore, this set qualifies as an independent trophic group.Examination of Species Species 1 (Grass):      Can reach: 3 (Rabbits, Foxes, and Hawks)    Can be reached by: 0 (None)    Absolute difference: $$$|3 - 0| = 3$$$     Species 2 (Rabbits):     Can reach: 2 (Foxes and Hawks)    Can be reached by: 1 (Grass)    Absolute difference: $$$|2 - 1| = 1$$$   Species 3 (Foxes):     Can reach: 0 (None)    Can be reached by: 2 (Grass and Rabbits)    Absolute difference: $$$|0-2| = 2$$$   Species 4 (Hawks):     Can reach: 0 (None)    Can be reached by: 2 (Grass and Rabbits)    Absolute difference: $$$|0-2| = 2$$$   Among these species, Rabbits have the smallest absolute difference of $$$1$$$, indicating that they are a trophic balance species within the ecosystem. It is known that any independent trophic group in the ecosystem has a size of at most $$$k$$$. The task is to find the set of all trophic balance species in the ecosystem."
  },
  {
    "title": "Bottle Arrangement",
    "url": "https://codeforces.com/problemset/problem/2041/J",
    "description": "   Image generated by ChatGPT 4o. Mayaw works in a renowned Epah (aboriginal Taiwanese millet wine; Epah is the Pangcah term for aboriginal Taiwanese millet wine, named in the language of the Pangcah people, the largest Indigenous group in Taiwan) bar in the Fata'an Village. To showcase the depth of its collections, the bar has a two-row wine rack where each row can fit exactly $$$n$$$ bottles. There are already $$$n$$$ bottles placed on the back row of the rack, where the $$$i$$$-th bottle from left has height $$$a_i$$$. The owner of the bar has another $$$n$$$ bottles with distinct heights $$$b_1, \\ldots, b_n$$$ that he would like Mayaw to put on the first row. To ensure that all bottles on the rack are visible, the owner requires that each bottle on the back row should not be blocked by the one put in front of it. That is, if a bottle of height $$$h$$$ is put on the $$$i$$$-th spot (from left) in the first row, then $$$h$$$ must be less than $$$a_i$$$. However, not all such arrangements are good for the owner. To pay tributes to the Maxi Mountain nearby, he additionally demands that the bottles in the front row should display a mountain-like shape. In particular, the heights of the bottles, when listing from left to right, should form a sequence that is first (non-strictly) increasing and then (non-strictly) decreasing.Unfortunately, sometimes it is impossible to achieve owner's requirements. That is why Mayaw is also allowed to slightly reduce a bottle's height by removing its cap that has a height of $$$1$$$. In other words, after the removal of the cap, the height of the bottle decreases by exactly $$$1$$$. Of course, exposing the Epah inside the bottle to the open air is detrimental to its quality, and therefore it is desirable to remove as few bottle caps as possible.Can you help Mayaw determine the minimum number of caps needed to be removed so that he can arrange the bottles in a way that satisfies the owner's requirements? Note that the positions of the bottles in the back row are fixed and Mayaw is not allowed to modify them."
  },
  {
    "title": "Auto Complete",
    "url": "https://codeforces.com/problemset/problem/2041/I",
    "description": "  You are designing a snazzy new text editor, and you want to add a nifty auto-complete feature to help users save time. Here is how it will work: if a user types \"App\", your editor will magically suggest the word \"Application\"! Even better, users can personalize the words that auto-complete in your editor.Your editor will support 4 kinds of operations (Let's say the current text in your editor is $$$t$$$):   Add an auto complete pattern $$$p_i$$$.  Delete an auto complete pattern $$$p_i$$$.  Append a string $$$s$$$ to the end of $$$t$$$.  Delete $$$c$$$ characters from the end of $$$t$$$. Note that if $$$c$$$ is larger then the length of $$$t$$$, delete all the characters from $$$t$$$. After each action, your editor should suggest an auto-complete candidate $$$i$$$ that matches the following criteria:   The string $$$p_i$$$ has a prefix equal to $$$t$$$.  If there are multiple $$$p_i$$$, pick the longest one.  If there are still multiple $$$p_i$$$, pick the one with the smallest lexicographic order.  If there are still multiple $$$p_i$$$, pick the one with the smallest ID.  To simplify the question, for each action, print the suggested auto complete pattern ID. If there's no match, print -1.For example, let us say we have three candidates: \"alice\", \"bob\", and \"charlie\", with ID 1, 2, and 3. At first, there is nothing on the screen, so \"charlie\" (3) should be suggested because it is the longest. Then, let us say the user types \"b\". You should suggest \"bob\" (2) because it is the only one that starts with \"b\". Finally, let us say the user type \"body\". You should print -1 because there is no matched pattern."
  },
  {
    "title": "Sheet Music",
    "url": "https://codeforces.com/problemset/problem/2041/H",
    "description": "   Image generated by ChatGPT 4o. Alice likes singing. As a singing enthusiast, Alice has listened to countless songs and has tried singing them many times. However, occasionally, some songs make Alice feel bored. After some research, Alice believes that this is because even though the songs she chose are all different, due to her instinctive preference, they all turn out to be musically similar to one another.To thoroughly analyze this, Alice decided to study the sheet music of the songs. For convenience, Alice represented a song of length nn as an integer sequence a1,a2,…,ana_1, a_2, \\ldots, a_n, where aia_i is the pitch of the ii-th note. Then she defined the musical equivalence between songs. Two songs a1,a2,…,ana_1, a_2, \\ldots, a_n and b1,b2,…,bnb_1, b_2, \\ldots, b_n of length nn are musically equivalent if for all 1≤i<n1\\leq i<n, both ai,ai+1a_i, a_{i+1} and bi,bi+1b_{i}, b_{i+1} have the same pitch relationship. More specifically, ai,ai+1a_i, a_{i+1} and bi,bi+1b_i, b_{i+1} have the same pitch relationship if either   ai<ai+1a_i < a_{i + 1} and bi<bi+1b_i < b_{i + 1},  ai=ai+1a_i = a_{i + 1} and bi=bi+1b_i = b_{i + 1}, or  ai>ai+1a_i > a_{i + 1} and bi>bi+1b_i > b_{i + 1}.  For example, 1,2,3,3,21, 2, 3, 3, 2 and 5,9,13,13,15, 9, 13, 13, 1 are musically equivalent, while 1,2,3,2,11, 2, 3, 2, 1 and 1,2,2,2,11, 2, 2, 2, 1 are not. Having practiced consistently for a long time, Alice is able to sing any note in the range of [1,k][1, k]. She wants to know how many different songs of length nn within her range there are, if we treat musically equivalent songs as the same one. Can you help her calculate the number?Since the answer might be large, print the answer modulo 998244353998244353."
  },
  {
    "title": "Grid Game",
    "url": "https://codeforces.com/problemset/problem/2041/G",
    "description": "Claire loves drawing lines. She receives a sheet of paper with an $$$n \\times n$$$ grid and begins drawing \"lines\" on it. Well—the concept of a \"line\" here is not what we usually think of. Claire refers each line to be a set of consecutive vertical grid cells. When she draws a line, these cells are all covered with black ink. Initially, all the cells are white, and drawing lines turns some of them black. After drawing a few lines, Claire wonders: how many ways she can color an additional white cell black so that the remaining white cells do not form a single connected component.Two cells are directly connected if they share an edge. Two cells $$$x$$$ and $$$y$$$ are indirectly connected if there exists a sequence of cells $$$c_0, c_1, \\ldots, c_k$$$ with $$$k > 1$$$ such that $$$c_0 = x$$$, $$$c_k = y$$$, and for every $$$i \\in \\{1, 2, \\ldots, k\\}$$$ the cells $$$c_i$$$ and $$$c_{i-1}$$$ are directly connected. A set of cells forms a single connected component if each pair of cells in the set is either directly or indirectly connected.The grid has $$$n$$$ rows and $$$n$$$ columns, both indexed from $$$1$$$ to $$$n$$$. Claire will draw $$$q$$$ lines. The $$$i$$$-th line is drawn in the $$$y_i$$$-th column, from the $$$s_i$$$-th row to the $$$f_i$$$-th row, where $$$s_i \\leq f_i$$$ for each $$$i \\in \\{1, 2, \\ldots, q\\}$$$. Note that the cells that are passed by at least one of the $$$q$$$ lines are colored black. The following figure shows an example of a $$$20\\times 20$$$ grid with $$$q=67$$$ lines. The grid cells marked with red star symbols refer to the cells such that, if Claire colors that cell black, all white cells no longer form a single connected component.  You may assume that, after drawing the $$$q$$$ lines, the remaining white cells form a single connected component with at least three white cells."
  },
  {
    "title": "Segmentation Folds",
    "url": "https://codeforces.com/problemset/problem/2041/F",
    "description": "Peter loves folding segments. There is a segment on a number line occupying the interval $$$[\\ell, r]$$$. Since it is the prime time for folding the segments, Peter decides to fold the segment carefully. In each step, he chooses one of the two following operations whenever possible:  Operation $$$\\tt{LTR}$$$: he folds the segment from left to right, where $$$\\ell$$$ coincides with a point $$$x$$$ ($$$\\ell < x \\le r$$$) such that $$$\\ell+x$$$ is a prime number$$$^{\\text{∗}}$$$. When Peter chooses this operation, he always chooses the largest possible value $$$x$$$. Note that the segment occupies the interval $$$[\\frac{1}{2}(\\ell+x), r]$$$ afterwards.  Operation $$$\\tt{RTL}$$$: he folds the segment from right to left, where $$$r$$$ coincides with a point $$$x$$$ ($$$\\ell \\le x < r$$$) such that $$$r+x$$$ is a prime number. When Peter chooses this operation, he always chooses the smallest possible value $$$x$$$. Note that the segment occupies the interval $$$[\\ell, \\frac{1}{2}(r+x)]$$$ afterwards. A folding sequence refers to a sequence of operations specified above. Peter wants to fold the segment several times, resulting in the shortest possible interval whose length that cannot be further reduced. The length of an interval $$$[\\ell, r]$$$ is defined naturally to be $$$r-\\ell$$$. Let's consider the following example. Suppose that we are folding a segment initially occupying the interval $$$[1, 30]$$$. There are three folding sequences that lead to the shortest possible resulting interval, as shown in the following figure.  Please help Peter determine the number of folding sequences such that the resulting interval has a shortest possible length. Output the number modulo $$$998244353$$$.$$$^{\\text{∗}}$$$Recall that an integer $$$p>1$$$ is a prime number if there do not exist integers $$$a, b>1$$$ such that $$$p=ab$$$."
  },
  {
    "title": "Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/2041/E",
    "description": "   Image generated by ChatGPT 4o. A-Ming's birthday is coming and his friend A-May decided to give him an integer array as a present. A-Ming has two favorite numbers $$$a$$$ and $$$b$$$, and he thinks an array is beautiful if its mean is exactly $$$a$$$ and its median is exactly $$$b$$$. Please help A-May find a beautiful array so her gift can impress A-Ming.The mean of an array is its sum divided by its length. For example, the mean of array $$$[3, -1, 5, 5]$$$ is $$$12 \\div 4 = 3$$$.The median of an array is its middle element after sorting if its length is odd, or the mean of two middle elements after sorting if its length is even. For example, the median of $$$[1, 1, 2, 4, 8]$$$ is $$$2$$$ and the median of $$$[3, -1, 5, 5]$$$ is $$$(3 + 5) \\div 2 = 4$$$.Note that the mean and median are not rounded to an integer. For example, the mean of array $$$[1, 2]$$$ is $$$1.5$$$."
  },
  {
    "title": "Drunken Maze",
    "url": "https://codeforces.com/problemset/problem/2041/D",
    "description": "   Image generated by ChatGPT 4o. You are given a two-dimensional maze with a start and end position. Your task is to find the fastest way to get from the start to the end position. The fastest way is to make the minimum number of steps where one step is going left, right, up, or down. Of course, you cannot walk through walls.There is, however, a catch: If you make more than three steps in the same direction, you lose balance and fall down. Therefore, it is forbidden to make more than three consecutive steps in the same direction. It is okay to walk three times to the right, then one step to the left, and then again three steps to the right. This has the same effect as taking five steps to the right, but is slower."
  },
  {
    "title": "Cube",
    "url": "https://codeforces.com/problemset/problem/2041/C",
    "description": "  You are given an $$$n\\times n\\times n$$$ big three-dimensional cube that contains $$$n^3$$$ numbers. You have to choose $$$n$$$ of those numbers so that their sum is as small as possible. It is, however, forbidden to choose two numbers that are located in the same plane. That is, if we identify the positions in the cube by three Cartesian coordinates, then choosing two numbers from positions $$$(x,y,z)$$$ and $$$(x',y',z')$$$ is forbidden if $$$x=x'$$$, $$$y=y'$$$, or $$$z=z'$$$."
  },
  {
    "title": "Bowling Frame",
    "url": "https://codeforces.com/problemset/problem/2041/B",
    "description": "Bowling is a national sport in Taiwan; everyone in the country plays the sport on a daily basis since their youth. Naturally, there are a lot of bowling alleys all over the country, and the competition between them is as intense as you can imagine.Maw-Shang owns one such bowling alley. To stand out from other competitors in the industry and draw attention from customers, he decided to hold a special event every month that features various unorthodox bowling rules. For the event this month, he came up with a new version of the game called X-pin bowling. In the traditional $$$10$$$-pin bowling game, a frame is built out of ten bowling pins forming a triangular shape of side length four. The pin closest to the player forms the first row, and the two pins behind it form the second row, and so on. Unlike the standard version, the game of $$$X$$$-pin bowling Maw-Shang designed allows a much larger number of pins that form a larger frame. The following figure shows a standard $$$10$$$-pin frame on the left, and on the right it shows a $$$21$$$-pin frame that forms a triangular shape of side length six which is allowed in the game of $$$X$$$-pin bowling.  Being the national sport, the government of Taiwan strictly regulates and standardizes the manufacturing of bowling pins. There are two types of bowling pins allowed, one in black and the other in white, and the bowling alley Maw-Shang owns has $$$w$$$ white pins and $$$b$$$ black pins. To make this new game exciting for the customers, Maw-Shang wants to build the largest possible frame from these $$$w+b$$$ pins. However, even though he is okay with using both colors in building the frame, for aesthetic reasons, Maw-Shang still wants the colors of the pins on the same row to be identical. For example, the following figure shows two possible frames of side length six, but only the left one is acceptable to Maw-Shang since the other one has white and black pins mixed in the third row.  The monthly special event is happening in just a few hours. Please help Maw-Shang calculate the side length of the largest frame that he can build from his $$$w+b$$$ pins!"
  },
  {
    "title": "The Bento Box Adventure",
    "url": "https://codeforces.com/problemset/problem/2041/A",
    "description": "   Image generated by ChatGPT 4o. Boxed meals in Taiwan are very common, offering convenient and affordable nutrition-balanced choices for students and office workers. These meals typically include a variety of vegetables, protein, and rice, providing a well-rounded diet. With numerous options available at local self-service restaurants, they are a popular choice for those looking for a quick, healthy lunch.There are five Taiwanese self-service restaurants numbered from 1 to 5. You plan to visit a different restaurant each day from Monday to Friday to pack a boxed meal for lunch. You've already visited one restaurant from Monday to Thursday, each time visiting a different one. Now, it's Friday, and you want to visit the last remaining restaurant that you haven't been to yet this week.Write a program that takes as input the four restaurants you've already visited (one for each day from Monday to Thursday) and outputs the restaurant you should visit on Friday."
  },
  {
    "title": "Number of Cubes",
    "url": "https://codeforces.com/problemset/problem/2040/F",
    "description": "Consider a rectangular parallelepiped with sides $$$a$$$, $$$b$$$, and $$$c$$$, that consists of unit cubes of $$$k$$$ different colors. We can apply cyclic shifts to the parallelepiped in any of the three directions any number of times$$$^{\\text{∗}}$$$.There are $$$d_i$$$ cubes of the $$$i$$$-th color ($$$1 \\le i \\le k$$$). How many different parallelepipeds (with the given sides) can be formed from these cubes, no two of which can be made equal by some combination of cyclic shifts?$$$^{\\text{∗}}$$$On the image:   Top left shows the top view of the original parallelepiped. Lower layers will shift in the same way as the top layer.  Top right shows the top view of a parallelepiped shifted to the right by $$$1$$$.  Bottom left shows the top view of a parallelepiped shifted down by $$$2$$$.  Bottom right shows the top view of a parallelepiped shifted to the right by $$$1$$$ and down by $$$2$$$.    "
  },
  {
    "title": "Control of Randomness",
    "url": "https://codeforces.com/problemset/problem/2040/E",
    "description": "You are given a tree with $$$n$$$ vertices.Let's place a robot in some vertex $$$v \\ne 1$$$, and suppose we initially have $$$p$$$ coins. Consider the following process, where in the $$$i$$$-th step (starting from $$$i = 1$$$):  If $$$i$$$ is odd, the robot moves to an adjacent vertex in the direction of vertex $$$1$$$;  Else, $$$i$$$ is even. You can either pay one coin (if there are some left) and then the robot moves to an adjacent vertex in the direction of vertex $$$1$$$, or not pay, and then the robot moves to an adjacent vertex chosen uniformly at random. The process stops as soon as the robot reaches vertex $$$1$$$. Let $$$f(v, p)$$$ be the minimum possible expected number of steps in the process above if we spend our coins optimally.Answer $$$q$$$ queries, in the $$$i$$$-th of which you have to find the value of $$$f(v_i, p_i)$$$, modulo$$$^{\\text{∗}}$$$ $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$ Formally, let $$$M = 998\\,244\\,353$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$. "
  },
  {
    "title": "Non Prime Tree",
    "url": "https://codeforces.com/problemset/problem/2040/D",
    "description": "You are given a tree with $$$n$$$ vertices.You need to construct an array $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$, consisting of unique integers from $$$1$$$ to $$$2 \\cdot n$$$, and such that for each edge $$$u_i \\leftrightarrow v_i$$$ of the tree, the value $$$|a_{u_i} - a_{v_i}|$$$ is not a prime number.Find any array that satisfies these conditions, or report that there is no such array."
  },
  {
    "title": "Ordered Permutations",
    "url": "https://codeforces.com/problemset/problem/2040/C",
    "description": " Consider a permutation$$$^{\\text{∗}}$$$ $$$p_1, p_2, \\ldots, p_n$$$ of integers from $$$1$$$ to $$$n$$$. We can introduce the following sum for it$$$^{\\text{†}}$$$:$$$$$$S(p) = \\sum_{1 \\le l \\le r \\le n} \\min(p_l, p_{l + 1}, \\ldots, p_r)$$$$$$Let us consider all permutations of length $$$n$$$ with the maximum possible value of $$$S(p)$$$. Output the $$$k$$$-th of them in lexicographical$$$^{\\text{‡}}$$$order, or report that there are less than $$$k$$$ of them.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$For example:   For the permutation $$$[1, 2, 3]$$$ the value of $$$S(p)$$$ is equal to $$$\\min(1) + \\min(1, 2) + \\min(1, 2, 3) + \\min(2) + \\min(2, 3) + \\min(3) =$$$ $$$1 + 1 + 1 + 2 + 2 + 3 = 10$$$  For the permutation $$$[2, 4, 1, 3]$$$ the value of $$$S(p)$$$ is equal to $$$\\min(2) + \\min(2, 4) + \\min(2, 4, 1) + \\min(2, 4, 1, 3) \\ +$$$ $$$ \\min(4) + \\min(4, 1) + \\min(4, 1, 3) \\ +$$$ $$$\\min(1) + \\min(1, 3) \\ +$$$ $$$\\min(3) =$$$ $$$2 + 2 + 1 + 1 + 4 + 1 + 1 + 1 + 1 + 3 = 17$$$. $$$^{\\text{‡}}$$$An array $$$a$$$ is lexicographically smaller than an array $$$b$$$ if and only if one of the following holds:   $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$; or  in the first position where $$$a$$$ and $$$b$$$ differ, the array $$$a$$$ has a smaller element than the corresponding element in $$$b$$$.  "
  },
  {
    "title": "Paint a Strip",
    "url": "https://codeforces.com/problemset/problem/2040/B",
    "description": "You have an array of zeros $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$.You can perform two types of operations on it:   Choose an index $$$i$$$ such that $$$1 \\le i \\le n$$$ and $$$a_i = 0$$$, and assign $$$1$$$ to $$$a_i$$$;  Choose a pair of indices $$$l$$$ and $$$r$$$ such that $$$1 \\le l \\le r \\le n$$$, $$$a_l = 1$$$, $$$a_r = 1$$$, $$$a_l + \\ldots + a_r \\ge \\lceil\\frac{r - l + 1}{2}\\rceil$$$, and assign $$$1$$$ to $$$a_i$$$ for all $$$l \\le i \\le r$$$. What is the minimum number of operations of the first type needed to make all elements of the array equal to one?"
  },
  {
    "title": "Game of Division",
    "url": "https://codeforces.com/problemset/problem/2040/A",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$ and an integer $$$k$$$.Two players are playing a game. The first player chooses an index $$$1 \\le i \\le n$$$. Then the second player chooses a different index $$$1 \\le j \\le n, i \\neq j$$$. The first player wins if $$$|a_i - a_j|$$$ is not divisible by $$$k$$$. Otherwise, the second player wins.We play as the first player. Determine whether it is possible to win, and if so, which index $$$i$$$ should be chosen.The absolute value of a number $$$x$$$ is denoted by $$$|x|$$$ and is equal to $$$x$$$ if $$$x \\ge 0$$$, and $$$-x$$$ otherwise."
  },
  {
    "title": "Cool Swap Walk (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2039/H2",
    "description": "This is the hard version of the problem. The only difference is the maximum number of operations you can perform. You can only make hacks if both versions are solved.You are given an array $$$a$$$ of size $$$n$$$.A cool swap walk is the following process:  In an $$$n \\times n$$$ grid, we note the cells in row $$$i$$$ and column $$$j$$$ as $$$(i, j)$$$. You need to walk from $$$(1,1)$$$ to $$$(n,n)$$$, taking only steps to the right or down. Formally, if you are in $$$(x,y)$$$ currently, you can step to either $$$(x+1,y)$$$ or $$$(x,y+1)$$$, but you can not step beyond the boundaries of the grid. When you step in $$$(i,j)$$$, you must swap $$$a_i$$$ and $$$a_j$$$ when $$$i \\neq j$$$.You can perform at most $$$n+4$$$ cool swap walks. Sort the array $$$a_1, a_2, \\ldots, a_n$$$ in non-decreasing order. We can show that it's always possible to do so."
  },
  {
    "title": "Cool Swap Walk (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2039/H1",
    "description": "This is the easy version of the problem. The only difference is the maximum number of operations you can perform. You can only make hacks if both versions are solved.You are given an array $$$a$$$ of size $$$n$$$.A cool swap walk is the following process:  In an $$$n \\times n$$$ grid, we note the cells in row $$$i$$$ and column $$$j$$$ as $$$(i, j)$$$. You need to walk from $$$(1,1)$$$ to $$$(n,n)$$$, taking only steps to the right or down. Formally, if you are in $$$(x,y)$$$ currently, you can step to either $$$(x+1,y)$$$ or $$$(x,y+1)$$$, but you can not step beyond the boundaries of the grid. When you step in $$$(i,j)$$$, you must swap $$$a_i$$$ and $$$a_j$$$ when $$$i \\neq j$$$.You can perform at most $$$2n+4$$$ cool swap walks. Sort the array $$$a_1, a_2, \\ldots, a_n$$$ in non-decreasing order. We can show that it's always possible to do so."
  },
  {
    "title": "Shohag Loves Pebae",
    "url": "https://codeforces.com/problemset/problem/2039/G",
    "description": "Shohag has a tree with $$$n$$$ nodes.Pebae has an integer $$$m$$$. She wants to assign each node a value — an integer from $$$1$$$ to $$$m$$$. So she asks Shohag to count the number, modulo $$$998\\,244\\,353$$$, of assignments such that following conditions are satisfied:  For each pair $$$1 \\le u \\lt v \\le n$$$, the least common multiple (LCM) of the values of the nodes in the unique simple path from $$$u$$$ to $$$v$$$ is not divisible by the number of nodes in the path.  The greatest common divisor (GCD) of the values of all nodes from $$$1$$$ to $$$n$$$ is $$$1$$$. But this problem is too hard for Shohag to solve. As Shohag loves Pebae, he has to solve the problem. Please save Shohag!"
  },
  {
    "title": "Shohag Loves Counting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2039/F2",
    "description": "This is the hard version of the problem. The only differences between the two versions of this problem are the constraints on $$$t$$$, $$$m$$$, and the sum of $$$m$$$. You can only make hacks if both versions of the problem are solved.For an integer array $$$a$$$ of length $$$n$$$, define $$$f(k)$$$ as the greatest common divisor (GCD) of the maximum values of all subarrays$$$^{\\text{∗}}$$$ of length $$$k$$$. For example, if the array is $$$[2, 1, 4, 6, 2]$$$, then $$$f(3) = \\operatorname{gcd}(\\operatorname{max}([2, 1, 4]), \\operatorname{max}([1, 4, 6]), \\operatorname{max}([4, 6, 2])) = \\operatorname{gcd}(4, 6, 6) = 2$$$.An array is good if $$$f(i) \\neq f(j)$$$ is satisfied over all pairs $$$1 \\le i \\lt j \\le n$$$.Shohag has an integer $$$m$$$. Help him count the number, modulo $$$998\\,244\\,353$$$, of non-empty good arrays of arbitrary length such that each element of the array is an integer from $$$1$$$ to $$$m$$$.$$$^{\\text{∗}}$$$An array $$$d$$$ is a subarray of an array $$$c$$$ if $$$d$$$ can be obtained from $$$c$$$ by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end."
  },
  {
    "title": "Shohag Loves Counting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2039/F1",
    "description": "This is the easy version of the problem. The only differences between the two versions of this problem are the constraints on tt, mm, and the sum of mm. You can only make hacks if both versions of the problem are solved.For an integer array aa of length nn, define f(k)f(k) as the greatest common divisor (GCD) of the maximum values of all subarrays∗^{\\text{∗}} of length kk. For example, if the array is [2,1,4,6,2][2, 1, 4, 6, 2], then f(3)=gcd(max([2,1,4]),max([1,4,6]),max([4,6,2]))=gcd(4,6,6)=2f(3) = \\operatorname{gcd}(\\operatorname{max}([2, 1, 4]), \\operatorname{max}([1, 4, 6]), \\operatorname{max}([4, 6, 2])) = \\operatorname{gcd}(4, 6, 6) = 2.An array is good if f(i)≠f(j)f(i) \\neq f(j) is satisfied over all pairs 1≤i<j≤n1 \\le i \\lt j \\le n.Shohag has an integer mm. Help him count the number, modulo 998244353998\\,244\\,353, of non-empty good arrays of arbitrary length such that each element of the array is an integer from 11 to mm.∗^{\\text{∗}}An array dd is a subarray of an array cc if dd can be obtained from cc by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end."
  },
  {
    "title": "Shohag Loves Inversions",
    "url": "https://codeforces.com/problemset/problem/2039/E",
    "description": "Shohag has an array $$$a$$$ of integers. Initially $$$a = [0, 1]$$$. He can repeatedly perform the following operation any number of times:  Let $$$k$$$ be the number of inversions$$$^{\\text{∗}}$$$ in the current array $$$a$$$.  Insert $$$k$$$ at any position in $$$a$$$, including the beginning or the end. For example, if $$$a = [4, 6, 2, 4]$$$, then the number of inversions is $$$k = 3$$$. So Shohag can obtain the following arrays after the operation: $$$[\\textbf{3}, 4, 6, 2, 4]$$$, $$$[4, \\textbf{3}, 6, 2, 4]$$$, $$$[4, 6, \\textbf{3}, 2, 4]$$$, $$$[4, 6, 2, \\textbf{3}, 4]$$$, and $$$[4, 6, 2, 4, \\textbf{3}]$$$.Given an integer $$$n$$$, help Shohag count, modulo $$$998\\,244\\,353$$$, the number of distinct arrays of length $$$n$$$ that can be obtained after performing the operations.$$$^{\\text{∗}}$$$The number of inversions in an array $$$a$$$ is the number of pairs of indices ($$$i$$$, $$$j$$$) such that $$$i < j$$$ and $$$a_i > a_j$$$."
  },
  {
    "title": "Shohag Loves GCD",
    "url": "https://codeforces.com/problemset/problem/2039/D",
    "description": "Shohag has an integer $$$n$$$ and a set $$$S$$$ of $$$m$$$ unique integers. Help him find the lexicographically largest$$$^{\\text{∗}}$$$ integer array $$$a_1, a_2, \\ldots, a_n$$$ such that $$$a_i \\in S$$$ for each $$$1 \\le i \\le n$$$ and $$$a_{\\operatorname{gcd}(i, j)} \\neq \\operatorname{gcd}(a_i, a_j)$$$$$$^{\\text{†}}$$$ is satisfied over all pairs $$$1 \\le i \\lt j \\le n$$$, or state that no such array exists.$$$^{\\text{∗}}$$$An array $$$a$$$ is lexicographically larger than an array $$$b$$$ of the same length if $$$a \\ne b$$$, and in the first position where $$$a$$$ and $$$b$$$ differ, the array $$$a$$$ has a larger element than the corresponding element in $$$b$$$.$$$^{\\text{†}}$$$$$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$. "
  },
  {
    "title": "Shohag Loves XOR (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2039/C2",
    "description": "This is the hard version of the problem. The differences between the two versions are highlighted in bold. You can only make hacks if both versions of the problem are solved.Shohag has two integers $$$x$$$ and $$$m$$$. Help him count the number of integers $$$1 \\le y \\le m$$$ such that $$$x \\oplus y$$$ is divisible$$$^{\\text{∗}}$$$ by either $$$x$$$, $$$y$$$, or both. Here $$$\\oplus$$$ is the bitwise XOR operator.$$$^{\\text{∗}}$$$The number $$$a$$$ is divisible by the number $$$b$$$ if there exists an integer $$$c$$$ such that $$$a = b \\cdot c$$$."
  },
  {
    "title": "Shohag Loves XOR (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2039/C1",
    "description": "This is the easy version of the problem. The differences between the two versions are highlighted in bold. You can only make hacks if both versions of the problem are solved.Shohag has two integers $$$x$$$ and $$$m$$$. Help him count the number of integers $$$1 \\le y \\le m$$$ such that $$$\\mathbf{x \\neq y}$$$ and $$$x \\oplus y$$$ is a divisor$$$^{\\text{∗}}$$$ of either $$$x$$$, $$$y$$$, or both. Here $$$\\oplus$$$ is the bitwise XOR operator.$$$^{\\text{∗}}$$$The number $$$b$$$ is a divisor of the number $$$a$$$ if there exists an integer $$$c$$$ such that $$$a = b \\cdot c$$$."
  },
  {
    "title": "Shohag Loves Strings",
    "url": "https://codeforces.com/problemset/problem/2039/B",
    "description": "For a string $$$p$$$, let $$$f(p)$$$ be the number of distinct non-empty substrings$$$^{\\text{∗}}$$$ of $$$p$$$.Shohag has a string $$$s$$$. Help him find a non-empty string $$$p$$$ such that $$$p$$$ is a substring of $$$s$$$ and $$$f(p)$$$ is even or state that no such string exists.$$$^{\\text{∗}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end."
  },
  {
    "title": "Shohag Loves Mod",
    "url": "https://codeforces.com/problemset/problem/2039/A",
    "description": "Shohag has an integer $$$n$$$. Please help him find an increasing integer sequence $$$1 \\le a_1 \\lt a_2 \\lt \\ldots \\lt a_n \\le 100$$$ such that $$$a_i \\bmod i \\neq a_j \\bmod j$$$ $$$^{\\text{∗}}$$$ is satisfied over all pairs $$$1 \\le i \\lt j \\le n$$$.It can be shown that such a sequence always exists under the given constraints.$$$^{\\text{∗}}$$$$$$a \\bmod b$$$ denotes the remainder of $$$a$$$ after division by $$$b$$$. For example, $$$7 \\bmod 3 = 1, 8 \\bmod 4 = 0$$$ and $$$69 \\bmod 10 = 9$$$."
  },
  {
    "title": "Fixing the Expression",
    "url": "https://codeforces.com/problemset/problem/2038/N",
    "description": "An expression is a string consisting of three characters, where the first and the last characters are digits (from $$$0$$$ to $$$9$$$), and the middle character is a comparison symbol (<, = or >).An expression is true if the comparison symbol matches the digits (for example, if the first digit is strictly less than the last digit, the comparison symbol should be <).For example, the expressions 1<3, 4>2, 0=0 are true, while 5>5, 7<3 are not.You are given a string $$$s$$$, which is an expression. Change as few characters as possible so that $$$s$$$ becomes a true expression. Note that if $$$s$$$ is already true, you should leave it as it is."
  },
  {
    "title": "Royal Flush",
    "url": "https://codeforces.com/problemset/problem/2038/M",
    "description": "Consider the following game. There is a deck, which consists of cards of $$$n$$$ different suits. For each suit, there are $$$13$$$ cards in the deck, all with different ranks (the ranks are $$$2$$$, $$$3$$$, $$$4$$$, ..., $$$10$$$, Jack, Queen, King and Ace).Initially, the deck is shuffled randomly (all $$$(13n)!$$$ possible orders of cards have the same probability). You draw $$$5$$$ topmost cards from the deck. Then, every turn of the game, the following events happen, in the given order:  if the cards in your hand form a Royal Flush (a $$$10$$$, a Jack, a Queen, a King, and an Ace, all of the same suit), you win, and the game ends;  if you haven't won yet, and the deck is empty, you lose, and the game ends;  if the game hasn't ended yet, you may choose any cards from your hand (possibly, all of them) and discard them. When a card is discarded, it is removed from the game;  finally, you draw cards from the deck, until you have $$$5$$$ cards or the deck becomes empty. Your goal is to find a strategy that allows you to win in the minimum expected number of turns. Note that the turn when the game ends is not counted (for example, if the $$$5$$$ cards you draw initially already form a Royal Flush, you win in $$$0$$$ turns).Calculate the minimum possible expected number of turns required to win the game."
  },
  {
    "title": "Bridge Renovation",
    "url": "https://codeforces.com/problemset/problem/2038/L",
    "description": "Recently, Monocarp started working as a director of a park located near his house. The park is quite large, so it even has a small river splitting it into several zones. Several bridges are built across this river. Three of these bridges are especially old and need to be repaired.All three bridges have the same length but differ in width. Their widths are $$$18$$$, $$$21$$$ and $$$25$$$ units, respectively.During the park renovation process, Monocarp has to replace the old planks that served as the surface of the bridges with the new ones.  Planks are sold with a standard length of $$$60$$$ units. Monocarp already knows that he needs $$$n$$$ planks for each bridge. But since the bridges have different widths, he needs $$$n$$$ planks of length $$$18$$$ for the first bridge, $$$n$$$ planks of length $$$21$$$ for the second one, and $$$n$$$ planks of length $$$25$$$ for the last one.Workers in charge of renovation have no problem with cutting planks into parts but refuse to join planks, since it creates weak spots and looks ugly.Monocarp wants to buy as few planks as possible but struggles to calculate the required number of planks. Can you help him?"
  },
  {
    "title": "Grid Walk",
    "url": "https://codeforces.com/problemset/problem/2038/K",
    "description": "You have an $$$n \\times n$$$ grid and two integers $$$a$$$ and $$$b$$$. Both the rows and the columns are numbered from $$$1$$$ to $$$n$$$. Let's denote the cell at the intersection of the $$$i$$$-th row and the $$$j$$$-th column as $$$(i, j)$$$.You are standing in the cell $$$(1, 1)$$$ and want to move into the cell $$$(n, n)$$$.Suppose you are in the cell $$$(i, j)$$$; in one step, you can move either into the cell $$$(i, j + 1)$$$ or into the cell $$$(i + 1, j)$$$ if the corresponding cells exist.Let's define the cost of the cell $$$(i, j)$$$ as $$$c(i, j) = \\gcd(i, a) + \\gcd(j, b)$$$ (here, $$$\\gcd(x,y)$$$ denotes the greatest common divisor of $$$x$$$ and $$$y$$$). The cost of the route from $$$(1, 1)$$$ to $$$(n, n)$$$ is the sum of costs of the visited cells (including the starting cell and the finishing cell).  Find the route with minimum possible cost and print its cost."
  },
  {
    "title": "Waiting for...",
    "url": "https://codeforces.com/problemset/problem/2038/J",
    "description": "Monocarp is waiting for a bus at the bus stop. Unfortunately, there are many people who want to ride a bus too.You are given a list of events of two types:   B bib_i — a bus with bib_i free seats arrives at the stop;  P pip_i — pip_i people arrive at the stop. These events are listed in a chronological order. When a bus arrives, the following happens. All people at the bus stop (except for Monocarp) try to enter the bus. If there are enough free seats for all of them, then they all enter the bus. Otherwise, some people remain at the bus stop (the number of people who enter the bus is equal to the number of free seats).If there is still at least one free seat after all people (except for Monocarp) enter the bus, then Monocarp can decide to enter this bus as well (but he might choose to wait for another bus). For each bus, you have to determine if it is possible for Monocarp to take that bus."
  },
  {
    "title": "Polyathlon",
    "url": "https://codeforces.com/problemset/problem/2038/I",
    "description": "Berland is this year's host country of the International Collegiate Polyathlon Competition! Similar to biathlon being a competition of two sports, polyathlon is a competition of many sports. This year, there are mm sports. Also, there are nn participants in the event. The sports are numbered from 11 to mm, and the participants are numbered from 11 to nn.Some participants are skilled in multiple sports. You are given a binary matrix n×mn \\times m such that the jj-th character of the ii-th row is 1 if the ii-th participant is skilled in the jj-th sport, and 0, otherwise. It's also known that, for each pair of participants, there exists at least one sport such that one of them is skilled in that sport and the other one isn't.The order of sports in the competition is determined at the opening ceremony. Historically, it's done by the almighty Random Number Generator. A random number xx from 11 to mm is rolled. The competition then starts with the sport xx, then the sport (xmodm+1)(x \\bmod m + 1) is played, then the sport ((x+1)modm+1)((x + 1) \\bmod m + 1), and so on.Each sport is played as follows. If all remaining participants (all participants which are not eliminated yet) are not skilled in that sport, everyone goes through to the next sport. Otherwise, all skilled participants go through to the next sport, and all unskilled participants are eliminated from the competition. Once there is a single participant remaining in the competition, the competition ends, and that participant is declared the winner.As an organizer of the competition, you are curious of the possible outcomes of the competition beforehand (not that you are going to rig the random roll, how could you possibly think that...). For each sport xx, print the index of the winner if the competition starts with the sport xx."
  },
  {
    "title": "Galactic Council",
    "url": "https://codeforces.com/problemset/problem/2038/H",
    "description": "Monocarp plays a computer game. In this game, he maintains a space empire. The empire is governed by nn political parties. Initially, every party has political power equal to 00, and there is no ruling party.During each of the next mm turns, the following happens:  initially, Monocarp has to choose which party he supports. He can support any party, except for the ruling party. When Monocarp supports a party, its political power is increased by 11. If Monocarp supports the ii-th party during the jj-th turn, his score increases by ai,ja_{i,j} points;  then, the elections happen, and the party with the maximum political power is chosen as the ruling party (if there are multiple such parties, the party with the lowest index among them is chosen). The former ruling party is replaced, unless it is chosen again;  finally, an event happens. At the end of the jj-th turn, the party pjp_j must be the ruling party to prevent a bad outcome of the event, otherwise Monocarp loses the game. Determine which party Monocarp has to support during each turn so that he doesn't lose the game due to the events, and the score he achieves is the maximum possible. Initially, Monocarp's score is 00."
  },
  {
    "title": "Guess One Character",
    "url": "https://codeforces.com/problemset/problem/2038/G",
    "description": "This is an interactive problem. You have to use flush operation right after printing each line. For example, in C++ you should use the function fflush(stdout) or cout.flush(), in Java or Kotlin — System.out.flush(), and in Python — sys.stdout.flush().The jury has a string $$$s$$$ consisting of characters 0 and/or 1. The length of this string is $$$n$$$. You can ask the following queries:  $$$1$$$ $$$t$$$ — \"how many times does $$$t$$$ appear in $$$s$$$ as a contiguous substring?\" Here, $$$t$$$ should be a string consisting of characters 0 and/or 1; its length should be at least $$$1$$$ and at most $$$n$$$. For example, if the string $$$s$$$ is 111011 and the string $$$t$$$ is 11, the response to the query is $$$3$$$. You have to guess at least one character in the string $$$s$$$ by asking no more than $$$3$$$ queries. Note that giving the answer does not count as a query.In every test and in every test case, the string $$$s$$$ is fixed beforehand."
  },
  {
    "title": "Alternative Platforms",
    "url": "https://codeforces.com/problemset/problem/2038/F",
    "description": "Suppose you are working in the Ministry of Digital Development of Berland, and your task is to monitor the industry of video blogging.There are $$$n$$$ bloggers in Berland. Recently, due to the poor state of the main video platform in Berland, two alternative platforms were introduced. That's why bloggers started to reupload their videos to these alternative platforms. You've got the statistics that the $$$i$$$-th blogger uploaded $$$v_i$$$ videos to the first alternative platform and $$$r_i$$$ videos to the second alternative platform.You think that a potential user will be upset if even at least one of his favorite bloggers doesn't upload anything. However, if a blogger uploads videos to both platforms, the user will watch that blogger on the platform where more videos are available. So, you've come up with the following function to estimate user experience. Suppose a user watches $$$k$$$ bloggers $$$b_1, b_2, \\dots, b_k$$$; then, let user experience be $$$$$$E(b_1, \\dots, b_k) = \\max\\left(\\min_{i=1..k}{v[b_i]}, \\min_{i=1..k}{r[b_i]}\\right).$$$$$$In order to get some statistics, you want to calculate the value $$$\\mathit{avg}_k$$$ that is equal to an average experience among all subsets of bloggers of size $$$k$$$. Also, you have to calculate $$$\\mathit{avg}_k$$$ for each $$$k$$$ from $$$1$$$ to $$$n$$$.Since answers may be too large, print them modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Barrels",
    "url": "https://codeforces.com/problemset/problem/2038/E",
    "description": "Suppose you have nn water barrels standing in a row, numbered from 11 to nn.All barrels are equal and have a bottom area equal to one unit, so the volume of the water inside a barrel is equal to the height of the water column. Initially, the ii-th barrel has viv_i units of water.Adjacent barrels are connected by pipes. In other words, for each ii from 11 to n−1n - 1, barrels ii and i+1i + 1 are connected by a single horizontal pipe at height hih_i. The widths of the pipes are negligible. These pipes allow water to flow between barrels.  Now you want to play with barrels. Your plan is to maximize the volume of the water in the first barrel by throwing clay into barrels. In one step, you can choose any barrel and throw one unit of clay into it. One unit of clay has the same volume as one unit of water. Clay is heavier than water and doesn't mix with it, so it falls to the bottom of the barrel, distributing evenly.Clay has a sticky structure, so it seals pipes if the clay column is high enough. More formally, suppose the pipe is at height hh. If the height of the clay column is also \\boldsymbol{h}\\boldsymbol{h} (or lower), the pipe is working. But the moment you add more clay into the barrel, the pipe becomes sealed instantly, preventing any water from moving between barrels.You have a mountain of clay, so you can repeat the step described above any number of times. However, between the steps, you have to wait until the water reaches the new equilibrium.What is the maximum water volume you can collect in the first barrel?Assume that the barrels are high enough, so the water doesn't overflow, and the pipe widths are negligible."
  },
  {
    "title": "Divide OR Conquer",
    "url": "https://codeforces.com/problemset/problem/2038/D",
    "description": "You are given an array [a1,a2,…an][a_1, a_2, \\ldots a_n] consisting of integers between 00 and 10910^9. You have to split this array into several segments (possibly one) in such a way that each element belongs to exactly one segment.Let the first segment be the array [al1,al1+1,…,ar1][a_{l_1}, a_{l_1 + 1}, \\ldots, a_{r_1}], the second segment be [al2,al2+1,…,ar2][a_{l_2}, a_{l_2+ 1}, \\ldots, a_{r_2}], ..., the last segment be [alk,alk+1,…,ark][a_{l_k}, a_{l_k+ 1}, \\ldots, a_{r_k}]. Since every element should belong to exactly one array, l1=1l_1 = 1, rk=nr_k = n, and ri+1=li+1r_i + 1 = l_{i+1} for each ii from 11 to k−1k-1. The split should meet the following condition: f([al1,al1+1,…,ar1])≤f([al2,al2+1,…,ar2])≤⋯≤f([alk,alk+1,…,ark])f([a_{l_1}, a_{l_1 + 1}, \\ldots, a_{r_1}]) \\le f([a_{l_2}, a_{l_2+ 1}, \\ldots, a_{r_2}]) \\le \\dots \\le f([a_{l_k}, a_{l_k+1}, \\ldots, a_{r_k}]), where f(a)f(a) is the bitwise OR of all elements of the array aa.Calculate the number of ways to split the array, and print it modulo 998244353998\\,244\\,353. Two ways are considered different if the sequences [l1,r1,l2,r2,…,lk,rk][l_1, r_1, l_2, r_2, \\ldots, l_k, r_k] denoting the splits are different."
  },
  {
    "title": "DIY",
    "url": "https://codeforces.com/problemset/problem/2038/C",
    "description": "You are given a list of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$. You need to pick $$$8$$$ elements from the list and use them as coordinates of four points. These four points should be corners of a rectangle which has its sides parallel to the coordinate axes. Your task is to pick coordinates in such a way that the resulting rectangle has the maximum possible area. The rectangle can be degenerate, i. e. its area can be $$$0$$$. Each integer can be used as many times as it occurs in the list (or less)."
  },
  {
    "title": "Make It Equal",
    "url": "https://codeforces.com/problemset/problem/2038/B",
    "description": "You are given an integer array $$$a$$$ of size $$$n$$$. The elements of the array are numbered from $$$1$$$ to $$$n$$$.You can perform the following operation any number of times (possibly, zero): choose an index $$$i$$$ from $$$1$$$ to $$$n$$$; decrease $$$a_i$$$ by $$$2$$$ and increase $$$a_{(i \\bmod n) + 1}$$$ by $$$1$$$.After you perform the operations, all elements of the array should be non-negative equal integers.Your task is to calculate the minimum number of operations you have to perform."
  },
  {
    "title": "Bonus Project",
    "url": "https://codeforces.com/problemset/problem/2038/A",
    "description": "There is a team of $$$n$$$ software engineers numbered from $$$1$$$ to $$$n$$$. Their boss promises to give them a bonus if they complete an additional project. The project requires $$$k$$$ units of work in total. The bonus promised to the $$$i$$$-th engineer is $$$a_i$$$ burles. The boss doesn't assign specific tasks to engineers; it is expected that every engineer will voluntarily complete some integer amount of work units. The bonus will be paid to the entire team only if the project is completed; in other words, if the total amount of voluntary work units on the project is greater than or equal to $$$k$$$.The amount of work that can be performed by each engineer is not limited. However, all engineers value their labour. The $$$i$$$-th engineer estimates one unit of their work as $$$b_i$$$ burles. If the bonus is paid, the benefit $$$s_i$$$ of the $$$i$$$-th engineer for completing $$$c$$$ units of work is defined as $$$s_i = a_i - c \\cdot b_i$$$. If the bonus is not paid, the engineer will not volunteer to do any work.Engineers work together for many years, so they know how the bonus is going to be distributed and how much their colleagues value the labour. That is, all $$$a_i$$$ and all $$$b_i$$$ are known to every engineer in the team.Engineers are eager to get the bonus, so they agreed on the following process of work distribution between them:   the first engineer says: \"I will complete $$$c_1$$$ units of work\", where $$$c_1$$$ is a non-negative integer;  then, the second engineer says: \"I will complete $$$c_2$$$ units of work\", where $$$c_2$$$ is a non-negative integer;  ... and so on;  finally, the $$$n$$$-th engineer says: \"I will complete $$$c_n$$$ units of work\", where $$$c_n$$$ is a non-negative integer. Every engineer voices $$$c_i$$$ in a way to maximize their own benefit $$$s_i$$$. If the expected benefit is going to be zero, an engineer will still agree to work to get the experience and to help their colleagues obtain the bonus. However, if the benefit is expected to be negative for some reason (an engineer needs to perform an excessive amount of work or the project is not going to be completed), that engineer will not work at all (completes zero amount of work units).Given that every engineer acts perfectly, your task is to find out the numbers $$$c_i$$$ voiced by every engineer."
  },
  {
    "title": "Natlan Exploring",
    "url": "https://codeforces.com/problemset/problem/2037/G",
    "description": "You are exploring the stunning region of Natlan! This region consists of $$$n$$$ cities, and each city is rated with an attractiveness $$$a_i$$$. A directed edge exists from City $$$i$$$ to City $$$j$$$ if and only if $$$i < j$$$ and $$$\\gcd(a_i,a_j)\\neq 1$$$, where $$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of integers $$$x$$$ and $$$y$$$.Starting from City $$$1$$$, your task is to determine the total number of distinct paths you can take to reach City $$$n$$$, modulo $$$998\\,244\\,353$$$. Two paths are different if and only if the set of cities visited is different."
  },
  {
    "title": "Ardent Flames",
    "url": "https://codeforces.com/problemset/problem/2037/F",
    "description": "You have obtained the new limited event character Xilonen. You decide to use her in combat.There are nn enemies in a line. The ii'th enemy from the left has health hih_i and is currently at position xix_i. Xilonen has an attack damage of mm, and you are ready to defeat the enemies with her.Xilonen has a powerful \"ground stomp\" attack. Before you perform any attacks, you select an integer pp and position Xilonen there (pp can be any integer position, including a position with an enemy currently). Afterwards, for each attack, she deals mm damage to an enemy at position pp (if there are any), m−1m-1 damage to enemies at positions p−1p-1 and p+1p+1, m−2m-2 damage to enemies at positions p−2p-2 and p+2p+2, and so on. Enemies that are at least a distance of mm away from Xilonen take no damage from attacks.Formally, if there is an enemy at position xx, she will deal max\\max(0,m - |p - x|) damage to that enemy each hit. Note that you may not choose a different pp for different attacks. Over all possible pp, output the minimum number of attacks Xilonen must perform to defeat at least kk enemies. If it is impossible to find a pp such that eventually at least kk enemies will be defeated, output -1-1 instead. Note that an enemy is considered to be defeated if its health reaches 00 or below."
  },
  {
    "title": "Kachina's Favorite Binary String",
    "url": "https://codeforces.com/problemset/problem/2037/E",
    "description": "This is an interactive problem.Kachina challenges you to guess her favorite binary string$$$^{\\text{∗}}$$$ $$$s$$$ of length $$$n$$$. She defines $$$f(l, r)$$$ as the number of subsequences$$$^{\\text{†}}$$$ of $$$\\texttt{01}$$$ in $$$s_l s_{l+1} \\ldots s_r$$$. Two subsequences are considered different if they are formed by deleting characters from different positions in the original string, even if the resulting subsequences consist of the same characters.To determine $$$s$$$, you can ask her some questions. In each question, you can choose two indices $$$l$$$ and $$$r$$$ ($$$1 \\leq l < r \\leq n$$$) and ask her for the value of $$$f(l, r)$$$.Determine and output $$$s$$$ after asking Kachina no more than $$$n$$$ questions. However, it may be the case that $$$s$$$ is impossible to be determined. In this case, you would need to report $$$\\texttt{IMPOSSIBLE}$$$ instead.Formally, $$$s$$$ is impossible to be determined if after asking $$$n$$$ questions, there are always multiple possible strings for $$$s$$$, regardless of what questions are asked. Note that if you report $$$\\texttt{IMPOSSIBLE}$$$ when there exists a sequence of at most $$$n$$$ queries that will uniquely determine the binary string, you will get the Wrong Answer verdict.$$$^{\\text{∗}}$$$A binary string only contains characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements. For example, subsequences of $$$\\mathtt{1011101}$$$ are $$$\\mathtt{0}$$$, $$$\\mathtt{1}$$$, $$$\\mathtt{11111}$$$, $$$\\mathtt{0111}$$$, but not $$$\\mathtt{000}$$$ nor $$$\\mathtt{11100}$$$."
  },
  {
    "title": "Sharky Surfing",
    "url": "https://codeforces.com/problemset/problem/2037/D",
    "description": "Mualani loves surfing on her sharky surfboard!Mualani's surf path can be modeled by a number line. She starts at position $$$1$$$, and the path ends at position $$$L$$$. When she is at position $$$x$$$ with a jump power of $$$k$$$, she can jump to any integer position in the interval $$$[x, x+k]$$$. Initially, her jump power is $$$1$$$. However, her surf path isn't completely smooth. There are $$$n$$$ hurdles on her path. Each hurdle is represented by an interval $$$[l, r]$$$, meaning she cannot jump to any position in the interval $$$[l, r]$$$. There are also $$$m$$$ power-ups at certain positions on the path. Power-up $$$i$$$ is located at position $$$x_i$$$ and has a value of $$$v_i$$$. When Mualani is at position $$$x_i$$$, she has the option to collect the power-up to increase her jump power by $$$v_i$$$. There may be multiple power-ups at the same position. When she is at a position with some power-ups, she may choose to take or ignore each individual power-up. No power-up is in the interval of any hurdle.What is the minimum number of power-ups she must collect to reach position $$$L$$$ to finish the path? If it is not possible to finish the surf path, output $$$-1$$$."
  },
  {
    "title": "Superultra's Favorite Permutation",
    "url": "https://codeforces.com/problemset/problem/2037/C",
    "description": "Superultra, a little red panda, desperately wants primogems. In his dreams, a voice tells him that he must solve the following task to obtain a lifetime supply of primogems. Help Superultra!Construct a permutation∗^{\\text{∗}} pp of length nn such that pi+pi+1p_i + p_{i+1} is composite†^{\\text{†}} over all 1≤i≤n−11 \\leq i \\leq n - 1. If it's not possible, output −1-1.∗^{\\text{∗}}A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).†^{\\text{†}}An integer xx is composite if it has at least one other divisor besides 11 and xx. For example, 44 is composite because 22 is a divisor."
  },
  {
    "title": "Intercepted Inputs",
    "url": "https://codeforces.com/problemset/problem/2037/B",
    "description": "To help you prepare for your upcoming Codeforces contest, Citlali set a grid problem and is trying to give you a $$$n$$$ by $$$m$$$ grid through your input stream. Specifically, your input stream should contain the following:  The first line contains two integers $$$n$$$ and $$$m$$$ — the dimensions of the grid.  The following $$$n$$$ lines contain $$$m$$$ integers each — the values of the grid. However, someone has intercepted your input stream, shuffled all given integers, and put them all on one line! Now, there are $$$k$$$ integers all on one line, and you don't know where each integer originally belongs. Instead of asking Citlali to resend the input, you decide to determine the values of $$$n$$$ and $$$m$$$ yourself.Output any possible value of $$$n$$$ and $$$m$$$ that Citlali could have provided."
  },
  {
    "title": "Twice",
    "url": "https://codeforces.com/problemset/problem/2037/A",
    "description": "Kinich wakes up to the start of a new day. He turns on his phone, checks his mailbox, and finds a mysterious present. He decides to unbox the present.Kinich unboxes an array $$$a$$$ with $$$n$$$ integers. Initially, Kinich's score is $$$0$$$. He will perform the following operation any number of times:  Select two indices $$$i$$$ and $$$j$$$ $$$(1 \\leq i < j \\leq n)$$$ such that neither $$$i$$$ nor $$$j$$$ has been chosen in any previous operation and $$$a_i = a_j$$$. Then, add $$$1$$$ to his score. Output the maximum score Kinich can achieve after performing the aforementioned operation any number of times."
  },
  {
    "title": "Library of Magic",
    "url": "https://codeforces.com/problemset/problem/2036/G",
    "description": "This is an interactive problem.The Department of Supernatural Phenomena at the Oxenfurt Academy has opened the Library of Magic, which contains the works of the greatest sorcerers of Redania — $$$n$$$ ($$$3 \\leq n \\leq 10^{18}$$$) types of books, numbered from $$$1$$$ to $$$n$$$. Each book's type number is indicated on its spine. Moreover, each type of book is stored in the library in exactly two copies! And you have been appointed as the librarian.One night, you wake up to a strange noise and see a creature leaving the building through a window. Three thick tomes of different colors were sticking out of the mysterious thief's backpack. Before you start searching for them, you decide to compute the numbers $$$a$$$, $$$b$$$, and $$$c$$$ written on the spines of these books. All three numbers are distinct.So, you have an unordered set of tomes, which includes one tome with each of the pairwise distinct numbers $$$a$$$, $$$b$$$, and $$$c$$$, and two tomes for all numbers from $$$1$$$ to $$$n$$$, except for $$$a$$$, $$$b$$$, and $$$c$$$. You want to find these values $$$a$$$, $$$b$$$, and $$$c$$$.Since you are not working in a simple library, but in the Library of Magic, you can only use one spell in the form of a query to check the presence of books in their place:   \"xor l r\" — Bitwise XOR query with parameters $$$l$$$ and $$$r$$$. Let $$$k$$$ be the number of such tomes in the library whose numbers are greater than or equal to $$$l$$$ and less than or equal to $$$r$$$. You will receive the result of the computation $$$v_1 \\oplus v_2 \\oplus ... \\oplus v_k$$$, where $$$v_1 ... v_k$$$ are the numbers on the spines of these tomes, and $$$\\oplus$$$ denotes the operation of bitwise exclusive OR. Since your magical abilities as a librarian are severely limited, you can make no more than $$$150$$$ queries."
  },
  {
    "title": "XORificator 3000",
    "url": "https://codeforces.com/problemset/problem/2036/F",
    "description": "Alice has been giving gifts to Bob for many years, and she knows that what he enjoys the most is performing bitwise XOR of interesting integers. Bob considers a positive integer $$$x$$$ to be interesting if it satisfies $$$x \\not\\equiv k (\\bmod 2^i)$$$. Therefore, this year for his birthday, she gifted him a super-powerful \"XORificator 3000\", the latest model.Bob was very pleased with the gift, as it allowed him to instantly compute the XOR of all interesting integers in any range from $$$l$$$ to $$$r$$$, inclusive. After all, what else does a person need for happiness? Unfortunately, the device was so powerful that at one point it performed XOR with itself and disappeared. Bob was very upset, and to cheer him up, Alice asked you to write your version of the \"XORificator\"."
  },
  {
    "title": "Reverse the Rivers",
    "url": "https://codeforces.com/problemset/problem/2036/E",
    "description": "A conspiracy of ancient sages, who decided to redirect rivers for their own convenience, has put the world on the brink. But before implementing their grand plan, they decided to carefully think through their strategy — that's what sages do.There are $$$n$$$ countries, each with exactly $$$k$$$ regions. For the $$$j$$$-th region of the $$$i$$$-th country, they calculated the value $$$a_{i,j}$$$, which reflects the amount of water in it.The sages intend to create channels between the $$$j$$$-th region of the $$$i$$$-th country and the $$$j$$$-th region of the $$$(i + 1)$$$-th country for all $$$1 \\leq i \\leq (n - 1)$$$ and for all $$$1 \\leq j \\leq k$$$. Since all $$$n$$$ countries are on a large slope, water flows towards the country with the highest number. According to the sages' predictions, after the channel system is created, the new value of the $$$j$$$-th region of the $$$i$$$-th country will be $$$b_{i,j} = a_{1,j} | a_{2,j} | ... | a_{i,j}$$$, where $$$|$$$ denotes the bitwise \"OR\" operation.After the redistribution of water, the sages aim to choose the most suitable country for living, so they will send you $$$q$$$ queries for consideration.Each query will contain $$$m$$$ requirements. Each requirement contains three parameters: the region number $$$r$$$, the sign $$$o$$$ (either \"$$$<$$$\" or \"$$$>$$$\"), and the value $$$c$$$. If $$$o$$$ = \"$$$<$$$\", then in the $$$r$$$-th region of the country you choose, the new value must be strictly less than the limit $$$c$$$, and if $$$o$$$ = \"$$$>$$$\", it must be strictly greater.In other words, the chosen country $$$i$$$ must satisfy all $$$m$$$ requirements. If in the current requirement $$$o$$$ = \"$$$<$$$\", then it must hold that $$$b_{i,r} < c$$$, and if $$$o$$$ = \"$$$>$$$\", then $$$b_{i,r} > c$$$.In response to each query, you should output a single integer — the number of the suitable country. If there are multiple such countries, output the smallest one. If no such country exists, output $$$-1$$$."
  },
  {
    "title": "I Love 1543",
    "url": "https://codeforces.com/problemset/problem/2036/D",
    "description": "One morning, Polycarp woke up and realized that $$$1543$$$ is the most favorite number in his life.The first thing that Polycarp saw that day as soon as he opened his eyes was a large wall carpet of size $$$n$$$ by $$$m$$$ cells; $$$n$$$ and $$$m$$$ are even integers. Each cell contains one of the digits from $$$0$$$ to $$$9$$$.Polycarp became curious about how many times the number $$$1543$$$ would appear in all layers$$$^{\\text{∗}}$$$ of the carpet when traversed clockwise.$$$^{\\text{∗}}$$$The first layer of a carpet of size $$$n \\times m$$$ is defined as a closed strip of length $$$2 \\cdot (n+m-2)$$$ and thickness of $$$1$$$ element, surrounding its outer part. Each subsequent layer is defined as the first layer of the carpet obtained by removing all previous layers from the original carpet."
  },
  {
    "title": "Anya and 1100",
    "url": "https://codeforces.com/problemset/problem/2036/C",
    "description": "While rummaging through things in a distant drawer, Anya found a beautiful string $$$s$$$ consisting only of zeros and ones.Now she wants to make it even more beautiful by performing $$$q$$$ operations on it.Each operation is described by two integers $$$i$$$ ($$$1 \\le i \\le |s|$$$) and $$$v$$$ ($$$v \\in \\{0, 1\\}$$$) and means that the $$$i$$$-th character of the string is assigned the value $$$v$$$ (that is, the assignment $$$s_i = v$$$ is performed).But Anya loves the number $$$1100$$$, so after each query, she asks you to tell her whether the substring \"1100\" is present in her string (i.e. there exist such $$$1 \\le i \\le |s| - 3$$$ that $$$s_{i}s_{i + 1}s_{i + 2}s_{i + 3} = \\texttt{1100}$$$)."
  },
  {
    "title": "Startup",
    "url": "https://codeforces.com/problemset/problem/2036/B",
    "description": "Arseniy came up with another business plan — to sell soda from a vending machine! For this, he purchased a machine with $$$n$$$ shelves, as well as $$$k$$$ bottles, where the $$$i$$$-th bottle is characterized by the brand index $$$b_i$$$ and the cost $$$c_i$$$. You can place any number of bottles on each shelf, but all bottles on the same shelf must be of the same brand.Arseniy knows that all the bottles he puts on the shelves of the machine will be sold. Therefore, he asked you to calculate the maximum amount he can earn."
  },
  {
    "title": "Quintomania",
    "url": "https://codeforces.com/problemset/problem/2036/A",
    "description": "Boris Notkin composes melodies. He represents them as a sequence of notes, where each note is encoded as an integer from $$$0$$$ to $$$127$$$ inclusive. The interval between two notes $$$a$$$ and $$$b$$$ is equal to $$$|a - b|$$$ semitones.Boris considers a melody perfect if the interval between each two adjacent notes is either $$$5$$$ semitones or $$$7$$$ semitones.After composing his latest melodies, he enthusiastically shows you his collection of works. Help Boris Notkin understand whether his melodies are perfect."
  },
  {
    "title": "Peak Productivity Forces",
    "url": "https://codeforces.com/problemset/problem/2035/H",
    "description": "I'm peakly productive and this is deep.You are given two permutations$$$^{\\text{∗}}$$$ $$$a$$$ and $$$b$$$, both of length $$$n$$$.You can perform the following three-step operation on permutation $$$a$$$:  Choose an index $$$i$$$ ($$$1 \\le i \\le n$$$). Cyclic shift $$$a_1, a_2, \\ldots, a_{i-1}$$$ by $$$1$$$ to the right. If you had chosen $$$i = 1$$$, then this range doesn't exist, and you cyclic shift nothing. Cyclic shift $$$a_{i + 1}, a_{i + 2}, \\ldots, a_n$$$ by $$$1$$$ to the right. If you had chosen $$$i = n$$$, then this range doesn't exist, and you cyclic shift nothing.After the operation, $$$a_1,a_2,\\ldots, a_{i-2},a_{i-1},a_i,a_{i + 1}, a_{i + 2},\\ldots,a_{n-1}, a_n$$$ is transformed into $$$a_{i-1},a_1,\\ldots,a_{i-3},a_{i-2},a_i,a_n, a_{i + 1},\\ldots,a_{n-2}, a_{n-1}$$$.Here are some examples of operations done on the identity permutation $$$[1,2,3,4,5,6,7]$$$ of length $$$7$$$:   If we choose $$$i = 3$$$, it will become $$$[2, 1, 3, 7, 4, 5, 6]$$$.  If we choose $$$i = 1$$$, it will become $$$[1, 7, 2, 3, 4, 5, 6]$$$.  If we choose $$$i = 7$$$, it will become $$$[6, 1, 2, 3, 4, 5, 7]$$$.  Notably, position $$$i$$$ is not shifted. Find a construction using at most $$$2n$$$ operations to make $$$a$$$ equal to $$$b$$$ or print $$$-1$$$ if it is impossible. The number of operations does not need to be minimized. It can be shown that if it is possible to make $$$a$$$ equal to $$$b$$$, it is possible to do this within $$$2n$$$ operations. $$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Go Learn! (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2035/G2",
    "description": "The differences between the easy and hard versions are the constraints on $$$n$$$ and the sum of $$$n$$$. In this version, $$$n \\leq 3\\cdot 10^5$$$ and the sum of $$$n$$$ does not exceed $$$10^6$$$. You can only make hacks if both versions are solved. Well, well, well, let's see how Bessie is managing her finances. She seems to be in the trenches! Fortunately, she is applying for a job at Moogle to resolve this issue. Moogle interviews require intensive knowledge of obscure algorithms and complex data structures, but Bessie received a tip-off from an LGM on exactly what she has to go learn.Bessie wrote the following code to binary search for a certain element $$$k$$$ in a possibly unsorted array $$$[a_1, a_2,\\ldots,a_n]$$$ with $$$n$$$ elements.let l = 1let h = nwhile l < h:  let m = floor((l + h) / 2)  if a[m] < k:    l = m + 1  else:    h = mreturn lBessie submitted her code to Farmer John's problem with $$$m$$$ ($$$1 \\leq m \\leq n$$$) tests. The $$$i$$$-th test is of the form $$$(x_i, k_i)$$$ ($$$1 \\leq x, k \\leq n$$$). It is guaranteed all the $$$x_i$$$ are distinct and all the $$$k_i$$$ are distinct.Test $$$i$$$ is correct if the following hold:  The $$$x_i$$$-th element in the array is $$$k_i$$$.  If Bessie calls the binary search as shown in the above code for $$$k_i$$$, it will return $$$x_i$$$. It might not be possible for all $$$m$$$ tests to be correct on the same array, so Farmer John will remove some of them so Bessie can AC. Let $$$r$$$ be the minimum of tests removed so that there exists an array $$$[a_1, a_2,\\ldots,a_n]$$$ with $$$1 \\leq a_i \\leq n$$$ so that all remaining tests are correct. In addition to finding $$$r$$$, Farmer John wants you to count the number of arrays $$$[a_1, a_2,\\ldots,a_n]$$$ with $$$1 \\leq a_i \\leq n$$$ such that there exists a way to remove exactly $$$r$$$ tests so that all the remaining tests are correct. Since this number may be very large, please find it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Go Learn! (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2035/G1",
    "description": "The differences between the easy and hard versions are the constraints on $$$n$$$ and the sum of $$$n$$$. In this version, $$$n \\leq 3000$$$ and the sum of $$$n$$$ does not exceed $$$10^4$$$. You can only make hacks if both versions are solved. Well, well, well, let's see how Bessie is managing her finances. She seems to be in the trenches! Fortunately, she is applying for a job at Moogle to resolve this issue. Moogle interviews require intensive knowledge of obscure algorithms and complex data structures, but Bessie received a tip-off from an LGM on exactly what she has to go learn.Bessie wrote the following code to binary search for a certain element $$$k$$$ in a possibly unsorted array $$$[a_1, a_2,\\ldots,a_n]$$$ with $$$n$$$ elements.let l = 1let h = nwhile l < h:  let m = floor((l + h) / 2)  if a[m] < k:    l = m + 1  else:    h = mreturn lBessie submitted her code to Farmer John's problem with $$$m$$$ ($$$1 \\leq m \\leq n$$$) tests. The $$$i$$$-th test is of the form $$$(x_i, k_i)$$$ ($$$1 \\leq x, k \\leq n$$$). It is guaranteed all the $$$x_i$$$ are distinct and all the $$$k_i$$$ are distinct.Test $$$i$$$ is correct if the following hold:  The $$$x_i$$$-th element in the array is $$$k_i$$$.  If Bessie calls the binary search as shown in the above code for $$$k_i$$$, it will return $$$x_i$$$. It might not be possible for all $$$m$$$ tests to be correct on the same array, so Farmer John will remove some of them so Bessie can AC. Let $$$r$$$ be the minimum of tests removed so that there exists an array $$$[a_1, a_2,\\ldots,a_n]$$$ with $$$1 \\leq a_i \\leq n$$$ so that all remaining tests are correct. In addition to finding $$$r$$$, Farmer John wants you to count the number of arrays $$$[a_1, a_2,\\ldots,a_n]$$$ with $$$1 \\leq a_i \\leq n$$$ such that there exists a way to remove exactly $$$r$$$ tests so that all the remaining tests are correct. Since this number may be very large, please find it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Tree Operations",
    "url": "https://codeforces.com/problemset/problem/2035/F",
    "description": "This really says a lot about our society.One day, a turtle gives you a tree with $$$n$$$ nodes rooted at node $$$x$$$. Each node has an initial nonnegative value; the $$$i$$$-th node has starting value $$$a_i$$$.You want to make the values of all nodes equal to $$$0$$$. To do so, you will perform a series of operations on the tree, where each operation will be performed on a certain node. Define an operation on node $$$u$$$ as choosing a single node in $$$u$$$'s subtree$$$^{\\text{∗}}$$$ and incrementing or decrementing its value by $$$1$$$. The order in which operations are performed on nodes is as follows:  For $$$1 \\le i \\le n$$$, the $$$i$$$-th operation will be performed on node $$$i$$$.  For $$$i > n$$$, the $$$i$$$-th operation will be performed on the same node as operation $$$i - n$$$. More formally, the $$$i$$$-th operation will be performed on the $$$(((i - 1) \\bmod n) + 1)$$$-th node.$$$^{\\text{†}}$$$Note that you cannot skip over operations; that is, you cannot perform the $$$i$$$-th operation without first performing operations $$$1, 2, \\ldots, i - 1$$$.Find the minimum number of operations you must perform before you can make the values of all nodes equal to $$$0$$$, assuming you pick operations optimally. If it's impossible to make the values of all nodes equal to $$$0$$$ after finite operations, output $$$-1$$$.$$$^{\\text{∗}}$$$The subtree of a node $$$u$$$ is the set of nodes for which $$$u$$$ lies on the shortest path from this node to the root, including $$$u$$$ itself.$$$^{\\text{†}}$$$Here, $$$a \\bmod b$$$ denotes the remainder from dividing $$$a$$$ by $$$b$$$."
  },
  {
    "title": "Monster",
    "url": "https://codeforces.com/problemset/problem/2035/E",
    "description": "Man, this Genshin boss is so hard. Good thing they have a top-up of $$$6$$$ coins for only $$$ \\$4.99$$$. I should be careful and spend no more than I need to, lest my mom catches me...You are fighting a monster with $$$z$$$ health using a weapon with $$$d$$$ damage. Initially, $$$d=0$$$. You can perform the following operations.  Increase $$$d$$$ — the damage of your weapon by $$$1$$$, costing $$$x$$$ coins.  Attack the monster, dealing $$$d$$$ damage and costing $$$y$$$ coins. You cannot perform the first operation for more than $$$k$$$ times in a row.Find the minimum number of coins needed to defeat the monster by dealing at least $$$z$$$ damage."
  },
  {
    "title": "Yet Another Real Number Problem",
    "url": "https://codeforces.com/problemset/problem/2035/D",
    "description": "Three r there are's in strawberry.You are given an array $$$b$$$ of length $$$m$$$. You can perform the following operation any number of times (possibly zero):   Choose two distinct indices $$$i$$$ and $$$j$$$ where $$$\\bf{1\\le i < j\\le m}$$$ and $$$b_i$$$ is even, divide $$$b_i$$$ by $$$2$$$ and multiply $$$b_j$$$ by $$$2$$$.  Your task is to maximize the sum of the array after performing any number of such operations. Since it could be large, output this sum modulo $$$10^9+7$$$.Since this problem is too easy, you are given an array $$$a$$$ of length $$$n$$$ and need to solve the problem for each prefix of $$$a$$$.In other words, denoting the maximum sum of $$$b$$$ after performing any number of such operations as $$$f(b)$$$, you need to output $$$f([a_1])$$$, $$$f([a_1,a_2])$$$, $$$\\ldots$$$, $$$f([a_1,a_2,\\ldots,a_n])$$$ modulo $$$10^9+7$$$ respectively."
  },
  {
    "title": "Alya and Permutation",
    "url": "https://codeforces.com/problemset/problem/2035/C",
    "description": "Alya has been given a hard problem. Unfortunately, she is too busy running for student council. Please solve this problem for her.Given an integer $$$n$$$, construct a permutation $$$p$$$ of integers $$$1, 2, \\ldots, n$$$ that maximizes the value of $$$k$$$ (which is initially $$$0$$$) after the following process.Perform $$$n$$$ operations, on the $$$i$$$-th operation ($$$i=1, 2, \\dots, n$$$),  If $$$i$$$ is odd, $$$k=k\\,\\&\\,p_i$$$, where $$$\\&$$$ denotes the bitwise AND operation.  If $$$i$$$ is even, $$$k=k\\,|\\,p_i$$$, where $$$|$$$ denotes the bitwise OR operation. "
  },
  {
    "title": "Everyone Loves Tres",
    "url": "https://codeforces.com/problemset/problem/2035/B",
    "description": "There are 3 heroes and 3 villains, so 6 people in total.Given a positive integer $$$n$$$. Find the smallest integer whose decimal representation has length $$$n$$$ and consists only of $$$3$$$s and $$$6$$$s such that it is divisible by both $$$33$$$ and $$$66$$$. If no such integer exists, print $$$-1$$$."
  },
  {
    "title": "Sliding",
    "url": "https://codeforces.com/problemset/problem/2035/A",
    "description": "Red was ejected. They were not the imposter.There are $$$n$$$ rows of $$$m$$$ people. Let the position in the $$$r$$$-th row and the $$$c$$$-th column be denoted by $$$(r, c)$$$. Number each person starting from $$$1$$$ in row-major order, i.e., the person numbered $$$(r-1)\\cdot m+c$$$ is initially at $$$(r,c)$$$.The person at $$$(r, c)$$$ decides to leave. To fill the gap, let the person who left be numbered $$$i$$$. Each person numbered $$$j>i$$$ will move to the position where the person numbered $$$j-1$$$ is initially at. The following diagram illustrates the case where $$$n=2$$$, $$$m=3$$$, $$$r=1$$$, and $$$c=2$$$.   Calculate the sum of the Manhattan distances of each person's movement. If a person was initially at $$$(r_0, c_0)$$$ and then moved to $$$(r_1, c_1)$$$, the Manhattan distance is $$$|r_0-r_1|+|c_0-c_1|$$$."
  },
  {
    "title": "Rayan vs",
    "url": "https://codeforces.com/problemset/problem/2034/H",
    "description": "Rayan makes his final efforts to win Reyhaneh's heart by claiming he is stronger than Rayaneh (i.e., computer in Persian). To test this, Reyhaneh asks Khwarizmi for help. Khwarizmi explains that a set is integer linearly independent if no element in the set can be written as an integer linear combination of the others. Rayan is given a set of integers each time and must identify one of the largest possible integer linearly independent subsets.Note that a single element is always considered an integer linearly independent subset.An integer linearly combination of $$$a_1, \\ldots, a_k$$$ is any sum of the form $$$c_1 \\cdot a_1 + c_2 \\cdot a_2 + \\ldots + c_k \\cdot a_k$$$ where $$$c_1, c_2, \\ldots, c_k$$$ are integers (which may be zero, positive, or negative)."
  },
  {
    "title": "Simurgh's Watch (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2034/G2",
    "description": "The only difference between the two versions of the problem is whether overlaps are considered at all points or only at integer points.The legendary Simurgh, a mythical bird, is responsible for keeping watch over vast lands, and for this purpose, she has enlisted $$$n$$$ vigilant warriors. Each warrior is alert during a specific time segment $$$[l_i, r_i]$$$, where $$$l_i$$$ is the start time (included) and $$$r_i$$$ is the end time (included), both positive integers.  One of Simurgh's trusted advisors, Zal, is concerned that if multiple warriors are stationed at the same time and all wear the same color, the distinction between them might be lost, causing confusion in the watch. To prevent this, whenever multiple warriors are on guard at the same integer moment, there must be at least one color which is worn by exactly one warrior.So the task is to determine the minimum number of colors required and assign a color $$$c_i$$$ to each warrior's segment $$$[l_i, r_i]$$$ such that, for every (integer) time $$$t$$$ contained in at least one segment, there exists one color which belongs to exactly one segment containing $$$t$$$."
  },
  {
    "title": "Simurgh's Watch (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2034/G1",
    "description": "The only difference between the two versions of the problem is whether overlaps are considered at all points or only at integer points.The legendary Simurgh, a mythical bird, is responsible for keeping watch over vast lands, and for this purpose, she has enlisted $$$n$$$ vigilant warriors. Each warrior is alert during a specific time segment $$$[l_i, r_i]$$$, where $$$l_i$$$ is the start time (included) and $$$r_i$$$ is the end time (included), both positive integers.  One of Simurgh's trusted advisors, Zal, is concerned that if multiple warriors are stationed at the same time and all wear the same color, the distinction between them might be lost, causing confusion in the watch. To prevent this, whenever multiple warriors are on guard at the same moment (which can be non-integer), there must be at least one color which is worn by exactly one warrior.So the task is to determine the minimum number of colors required and assign a color $$$c_i$$$ to each warrior's segment $$$[l_i, r_i]$$$ such that, for every (real) time $$$t$$$ contained in at least one segment, there exists one color which belongs to exactly one segment containing $$$t$$$."
  },
  {
    "title": "Khayyam's Royal Decree (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2034/F2",
    "description": " This is the hard version of the problem. The only differences between the two versions are the constraints on $$$k$$$ and the sum of $$$k$$$.In ancient Persia, Khayyam, a clever merchant and mathematician, is playing a game with his prized treasure chest containing $$$n$$$ red rubies worth $$$2$$$ dinars each and $$$m$$$ blue sapphires worth $$$1$$$ dinar each. He also has a satchel, which starts empty, and $$$k$$$ scrolls with pairs $$$(r_1, b_1), (r_2, b_2), \\ldots, (r_k, b_k)$$$ that describe special conditions.  The game proceeds for $$$n + m$$$ turns as follows:  Khayyam draws a gem uniformly at random from the chest.  He removes the gem from the chest and places it in his satchel.  If there exists a scroll $$$i$$$ ($$$1 \\leq i \\leq k$$$) such that the chest contains exactly $$$r_i$$$ red rubies and $$$b_i$$$ blue sapphires, Khayyam receives a royal decree that doubles the value of all the gems in his satchel as a reward for achieving a special configuration. Note that the value of some gems might be affected by multiple decrees, and in that case the gems' value is doubled multiple times.Determine the expected value of Khayyam's satchel at the end of the game, modulo $$$998,244,353$$$.Formally, let $$$M = 998,244,353$$$. It can be shown that the exact answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$. "
  },
  {
    "title": "Khayyam's Royal Decree (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2034/F1",
    "description": " This is the easy version of the problem. The only differences between the two versions are the constraints on $$$k$$$ and the sum of $$$k$$$.In ancient Persia, Khayyam, a clever merchant and mathematician, is playing a game with his prized treasure chest containing $$$n$$$ red rubies worth $$$2$$$ dinars each and $$$m$$$ blue sapphires worth $$$1$$$ dinar each. He also has a satchel, which starts empty, and $$$k$$$ scrolls with pairs $$$(r_1, b_1), (r_2, b_2), \\ldots, (r_k, b_k)$$$ that describe special conditions.  The game proceeds for $$$n + m$$$ turns as follows:  Khayyam draws a gem uniformly at random from the chest.  He removes the gem from the chest and places it in his satchel.  If there exists a scroll $$$i$$$ ($$$1 \\leq i \\leq k$$$) such that the chest contains exactly $$$r_i$$$ red rubies and $$$b_i$$$ blue sapphires, Khayyam receives a royal decree that doubles the value of all the gems in his satchel as a reward for achieving a special configuration. Note that the value of some gems might be affected by multiple decrees, and in that case the gems' value is doubled multiple times.Determine the expected value of Khayyam's satchel at the end of the game, modulo $$$998,244,353$$$.Formally, let $$$M = 998,244,353$$$. It can be shown that the exact answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$. "
  },
  {
    "title": "Permutations Harmony",
    "url": "https://codeforces.com/problemset/problem/2034/E",
    "description": "Rayan wants to present a gift to Reyhaneh to win her heart. However, Reyhaneh is particular and will only accept a k-harmonic set of permutations.We define a k-harmonic set of permutations as a set of $$$k$$$ pairwise distinct permutations $$$p_1, p_2, \\ldots, p_k$$$ of size $$$n$$$ such that for every pair of indices $$$i$$$ and $$$j$$$ (where $$$1 \\leq i, j \\leq n$$$), the following condition holds:$$$$$$ p_1[i] + p_2[i] + \\ldots + p_k[i] = p_1[j] + p_2[j] + \\ldots + p_k[j] $$$$$$Your task is to help Rayan by either providing a valid k-harmonic set of permutations for given values of $$$n$$$ and $$$k$$$ or by determining that such a set does not exist.We call a sequence of length $$$n$$$ a permutation if it contains every integer from $$$1$$$ to $$$n$$$ exactly once."
  },
  {
    "title": "Darius' Wisdom",
    "url": "https://codeforces.com/problemset/problem/2034/D",
    "description": "Darius the Great is constructing $$$n$$$ stone columns, each consisting of a base and between $$$0$$$, $$$1$$$, or $$$2$$$ inscription pieces stacked on top.In each move, Darius can choose two columns $$$u$$$ and $$$v$$$ such that the difference in the number of inscriptions between these columns is exactly $$$1$$$, and transfer one inscription from the column with more inscriptions to the other one. It is guaranteed that at least one column contains exactly $$$1$$$ inscription.  Since beauty is the main pillar of historical buildings, Darius wants the columns to have ascending heights. To avoid excessive workers' efforts, he asks you to plan a sequence of at most $$$n$$$ moves to arrange the columns in non-decreasing order based on the number of inscriptions. Minimizing the number of moves is not required."
  },
  {
    "title": "Trapped in the Witch's Labyrinth",
    "url": "https://codeforces.com/problemset/problem/2034/C",
    "description": "In the fourth labor of Rostam, the legendary hero from the Shahnameh, an old witch has created a magical maze to trap him. The maze is a rectangular grid consisting of $$$n$$$ rows and $$$m$$$ columns. Each cell in the maze points in a specific direction: up, down, left, or right. The witch has enchanted Rostam so that whenever he is in a cell, he will move to the next cell in the direction indicated by that cell.  If Rostam eventually exits the maze, he will be freed from the witch's enchantment and will defeat her. However, if he remains trapped within the maze forever, he will never escape.The witch has not yet determined the directions for all the cells. She wants to assign directions to the unspecified cells in such a way that the number of starting cells from which Rostam will be trapped forever is maximized. Your task is to find the maximum number of starting cells which make Rostam trapped."
  },
  {
    "title": "Rakhsh's Revival",
    "url": "https://codeforces.com/problemset/problem/2034/B",
    "description": "Rostam's loyal horse, Rakhsh, has seen better days. Once powerful and fast, Rakhsh has grown weaker over time, struggling to even move. Rostam worries that if too many parts of Rakhsh's body lose strength at once, Rakhsh might stop entirely. To keep his companion going, Rostam decides to strengthen Rakhsh, bit by bit, so no part of his body is too frail for too long.  Imagine Rakhsh's body as a line of spots represented by a binary string $$$s$$$ of length $$$n$$$, where each $$$0$$$ means a weak spot and each $$$1$$$ means a strong one. Rostam's goal is to make sure that no interval of $$$m$$$ consecutive spots is entirely weak (all $$$0$$$s).Luckily, Rostam has a special ability called Timar, inherited from his mother Rudabeh at birth. With Timar, he can select any segment of length $$$k$$$ and instantly strengthen all of it (changing every character in that segment to $$$1$$$). The challenge is to figure out the minimum number of times Rostam needs to use Timar to keep Rakhsh moving, ensuring there are no consecutive entirely weak spots of length $$$m$$$."
  },
  {
    "title": "King Keykhosrow's Mystery",
    "url": "https://codeforces.com/problemset/problem/2034/A",
    "description": "There is a tale about the wise King Keykhosrow who owned a grand treasury filled with treasures from across the Persian Empire. However, to prevent theft and ensure the safety of his wealth, King Keykhosrow's vault was sealed with a magical lock that could only be opened by solving a riddle.  The riddle involves two sacred numbers $$$a$$$ and $$$b$$$. To unlock the vault, the challenger must determine the smallest key number $$$m$$$ that satisfies two conditions:   $$$m$$$ must be greater than or equal to at least one of $$$a$$$ and $$$b$$$.  The remainder when $$$m$$$ is divided by $$$a$$$ must be equal to the remainder when $$$m$$$ is divided by $$$b$$$. Only by finding the smallest correct value of $$$m$$$ can one unlock the vault and access the legendary treasures!"
  },
  {
    "title": "Sakurako and Chefir",
    "url": "https://codeforces.com/problemset/problem/2033/G",
    "description": "Given a tree with $$$n$$$ vertices rooted at vertex $$$1$$$. While walking through it with her cat Chefir, Sakurako got distracted, and Chefir ran away.To help Sakurako, Kosuke recorded his $$$q$$$ guesses. In the $$$i$$$-th guess, he assumes that Chefir got lost at vertex $$$v_i$$$ and had $$$k_i$$$ stamina.Also, for each guess, Kosuke assumes that Chefir could move along the edges an arbitrary number of times:  from vertex $$$a$$$ to vertex $$$b$$$, if $$$a$$$ is an ancestor$$$^{\\text{∗}}$$$ of $$$b$$$, the stamina will not change;  from vertex $$$a$$$ to vertex $$$b$$$, if $$$a$$$ is not an ancestor of $$$b$$$, then Chefir's stamina decreases by $$$1$$$. If Chefir's stamina is $$$0$$$, he cannot make a move of the second type.For each assumption, your task is to find the distance to the farthest vertex that Chefir could reach from vertex $$$v_i$$$, having $$$k_i$$$ stamina.$$$^{\\text{∗}}$$$Vertex $$$a$$$ is an ancestor of vertex $$$b$$$ if the shortest path from $$$b$$$ to the root passes through $$$a$$$."
  },
  {
    "title": "Kosuke's Sloth",
    "url": "https://codeforces.com/problemset/problem/2033/F",
    "description": "Kosuke is too lazy. He will not give you any legend, just the task:Fibonacci numbers are defined as follows:  $$$f(1)=f(2)=1$$$.  $$$f(n)=f(n-1)+f(n-2)$$$ $$$(3\\le n)$$$  We denote $$$G(n,k)$$$ as an index of the $$$n$$$-th Fibonacci number that is divisible by $$$k$$$. For given $$$n$$$ and $$$k$$$, compute $$$G(n,k)$$$.As this number can be too big, output it by modulo $$$10^9+7$$$.For example: $$$G(3,2)=9$$$ because the $$$3$$$-rd Fibonacci number that is divisible by $$$2$$$ is $$$34$$$. $$$[1,1,\\textbf{2},3,5,\\textbf{8},13,21,\\textbf{34}]$$$."
  },
  {
    "title": "Sakurako, Kosuke, and the Permutation",
    "url": "https://codeforces.com/problemset/problem/2033/E",
    "description": "Sakurako's exams are over, and she did excellently. As a reward, she received a permutation pp. Kosuke was not entirely satisfied because he failed one exam and did not receive a gift. He decided to sneak into her room (thanks to the code for her lock) and spoil the permutation so that it becomes simple.A permutation pp is considered simple if for every ii (1≤i≤n)(1\\le i \\le n) one of the following conditions holds:  pi=ip_i=i  ppi=ip_{p_i}=i For example, the permutations [1,2,3,4][1, 2, 3, 4], [5,2,4,3,1][5, 2, 4, 3, 1], and [2,1][2, 1] are simple, while [2,3,1][2, 3, 1] and [5,2,1,4,3][5, 2, 1, 4, 3] are not.In one operation, Kosuke can choose indices i,ji,j (1≤i,j≤n)(1\\le i,j\\le n) and swap the elements pip_i and pjp_j.Sakurako is about to return home. Your task is to calculate the minimum number of operations that Kosuke needs to perform to make the permutation simple."
  },
  {
    "title": "Kousuke's Assignment",
    "url": "https://codeforces.com/problemset/problem/2033/D",
    "description": "After a trip with Sakurako, Kousuke was very scared because he forgot about his programming assignment. In this assignment, the teacher gave him an array $$$a$$$ of $$$n$$$ integers and asked him to calculate the number of non-overlapping segments of the array $$$a$$$, such that each segment is considered beautiful.A segment $$$[l,r]$$$ is considered beautiful if $$$a_l + a_{l+1} + \\dots + a_{r-1} + a_r=0$$$.For a fixed array $$$a$$$, your task is to compute the maximum number of non-overlapping beautiful segments."
  },
  {
    "title": "Sakurako's Field Trip",
    "url": "https://codeforces.com/problemset/problem/2033/C",
    "description": "Even in university, students need to relax. That is why Sakurakos teacher decided to go on a field trip. It is known that all of the students will be walking in one line. The student with index $$$i$$$ has some topic of interest which is described as $$$a_i$$$. As a teacher, you want to minimise the disturbance of the line of students.The disturbance of the line is defined as the number of neighbouring people with the same topic of interest. In other words, disturbance is the number of indices $$$j$$$ ($$$1 \\le j < n$$$) such that $$$a_j = a_{j + 1}$$$.In order to do this, you can choose index $$$i$$$ ($$$1\\le i\\le n$$$) and swap students at positions $$$i$$$ and $$$n-i+1$$$. You can perform any number of swaps.Your task is to determine the minimal amount of disturbance that you can achieve by doing the operation described above any number of times."
  },
  {
    "title": "Sakurako and Water",
    "url": "https://codeforces.com/problemset/problem/2033/B",
    "description": "During her journey with Kosuke, Sakurako and Kosuke found a valley that can be represented as a matrix of size $$$n \\times n$$$, where at the intersection of the $$$i$$$-th row and the $$$j$$$-th column is a mountain with a height of $$$a_{i,j}$$$. If $$$a_{i,j} < 0$$$, then there is a lake there.Kosuke is very afraid of water, so Sakurako needs to help him:  With her magic, she can select a square area of mountains and increase the height of each mountain on the main diagonal of that area by exactly one. More formally, she can choose a submatrix with the upper left corner located at $$$(i, j)$$$ and the lower right corner at $$$(p, q)$$$, such that $$$p-i=q-j$$$. She can then add one to each element at the intersection of the $$$(i + k)$$$-th row and the $$$(j + k)$$$-th column, for all $$$k$$$ such that $$$0 \\le k \\le p-i$$$.Determine the minimum number of times Sakurako must use her magic so that there are no lakes."
  },
  {
    "title": "Sakurako and Kosuke",
    "url": "https://codeforces.com/problemset/problem/2033/A",
    "description": "Sakurako and Kosuke decided to play some games with a dot on a coordinate line. The dot is currently located in position $$$x=0$$$. They will be taking turns, and Sakurako will be the one to start. On the $$$i$$$-th move, the current player will move the dot in some direction by $$$2\\cdot i-1$$$ units. Sakurako will always be moving the dot in the negative direction, whereas Kosuke will always move it in the positive direction. In other words, the following will happen:  Sakurako will change the position of the dot by $$$-1$$$, $$$x = -1$$$ now  Kosuke will change the position of the dot by $$$3$$$, $$$x = 2$$$ now  Sakurako will change the position of the dot by $$$-5$$$, $$$x = -3$$$ now  $$$\\cdots$$$ They will keep on playing while the absolute value of the coordinate of the dot does not exceed $$$n$$$. More formally, the game continues while $$$-n\\le x\\le n$$$. It can be proven that the game will always end.Your task is to determine who will be the one who makes the last turn."
  },
  {
    "title": "Peanuts",
    "url": "https://codeforces.com/problemset/problem/2032/F",
    "description": "Having the magical beanstalk, Jack has been gathering a lot of peanuts lately. Eventually, he has obtained $$$n$$$ pockets of peanuts, conveniently numbered $$$1$$$ to $$$n$$$ from left to right. The $$$i$$$-th pocket has $$$a_i$$$ peanuts.Jack and his childhood friend Alice decide to play a game around the peanuts. First, Alice divides the pockets into some boxes; each box will have a non-zero number of consecutive pockets, and each pocket will, obviously, belong to exactly one box. At the same time, Alice does not change the order of the boxes, that is, the boxes are numbered in ascending order of the indices of the pockets in them.After that, Alice and Jack will take turns alternately, with Alice going first.At each turn, the current player will remove a positive number of peanuts from exactly one pocket which belongs to the leftmost non-empty box (i.e., the leftmost box containing at least one non-empty pocket). In other words, if we number the boxes from left to right, then each player can only pick peanuts from the pocket in the $$$j$$$-th box ($$$j \\ge 2$$$) only if the $$$(j - 1)$$$-th box has no peanuts left. The player who cannot make a valid move loses.Alice is sure she will win since she has the advantage of dividing the pockets into boxes herself. Thus, she wanted to know how many ways there are for her to divide the peanuts into boxes at the start of the game so that she will win, assuming both players play optimally. Can you help her with the calculation?As the result can be very large, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Balanced",
    "url": "https://codeforces.com/problemset/problem/2032/E",
    "description": "You are given a cyclic array $$$a$$$ with $$$n$$$ elements, where $$$n$$$ is odd. In each operation, you can do the following:  Choose an index $$$1 \\le i \\le n$$$ and increase $$$a_{i - 1}$$$ by $$$1$$$, $$$a_i$$$ by $$$2$$$, and $$$a_{i + 1}$$$ by $$$1$$$. The element before the first element is the last element because this is a cyclic array. A cyclic array is called balanced if all its elements are equal to each other.Find any sequence of operations to make this cyclic array balanced or determine that it is impossible. Please note that you do not have to minimize the number of operations."
  },
  {
    "title": "Genokraken",
    "url": "https://codeforces.com/problemset/problem/2032/D",
    "description": "This is an interactive problem.Upon clearing the Waterside Area, Gretel has found a monster named Genokraken, and she's keeping it contained for her scientific studies.The monster's nerve system can be structured as a tree$$$^{\\dagger}$$$ of $$$n$$$ nodes (really, everything should stop resembling trees all the time$$$\\ldots$$$), numbered from $$$0$$$ to $$$n-1$$$, with node $$$0$$$ as the root.Gretel's objective is to learn the exact structure of the monster's nerve system — more specifically, she wants to know the values $$$p_1, p_2, \\ldots, p_{n-1}$$$ of the tree, where $$$p_i$$$ ($$$0 \\le p_i < i$$$) is the direct parent node of node $$$i$$$ ($$$1 \\le i \\le n - 1$$$).She doesn't know exactly how the nodes are placed, but she knows a few convenient facts:  If we remove root node $$$0$$$ and all adjacent edges, this tree will turn into a forest consisting of only paths$$$^{\\ddagger}$$$. Each node that was initially adjacent to the node $$$0$$$ will be the end of some path.  The nodes are indexed in a way that if $$$1 \\le x \\le y \\le n - 1$$$, then $$$p_x \\le p_y$$$.  Node $$$1$$$ has exactly two adjacent nodes (including the node $$$0$$$).  The tree in this picture does not satisfy the condition, because if we remove node $$$0$$$, then node $$$2$$$ (which was initially adjacent to the node $$$0$$$) will not be the end of the path $$$4-2-5$$$.The tree in this picture does not satisfy the condition, because $$$p_3 \\le p_4$$$ must hold.The tree in this picture does not satisfy the condition, because node $$$1$$$ has only one adjacent node. Gretel can make queries to the containment cell:  \"? a b\" ($$$1 \\le a, b < n$$$, $$$a \\ne b$$$) — the cell will check if the simple path between nodes $$$a$$$ and $$$b$$$ contains the node $$$0$$$. However, to avoid unexpected consequences by overstimulating the creature, Gretel wants to query at most $$$2n - 6$$$ times. Though Gretel is gifted, she can't do everything all at once, so can you give her a helping hand?$$$^{\\dagger}$$$A tree is a connected graph where every pair of distinct nodes has exactly one simple path connecting them.$$$^{\\ddagger}$$$A path is a tree whose vertices can be listed in the order $$$v_1, v_2, \\ldots, v_k$$$ such that the edges are $$$(v_i, v_{i+1})$$$ ($$$1 \\le i < k$$$)."
  },
  {
    "title": "Trinity",
    "url": "https://codeforces.com/problemset/problem/2032/C",
    "description": "You are given an array $$$a$$$ of $$$n$$$ elements $$$a_1, a_2, \\ldots, a_n$$$.You can perform the following operation any number (possibly $$$0$$$) of times:  Choose two integers $$$i$$$ and $$$j$$$, where $$$1 \\le i, j \\le n$$$, and assign $$$a_i := a_j$$$. Find the minimum number of operations required to make the array $$$a$$$ satisfy the condition:  For every pairwise distinct triplet of indices $$$(x, y, z)$$$ ($$$1 \\le x, y, z \\le n$$$, $$$x \\ne y$$$, $$$y \\ne z$$$, $$$x \\ne z$$$), there exists a non-degenerate triangle with side lengths $$$a_x$$$, $$$a_y$$$ and $$$a_z$$$, i.e. $$$a_x + a_y > a_z$$$, $$$a_y + a_z > a_x$$$ and $$$a_z + a_x > a_y$$$. "
  },
  {
    "title": "Medians",
    "url": "https://codeforces.com/problemset/problem/2032/B",
    "description": "You are given an array $$$a = [1, 2, \\ldots, n]$$$, where $$$n$$$ is odd, and an integer $$$k$$$.Your task is to choose an odd positive integer $$$m$$$ and to split $$$a$$$ into $$$m$$$ subarrays$$$^{\\dagger}$$$ $$$b_1, b_2, \\ldots, b_m$$$ such that:  Each element of the array $$$a$$$ belongs to exactly one subarray.  For all $$$1 \\le i \\le m$$$, $$$|b_i|$$$ is odd, i.e., the length of each subarray is odd.  $$$\\operatorname{median}([\\operatorname{median}(b_1), \\operatorname{median}(b_2), \\ldots, \\operatorname{median}(b_m)]) = k$$$, i.e., the median$$$^{\\ddagger}$$$ of the array of medians of all subarrays must equal $$$k$$$. $$$\\operatorname{median}(c)$$$ denotes the median of the array $$$c$$$. $$$^{\\dagger}$$$A subarray of the array $$$a$$$ of length $$$n$$$ is the array $$$[a_l, a_{l + 1}, \\ldots, a_r]$$$ for some integers $$$1 \\le l \\le r \\le n$$$.$$$^{\\ddagger}$$$A median of the array of odd length is the middle element after the array is sorted in non-decreasing order. For example: $$$\\operatorname{median}([1,2,5,4,3]) = 3$$$, $$$\\operatorname{median}([3,2,1]) = 2$$$, $$$\\operatorname{median}([2,1,2,1,2,2,2]) = 2$$$."
  },
  {
    "title": "Circuit",
    "url": "https://codeforces.com/problemset/problem/2032/A",
    "description": "Alice has just crafted a circuit with $$$n$$$ lights and $$$2n$$$ switches. Each component (a light or a switch) has two states: on or off. The lights and switches are arranged in a way that:  Each light is connected to exactly two switches.  Each switch is connected to exactly one light. It's unknown which light each switch is connected to.  When all switches are off, all lights are also off.  If a switch is toggled (from on to off, or vice versa), the state of the light connected to it will also toggle. Alice brings the circuit, which shows only the states of the $$$2n$$$ switches, to her sister Iris and gives her a riddle: what is the minimum and maximum number of lights that can be turned on?Knowing her little sister's antics too well, Iris takes no more than a second to give Alice a correct answer. Can you do the same?"
  },
  {
    "title": "Penchick and Even Medians",
    "url": "https://codeforces.com/problemset/problem/2031/F",
    "description": "     This is an interactive problem. Returning from a restful vacation on Australia's Gold Coast, Penchick forgot to bring home gifts for his pet duck Duong Canh! But perhaps a beautiful problem crafted through deep thought on the scenic beaches could be the perfect souvenir.There is a hidden permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$, where $$$n$$$ is even. You are allowed to make the following query:  Choose a subsequence$$$^{\\text{†}}$$$ of the permutation $$$p$$$ with even length $$$4\\le k\\le n$$$. The interactor will return the value of the two medians$$$^{\\text{‡}}$$$ in the chosen subsequence. Find the index of the two medians in permutation $$$p$$$ using at most $$$80$$$ queries.Note that the interactor is non-adaptive. This means that the permutation $$$p$$$ is fixed at the beginning and will not change based on your queries.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). $$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions. $$$^{\\text{‡}}$$$The two medians of an array $$$a$$$ with even length $$$k$$$ are defined as the $$$\\frac{k}{2}$$$-th and $$$\\left(\\frac{k}{2} + 1\\right)$$$-th smallest element in the array ($$$1$$$-indexed)."
  },
  {
    "title": "Penchick and Chloe's Trees",
    "url": "https://codeforces.com/problemset/problem/2031/E",
    "description": "     With just a few hours left until Penchick and Chloe leave for Singapore, they could hardly wait to see the towering trees at the Singapore Botanic Gardens! Attempting to contain their excitement, Penchick crafted a rooted tree to keep Chloe and himself busy.Penchick has a rooted tree$$$^{\\text{∗}}$$$ consisting of $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$, with vertex $$$1$$$ as the root, and Chloe can select a non-negative integer $$$d$$$ to create a perfect binary tree$$$^{\\text{†}}$$$ of depth $$$d$$$.Since Penchick and Chloe are good friends, Chloe wants her tree to be isomorphic$$$^{\\text{‡}}$$$ to Penchick's tree. To meet this condition, Chloe can perform the following operation on her own tree any number of times:  Select an edge $$$(u,v)$$$, where $$$u$$$ is the parent of $$$v$$$.  Remove vertex $$$v$$$ and all the edges connected to $$$v$$$, then connect all of $$$v$$$'s previous children directly to $$$u$$$. In particular, doing an operation on an edge $$$(u, v)$$$ where $$$v$$$ is a leaf will delete vertex $$$v$$$ without adding any new edges.Since constructing a perfect binary tree can be time-consuming, Chloe wants to choose the minimum $$$d$$$ such that a perfect binary tree of depth $$$d$$$ can be made isomorphic to Penchick's tree using the above operation. Note that she can't change the roots of the trees.$$$^{\\text{∗}}$$$A tree is a connected graph without cycles.  A rooted tree is a tree where one vertex is special and called the root.  The parent of vertex $$$v$$$ is the first vertex on the simple path from $$$v$$$ to the root. The root has no parent.  A child of vertex $$$v$$$ is any vertex $$$u$$$ for which $$$v$$$ is the parent.  A leaf is any vertex without children. $$$^{\\text{†}}$$$A full binary tree is rooted tree, in which each node has $$$0$$$ or $$$2$$$ children.  A perfect binary tree is a full binary tree in which every leaf is at the same distance from the root. The depth of such a tree is the distance from the root to a leaf.$$$^{\\text{‡}}$$$Two rooted trees, rooted at $$$r_1$$$ and $$$r_2$$$ respectively, are considered isomorphic if there exists a permutation $$$p$$$ of the vertices such that an edge $$$(u, v)$$$ exists in the first tree if and only if the edge $$$(p_u, p_v)$$$ exists in the second tree, and $$$p_{r_1} = r_2$$$."
  },
  {
    "title": "Penchick and Desert Rabbit",
    "url": "https://codeforces.com/problemset/problem/2031/D",
    "description": "Dedicated to pushing himself to his limits, Penchick challenged himself to survive the midday sun in the Arabian Desert!While trekking along a linear oasis, Penchick spots a desert rabbit preparing to jump along a line of palm trees. There are $$$n$$$ trees, each with a height denoted by $$$a_i$$$.The rabbit can jump from the $$$i$$$-th tree to the $$$j$$$-th tree if exactly one of the following conditions is true:  $$$j < i$$$ and $$$a_j > a_i$$$: the rabbit can jump backward to a taller tree.  $$$j > i$$$ and $$$a_j < a_i$$$: the rabbit can jump forward to a shorter tree. For each $$$i$$$ from $$$1$$$ to $$$n$$$, determine the maximum height among all trees that the rabbit can reach if it starts from the $$$i$$$-th tree."
  },
  {
    "title": "Penchick and BBQ Buns",
    "url": "https://codeforces.com/problemset/problem/2031/C",
    "description": "Penchick loves two things: square numbers and Hong Kong-style BBQ buns! For his birthday, Kohane wants to combine them with a gift: $$$n$$$ BBQ buns arranged from left to right. There are $$$10^6$$$ available fillings of BBQ buns, numbered from $$$1$$$ to $$$10^6$$$. To ensure that Penchick would love this gift, Kohane has a few goals:  No filling is used exactly once; that is, each filling must either not appear at all or appear at least twice.  For any two buns $$$i$$$ and $$$j$$$ that have the same filling, the distance between them, which is $$$|i-j|$$$, must be a perfect square$$$^{\\text{∗}}$$$. Help Kohane find a valid way to choose the filling of the buns, or determine if it is impossible to satisfy her goals! If there are multiple solutions, print any of them.$$$^{\\text{∗}}$$$A positive integer $$$x$$$ is a perfect square if there exists a positive integer $$$y$$$ such that $$$x = y^2$$$. For example, $$$49$$$ and $$$1$$$ are perfect squares because $$$49 = 7^2$$$ and $$$1 = 1^2$$$ respectively. On the other hand, $$$5$$$ is not a perfect square as no integer squared equals $$$5$$$"
  },
  {
    "title": "Penchick and Satay Sticks",
    "url": "https://codeforces.com/problemset/problem/2031/B",
    "description": "Penchick and his friend Kohane are touring Indonesia, and their next stop is in Surabaya!In the bustling food stalls of Surabaya, Kohane bought $$$n$$$ satay sticks and arranged them in a line, with the $$$i$$$-th satay stick having length $$$p_i$$$. It is given that $$$p$$$ is a permutation$$$^{\\text{∗}}$$$ of length $$$n$$$.Penchick wants to sort the satay sticks in increasing order of length, so that $$$p_i=i$$$ for each $$$1\\le i\\le n$$$. For fun, they created a rule: they can only swap neighboring satay sticks whose lengths differ by exactly $$$1$$$. Formally, they can perform the following operation any number of times (including zero):  Select an index $$$i$$$ ($$$1\\le i\\le n-1$$$) such that $$$|p_{i+1}-p_i|=1$$$;  Swap $$$p_i$$$ and $$$p_{i+1}$$$. Determine whether it is possible to sort the permutation $$$p$$$, thus the satay sticks, by performing the above operation.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Penchick and Modern Monument",
    "url": "https://codeforces.com/problemset/problem/2031/A",
    "description": "Amidst skyscrapers in the bustling metropolis of Metro Manila, the newest Noiph mall in the Philippines has just been completed! The construction manager, Penchick, ordered a state-of-the-art monument to be built with $$$n$$$ pillars. The heights of the monument's pillars can be represented as an array $$$h$$$ of $$$n$$$ positive integers, where $$$h_i$$$ represents the height of the $$$i$$$-th pillar for all $$$i$$$ between $$$1$$$ and $$$n$$$.Penchick wants the heights of the pillars to be in non-decreasing order, i.e. $$$h_i \\le h_{i + 1}$$$ for all $$$i$$$ between $$$1$$$ and $$$n - 1$$$. However, due to confusion, the monument was built such that the heights of the pillars are in non-increasing order instead, i.e. $$$h_i \\ge h_{i + 1}$$$ for all $$$i$$$ between $$$1$$$ and $$$n - 1$$$.Luckily, Penchick can modify the monument and do the following operation on the pillars as many times as necessary:  Modify the height of a pillar to any positive integer. Formally, choose an index $$$1\\le i\\le n$$$ and a positive integer $$$x$$$. Then, assign $$$h_i := x$$$. Help Penchick determine the minimum number of operations needed to make the heights of the monument's pillars non-decreasing."
  },
  {
    "title": "The Destruction of the Universe (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2030/G2",
    "description": "This is the hard version of the problem. In this version, $$$n \\leq 10^6$$$. You can only make hacks if both versions of the problem are solved.Orangutans are powerful beings—so powerful that they only need $$$1$$$ unit of time to destroy every vulnerable planet in the universe!There are $$$n$$$ planets in the universe. Each planet has an interval of vulnerability $$$[l, r]$$$, during which it will be exposed to destruction by orangutans. Orangutans can also expand the interval of vulnerability of any planet by $$$1$$$ unit.Specifically, suppose the expansion is performed on planet $$$p$$$ with interval of vulnerability $$$[l_p, r_p]$$$. Then, the resulting interval of vulnerability may be either $$$[l_p - 1, r_p]$$$ or $$$[l_p, r_p + 1]$$$.Given a set of planets, orangutans can destroy all planets if the intervals of vulnerability of all planets in the set intersect at least one common point. Let the score of such a set denote the minimum number of expansions that must be performed.Orangutans are interested in the sum of scores of all non-empty subsets of the planets in the universe. As the answer can be large, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "The Destruction of the Universe (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2030/G1",
    "description": "This is the easy version of the problem. In this version, $$$n \\leq 5000$$$. You can only make hacks if both versions of the problem are solved.Orangutans are powerful beings—so powerful that they only need $$$1$$$ unit of time to destroy every vulnerable planet in the universe!There are $$$n$$$ planets in the universe. Each planet has an interval of vulnerability $$$[l, r]$$$, during which it will be exposed to destruction by orangutans. Orangutans can also expand the interval of vulnerability of any planet by $$$1$$$ unit.Specifically, suppose the expansion is performed on planet $$$p$$$ with interval of vulnerability $$$[l_p, r_p]$$$. Then, the resulting interval of vulnerability may be either $$$[l_p - 1, r_p]$$$ or $$$[l_p, r_p + 1]$$$.Given a set of planets, orangutans can destroy all planets if the intervals of vulnerability of all planets in the set intersect at least one common point. Let the score of such a set denote the minimum number of expansions that must be performed.Orangutans are interested in the sum of scores of all non-empty subsets of the planets in the universe. As the answer can be large, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Orangutan Approved Subarrays",
    "url": "https://codeforces.com/problemset/problem/2030/F",
    "description": "Suppose you have an array $$$b$$$. Initially, you also have a set $$$S$$$ that contains all distinct elements of $$$b$$$. The array $$$b$$$ is called orangutan-approved if it can be emptied by repeatedly performing the following operation:   In one operation, select indices $$$l$$$ and $$$r$$$ ($$$1 \\leq l \\leq r \\leq |b|$$$) such that $$$v = b_l = b_{l+1} = \\ldots = b_r$$$ and $$$v$$$ is present in $$$S$$$. Remove $$$v$$$ from $$$S$$$, and simultaneously remove all $$$b_i$$$ such that $$$l \\leq i \\leq r$$$. Then, reindex the elements $$$b_{r+1}, b_{r+2}, \\ldots$$$ as $$$b_l, b_{l+1}, \\ldots$$$ accordingly. You are given an array $$$a$$$ of length $$$n$$$ and $$$q$$$ queries. Each query consists of two indices $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$), and you need to determine whether or not the subarray $$$a_{l}, a_{l+1}, \\ldots, a_r$$$ is orangutan-approved."
  },
  {
    "title": "MEXimize the Score",
    "url": "https://codeforces.com/problemset/problem/2030/E",
    "description": "Suppose we partition the elements of an array $$$b$$$ into any number $$$k$$$ of non-empty multisets $$$S_1, S_2, \\ldots, S_k$$$, where $$$k$$$ is an arbitrary positive integer. Define the score of $$$b$$$ as the maximum value of $$$\\operatorname{MEX}(S_1)$$$$$$^{\\text{∗}}$$$$$$ + \\operatorname{MEX}(S_2) + \\ldots + \\operatorname{MEX}(S_k)$$$ over all possible partitions of $$$b$$$ for any integer $$$k$$$.Envy is given an array $$$a$$$ of size $$$n$$$. Since he knows that calculating the score of $$$a$$$ is too easy for you, he instead asks you to calculate the sum of scores of all $$$2^n - 1$$$ non-empty subsequences of $$$a$$$.$$$^{\\text{†}}$$$ Since this answer may be large, please output it modulo $$$998\\,244\\,353$$$.$$$^{\\text{∗}}$$$$$$\\operatorname{MEX}$$$ of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ that does not occur in the collection $$$c$$$. For example, $$$\\operatorname{MEX}([0,1,2,2]) = 3$$$ and $$$\\operatorname{MEX}([1,2,2]) = 0$$$$$$^{\\text{†}}$$$A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by deleting several (possibly, zero or all) elements."
  },
  {
    "title": "QED's Favorite Permutation",
    "url": "https://codeforces.com/problemset/problem/2030/D",
    "description": "QED is given a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$. He also has a string $$$s$$$ of length $$$n$$$ containing only characters $$$\\texttt{L}$$$ and $$$\\texttt{R}$$$. QED only likes permutations that are sorted in non-decreasing order. To sort $$$p$$$, he can select any of the following operations and perform them any number of times:  Choose an index $$$i$$$ such that $$$s_i = \\texttt{L}$$$. Then, swap $$$p_i$$$ and $$$p_{i-1}$$$. It is guaranteed that $$$s_1 \\neq \\texttt{L}$$$.  Choose an index $$$i$$$ such that $$$s_i = \\texttt{R}$$$. Then, swap $$$p_i$$$ and $$$p_{i+1}$$$. It is guaranteed that $$$s_n \\neq \\texttt{R}$$$. He is also given $$$q$$$ queries. In each query, he selects an index $$$i$$$ and changes $$$s_i$$$ from $$$\\texttt{L}$$$ to $$$\\texttt{R}$$$ (or from $$$\\texttt{R}$$$ to $$$\\texttt{L}$$$). Note that the changes are persistent. After each query, he asks you if it is possible to sort $$$p$$$ in non-decreasing order by performing the aforementioned operations any number of times. Note that before answering each query, the permutation $$$p$$$ is reset to its original form.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "A TRUE Battle",
    "url": "https://codeforces.com/problemset/problem/2030/C",
    "description": "Alice and Bob are playing a game. There is a list of $$$n$$$ booleans, each of which is either true or false, given as a binary string $$$^{\\text{∗}}$$$ of length $$$n$$$ (where $$$\\texttt{1}$$$ represents true, and $$$\\texttt{0}$$$ represents false). Initially, there are no operators between the booleans.Alice and Bob will take alternate turns placing and or or between the booleans, with Alice going first. Thus, the game will consist of $$$n-1$$$ turns since there are $$$n$$$ booleans. Alice aims for the final statement to evaluate to true, while Bob aims for it to evaluate to false. Given the list of boolean values, determine whether Alice will win if both players play optimally.To evaluate the final expression, repeatedly perform the following steps until the statement consists of a single true or false:   If the statement contains an and operator, choose any one and replace the subexpression surrounding it with its evaluation.  Otherwise, the statement contains an or operator. Choose any one and replace the subexpression surrounding the or with its evaluation.  For example, the expression true or false and false is evaluated as true or (false and false) $$$=$$$ true or false $$$=$$$ true. It can be shown that the result of any compound statement is unique.$$$^{\\text{∗}}$$$A binary string is a string that only consists of characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$"
  },
  {
    "title": "Minimise Oneness",
    "url": "https://codeforces.com/problemset/problem/2030/B",
    "description": "For an arbitrary binary string $$$t$$$$$$^{\\text{∗}}$$$, let $$$f(t)$$$ be the number of non-empty subsequences$$$^{\\text{†}}$$$ of $$$t$$$ that contain only $$$\\mathtt{0}$$$, and let $$$g(t)$$$ be the number of non-empty subsequences of $$$t$$$ that contain at least one $$$\\mathtt{1}$$$. Note that for $$$f(t)$$$ and for $$$g(t)$$$, each subsequence is counted as many times as it appears in $$$t$$$. E.g., $$$f(\\mathtt{000}) = 7, g(\\mathtt{100}) = 4$$$.We define the oneness of the binary string $$$t$$$ to be $$$|f(t)-g(t)|$$$, where for an arbitrary integer $$$z$$$, $$$|z|$$$ represents the absolute value of $$$z$$$.You are given a positive integer $$$n$$$. Find a binary string $$$s$$$ of length $$$n$$$ such that its oneness is as small as possible. If there are multiple strings, you can print any of them.$$$^{\\text{∗}}$$$A binary string is a string that only consists of characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$.$$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements. For example, subsequences of $$$\\mathtt{1011101}$$$ are $$$\\mathtt{0}$$$, $$$\\mathtt{1}$$$, $$$\\mathtt{11111}$$$, $$$\\mathtt{0111}$$$, but not $$$\\mathtt{000}$$$ nor $$$\\mathtt{11100}$$$."
  },
  {
    "title": "A Gift From Orangutan",
    "url": "https://codeforces.com/problemset/problem/2030/A",
    "description": "While exploring the jungle, you have bumped into a rare orangutan with a bow tie! You shake hands with the orangutan and offer him some food and water. In return...The orangutan has gifted you an array $$$a$$$ of length $$$n$$$. Using $$$a$$$, you will construct two arrays $$$b$$$ and $$$c$$$, both containing $$$n$$$ elements, in the following manner:  $$$b_i = \\min(a_1, a_2, \\ldots, a_i)$$$ for each $$$1 \\leq i \\leq n$$$.  $$$c_i = \\max(a_1, a_2, \\ldots, a_i)$$$ for each $$$1 \\leq i \\leq n$$$. Define the score of $$$a$$$ as $$$\\sum_{i=1}^n c_i - b_i$$$ (i.e. the sum of $$$c_i - b_i$$$ over all $$$1 \\leq i \\leq n$$$). Before you calculate the score, you can shuffle the elements of $$$a$$$ however you want.Find the maximum score that you can get if you shuffle the elements of $$$a$$$ optimally."
  },
  {
    "title": "Variance Challenge",
    "url": "https://codeforces.com/problemset/problem/2029/I",
    "description": "Kevin has recently learned the definition of variance. For an array $$$a$$$ of length $$$n$$$, the variance of $$$a$$$ is defined as follows:  Let $$$x=\\dfrac{1}{n}\\displaystyle\\sum_{i=1}^n a_i$$$, i.e., $$$x$$$ is the mean of the array $$$a$$$;  Then, the variance of $$$a$$$ is $$$$$$ V(a)=\\frac{1}{n}\\sum_{i=1}^n(a_i-x)^2. $$$$$$ Now, Kevin gives you an array $$$a$$$ consisting of $$$n$$$ integers, as well as an integer $$$k$$$. You can perform the following operation on $$$a$$$:  Select an interval $$$[l,r]$$$ ($$$1\\le l\\le r\\le n$$$), then for each $$$l\\le i\\le r$$$, increase $$$a_i$$$ by $$$k$$$. For each $$$1\\le p\\le m$$$, you have to find the minimum possible variance of $$$a$$$ after exactly $$$p$$$ operations are performed, independently for each $$$p$$$.For simplicity, you only need to output the answers multiplied by $$$n^2$$$. It can be proven that the results are always integers."
  },
  {
    "title": "Message Spread",
    "url": "https://codeforces.com/problemset/problem/2029/H",
    "description": "Given is an undirected graph with $$$n$$$ vertices and $$$m$$$ edges. Each edge connects two vertices $$$(u, v)$$$ and has a probability of $$$\\frac{p}{q}$$$ of appearing each day.Initially, vertex $$$1$$$ has a message. At the end of the day, a vertex has a message if and only if itself or at least one of the vertices adjacent to it had the message the day before. Note that each day, each edge chooses its appearance independently.Calculate the expected number of days before all the vertices have the message, modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Balanced Problem",
    "url": "https://codeforces.com/problemset/problem/2029/G",
    "description": "There is an array $$$a$$$ consisting of $$$n$$$ integers. Initially, all elements of $$$a$$$ are equal to $$$0$$$.Kevin can perform several operations on the array. Each operation is one of the following two types: Prefix addition — Kevin first selects an index $$$x$$$ ($$$1\\le x\\le n$$$), and then for each $$$1\\le j\\le x$$$, increases $$$a_j$$$ by $$$1$$$;  Suffix addition — Kevin first selects an index $$$x$$$ ($$$1\\le x\\le n$$$), and then for each $$$x\\le j\\le n$$$, increases $$$a_j$$$ by $$$1$$$.In the country of KDOI, people think that the integer $$$v$$$ is balanced. Thus, Iris gives Kevin an array $$$c$$$ consisting of $$$n$$$ integers and defines the beauty of the array $$$a$$$ as follows: Initially, set $$$b=0$$$;  For each $$$1\\le i\\le n$$$, if $$$a_i=v$$$, add $$$c_i$$$ to $$$b$$$;  The beauty of $$$a$$$ is the final value of $$$b$$$.Kevin wants to maximize the beauty of $$$a$$$ after all the operations. However, he had already performed $$$m$$$ operations when he was sleepy. Now, he can perform an arbitrary number (possibly zero) of new operations.You have to help Kevin find the maximum possible beauty if he optimally performs the new operations.However, to make sure that you are not just rolling the dice, Kevin gives you an integer $$$V$$$, and you need to solve the problem for each $$$1\\le v\\le V$$$."
  },
  {
    "title": "Palindrome Everywhere",
    "url": "https://codeforces.com/problemset/problem/2029/F",
    "description": "You are given a cycle with $$$n$$$ vertices numbered from $$$0$$$ to $$$n-1$$$. For each $$$0\\le i\\le n-1$$$, there is an undirected edge between vertex $$$i$$$ and vertex $$$((i+1)\\bmod n)$$$ with the color $$$c_i$$$ ($$$c_i=\\texttt{R}$$$ or $$$\\texttt{B}$$$).Determine whether the following condition holds for every pair of vertices $$$(i,j)$$$ ($$$0\\le i<j\\le n-1$$$): There exists a palindrome route between vertex $$$i$$$ and vertex $$$j$$$. Note that the route may not be simple. Formally, there must exist a sequence $$$p=[p_0,p_1,p_2,\\ldots,p_m]$$$ such that: $$$p_0=i$$$, $$$p_m=j$$$;  For each $$$0\\leq x\\le m-1$$$, either $$$p_{x+1}=(p_x+1)\\bmod n$$$ or $$$p_{x+1}=(p_{x}-1)\\bmod n$$$;  For each $$$0\\le x\\le y\\le m-1$$$ satisfying $$$x+y=m-1$$$, the edge between $$$p_x$$$ and $$$p_{x+1}$$$ has the same color as the edge between $$$p_y$$$ and $$$p_{y+1}$$$."
  },
  {
    "title": "Common Generator",
    "url": "https://codeforces.com/problemset/problem/2029/E",
    "description": "For two integers $$$x$$$ and $$$y$$$ ($$$x,y\\ge 2$$$), we will say that $$$x$$$ is a generator of $$$y$$$ if and only if $$$x$$$ can be transformed to $$$y$$$ by performing the following operation some number of times (possibly zero):  Choose a divisor $$$d$$$ ($$$d\\ge 2$$$) of $$$x$$$, then increase $$$x$$$ by $$$d$$$. For example,   $$$3$$$ is a generator of $$$8$$$ since we can perform the following operations: $$$3 \\xrightarrow{d = 3} 6 \\xrightarrow{d = 2} 8$$$;  $$$4$$$ is a generator of $$$10$$$ since we can perform the following operations: $$$4 \\xrightarrow{d = 4} 8 \\xrightarrow{d = 2} 10$$$;  $$$5$$$ is not a generator of $$$6$$$ since we cannot transform $$$5$$$ into $$$6$$$ with the operation above. Now, Kevin gives you an array $$$a$$$ consisting of $$$n$$$ pairwise distinct integers ($$$a_i\\ge 2$$$).You have to find an integer $$$x\\ge 2$$$ such that for each $$$1\\le i\\le n$$$, $$$x$$$ is a generator of $$$a_i$$$, or determine that such an integer does not exist."
  },
  {
    "title": "Cool Graph",
    "url": "https://codeforces.com/problemset/problem/2029/D",
    "description": "You are given an undirected graph with $$$n$$$ vertices and $$$m$$$ edges.You can perform the following operation at most $$$2\\cdot \\max(n,m)$$$ times:  Choose three distinct vertices $$$a$$$, $$$b$$$, and $$$c$$$, then for each of the edges $$$(a,b)$$$, $$$(b,c)$$$, and $$$(c,a)$$$, do the following:   If the edge does not exist, add it. On the contrary, if it exists, remove it.  A graph is called cool if and only if one of the following holds:  The graph has no edges, or  The graph is a tree. You have to make the graph cool by performing the above operations. Note that you can use at most $$$2\\cdot \\max(n,m)$$$ operations.It can be shown that there always exists at least one solution."
  },
  {
    "title": "New Rating",
    "url": "https://codeforces.com/problemset/problem/2029/C",
    "description": "Hello, Codeforces Forcescode! Kevin used to be a participant of Codeforces. Recently, the KDOI Team has developed a new Online Judge called Forcescode. Kevin has participated in $$$n$$$ contests on Forcescode. In the $$$i$$$-th contest, his performance rating is $$$a_i$$$.Now he has hacked into the backend of Forcescode and will select an interval $$$[l,r]$$$ ($$$1\\le l\\le r\\le n$$$), then skip all of the contests in this interval. After that, his rating will be recalculated in the following way:  Initially, his rating is $$$x=0$$$;  For each $$$1\\le i\\le n$$$, after the $$$i$$$-th contest,   If $$$l\\le i\\le r$$$, this contest will be skipped, and the rating will remain unchanged;  Otherwise, his rating will be updated according to the following rules:   If $$$a_i>x$$$, his rating $$$x$$$ will increase by $$$1$$$;  If $$$a_i=x$$$, his rating $$$x$$$ will remain unchanged;  If $$$a_i<x$$$, his rating $$$x$$$ will decrease by $$$1$$$.   You have to help Kevin to find his maximum possible rating after the recalculation if he chooses the interval $$$[l,r]$$$ optimally. Note that Kevin has to skip at least one contest."
  },
  {
    "title": "Replacement",
    "url": "https://codeforces.com/problemset/problem/2029/B",
    "description": "You have a binary string$$$^{\\text{∗}}$$$ $$$s$$$ of length $$$n$$$, and Iris gives you another binary string $$$r$$$ of length $$$n-1$$$.Iris is going to play a game with you. During the game, you will perform $$$n-1$$$ operations on $$$s$$$. In the $$$i$$$-th operation ($$$1 \\le i \\le n-1$$$):  First, you choose an index $$$k$$$ such that $$$1\\le k\\le |s| - 1$$$ and $$$s_{k} \\neq s_{k+1}$$$. If it is impossible to choose such an index, you lose;  Then, you replace $$$s_ks_{k+1}$$$ with $$$r_i$$$. Note that this decreases the length of $$$s$$$ by $$$1$$$. If all the $$$n-1$$$ operations are performed successfully, you win.Determine whether it is possible for you to win this game.$$$^{\\text{∗}}$$$A binary string is a string where each character is either $$$\\mathtt{0}$$$ or $$$\\mathtt{1}$$$."
  },
  {
    "title": "Set",
    "url": "https://codeforces.com/problemset/problem/2029/A",
    "description": "You are given a positive integer $$$k$$$ and a set $$$S$$$ of all integers from $$$l$$$ to $$$r$$$ (inclusive).You can perform the following two-step operation any number of times (possibly zero): First, choose a number $$$x$$$ from the set $$$S$$$, such that there are at least $$$k$$$ multiples of $$$x$$$ in $$$S$$$ (including $$$x$$$ itself);  Then, remove $$$x$$$ from $$$S$$$ (note that nothing else is removed).Find the maximum possible number of operations that can be performed."
  },
  {
    "title": "Alice's Adventures in Addition",
    "url": "https://codeforces.com/problemset/problem/2028/F",
    "description": "Note that the memory limit is unusual.The Cheshire Cat has a riddle for Alice: given $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ and a target $$$m$$$, is there a way to insert $$$+$$$ and $$$\\times$$$ into the circles of the expression $$$$$$a_1 \\circ a_2 \\circ \\cdots \\circ a_n = m$$$$$$ to make it true? We follow the usual order of operations: $$$\\times$$$ is done before $$$+$$$.Although Alice is excellent at chess, she is not good at math. Please help her so she can find a way out of Wonderland!"
  },
  {
    "title": "Alice's Adventures in the Rabbit Hole",
    "url": "https://codeforces.com/problemset/problem/2028/E",
    "description": "Alice is at the bottom of the rabbit hole! The rabbit hole can be modeled as a tree$$$^{\\text{∗}}$$$ which has an exit at vertex $$$1$$$, and Alice starts at some vertex $$$v$$$. She wants to get out of the hole, but unfortunately, the Queen of Hearts has ordered her execution. Each minute, a fair coin is flipped. If it lands heads, Alice gets to move to an adjacent vertex of her current location, and otherwise, the Queen of Hearts gets to pull Alice to an adjacent vertex of the Queen's choosing. If Alice ever ends up on any of the non-root leaves$$$^{\\text{†}}$$$ of the tree, Alice loses.Assuming both of them move optimally, compute the probability that Alice manages to escape for every single starting vertex $$$1\\le v\\le n$$$. Since these probabilities can be very small, output them modulo $$$998\\,244\\,353$$$.Formally, let $$$M = 998\\,244\\,353$$$. It can be shown that the exact answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$. $$$^{\\text{∗}}$$$A tree is a connected simple graph which has $$$n$$$ vertices and $$$n-1$$$ edges.$$$^{\\text{†}}$$$A leaf is a vertex that is connected to exactly one edge."
  },
  {
    "title": "Alice's Adventures in Cards",
    "url": "https://codeforces.com/problemset/problem/2028/D",
    "description": "Alice is playing cards with the Queen of Hearts, King of Hearts, and Jack of Hearts. There are $$$n$$$ different types of cards in their card game. Alice currently has a card of type $$$1$$$ and needs a card of type $$$n$$$ to escape Wonderland. The other players have one of each kind of card.In this card game, Alice can trade cards with the three other players. Each player has different preferences for the $$$n$$$ types of cards, which can be described by permutations$$$^{\\text{∗}}$$$ $$$q$$$, $$$k$$$, and $$$j$$$ for the Queen, King, and Jack, respectively. A player values card $$$a$$$ more than card $$$b$$$ if for their permutation $$$p$$$, $$$p_a > p_b$$$. Then, this player is willing to trade card $$$b$$$ to Alice in exchange for card $$$a$$$. Alice's preferences are straightforward: she values card $$$a$$$ more than card $$$b$$$ if $$$a > b$$$, and she will also only trade according to these preferences.Determine if Alice can trade up from card $$$1$$$ to card $$$n$$$ subject to these preferences, and if it is possible, give a possible set of trades to do it.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Alice's Adventures in Cutting Cake",
    "url": "https://codeforces.com/problemset/problem/2028/C",
    "description": "Alice is at the Mad Hatter's tea party! There is a long sheet cake made up of $$$n$$$ sections with tastiness values $$$a_1, a_2, \\ldots, a_n$$$. There are $$$m$$$ creatures at the tea party, excluding Alice. Alice will cut the cake into $$$m + 1$$$ pieces. Formally, she will partition the cake into $$$m + 1$$$ subarrays, where each subarray consists of some number of adjacent sections. The tastiness of a piece is the sum of tastiness of its sections. Afterwards, she will divvy these $$$m + 1$$$ pieces up among the $$$m$$$ creatures and herself (her piece can be empty). However, each of the $$$m$$$ creatures will only be happy when the tastiness of its piece is $$$v$$$ or more.Alice wants to make sure every creature is happy. Limited by this condition, she also wants to maximize the tastiness of her own piece. Can you help Alice find the maximum tastiness her piece can have? If there is no way to make sure every creature is happy, output $$$-1$$$."
  },
  {
    "title": "Alice's Adventures in Permuting",
    "url": "https://codeforces.com/problemset/problem/2028/B",
    "description": "Alice mixed up the words transmutation and permutation! She has an array $$$a$$$ specified via three integers $$$n$$$, $$$b$$$, $$$c$$$: the array $$$a$$$ has length $$$n$$$ and is given via $$$a_i = b\\cdot (i - 1) + c$$$ for $$$1\\le i\\le n$$$. For example, if $$$n=3$$$, $$$b=2$$$, and $$$c=1$$$, then $$$a=[2 \\cdot 0 + 1, 2 \\cdot 1 + 1, 2 \\cdot 2 + 1] = [1, 3, 5]$$$.Now, Alice really enjoys permutations of $$$[0, \\ldots, n-1]$$$$$$^{\\text{∗}}$$$ and would like to transform $$$a$$$ into a permutation. In one operation, Alice replaces the maximum element of $$$a$$$ with the $$$\\operatorname{MEX}$$$$$$^{\\text{†}}$$$ of $$$a$$$. If there are multiple maximum elements in $$$a$$$, Alice chooses the leftmost one to replace.Can you help Alice figure out how many operations she has to do for $$$a$$$ to become a permutation for the first time? If it is impossible, you should report it.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$0$$$ to $$$n-1$$$ in arbitrary order. Please note, this is slightly different from the usual definition of a permutation. For example, $$$[1,2,0,4,3]$$$ is a permutation, but $$$[0,1,1]$$$ is not a permutation ($$$1$$$ appears twice in the array), and $$$[0,2,3]$$$ is also not a permutation ($$$n=3$$$ but there is $$$3$$$ in the array).$$$^{\\text{†}}$$$The $$$\\operatorname{MEX}$$$ of an array is the smallest non-negative integer that does not belong to the array. For example, the $$$\\operatorname{MEX}$$$ of $$$[0, 3, 1, 3]$$$ is $$$2$$$ and the $$$\\operatorname{MEX}$$$ of $$$[5]$$$ is $$$0$$$."
  },
  {
    "title": "Alice's Adventures in \"Chess\"",
    "url": "https://codeforces.com/problemset/problem/2028/A",
    "description": "Alice is trying to meet up with the Red Queen in the countryside! Right now, Alice is at position $$$(0, 0)$$$, and the Red Queen is at position $$$(a, b)$$$. Alice can only move in the four cardinal directions (north, east, south, west). More formally, if Alice is at the point $$$(x, y)$$$, she will do one of the following:   go north (represented by N), moving to $$$(x, y+1)$$$;  go east (represented by E), moving to $$$(x+1, y)$$$;  go south (represented by S), moving to $$$(x, y-1)$$$; or  go west (represented by W), moving to $$$(x-1, y)$$$. Alice's movements are predetermined. She has a string $$$s$$$ representing a sequence of moves that she performs from left to right. Once she reaches the end of the sequence, she repeats the same pattern of moves forever.Can you help Alice figure out if she will ever meet the Red Queen?"
  },
  {
    "title": "Bit Game (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2027/E2",
    "description": "This is the hard version of this problem. The only difference is that you need to output the number of choices of games where Bob wins in this version, where the number of stones in each pile are not fixed. You must solve both versions to be able to hack.Alice and Bob are playing a familiar game where they take turns removing stones from $$$n$$$ piles. Initially, there are $$$x_i$$$ stones in the $$$i$$$-th pile, and it has an associated value $$$a_i$$$. A player can take $$$d$$$ stones away from the $$$i$$$-th pile if and only if both of the following conditions are met:   $$$1 \\le d \\le a_i$$$, and  $$$x \\, \\& \\, d = d$$$, where $$$x$$$ is the current number of stones in the $$$i$$$-th pile and $$$\\&$$$ denotes the bitwise AND operation. The player who cannot make a move loses, and Alice goes first.You're given the $$$a_i$$$ values of each pile, but the number of stones in the $$$i$$$-th pile has not been determined yet. For the $$$i$$$-th pile, $$$x_i$$$ can be any integer between $$$1$$$ and $$$b_i$$$, inclusive. That is, you can choose an array $$$x_1, x_2, \\ldots, x_n$$$ such that the condition $$$1 \\le x_i \\le b_i$$$ is satisfied for all piles. Your task is to count the number of games where Bob wins if both players play optimally. Two games are considered different if the number of stones in any pile is different, i.e., the arrays of $$$x$$$ differ in at least one position.Since the answer can be very large, please output the result modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Bit Game (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2027/E1",
    "description": "This is the easy version of this problem. The only difference is that you need to output the winner of the game in this version, and the number of stones in each pile are fixed. You must solve both versions to be able to hack.Alice and Bob are playing a familiar game where they take turns removing stones from $$$n$$$ piles. Initially, there are $$$x_i$$$ stones in the $$$i$$$-th pile, and it has an associated value $$$a_i$$$. A player can take $$$d$$$ stones away from the $$$i$$$-th pile if and only if both of the following conditions are met:   $$$1 \\le d \\le a_i$$$, and  $$$x \\, \\& \\, d = d$$$, where $$$x$$$ is the current number of stones in the $$$i$$$-th pile and $$$\\&$$$ denotes the bitwise AND operation. The player who cannot make a move loses, and Alice goes first.You're given the $$$a_i$$$ and $$$x_i$$$ values for each pile, please determine who will win the game if both players play optimally."
  },
  {
    "title": "The Endspeaker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2027/D2",
    "description": "This is the hard version of this problem. The only difference is that you need to also output the number of optimal sequences in this version. You must solve both versions to be able to hack.You're given an array $$$a$$$ of length $$$n$$$, and an array $$$b$$$ of length $$$m$$$ ($$$b_i > b_{i+1}$$$ for all $$$1 \\le i < m$$$). Initially, the value of $$$k$$$ is $$$1$$$. Your aim is to make the array $$$a$$$ empty by performing one of these two operations repeatedly:  Type $$$1$$$ — If the value of $$$k$$$ is less than $$$m$$$ and the array $$$a$$$ is not empty, you can increase the value of $$$k$$$ by $$$1$$$. This does not incur any cost.  Type $$$2$$$ — You remove a non-empty prefix of array $$$a$$$, such that its sum does not exceed $$$b_k$$$. This incurs a cost of $$$m - k$$$. You need to minimize the total cost of the operations to make array $$$a$$$ empty. If it's impossible to do this through any sequence of operations, output $$$-1$$$. Otherwise, output the minimum total cost of the operations, and the number of sequences of operations which yield this minimum cost modulo $$$10^9 + 7$$$. Two sequences of operations are considered different if you choose a different type of operation at any step, or the size of the removed prefix is different at any step."
  },
  {
    "title": "The Endspeaker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2027/D1",
    "description": "This is the easy version of this problem. The only difference is that you only need to output the minimum total cost of operations in this version. You must solve both versions to be able to hack.You're given an array $$$a$$$ of length $$$n$$$, and an array $$$b$$$ of length $$$m$$$ ($$$b_i > b_{i+1}$$$ for all $$$1 \\le i < m$$$). Initially, the value of $$$k$$$ is $$$1$$$. Your aim is to make the array $$$a$$$ empty by performing one of these two operations repeatedly:  Type $$$1$$$ — If the value of $$$k$$$ is less than $$$m$$$ and the array $$$a$$$ is not empty, you can increase the value of $$$k$$$ by $$$1$$$. This does not incur any cost.  Type $$$2$$$ — You remove a non-empty prefix of array $$$a$$$, such that its sum does not exceed $$$b_k$$$. This incurs a cost of $$$m - k$$$. You need to minimize the total cost of the operations to make array $$$a$$$ empty. If it's impossible to do this through any sequence of operations, output $$$-1$$$. Otherwise, output the minimum total cost of the operations."
  },
  {
    "title": "Add Zeros",
    "url": "https://codeforces.com/problemset/problem/2027/C",
    "description": "You're given an array $$$a$$$ initially containing $$$n$$$ integers. In one operation, you must do the following:  Choose a position $$$i$$$ such that $$$1 < i \\le |a|$$$ and $$$a_i = |a| + 1 - i$$$, where $$$|a|$$$ is the current size of the array.  Append $$$i - 1$$$ zeros onto the end of $$$a$$$. After performing this operation as many times as you want, what is the maximum possible length of the array $$$a$$$?"
  },
  {
    "title": "Stalin Sort",
    "url": "https://codeforces.com/problemset/problem/2027/B",
    "description": "Stalin Sort is a humorous sorting algorithm designed to eliminate elements which are out of place instead of bothering to sort them properly, lending itself to an $$$\\mathcal{O}(n)$$$ time complexity.It goes as follows: starting from the second element in the array, if it is strictly smaller than the previous element (ignoring those which have already been deleted), then delete it. Continue iterating through the array until it is sorted in non-decreasing order. For example, the array $$$[1, 4, 2, 3, 6, 5, 5, 7, 7]$$$ becomes $$$[1, 4, 6, 7, 7]$$$ after a Stalin Sort.We define an array as vulnerable if you can sort it in non-increasing order by repeatedly applying a Stalin Sort to any of its subarrays$$$^{\\text{∗}}$$$, as many times as is needed.Given an array $$$a$$$ of $$$n$$$ integers, determine the minimum number of integers which must be removed from the array to make it vulnerable.$$$^{\\text{∗}}$$$An array $$$a$$$ is a subarray of an array $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. "
  },
  {
    "title": "Rectangle Arrangement",
    "url": "https://codeforces.com/problemset/problem/2027/A",
    "description": "You are coloring an infinite square grid, in which all cells are initially white. To do this, you are given $$$n$$$ stamps. Each stamp is a rectangle of width $$$w_i$$$ and height $$$h_i$$$.You will use each stamp exactly once to color a rectangle of the same size as the stamp on the grid in black. You cannot rotate the stamp, and for each cell, the stamp must either cover it fully or not cover it at all. You can use the stamp at any position on the grid, even if some or all of the cells covered by the stamping area are already black.What is the minimum sum of the perimeters of the connected regions of black squares you can obtain after all the stamps have been used?"
  },
  {
    "title": "Bermart Ice Cream",
    "url": "https://codeforces.com/problemset/problem/2026/F",
    "description": "In the Bermart chain of stores, a variety of ice cream is sold. Each type of ice cream has two parameters: price and tastiness.Initially, there is one store numbered $$$1$$$, which sells nothing. You have to process $$$q$$$ queries of the following types:   $$$1~x$$$ — a new store opens, that sells the same types of ice cream as store $$$x$$$. It receives the minimum available positive index. The order of the types of ice cream in the new store is the same as in store $$$x$$$.  $$$2~x~p~t$$$ — a type of ice cream with price $$$p$$$ and tastiness $$$t$$$ becomes available in store $$$x$$$.  $$$3~x$$$ — a type of ice cream that was available the longest (appeared the earliest) in store $$$x$$$ is removed.  $$$4~x~p$$$ — for store $$$x$$$, find the maximum total tastiness of a subset of types of ice cream that are sold there, such that the total price does not exceed $$$p$$$ (each type can be used in the subset no more than once). "
  },
  {
    "title": "Best Subsequence",
    "url": "https://codeforces.com/problemset/problem/2026/E",
    "description": "Given an integer array $$$a$$$ of size $$$n$$$.Let's define the value of the array as its size minus the number of set bits in the bitwise OR of all elements of the array.For example, for the array $$$[1, 0, 1, 2]$$$, the bitwise OR is $$$3$$$ (which contains $$$2$$$ set bits), and the value of the array is $$$4-2=2$$$.Your task is to calculate the maximum possible value of some subsequence of the given array."
  },
  {
    "title": "Sums of Segments",
    "url": "https://codeforces.com/problemset/problem/2026/D",
    "description": "You are given a sequence of integers $$$[a_1, a_2, \\dots, a_n]$$$. Let $$$s(l,r)$$$ be the sum of elements from $$$a_l$$$ to $$$a_r$$$ (i. e. $$$s(l,r) = \\sum\\limits_{i=l}^{r} a_i$$$).Let's construct another sequence $$$b$$$ of size $$$\\frac{n(n+1)}{2}$$$ as follows: $$$b = [s(1,1), s(1,2), \\dots, s(1,n), s(2,2), s(2,3), \\dots, s(2,n), s(3,3), \\dots, s(n,n)]$$$.For example, if $$$a = [1, 2, 5, 10]$$$, then $$$b = [1, 3, 8, 18, 2, 7, 17, 5, 15, 10]$$$.You are given $$$q$$$ queries. During the $$$i$$$-th query, you are given two integers $$$l_i$$$ and $$$r_i$$$, and you have to calculate $$$\\sum \\limits_{j=l_i}^{r_i} b_j$$$."
  },
  {
    "title": "Action Figures",
    "url": "https://codeforces.com/problemset/problem/2026/C",
    "description": "There is a shop that sells action figures near Monocarp's house. A new set of action figures will be released shortly; this set contains $$$n$$$ figures, the $$$i$$$-th figure costs $$$i$$$ coins and is available for purchase from day $$$i$$$ to day $$$n$$$.For each of the $$$n$$$ days, Monocarp knows whether he can visit the shop.Every time Monocarp visits the shop, he can buy any number of action figures which are sold in the shop (of course, he cannot buy an action figure that is not yet available for purchase). If Monocarp buys at least two figures during the same day, he gets a discount equal to the cost of the most expensive figure he buys (in other words, he gets the most expensive of the figures he buys for free). Monocarp wants to buy exactly one $$$1$$$-st figure, one $$$2$$$-nd figure, ..., one $$$n$$$-th figure from the set. He cannot buy the same figure twice. What is the minimum amount of money he has to spend?"
  },
  {
    "title": "Black Cells",
    "url": "https://codeforces.com/problemset/problem/2026/B",
    "description": "You are given a strip divided into cells, numbered from left to right from $$$0$$$ to $$$10^{18}$$$. Initially, all cells are white.You can perform the following operation: choose two white cells $$$i$$$ and $$$j$$$, such that $$$i \\ne j$$$ and $$$|i - j| \\le k$$$, and paint them black.A list $$$a$$$ is given. All cells from this list must be painted black. Additionally, at most one cell that is not in this list can also be painted black. Your task is to determine the minimum value of $$$k$$$ for which this is possible."
  },
  {
    "title": "Perpendicular Segments",
    "url": "https://codeforces.com/problemset/problem/2026/A",
    "description": "You are given a coordinate plane and three integers $$$X$$$, $$$Y$$$, and $$$K$$$. Find two line segments $$$AB$$$ and $$$CD$$$ such that   the coordinates of points $$$A$$$, $$$B$$$, $$$C$$$, and $$$D$$$ are integers;  $$$0 \\le A_x, B_x, C_x, D_x \\le X$$$ and $$$0 \\le A_y, B_y, C_y, D_y \\le Y$$$;  the length of segment $$$AB$$$ is at least $$$K$$$;  the length of segment $$$CD$$$ is at least $$$K$$$;  segments $$$AB$$$ and $$$CD$$$ are perpendicular: if you draw lines that contain $$$AB$$$ and $$$CD$$$, they will cross at a right angle. Note that it's not necessary for segments to intersect. Segments are perpendicular as long as the lines they induce are perpendicular."
  },
  {
    "title": "Variable Damage",
    "url": "https://codeforces.com/problemset/problem/2025/G",
    "description": "Monocarp is gathering an army to fight a dragon in a videogame.The army consists of two parts: the heroes and the defensive artifacts. Each hero has one parameter — his health. Each defensive artifact also has one parameter — its durability.Before the battle begins, Monocarp distributes artifacts to the heroes so that each hero receives at most one artifact.The battle consists of rounds that proceed as follows:   first, the dragon deals damage equal to $$$\\frac{1}{a + b}$$$ (a real number without rounding) to each hero, where $$$a$$$ is the number of heroes alive and $$$b$$$ is the number of active artifacts;  after that, all heroes with health $$$0$$$ or less die;  finally, some artifacts are deactivated. An artifact with durability $$$x$$$ is deactivated when one of the following occurs: the hero holding the artifact either dies or receives $$$x$$$ total damage (from the start of the battle). If an artifact is not held by any hero, it is inactive from the beginning of the battle. The battle ends when there are no heroes left alive.Initially, the army is empty. There are $$$q$$$ queries: add a hero with health $$$x$$$ or an artifact with durability $$$y$$$ to the army. After each query, determine the maximum number of rounds that Monocarp can survive if he distributes the artifacts optimally."
  },
  {
    "title": "Choose Your Queries",
    "url": "https://codeforces.com/problemset/problem/2025/F",
    "description": "You are given an array $$$a$$$, consisting of $$$n$$$ integers (numbered from $$$1$$$ to $$$n$$$). Initially, they are all zeroes.You have to process $$$q$$$ queries. The $$$i$$$-th query consists of two different integers $$$x_i$$$ and $$$y_i$$$. During the $$$i$$$-th query, you have to choose an integer $$$p$$$ (which is either $$$x_i$$$ or $$$y_i$$$) and an integer $$$d$$$ (which is either $$$1$$$ or $$$-1$$$), and assign $$$a_p = a_p + d$$$.After each query, every element of $$$a$$$ should be a non-negative integer.Process all queries in such a way that the sum of all elements of $$$a$$$ after the last query is the minimum possible."
  },
  {
    "title": "Card Game",
    "url": "https://codeforces.com/problemset/problem/2025/E",
    "description": "In the most popular card game in Berland, a deck of $$$n \\times m$$$ cards is used. Each card has two parameters: suit and rank. Suits in the game are numbered from $$$1$$$ to $$$n$$$, and ranks are numbered from $$$1$$$ to $$$m$$$. There is exactly one card in the deck for each combination of suit and rank.A card with suit $$$a$$$ and rank $$$b$$$ can beat a card with suit $$$c$$$ and rank $$$d$$$ in one of two cases:   $$$a = 1$$$, $$$c \\ne 1$$$ (a card of suit $$$1$$$ can beat a card of any other suit);  $$$a = c$$$, $$$b > d$$$ (a card can beat any other card of the same suit but of a lower rank). Two players play the game. Before the game starts, they receive exactly half of the deck each. The first player wins if for every card of the second player, he can choose his card that can beat it, and there is no card that is chosen twice (i. e. there exists a matching of the first player's cards with the second player's cards such that in each pair the first player's card beats the second player's card). Otherwise, the second player wins.Your task is to calculate the number of ways to distribute the cards so that the first player wins. Two ways are considered different if there exists a card such that in one way it belongs to the first player and in the other way it belongs to the second player. The number of ways can be very large, so print it modulo $$$998244353$$$."
  },
  {
    "title": "Attribute Checks",
    "url": "https://codeforces.com/problemset/problem/2025/D",
    "description": "Imagine a game where you play as a character that has two attributes: \"Strength\" and \"Intelligence\", that are at zero level initially.During the game, you'll acquire $$$m$$$ attribute points that allow you to increase your attribute levels — one point will increase one of the attributes by one level. But sometimes, you'll encounter a so-called \"Attribute Checks\": if your corresponding attribute is high enough, you'll pass it; otherwise, you'll fail it.Spending some time, you finally prepared a list which contains records of all points you got and all checks you've met. And now you're wondering: what is the maximum number of attribute checks you can pass in a single run if you'd spend points wisely?Note that you can't change the order of records."
  },
  {
    "title": "New Game",
    "url": "https://codeforces.com/problemset/problem/2025/C",
    "description": "There's a new game Monocarp wants to play. The game uses a deck of $$$n$$$ cards, where the $$$i$$$-th card has exactly one integer $$$a_i$$$ written on it.At the beginning of the game, on the first turn, Monocarp can take any card from the deck. During each subsequent turn, Monocarp can take exactly one card that has either the same number as on the card taken on the previous turn or a number that is one greater than the number on the card taken on the previous turn.In other words, if on the previous turn Monocarp took a card with the number $$$x$$$, then on the current turn he can take either a card with the number $$$x$$$ or a card with the number $$$x + 1$$$. Monocarp can take any card which meets that condition, regardless of its position in the deck.After Monocarp takes a card on the current turn, it is removed from the deck.According to the rules of the game, the number of distinct numbers written on the cards that Monocarp has taken must not exceed $$$k$$$.If, after a turn, Monocarp cannot take a card without violating the described rules, the game ends.Your task is to determine the maximum number of cards that Monocarp can take from the deck during the game, given that on the first turn he can take any card from the deck."
  },
  {
    "title": "Binomial Coefficients, Kind Of",
    "url": "https://codeforces.com/problemset/problem/2025/B",
    "description": "Recently, akshiM met a task that needed binomial coefficients to solve. He wrote a code he usually does that looked like this:    for (int n = 0; n < N; n++) { // loop over n from 0 to N-1 (inclusive)        C[n][0] = 1;        C[n][n] = 1;        for (int k = 1; k < n; k++) // loop over k from 1 to n-1 (inclusive)            C[n][k] = C[n][k - 1] + C[n - 1][k - 1];    }Unfortunately, he made an error, since the right formula is the following:            C[n][k] = C[n - 1][k] + C[n - 1][k - 1]But his team member keblidA is interested in values that were produced using the wrong formula. Please help him to calculate these coefficients for $$$t$$$ various pairs $$$(n_i, k_i)$$$. Note that they should be calculated according to the first (wrong) formula.Since values $$$C[n_i][k_i]$$$ may be too large, print them modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Two Screens",
    "url": "https://codeforces.com/problemset/problem/2025/A",
    "description": "There are two screens which can display sequences of uppercase Latin letters. Initially, both screens display nothing.In one second, you can do one of the following two actions:  choose a screen and an uppercase Latin letter, and append that letter to the end of the sequence displayed on that screen;  choose a screen and copy the sequence from it to the other screen, overwriting the sequence that was displayed on the other screen. You have to calculate the minimum number of seconds you have to spend so that the first screen displays the sequence $$$s$$$, and the second screen displays the sequence $$$t$$$."
  },
  {
    "title": "Buying Lemonade",
    "url": "https://codeforces.com/problemset/problem/2024/B",
    "description": "There is a vending machine that sells lemonade. The machine has a total of nn slots. You know that initially, the ii-th slot contains aia_i cans of lemonade. There are also nn buttons on the machine, each button corresponds to a slot, with exactly one button corresponding to each slot. Unfortunately, the labels on the buttons have worn off, so you do not know which button corresponds to which slot.When you press the button corresponding to the ii-th slot, one of two events occurs: If there is a can of lemonade in the ii-th slot, it will drop out and you will take it. At this point, the number of cans in the ii-th slot decreases by 11. If there are no cans of lemonade left in the ii-th slot, nothing will drop out. After pressing, the can drops out so quickly that it is impossible to track from which slot it fell. The contents of the slots are hidden from your view, so you cannot see how many cans are left in each slot. The only thing you know is the initial number of cans in the slots: a1,a2,…,ana_1, a_2, \\ldots, a_n.Determine the minimum number of button presses needed to guarantee that you receive at least kk cans of lemonade.Note that you can adapt your strategy during the button presses based on whether you received a can or not. It is guaranteed that there are at least kk cans of lemonade in total in the machine. In other words, k≤a1+a2+…+ank \\leq a_1 + a_2 + \\ldots + a_n."
  },
  {
    "title": "Profitable Interest Rate",
    "url": "https://codeforces.com/problemset/problem/2024/A",
    "description": "Alice has $$$a$$$ coins. She can open a bank deposit called \"Profitable\", but the minimum amount required to open this deposit is $$$b$$$ coins.There is also a deposit called \"Unprofitable\", which can be opened with any amount of coins. Alice noticed that if she opens the \"Unprofitable\" deposit with $$$x$$$ coins, the minimum amount required to open the \"Profitable\" deposit decreases by $$$2x$$$ coins. However, these coins cannot later be deposited into the \"Profitable\" deposit.Help Alice determine the maximum number of coins she can deposit into the \"Profitable\" deposit if she first deposits some amount of coins (possibly $$$0$$$) into the \"Unprofitable\" deposit. If Alice can never open the \"Profitable\" deposit, output $$$0$$$."
  },
  {
    "title": "Hills and Pits",
    "url": "https://codeforces.com/problemset/problem/2023/F",
    "description": "In a desert city with a hilly landscape, the city hall decided to level the road surface by purchasing a dump truck. The road is divided into $$$n$$$ sections, numbered from $$$1$$$ to $$$n$$$ from left to right. The height of the surface in the $$$i$$$-th section is equal to $$$a_i$$$. If the height of the $$$i$$$-th section is greater than $$$0$$$, then the dump truck must take sand from the $$$i$$$-th section of the road, and if the height of the $$$i$$$-th section is less than $$$0$$$, the dump truck must fill the pit in the $$$i$$$-th section of the road with sand. It is guaranteed that the initial heights are not equal to $$$0$$$.When the dump truck is in the $$$i$$$-th section of the road, it can either take away $$$x$$$ units of sand, in which case the height of the surface in the $$$i$$$-th section will decrease by $$$x$$$, or it can fill in $$$x$$$ units of sand (provided that it currently has at least $$$x$$$ units of sand in its bed), in which case the height of the surface in the $$$i$$$-th section of the road will increase by $$$x$$$.The dump truck can start its journey from any section of the road. Moving to an adjacent section on the left or right takes $$$1$$$ minute, and the time for loading and unloading sand can be neglected. The dump truck has an infinite capacity and is initially empty.You need to find the minimum time required for the dump truck to level the sand so that the height in each section becomes equal to $$$0$$$. Note that after all movements, the dump truck may still have sand left in its bed. You need to solve this problem independently for the segments numbered from $$$l_i$$$ to $$$r_i$$$. Sand outside the segment cannot be used."
  },
  {
    "title": "Tree of Life",
    "url": "https://codeforces.com/problemset/problem/2023/E",
    "description": "In the heart of an ancient kingdom grows the legendary Tree of Life — the only one of its kind and the source of magical power for the entire world. The tree consists of $$$n$$$ nodes. Each node of this tree is a magical source, connected to other such sources through magical channels (edges). In total, there are $$$n-1$$$ channels in the tree, with the $$$i$$$-th channel connecting nodes $$$v_i$$$ and $$$u_i$$$. Moreover, there exists a unique simple path through the channels between any two nodes in the tree.However, the magical energy flowing through these channels must be balanced; otherwise, the power of the Tree of Life may disrupt the natural order and cause catastrophic consequences. The sages of the kingdom discovered that when two magical channels converge at a single node, a dangerous \"magical resonance vibration\" occurs between them. To protect the Tree of Life and maintain its balance, it is necessary to select several paths and perform special rituals along them. A path is a sequence of distinct nodes $$$v_1, v_2, \\ldots, v_k$$$, where each pair of adjacent nodes $$$v_i$$$ and $$$v_{i+1}$$$ is connected by a channel. When the sages perform a ritual along such a path, the resonance vibration between the channels $$$(v_i, v_{i+1})$$$ and $$$(v_{i+1}, v_{i+2})$$$ is blocked for each $$$1 \\leq i \\leq k - 2$$$.The sages' task is to select the minimum number of paths and perform rituals along them to block all resonance vibrations. This means that for every pair of channels emanating from a single node, there must exist at least one selected path that contains both of these channels.Help the sages find the minimum number of such paths so that the magical balance of the Tree of Life is preserved, and its power continues to nourish the entire world!"
  },
  {
    "title": "Many Games",
    "url": "https://codeforces.com/problemset/problem/2023/D",
    "description": "Recently, you received a rare ticket to the only casino in the world where you can actually earn something, and you want to take full advantage of this opportunity.The conditions in this casino are as follows:   There are a total of $$$n$$$ games in the casino.  You can play each game at most once.  Each game is characterized by two parameters: $$$p_i$$$ ($$$1 \\le p_i \\le 100$$$) and $$$w_i$$$ — the probability of winning the game in percentage and the winnings for a win.  If you lose in any game you decide to play, you will receive nothing at all (even for the games you won). You need to choose a set of games in advance that you will play in such a way as to maximize the expected value of your winnings.In this case, if you choose to play the games with indices $$$i_1 < i_2 < \\ldots < i_k$$$, you will win in all of them with a probability of $$$\\prod\\limits_{j=1}^k \\frac{p_{i_j}}{100}$$$, and in that case, your winnings will be equal to $$$\\sum\\limits_{j=1}^k w_{i_j}$$$.That is, the expected value of your winnings will be $$$\\left(\\prod\\limits_{j=1}^k \\frac{p_{i_j}}{100}\\right) \\cdot \\left(\\sum\\limits_{j=1}^k w_{i_j}\\right)$$$.To avoid going bankrupt, the casino owners have limited the expected value of winnings for each individual game. Thus, for all $$$i$$$ ($$$1 \\le i \\le n$$$), it holds that $$$w_i \\cdot p_i \\le 2 \\cdot 10^5$$$.Your task is to find the maximum expected value of winnings that can be obtained by choosing some set of games in the casino."
  },
  {
    "title": "C+K+S",
    "url": "https://codeforces.com/problemset/problem/2023/C",
    "description": "You are given two strongly connected$$$^{\\dagger}$$$ directed graphs, each with exactly $$$n$$$ vertices, but possibly different numbers of edges. Upon closer inspection, you noticed an important feature — the length of any cycle in these graphs is divisible by $$$k$$$.Each of the $$$2n$$$ vertices belongs to exactly one of two types: incoming or outgoing. For each vertex, its type is known to you.You need to determine whether it is possible to draw exactly $$$n$$$ directed edges between the source graphs such that the following four conditions are met:   The ends of any added edge lie in different graphs.  From each outgoing vertex, exactly one added edge originates.  Into each incoming vertex, exactly one added edge enters.  In the resulting graph, the length of any cycle is divisible by $$$k$$$. $$$^{\\dagger}$$$A strongly connected graph is a graph in which there is a path from every vertex to every other vertex."
  },
  {
    "title": "Skipping",
    "url": "https://codeforces.com/problemset/problem/2023/B",
    "description": "It is already the year $$$3024$$$, ideas for problems have long run out, and the olympiad now takes place in a modified individual format. The olympiad consists of $$$n$$$ problems, numbered from $$$1$$$ to $$$n$$$. The $$$i$$$-th problem has its own score $$$a_i$$$ and a certain parameter $$$b_i$$$ ($$$1 \\le b_i \\le n$$$).Initially, the testing system gives the participant the first problem. When the participant is given the $$$i$$$-th problem, they have two options:   They can submit the problem and receive $$$a_i$$$ points;  They can skip the problem, in which case they will never be able to submit it. Then, the testing system selects the next problem for the participant from problems with indices $$$j$$$, such that:   If he submitted the $$$i$$$-th problem, it looks at problems with indices $$$j < i$$$;  If he skipped the $$$i$$$-th problem, it looks at problems with indices $$$j \\leq b_i$$$. Among these problems, it selects the problem with the maximum index that it has not previously given to the participant (he has neither submitted nor skipped it before). If there is no such problem, then the competition for the participant ends, and their result is equal to the sum of points for all submitted problems. In particular, if the participant submits the first problem, then the competition for them ends. Note that the participant receives each problem at most once.Prokhor has prepared thoroughly for the olympiad, and now he can submit any problem. Help him determine the maximum number of points he can achieve."
  },
  {
    "title": "Concatenation of Arrays",
    "url": "https://codeforces.com/problemset/problem/2023/A",
    "description": "You are given $$$n$$$ arrays $$$a_1$$$, $$$\\ldots$$$, $$$a_n$$$. The length of each array is two. Thus, $$$a_i = [a_{i, 1}, a_{i, 2}]$$$. You need to concatenate the arrays into a single array of length $$$2n$$$ such that the number of inversions$$$^{\\dagger}$$$ in the resulting array is minimized. Note that you do not need to count the actual number of inversions.More formally, you need to choose a permutation$$$^{\\ddagger}$$$ $$$p$$$ of length $$$n$$$, so that the array $$$b = [a_{p_1,1}, a_{p_1,2}, a_{p_2, 1}, a_{p_2, 2}, \\ldots, a_{p_n,1}, a_{p_n,2}]$$$ contains as few inversions as possible.$$$^{\\dagger}$$$The number of inversions in an array $$$c$$$ is the number of pairs of indices $$$i$$$ and $$$j$$$ such that $$$i < j$$$ and $$$c_i > c_j$$$.$$$^{\\ddagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Billetes MX (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2022/E2",
    "description": "This is the hard version of the problem. In this version, it is guaranteed that $$$q \\leq 10^5$$$. You can make hacks only if both versions of the problem are solved.An integer grid $$$A$$$ with $$$p$$$ rows and $$$q$$$ columns is called beautiful if:   All elements of the grid are integers between $$$0$$$ and $$$2^{30}-1$$$, and  For any subgrid, the XOR of the values at the corners is equal to $$$0$$$. Formally, for any four integers $$$i_1$$$, $$$i_2$$$, $$$j_1$$$, $$$j_2$$$ ($$$1 \\le i_1 < i_2 \\le p$$$; $$$1 \\le j_1 < j_2 \\le q$$$), $$$A_{i_1, j_1} \\oplus A_{i_1, j_2} \\oplus A_{i_2, j_1} \\oplus A_{i_2, j_2} = 0$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. There is a partially filled integer grid $$$G$$$ with $$$n$$$ rows and $$$m$$$ columns where only $$$k$$$ cells are filled. Polycarp wants to know how many ways he can assign integers to the unfilled cells so that the grid is beautiful.However, Monocarp thinks that this problem is too easy. Therefore, he will perform $$$q$$$ updates on the grid. In each update, he will choose an unfilled cell and assign an integer to it. Note that these updates are persistent. That is, changes made to the grid will apply when processing future updates.For each of the $$$q + 1$$$ states of the grid, the initial state and after each of the $$$q$$$ queries, determine the number of ways Polycarp can assign integers to the unfilled cells so that the grid is beautiful. Since this number can be very large, you are only required to output their values modulo $$$10^9+7$$$."
  },
  {
    "title": "Billetes MX (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2022/E1",
    "description": "This is the easy version of the problem. In this version, it is guaranteed that $$$q = 0$$$. You can make hacks only if both versions of the problem are solved.An integer grid $$$A$$$ with $$$p$$$ rows and $$$q$$$ columns is called beautiful if:   All elements of the grid are integers between $$$0$$$ and $$$2^{30}-1$$$, and  For any subgrid, the XOR of the values at the corners is equal to $$$0$$$. Formally, for any four integers $$$i_1$$$, $$$i_2$$$, $$$j_1$$$, $$$j_2$$$ ($$$1 \\le i_1 < i_2 \\le p$$$; $$$1 \\le j_1 < j_2 \\le q$$$), $$$A_{i_1, j_1} \\oplus A_{i_1, j_2} \\oplus A_{i_2, j_1} \\oplus A_{i_2, j_2} = 0$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. There is a partially filled integer grid $$$G$$$ with $$$n$$$ rows and $$$m$$$ columns where only $$$k$$$ cells are filled. Polycarp wants to know how many ways he can assign integers to the unfilled cells so that the grid is beautiful.However, Monocarp thinks that this problem is too easy. Therefore, he will perform $$$q$$$ updates on the grid. In each update, he will choose an unfilled cell and assign an integer to it. Note that these updates are persistent. That is, changes made to the grid will apply when processing future updates.For each of the $$$q + 1$$$ states of the grid, the initial state and after each of the $$$q$$$ queries, determine the number of ways Polycarp can assign integers to the unfilled cells so that the grid is beautiful. Since this number can be very large, you are only required to output their values modulo $$$10^9+7$$$."
  },
  {
    "title": "Asesino (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2022/D2",
    "description": "This is the hard version of the problem. In this version, you must use the minimum number of queries possible. You can make hacks only if both versions of the problem are solved.This is an interactive problem.It is a tradition in Mexico's national IOI trainings to play the game \"Asesino\", which is similar to \"Among Us\" or \"Mafia\".Today, $$$n$$$ players, numbered from $$$1$$$ to $$$n$$$, will play \"Asesino\" with the following three roles:  Knight: a Knight is someone who always tells the truth.  Knave: a Knave is someone who always lies.  Impostor: an Impostor is someone everybody thinks is a Knight, but is secretly a Knave. Each player will be assigned a role in the game. There will be exactly one Impostor but there can be any (possible zero) number of Knights and Knaves.As the game moderator, you have accidentally forgotten the roles of everyone, but you need to determine the player who is the Impostor.To determine the Impostor, you will ask some questions. In each question, you will pick two players $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq n$$$; $$$i \\neq j$$$) and ask if player $$$i$$$ thinks that player $$$j$$$ is a Knight. The results of the question is shown in the table below. KnightKnaveImpostorKnightYesNoYesKnaveNoYesNoImpostorNoYes— The response of the cell in row $$$a$$$ and column $$$b$$$ is the result of asking a question when $$$i$$$ has role $$$a$$$ and $$$j$$$ has row $$$b$$$. For example, the \"Yes\" in the top right cell belongs to row \"Knight\" and column \"Impostor\", so it is the response when $$$i$$$ is a Knight and $$$j$$$ is an Impostor. Find the Impostor in the minimum number of queries possible. That is, let $$$f(n)$$$ be the minimum integer such that for $$$n$$$ players, there exists a strategy that can determine the Impostor using at most $$$f(n)$$$ questions. Then, you should use at most $$$f(n)$$$ questions to determine the Impostor.Note: the grader is adaptive: the roles of the players are not fixed in the beginning and may change depending on your questions. However, it is guaranteed that there exists an assignment of roles that is consistent with all previously asked questions under the constraints of this problem."
  },
  {
    "title": "Asesino (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2022/D1",
    "description": "This is the easy version of the problem. In this version, you can ask at most $$$n+69$$$ questions. You can make hacks only if both versions of the problem are solved.This is an interactive problem.It is a tradition in Mexico's national IOI trainings to play the game \"Asesino\", which is similar to \"Among Us\" or \"Mafia\".Today, $$$n$$$ players, numbered from $$$1$$$ to $$$n$$$, will play \"Asesino\" with the following three roles:  Knight: a Knight is someone who always tells the truth.  Knave: a Knave is someone who always lies.  Impostor: an Impostor is someone everybody thinks is a Knight, but is secretly a Knave. Each player will be assigned a role in the game. There will be exactly one Impostor but there can be any (possible zero) number of Knights and Knaves.As the game moderator, you have accidentally forgotten the roles of everyone, but you need to determine the player who is the Impostor.To determine the Impostor, you will ask some questions. In each question, you will pick two players $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq n$$$; $$$i \\neq j$$$) and ask if player $$$i$$$ thinks that player $$$j$$$ is a Knight. The results of the question is shown in the table below. KnightKnaveImpostorKnightYesNoYesKnaveNoYesNoImpostorNoYes— The response of the cell in row $$$a$$$ and column $$$b$$$ is the result of asking a question when $$$i$$$ has role $$$a$$$ and $$$j$$$ has row $$$b$$$. For example, the \"Yes\" in the top right cell belongs to row \"Knight\" and column \"Impostor\", so it is the response when $$$i$$$ is a Knight and $$$j$$$ is an Impostor. Find the Impostor in at most $$$n + 69$$$ questions.Note: the grader is adaptive: the roles of the players are not fixed in the beginning and may change depending on your questions. However, it is guaranteed that there exists an assignment of roles that is consistent with all previously asked questions under the constraints of this problem."
  },
  {
    "title": "Gerrymandering",
    "url": "https://codeforces.com/problemset/problem/2022/C",
    "description": "We all steal a little bit. But I have only one hand, while my adversaries have two.Álvaro ObregónÁlvaro and José are the only candidates running for the presidency of Tepito, a rectangular grid of $$$2$$$ rows and $$$n$$$ columns, where each cell represents a house. It is guaranteed that $$$n$$$ is a multiple of $$$3$$$.Under the voting system of Tepito, the grid will be split into districts, which consist of any $$$3$$$ houses that are connected$$$^{\\text{∗}}$$$. Each house will belong to exactly one district.Each district will cast a single vote. The district will vote for Álvaro or José respectively if at least $$$2$$$ houses in that district select them. Therefore, a total of $$$\\frac{2n}{3}$$$ votes will be cast.As Álvaro is the current president, he knows exactly which candidate each house will select. If Álvaro divides the houses into districts optimally, determine the maximum number of votes he can get.$$$^{\\text{∗}}$$$A set of cells is connected if there is a path between any $$$2$$$ cells that requires moving only up, down, left and right through cells in the set."
  },
  {
    "title": "Kar Salesman",
    "url": "https://codeforces.com/problemset/problem/2022/B",
    "description": "Karel is a salesman in a car dealership. The dealership has $$$n$$$ different models of cars. There are $$$a_i$$$ cars of the $$$i$$$-th model. Karel is an excellent salesperson and can convince customers to buy up to $$$x$$$ cars (of Karel's choice), as long as the cars are from different models.Determine the minimum number of customers Karel has to bring in to sell all the cars."
  },
  {
    "title": "Bus to Pénjamo",
    "url": "https://codeforces.com/problemset/problem/2022/A",
    "description": "Ya vamos llegando a Péeeenjamoo ♫♫♫  There are nn families travelling to Pénjamo to witness Mexico's largest-ever \"walking a chicken on a leash\" marathon. The ii-th family has aia_i family members. All families will travel using a single bus consisting of rr rows with 22 seats each.A person is considered happy if:   Another family member is seated in the same row as them, or  They are sitting alone in their row (with an empty seat next to them). Determine the maximum number of happy people in an optimal seating arrangement. Note that everyone must be seated in the bus.It is guaranteed that all family members will fit on the bus. Formally, it is guaranteed that n∑i=1ai≤2r\\displaystyle\\sum_{i=1}^{n}a_i \\le 2r."
  },
  {
    "title": "Digital Village (Extreme Version)",
    "url": "https://codeforces.com/problemset/problem/2021/E3",
    "description": "This is the extreme version of the problem. In the three versions, the constraints on nn and mm are different. You can make hacks only if all the versions of the problem are solved.Pak Chanek is setting up internet connections for the village of Khuntien. The village can be represented as a connected simple graph with nn houses and mm internet cables connecting house uiu_i and house viv_i, each with a latency of wiw_i.There are pp houses that require internet. Pak Chanek can install servers in at most kk of the houses. The houses that need internet will then be connected to one of the servers. However, since each cable has its latency, the latency experienced by house sis_i requiring internet will be the maximum latency of the cables between that house and the server it is connected to.For each k=1,2,…,nk = 1,2,\\ldots,n, help Pak Chanek determine the minimum total latency that can be achieved for all the houses requiring internet."
  },
  {
    "title": "Digital Village (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2021/E2",
    "description": "This is the hard version of the problem. In the three versions, the constraints on $$$n$$$ and $$$m$$$ are different. You can make hacks only if all the versions of the problem are solved.Pak Chanek is setting up internet connections for the village of Khuntien. The village can be represented as a connected simple graph with $$$n$$$ houses and $$$m$$$ internet cables connecting house $$$u_i$$$ and house $$$v_i$$$, each with a latency of $$$w_i$$$.There are $$$p$$$ houses that require internet. Pak Chanek can install servers in at most $$$k$$$ of the houses. The houses that need internet will then be connected to one of the servers. However, since each cable has its latency, the latency experienced by house $$$s_i$$$ requiring internet will be the maximum latency of the cables between that house and the server it is connected to.For each $$$k = 1,2,\\ldots,n$$$, help Pak Chanek determine the minimum total latency that can be achieved for all the houses requiring internet."
  },
  {
    "title": "Digital Village (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2021/E1",
    "description": "This is the easy version of the problem. In the three versions, the constraints on $$$n$$$ and $$$m$$$ are different. You can make hacks only if all the versions of the problem are solved.Pak Chanek is setting up internet connections for the village of Khuntien. The village can be represented as a connected simple graph with $$$n$$$ houses and $$$m$$$ internet cables connecting house $$$u_i$$$ and house $$$v_i$$$, each with a latency of $$$w_i$$$.There are $$$p$$$ houses that require internet. Pak Chanek can install servers in at most $$$k$$$ of the houses. The houses that need internet will then be connected to one of the servers. However, since each cable has its latency, the latency experienced by house $$$s_i$$$ requiring internet will be the maximum latency of the cables between that house and the server it is connected to.For each $$$k = 1,2,\\ldots,n$$$, help Pak Chanek determine the minimum total latency that can be achieved for all the houses requiring internet."
  },
  {
    "title": "Boss, Thirsty",
    "url": "https://codeforces.com/problemset/problem/2021/D",
    "description": "Pak Chanek has a friend who runs a drink stall in a canteen. His friend will sell drinks for $$$n$$$ days, numbered from day $$$1$$$ to day $$$n$$$. There are also $$$m$$$ types of drinks, numbered from $$$1$$$ to $$$m$$$.The profit gained from selling a drink on a particular day can vary. On day $$$i$$$, the projected profit from selling drink of type $$$j$$$ is $$$A_{i, j}$$$. Note that $$$A_{i, j}$$$ can be negative, meaning that selling the drink would actually incur a loss.Pak Chanek wants to help his friend plan the sales over the $$$n$$$ days. On day $$$i$$$, Pak Chanek must choose to sell at least one type of drink. Furthermore, the types of drinks sold on a single day must form a subarray. In other words, in each day, Pak Chanek will select $$$i$$$ and $$$j$$$ such that $$$1 \\leq i \\leq j \\leq m$$$. Then all types of drinks between $$$i$$$ and $$$j$$$ (inclusive) will be sold.However, to ensure that customers from the previous day keep returning, the selection of drink types sold on day $$$i$$$ ($$$i>1$$$) must meet the following conditions:  At least one drink type sold on day $$$i$$$ must also have been sold on day $$$i-1$$$.  At least one drink type sold on day $$$i$$$ must not have been sold on day $$$i-1$$$. The daily profit is the sum of the profits from all drink types sold on that day. The total profit from the sales plan is the sum of the profits over $$$n$$$ days. What is the maximum total profit that can be achieved if Pak Chanek plans the sales optimally?"
  },
  {
    "title": "Adjust The Presentation (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2021/C2",
    "description": "This is the hard version of the problem. In the two versions, the constraints on $$$q$$$ and the time limit are different. In this version, $$$0 \\leq q \\leq 2 \\cdot 10^5$$$. You can make hacks only if all the versions of the problem are solved.A team consisting of $$$n$$$ members, numbered from $$$1$$$ to $$$n$$$, is set to present a slide show at a large meeting. The slide show contains $$$m$$$ slides.There is an array $$$a$$$ of length $$$n$$$. Initially, the members are standing in a line in the order of $$$a_1, a_2, \\ldots, a_n$$$ from front to back. The slide show will be presented in order from slide $$$1$$$ to slide $$$m$$$. Each section will be presented by the member at the front of the line. After each slide is presented, you can move the member at the front of the line to any position in the lineup (without changing the order of the rest of the members). For example, suppose the line of members is $$$[\\color{red}{3},1,2,4]$$$. After member $$$3$$$ presents the current slide, you can change the line of members into either $$$[\\color{red}{3},1,2,4]$$$, $$$[1,\\color{red}{3},2,4]$$$, $$$[1,2,\\color{red}{3},4]$$$ or $$$[1,2,4,\\color{red}{3}]$$$.There is also an array $$$b$$$ of length $$$m$$$. The slide show is considered good if it is possible to make member $$$b_i$$$ present slide $$$i$$$ for all $$$i$$$ from $$$1$$$ to $$$m$$$ under these constraints.However, your annoying boss wants to make $$$q$$$ updates to the array $$$b$$$. In the $$$i$$$-th update, he will choose a slide $$$s_i$$$ and a member $$$t_i$$$ and set $$$b_{s_i} := t_i$$$. Note that these updates are persistent, that is changes made to the array $$$b$$$ will apply when processing future updates.For each of the $$$q+1$$$ states of array $$$b$$$, the initial state and after each of the $$$q$$$ updates, determine if the slideshow is good."
  },
  {
    "title": "Adjust The Presentation (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2021/C1",
    "description": "This is the easy version of the problem. In the two versions, the constraints on qq and the time limit are different. In this version, q=0q=0. You can make hacks only if all the versions of the problem are solved.A team consisting of nn members, numbered from 11 to nn, is set to present a slide show at a large meeting. The slide show contains mm slides.There is an array aa of length nn. Initially, the members are standing in a line in the order of a1,a2,…,ana_1, a_2, \\ldots, a_n from front to back. The slide show will be presented in order from slide 11 to slide mm. Each section will be presented by the member at the front of the line. After each slide is presented, you can move the member at the front of the line to any position in the lineup (without changing the order of the rest of the members). For example, suppose the line of members is [3,1,2,4][\\color{red}{3},1,2,4]. After member 33 presents the current slide, you can change the line of members into either [3,1,2,4][\\color{red}{3},1,2,4], [1,3,2,4][1,\\color{red}{3},2,4], [1,2,3,4][1,2,\\color{red}{3},4] or [1,2,4,3][1,2,4,\\color{red}{3}].There is also an array bb of length mm. The slide show is considered good if it is possible to make member bib_i present slide ii for all ii from 11 to mm under these constraints.However, your annoying boss wants to make qq updates to the array bb. In the ii-th update, he will choose a slide sis_i and a member tit_i and set bsi:=tib_{s_i} := t_i. Note that these updates are persistent, that is changes made to the array bb will apply when processing future updates.For each of the q+1q+1 states of array bb, the initial state and after each of the qq updates, determine if the slideshow is good."
  },
  {
    "title": "Maximize Mex",
    "url": "https://codeforces.com/problemset/problem/2021/B",
    "description": "You are given an array $$$a$$$ of $$$n$$$ positive integers and an integer $$$x$$$. You can do the following two-step operation any (possibly zero) number of times:   Choose an index $$$i$$$ ($$$1 \\leq i \\leq n$$$).  Increase $$$a_i$$$ by $$$x$$$, in other words $$$a_i := a_i + x$$$. Find the maximum value of the $$$\\operatorname{MEX}$$$ of $$$a$$$ if you perform the operations optimally.The $$$\\operatorname{MEX}$$$ (minimum excluded value) of an array is the smallest non-negative integer that is not in the array. For example:   The $$$\\operatorname{MEX}$$$ of $$$[2,2,1]$$$ is $$$0$$$ because $$$0$$$ is not in the array.  The $$$\\operatorname{MEX}$$$ of $$$[3,1,0,1]$$$ is $$$2$$$ because $$$0$$$ and $$$1$$$ are in the array but $$$2$$$ is not.  The $$$\\operatorname{MEX}$$$ of $$$[0,3,1,2]$$$ is $$$4$$$ because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ are in the array but $$$4$$$ is not.  "
  },
  {
    "title": "Meaning Mean",
    "url": "https://codeforces.com/problemset/problem/2021/A",
    "description": "Pak Chanek has an array $$$a$$$ of $$$n$$$ positive integers. Since he is currently learning how to calculate the floored average of two numbers, he wants to practice it on his array $$$a$$$.While the array $$$a$$$ has at least two elements, Pak Chanek will perform the following three-step operation:   Pick two different indices $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq |a|$$$; $$$i \\neq j$$$), note that $$$|a|$$$ denotes the current size of the array $$$a$$$.  Append $$$\\lfloor \\frac{a_i+a_j}{2} \\rfloor$$$$$$^{\\text{∗}}$$$ to the end of the array.  Remove elements $$$a_i$$$ and $$$a_j$$$ from the array and concatenate the remaining parts of the array. For example, suppose that $$$a=[5,4,3,2,1,1]$$$. If we choose $$$i=1$$$ and $$$j=5$$$, the resulting array will be $$$a=[4,3,2,1,3]$$$. If we choose $$$i=4$$$ and $$$j=3$$$, the resulting array will be $$$a=[5,4,1,1,2]$$$.After all operations, the array will consist of a single element $$$x$$$. Find the maximum possible value of $$$x$$$ if Pak Chanek performs the operations optimally.$$$^{\\text{∗}}$$$$$$\\lfloor x \\rfloor$$$ denotes the floor function of $$$x$$$, which is the greatest integer that is less than or equal to $$$x$$$. For example, $$$\\lfloor 6 \\rfloor = 6$$$, $$$\\lfloor 2.5 \\rfloor=2$$$, $$$\\lfloor -3.6 \\rfloor=-4$$$ and $$$\\lfloor \\pi \\rfloor=3$$$"
  },
  {
    "title": "Count Leaves",
    "url": "https://codeforces.com/problemset/problem/2020/F",
    "description": "Let $$$n$$$ and $$$d$$$ be positive integers. We build the the divisor tree $$$T_{n,d}$$$ as follows:  The root of the tree is a node marked with number $$$n$$$. This is the $$$0$$$-th layer of the tree.  For each $$$i$$$ from $$$0$$$ to $$$d - 1$$$, for each vertex of the $$$i$$$-th layer, do the following. If the current vertex is marked with $$$x$$$, create its children and mark them with all possible distinct divisors$$$^\\dagger$$$ of $$$x$$$. These children will be in the $$$(i+1)$$$-st layer.  The vertices on the $$$d$$$-th layer are the leaves of the tree. For example, $$$T_{6,2}$$$ (the divisor tree for $$$n = 6$$$ and $$$d = 2$$$) looks like this:  Define $$$f(n,d)$$$ as the number of leaves in $$$T_{n,d}$$$.Given integers $$$n$$$, $$$k$$$, and $$$d$$$, please compute $$$\\sum\\limits_{i=1}^{n} f(i^k,d)$$$, modulo $$$10^9+7$$$.$$$^\\dagger$$$ In this problem, we say that an integer $$$y$$$ is a divisor of $$$x$$$ if $$$y \\ge 1$$$ and there exists an integer $$$z$$$ such that $$$x = y \\cdot z$$$."
  },
  {
    "title": "Expected Power",
    "url": "https://codeforces.com/problemset/problem/2020/E",
    "description": "You are given an array of $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$. You are also given an array $$$p_1, p_2, \\ldots, p_n$$$.Let $$$S$$$ denote the random multiset (i. e., it may contain equal elements) constructed as follows:  Initially, $$$S$$$ is empty.  For each $$$i$$$ from $$$1$$$ to $$$n$$$, insert $$$a_i$$$ into $$$S$$$ with probability $$$\\frac{p_i}{10^4}$$$. Note that each element is inserted independently. Denote $$$f(S)$$$ as the bitwise XOR of all elements of $$$S$$$. Please calculate the expected value of $$$(f(S))^2$$$. Output the answer modulo $$$10^9 + 7$$$.Formally, let $$$M = 10^9 + 7$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$."
  },
  {
    "title": "Connect the Dots",
    "url": "https://codeforces.com/problemset/problem/2020/D",
    "description": "One fine evening, Alice sat down to play the classic game \"Connect the Dots\", but with a twist.To play the game, Alice draws a straight line and marks $$$n$$$ points on it, indexed from $$$1$$$ to $$$n$$$. Initially, there are no arcs between the points, so they are all disjoint. After that, Alice performs $$$m$$$ operations of the following type:  She picks three integers $$$a_i$$$, $$$d_i$$$ ($$$1 \\le d_i \\le 10$$$), and $$$k_i$$$.  She selects points $$$a_i, a_i+d_i, a_i+2d_i, a_i+3d_i, \\ldots, a_i+k_i\\cdot d_i$$$ and connects each pair of these points with arcs. After performing all $$$m$$$ operations, she wants to know the number of connected components$$$^\\dagger$$$ these points form. Please help her find this number.$$$^\\dagger$$$ Two points are said to be in one connected component if there is a path between them via several (possibly zero) arcs and other points."
  },
  {
    "title": "Bitwise Balancing",
    "url": "https://codeforces.com/problemset/problem/2020/C",
    "description": "You are given three non-negative integers $$$b$$$, $$$c$$$, and $$$d$$$.Please find a non-negative integer $$$a \\in [0, 2^{61}]$$$ such that $$$(a\\, |\\, b)-(a\\, \\&\\, c)=d$$$, where $$$|$$$ and $$$\\&$$$ denote the bitwise OR operation and the bitwise AND operation, respectively.If such an $$$a$$$ exists, print its value. If there is no solution, print a single integer $$$-1$$$. If there are multiple solutions, print any of them."
  },
  {
    "title": "Brightness Begins",
    "url": "https://codeforces.com/problemset/problem/2020/B",
    "description": "Imagine you have $$$n$$$ light bulbs numbered $$$1, 2, \\ldots, n$$$. Initially, all bulbs are on. To flip the state of a bulb means to turn it off if it used to be on, and to turn it on otherwise.Next, you do the following:  for each $$$i = 1, 2, \\ldots, n$$$, flip the state of all bulbs $$$j$$$ such that $$$j$$$ is divisible by $$$i^\\dagger$$$. After performing all operations, there will be several bulbs that are still on. Your goal is to make this number exactly $$$k$$$.Find the smallest suitable $$$n$$$ such that after performing the operations there will be exactly $$$k$$$ bulbs on. We can show that an answer always exists.$$$^\\dagger$$$ An integer $$$x$$$ is divisible by $$$y$$$ if there exists an integer $$$z$$$ such that $$$x = y\\cdot z$$$."
  },
  {
    "title": "Find Minimum Operations",
    "url": "https://codeforces.com/problemset/problem/2020/A",
    "description": "You are given two integers $$$n$$$ and $$$k$$$.In one operation, you can subtract any power of $$$k$$$ from $$$n$$$. Formally, in one operation, you can replace $$$n$$$ by $$$(n-k^x)$$$ for any non-negative integer $$$x$$$.Find the minimum number of operations required to make $$$n$$$ equal to $$$0$$$."
  },
  {
    "title": "All Pairs Segments",
    "url": "https://codeforces.com/problemset/problem/2019/B",
    "description": "Shirobon - FOX⠀You are given $$$n$$$ points on the $$$x$$$ axis, at increasing positive integer coordinates $$$x_1 < x_2 < \\ldots < x_n$$$.For each pair $$$(i, j)$$$ with $$$1 \\leq i < j \\leq n$$$, you draw the segment $$$[x_i, x_j]$$$. The segments are closed, i.e., a segment $$$[a, b]$$$ contains the points $$$a, a+1, \\ldots, b$$$.You are given $$$q$$$ queries. In the $$$i$$$-th query, you are given a positive integer $$$k_i$$$, and you have to determine how many points with integer coordinates are contained in exactly $$$k_i$$$ segments."
  },
  {
    "title": "Max Plus Size",
    "url": "https://codeforces.com/problemset/problem/2019/A",
    "description": "EnV - Dynasty⠀You are given an array $$$a_1, a_2, \\ldots, a_n$$$ of positive integers.You can color some elements of the array red, but there cannot be two adjacent red elements (i.e., for $$$1 \\leq i \\leq n-1$$$, at least one of $$$a_i$$$ and $$$a_{i+1}$$$ must not be red).Your score is the maximum value of a red element plus the number of red elements. Find the maximum score you can get."
  },
  {
    "title": "Speedbreaker Counting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2018/F3",
    "description": "NightHawk22 - Isolation⠀This is the hard version of the problem. In the three versions, the constraints on $$$n$$$ and the time limit are different. You can make hacks only if all the versions of the problem are solved.This is the statement of Problem D1B:  There are $$$n$$$ cities in a row, numbered $$$1, 2, \\ldots, n$$$ left to right.  At time $$$1$$$, you conquer exactly one city, called the starting city.  At time $$$2, 3, \\ldots, n$$$, you can choose a city adjacent to the ones conquered so far and conquer it. You win if, for each $$$i$$$, you conquer city $$$i$$$ at a time no later than $$$a_i$$$. A winning strategy may or may not exist, also depending on the starting city. How many starting cities allow you to win? For each $$$0 \\leq k \\leq n$$$, count the number of arrays of positive integers $$$a_1, a_2, \\ldots, a_n$$$ such that  $$$1 \\leq a_i \\leq n$$$ for each $$$1 \\leq i \\leq n$$$;  the answer to Problem D1B is $$$k$$$. The answer can be very large, so you have to calculate it modulo a given prime $$$p$$$."
  },
  {
    "title": "Speedbreaker Counting (Medium Version)",
    "url": "https://codeforces.com/problemset/problem/2018/F2",
    "description": "NightHawk22 - Isolation⠀This is the medium version of the problem. In the three versions, the constraints on $$$n$$$ and the time limit are different. You can make hacks only if all the versions of the problem are solved.This is the statement of Problem D1B:  There are $$$n$$$ cities in a row, numbered $$$1, 2, \\ldots, n$$$ left to right.  At time $$$1$$$, you conquer exactly one city, called the starting city.  At time $$$2, 3, \\ldots, n$$$, you can choose a city adjacent to the ones conquered so far and conquer it. You win if, for each $$$i$$$, you conquer city $$$i$$$ at a time no later than $$$a_i$$$. A winning strategy may or may not exist, also depending on the starting city. How many starting cities allow you to win? For each $$$0 \\leq k \\leq n$$$, count the number of arrays of positive integers $$$a_1, a_2, \\ldots, a_n$$$ such that  $$$1 \\leq a_i \\leq n$$$ for each $$$1 \\leq i \\leq n$$$;  the answer to Problem D1B is $$$k$$$. The answer can be very large, so you have to calculate it modulo a given prime $$$p$$$."
  },
  {
    "title": "Speedbreaker Counting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2018/F1",
    "description": "NightHawk22 - Isolation⠀This is the easy version of the problem. In the three versions, the constraints on $$$n$$$ and the time limit are different. You can make hacks only if all the versions of the problem are solved.This is the statement of Problem D1B:  There are $$$n$$$ cities in a row, numbered $$$1, 2, \\ldots, n$$$ left to right.  At time $$$1$$$, you conquer exactly one city, called the starting city.  At time $$$2, 3, \\ldots, n$$$, you can choose a city adjacent to the ones conquered so far and conquer it. You win if, for each $$$i$$$, you conquer city $$$i$$$ at a time no later than $$$a_i$$$. A winning strategy may or may not exist, also depending on the starting city. How many starting cities allow you to win? For each $$$0 \\leq k \\leq n$$$, count the number of arrays of positive integers $$$a_1, a_2, \\ldots, a_n$$$ such that  $$$1 \\leq a_i \\leq n$$$ for each $$$1 \\leq i \\leq n$$$;  the answer to Problem D1B is $$$k$$$. The answer can be very large, so you have to calculate it modulo a given prime $$$p$$$."
  },
  {
    "title": "Complex Segments (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2018/E2",
    "description": "Ken Arai - COMPLEX⠀This is the hard version of the problem. In this version, the constraints on $$$n$$$ and the time limit are higher. You can make hacks only if both versions of the problem are solved.A set of (closed) segments is complex if it can be partitioned into some subsets such that   all the subsets have the same size; and  a pair of segments intersects if and only if the two segments are in the same subset. You are given $$$n$$$ segments $$$[l_1, r_1], [l_2, r_2], \\ldots, [l_n, r_n]$$$. Find the maximum size of a complex subset of these segments."
  },
  {
    "title": "Complex Segments (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2018/E1",
    "description": "Ken Arai - COMPLEX⠀This is the easy version of the problem. In this version, the constraints on $$$n$$$ and the time limit are lower. You can make hacks only if both versions of the problem are solved.A set of (closed) segments is complex if it can be partitioned into some subsets such that   all the subsets have the same size; and  a pair of segments intersects if and only if the two segments are in the same subset. You are given $$$n$$$ segments $$$[l_1, r_1], [l_2, r_2], \\ldots, [l_n, r_n]$$$. Find the maximum size of a complex subset of these segments."
  },
  {
    "title": "Max Plus Min Plus Size",
    "url": "https://codeforces.com/problemset/problem/2018/D",
    "description": "EnV - The Dusty Dragon Tavern⠀You are given an array a1,a2,…,ana_1, a_2, \\ldots, a_n of positive integers.You can color some elements of the array red, but there cannot be two adjacent red elements (i.e., for 1≤i≤n−11 \\leq i \\leq n-1, at least one of aia_i and ai+1a_{i+1} must not be red).Your score is the maximum value of a red element, plus the minimum value of a red element, plus the number of red elements. Find the maximum score you can get."
  },
  {
    "title": "Tree Pruning",
    "url": "https://codeforces.com/problemset/problem/2018/C",
    "description": "t+pazolite, ginkiha, Hommarju - Paved Garden⠀You are given a tree with $$$n$$$ nodes, rooted at node $$$1$$$. In this problem, a leaf is a non-root node with degree $$$1$$$.In one operation, you can remove a leaf and the edge adjacent to it (possibly, new leaves appear). What is the minimum number of operations that you have to perform to get a tree, also rooted at node $$$1$$$, where all the leaves are at the same distance from the root?"
  },
  {
    "title": "Speedbreaker",
    "url": "https://codeforces.com/problemset/problem/2018/B",
    "description": "Djjaner - Speedbreaker⠀There are $$$n$$$ cities in a row, numbered $$$1, 2, \\ldots, n$$$ left to right.  At time $$$1$$$, you conquer exactly one city, called the starting city.  At time $$$2, 3, \\ldots, n$$$, you can choose a city adjacent to the ones conquered so far and conquer it. You win if, for each $$$i$$$, you conquer city $$$i$$$ at a time no later than $$$a_i$$$. A winning strategy may or may not exist, also depending on the starting city. How many starting cities allow you to win?"
  },
  {
    "title": "Cards Partition",
    "url": "https://codeforces.com/problemset/problem/2018/A",
    "description": "DJ Genki vs Gram - Einherjar Joker⠀You have some cards. An integer between $$$1$$$ and $$$n$$$ is written on each card: specifically, for each $$$i$$$ from $$$1$$$ to $$$n$$$, you have $$$a_i$$$ cards which have the number $$$i$$$ written on them.There is also a shop which contains unlimited cards of each type. You have $$$k$$$ coins, so you can buy at most $$$k$$$ new cards in total, and the cards you buy can contain any integer between $$$\\mathbf{1}$$$ and $$$\\mathbf{n}$$$, inclusive.After buying the new cards, you must partition all your cards into decks, according to the following rules:   all the decks must have the same size;  there are no pairs of cards with the same value in the same deck. Find the maximum possible size of a deck after buying cards and partitioning them optimally."
  },
  {
    "title": "Robin Hood Archery",
    "url": "https://codeforces.com/problemset/problem/2014/H",
    "description": "At such times archery was always the main sport of the day, for the Nottinghamshire yeomen were the best hand at the longbow in all merry England, but this year the Sheriff hesitated...Sheriff of Nottingham has organized a tournament in archery. It's the final round and Robin Hood is playing against Sheriff!There are $$$n$$$ targets in a row numbered from $$$1$$$ to $$$n$$$. When a player shoots target $$$i$$$, their score increases by $$$a_i$$$ and the target $$$i$$$ is destroyed. The game consists of turns and players alternate between whose turn it is. Robin Hood always starts the game, then Sheriff and so on. The game continues until all targets are destroyed. Both players start with score $$$0$$$.At the end of the game, the player with most score wins and the other player loses. If both players have the same score, it's a tie and no one wins or loses. In each turn, the player can shoot any target that wasn't shot before. Both play optimally to get the most score possible.Sheriff of Nottingham has a suspicion that he might lose the game! This cannot happen, you must help Sheriff. Sheriff will pose $$$q$$$ queries, each specifying $$$l$$$ and $$$r$$$. This means that the game would be played only with targets $$$l, l+1, \\dots, r$$$, as others would be removed by Sheriff before the game starts.For each query $$$l$$$, $$$r$$$, determine whether the Sheriff can not lose the game when only considering the targets $$$l, l+1, \\dots, r$$$."
  },
  {
    "title": "Milky Days",
    "url": "https://codeforces.com/problemset/problem/2014/G",
    "description": "What is done is done, and the spoilt milk cannot be helped.Little John is as little as night is day — he was known to be a giant, at possibly 2.12.1 metres tall. It has everything to do with his love for milk.His dairy diary has nn entries, showing that he acquired aia_i pints of fresh milk on day did_i. Milk declines in freshness with time and stays drinkable for a maximum of kk days. In other words, fresh milk acquired on day did_i will be drinkable between days did_i and di+k−1d_i+k-1 inclusive.Every day, Little John drinks drinkable milk, up to a maximum of mm pints. In other words, if there are less than mm pints of milk, he will drink them all and not be satisfied; if there are at least mm pints of milk, he will drink exactly mm pints and be satisfied, and it's a milk satisfaction day.Little John always drinks the freshest drinkable milk first.Determine the number of milk satisfaction days for Little John."
  },
  {
    "title": "Sheriff's Defense",
    "url": "https://codeforces.com/problemset/problem/2014/F",
    "description": "\"Why, master,\" quoth Little John, taking the bags and weighing them in his hand, \"here is the chink of gold.\"The folk hero Robin Hood has been troubling Sheriff of Nottingham greatly. Sheriff knows that Robin Hood is about to attack his camps and he wants to be prepared.Sheriff of Nottingham built the camps with strategy in mind and thus there are exactly $$$n$$$ camps numbered from $$$1$$$ to $$$n$$$ and $$$n-1$$$ trails, each connecting two camps. Any camp can be reached from any other camp. Each camp $$$i$$$ has initially $$$a_i$$$ gold. As it is now, all camps would be destroyed by Robin. Sheriff can strengthen a camp by subtracting exactly $$$c$$$ gold from each of its neighboring camps and use it to build better defenses for that camp. Strengthening a camp doesn't change its gold, only its neighbors' gold. A camp can have negative gold. After Robin Hood's attack, all camps that have been strengthened survive the attack, all others are destroyed.What's the maximum gold Sheriff can keep in his surviving camps after Robin Hood's attack if he strengthens his camps optimally? Camp $$$a$$$ is neighboring camp $$$b$$$ if and only if there exists a trail connecting $$$a$$$ and $$$b$$$. Only strengthened camps count towards the answer, as others are destroyed."
  },
  {
    "title": "Rendez-vous de Marian et Robin",
    "url": "https://codeforces.com/problemset/problem/2014/E",
    "description": "In the humble act of meeting, joy doth unfold like a flower in bloom.Absence makes the heart grow fonder. Marian sold her last ware at the Market at the same time Robin finished training at the Major Oak. They couldn't wait to meet, so they both start without delay.The travel network is represented as $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$ and $$$m$$$ edges. The $$$i$$$-th edge connects vertices $$$u_i$$$ and $$$v_i$$$, and takes $$$w_i$$$ seconds to travel (all $$$w_i$$$ are even). Marian starts at vertex $$$1$$$ (Market) and Robin starts at vertex $$$n$$$ (Major Oak).In addition, $$$h$$$ of the $$$n$$$ vertices each has a single horse available. Both Marian and Robin are capable riders, and could mount horses in no time (i.e. in $$$0$$$ seconds). Travel times are halved when riding. Once mounted, a horse lasts the remainder of the travel. Meeting must take place on a vertex (i.e. not on an edge). Either could choose to wait on any vertex.Output the earliest time Robin and Marian can meet. If vertices $$$1$$$ and $$$n$$$ are disconnected, output $$$-1$$$ as the meeting is cancelled."
  },
  {
    "title": "Robert Hood and Mrs Hood",
    "url": "https://codeforces.com/problemset/problem/2014/D",
    "description": "Impress thy brother, yet fret not thy mother.Robin's brother and mother are visiting, and Robin gets to choose the start day for each visitor.All days are numbered from $$$1$$$ to $$$n$$$. Visitors stay for $$$d$$$ continuous days, all of those $$$d$$$ days must be between day $$$1$$$ and $$$n$$$ inclusive.Robin has a total of $$$k$$$ risky 'jobs' planned. The $$$i$$$-th job takes place between days $$$l_i$$$ and $$$r_i$$$ inclusive, for $$$1 \\le i \\le k$$$. If a job takes place on any of the $$$d$$$ days, the visit overlaps with this job (the length of overlap is unimportant).Robin wants his brother's visit to overlap with the maximum number of distinct jobs, and his mother's the minimum.Find suitable start days for the visits of Robin's brother and mother. If there are multiple suitable days, choose the earliest one."
  },
  {
    "title": "Robin Hood in Town",
    "url": "https://codeforces.com/problemset/problem/2014/C",
    "description": "In Sherwood, we judge a man not by his wealth, but by his merit.Look around, the rich are getting richer, and the poor are getting poorer. We need to take from the rich and give to the poor. We need Robin Hood!There are $$$n$$$ people living in the town. Just now, the wealth of the $$$i$$$-th person was $$$a_i$$$ gold. But guess what? The richest person has found an extra pot of gold! More formally, find an $$$a_j=max(a_1, a_2, \\dots, a_n)$$$, change $$$a_j$$$ to $$$a_j+x$$$, where $$$x$$$ is a non-negative integer number of gold found in the pot. If there are multiple maxima, it can be any one of them.A person is unhappy if their wealth is strictly less than half of the average wealth$$$^{\\text{∗}}$$$. If strictly more than half of the total population $$$n$$$ are unhappy, Robin Hood will appear by popular demand.Determine the minimum value of $$$x$$$ for Robin Hood to appear, or output $$$-1$$$ if it is impossible.$$$^{\\text{∗}}$$$The average wealth is defined as the total wealth divided by the total population $$$n$$$, that is, $$$\\frac{\\sum a_i}{n}$$$, the result is a real number."
  },
  {
    "title": "Robin Hood and the Major Oak",
    "url": "https://codeforces.com/problemset/problem/2014/B",
    "description": "In Sherwood, the trees are our shelter, and we are all children of the forest.The Major Oak in Sherwood is known for its majestic foliage, which provided shelter to Robin Hood and his band of merry men and women.The Major Oak grows $$$i^i$$$ new leaves in the $$$i$$$-th year. It starts with $$$1$$$ leaf in year $$$1$$$.Leaves last for $$$k$$$ years on the tree. In other words, leaves grown in year $$$i$$$ last between years $$$i$$$ and $$$i+k-1$$$ inclusive.Robin considers even numbers lucky. Help Robin determine whether the Major Oak will have an even number of leaves in year $$$n$$$."
  },
  {
    "title": "Robin Helps",
    "url": "https://codeforces.com/problemset/problem/2014/A",
    "description": "There is a little bit of the outlaw in everyone, and a little bit of the hero too.The heroic outlaw Robin Hood is famous for taking from the rich and giving to the poor.Robin encounters $$$n$$$ people starting from the $$$1$$$-st and ending with the $$$n$$$-th. The $$$i$$$-th person has $$$a_i$$$ gold. If $$$a_i \\ge k$$$, Robin will take all $$$a_i$$$ gold, and if $$$a_i=0$$$, Robin will give $$$1$$$ gold if he has any. Robin starts with $$$0$$$ gold.Find out how many people Robin gives gold to."
  },
  {
    "title": "Game in Tree (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2013/F2",
    "description": "This is the hard version of the problem. In this version, it is not guaranteed that $$$u = v$$$. You can make hacks only if both versions of the problem are solved.Alice and Bob are playing a fun game on a tree. This game is played on a tree with $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. Recall that a tree with $$$n$$$ vertices is an undirected connected graph with $$$n - 1$$$ edges.Alice and Bob take turns, with Alice going first. Each player starts at some vertex.On their turn, a player must move from the current vertex to a neighboring vertex that has not yet been visited by anyone. The first player who cannot make a move loses.You are given two vertices $$$u$$$ and $$$v$$$. Represent the simple path from vertex $$$u$$$ to $$$v$$$ as an array $$$p_1, p_2, p_3, \\ldots, p_m$$$, where $$$p_1 = u$$$, $$$p_m = v$$$, and there is an edge between $$$p_i$$$ and $$$p_{i + 1}$$$ for all $$$i$$$ ($$$1 \\le i < m$$$).You need to determine the winner of the game if Alice starts at vertex $$$1$$$ and Bob starts at vertex $$$p_j$$$ for each $$$j$$$ (where $$$1 \\le j \\le m$$$)."
  },
  {
    "title": "Game in Tree (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2013/F1",
    "description": "This is the easy version of the problem. In this version, $$$\\mathbf{u = v}$$$. You can make hacks only if both versions of the problem are solved.Alice and Bob are playing a fun game on a tree. This game is played on a tree with $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. Recall that a tree with $$$n$$$ vertices is an undirected connected graph with $$$n - 1$$$ edges.Alice and Bob take turns, with Alice going first. Each player starts at some vertex.On their turn, a player must move from the current vertex to a neighboring vertex that has not yet been visited by anyone. The first player who cannot make a move loses.You are given two vertices $$$u$$$ and $$$v$$$. Represent the simple path from vertex $$$u$$$ to $$$v$$$ as an array $$$p_1, p_2, p_3, \\ldots, p_m$$$, where $$$p_1 = u$$$, $$$p_m = v$$$, and there is an edge between $$$p_i$$$ and $$$p_{i + 1}$$$ for all $$$i$$$ ($$$1 \\le i < m$$$).You need to determine the winner of the game if Alice starts at vertex $$$1$$$ and Bob starts at vertex $$$p_j$$$ for each $$$j$$$ (where $$$1 \\le j \\le m$$$)."
  },
  {
    "title": "Prefix GCD",
    "url": "https://codeforces.com/problemset/problem/2013/E",
    "description": "Since Mansur is tired of making legends, there will be no legends for this task.You are given an array of positive integer numbers $$$a_1, a_2, \\ldots, a_n$$$. The elements of the array can be rearranged in any order. You need to find the smallest possible value of the expression $$$$$$\\gcd(a_1) + \\gcd(a_1, a_2) + \\ldots + \\gcd(a_1, a_2, \\ldots, a_n),$$$$$$ where $$$\\gcd(a_1, a_2, \\ldots, a_n)$$$ denotes the greatest common divisor (GCD) of $$$a_1, a_2, \\ldots, a_n$$$."
  },
  {
    "title": "Minimize the Difference",
    "url": "https://codeforces.com/problemset/problem/2013/D",
    "description": "Zhan, tired after the contest, gave the only task that he did not solve during the contest to his friend, Sungat. However, he could not solve it either, so we ask you to try to solve this problem.You are given an array $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$. We can perform any number (possibly, zero) of operations on the array.In one operation, we choose a position $$$i$$$ ($$$1 \\leq i \\leq n - 1$$$) and perform the following action:   $$$a_i := a_i - 1$$$, and $$$a_{i+1} := a_{i+1} + 1$$$. Find the minimum possible value of $$$\\max(a_1, a_2, \\ldots, a_n) - \\min(a_1, a_2, \\ldots, a_n)$$$."
  },
  {
    "title": "Password Cracking",
    "url": "https://codeforces.com/problemset/problem/2013/C",
    "description": "Dimash learned that Mansur wrote something very unpleasant about him to a friend, so he decided to find out his password at all costs and discover what exactly he wrote.Believing in the strength of his password, Mansur stated that his password — is a binary string of length $$$n$$$. He is also ready to answer Dimash's questions of the following type:Dimash says a binary string $$$t$$$, and Mansur replies whether it is true that $$$t$$$ is a substring of his password.Help Dimash find out the password in no more than $$$2n$$$ operations; otherwise, Mansur will understand the trick and stop communicating with him."
  },
  {
    "title": "Battle for Survive",
    "url": "https://codeforces.com/problemset/problem/2013/B",
    "description": "Eralim, being the mafia boss, manages a group of $$$n$$$ fighters. Fighter $$$i$$$ has a rating of $$$a_i$$$.Eralim arranges a tournament of $$$n - 1$$$ battles, in each of which two not yet eliminated fighters $$$i$$$ and $$$j$$$ ($$$1 \\le i < j \\le n$$$) are chosen, and as a result of the battle, fighter $$$i$$$ is eliminated from the tournament, and the rating of fighter $$$j$$$ is reduced by the rating of fighter $$$i$$$. That is, $$$a_j$$$ is decreased by $$$a_i$$$. Note that fighter $$$j$$$'s rating can become negative. The fighters indexes do not change.Eralim wants to know what maximum rating the last remaining fighter can preserve if he chooses the battles optimally."
  },
  {
    "title": "Zhan's Blender",
    "url": "https://codeforces.com/problemset/problem/2013/A",
    "description": "Today, a club fair was held at \"NSPhM\". In order to advertise his pastry club, Zhan decided to demonstrate the power of his blender.To demonstrate the power of his blender, Zhan has $$$n$$$ fruits.The blender can mix up to $$$x$$$ fruits per second.In each second, Zhan can put up to $$$y$$$ fruits into the blender. After that, the blender will blend $$$\\min(x, c)$$$ fruits, where $$$c$$$ is the number of fruits inside the blender. After blending, blended fruits are removed from the blender.Help Zhan determine the minimum amount of time required for Zhan to blend all fruits."
  },
  {
    "title": "Stack and Queue",
    "url": "https://codeforces.com/problemset/problem/2011/I",
    "description": "There are $$$2$$$ queues of patients at the doors of two doctors. The first doctor sees patients in the usual order of the queue — whoever arrived first will be seen first. The second doctor does the opposite — he sees those who arrived last first. Thus, there is a queue for the first doctor and a stack for the second doctor. A patient can be in both the queue and the stack. Each patient is characterized by the time their visit to the doctor will take (the time is the same for both doctors).When the appointments begin, the doctors will see patients in the order of the queue and stack, respectively. As soon as a doctor finishes with one patient, he will call the next one.But there is one problem: if a patient is in both the queue and the stack, and he is called to one doctor first and then to the other, while he has not yet finished with the first one, confusion will arise. It is allowed for a patient to go to the second doctor at the exact moment he finishes with the first doctor.The current configuration of the queue and stack is called good if the doctors can see all the patients without any confusion arising.Initially, both the queue and the stack are empty. There are three types of queries:   add patient $$$x$$$ to the queue;  add patient $$$x$$$ to the stack;  patient $$$x$$$, who was in the queue, realizes he is in the wrong place and moves to the stack; however, he moves to the position in the stack as if he had entered the stack at the moment of the query when he entered the queue. It is guaranteed that after each query, each patient is no more than once in the queue and no more than once in the stack.After each query, you need to determine if the current configuration is good."
  },
  {
    "title": "Strange Matrix",
    "url": "https://codeforces.com/problemset/problem/2011/H",
    "description": "You are given a matrix $$$a$$$ of size $$$n \\times m$$$, consisting of integers from $$$0$$$ to $$$31$$$ inclusive.Let's call the matrix strange if for every two distinct rows $$$i$$$ and $$$j$$$, both of the following conditions hold:   for every set of $$$k$$$ indices $$$(x_1, x_2, \\dots, x_k)$$$, where $$$1 \\le x_1 < x_2 < \\cdots < x_k \\le m$$$, the equality $$$a_{i, x_1} \\mathbin{\\&} a_{j, x_1} \\mathbin{\\&} a_{i, x_2} \\mathbin{\\&} a_{j, x_2} \\mathbin{\\&} \\cdots \\mathbin{\\&} a_{i, x_k} \\mathbin{\\&} a_{j, x_k} = 0$$$ holds (where $$$\\mathbin{\\&}$$$ — bitwise AND of two numbers);  for every set of $$$k$$$ indices $$$(x_1, x_2, \\dots, x_k)$$$, where $$$1 \\le x_1 < x_2 < \\cdots < x_k \\le m$$$, the equality $$$a_{i, x_1} \\mathbin{|} a_{j, x_1} \\mathbin{|} a_{i, x_2} \\mathbin{|} a_{j, x_2} \\mathbin{|} \\cdots \\mathbin{|} a_{i, x_k} \\mathbin{|} a_{j, x_k} = 31$$$ holds (where $$$\\mathbin{|}$$$ — bitwise OR of two numbers). You can perform the following operation any number of times: take any row of the matrix and a number $$$y$$$ from $$$0$$$ to $$$31$$$ inclusive; then apply the bitwise XOR with the number $$$y$$$ to all elements of the selected row. The cost of such an operation is equal to $$$y$$$.Your task is to calculate the minimum cost to make the matrix strange, or report that it is impossible."
  },
  {
    "title": "Removal of a Permutation",
    "url": "https://codeforces.com/problemset/problem/2011/G",
    "description": "You are given a permutation $$$p$$$ of length $$$n$$$.You can perform operations of two types:   mark all positions $$$i$$$ such that $$$1 \\le i < n$$$ and $$$p_i < p_{i + 1}$$$, and simultaneously remove the elements at these positions;  mark all positions $$$i$$$ such that $$$2 \\le i \\le n$$$ and $$$p_{i - 1} > p_i$$$, and simultaneously remove the elements at these positions. For each integer from $$$1$$$ to $$$(n-1)$$$, calculate the minimum number of operations required to remove that integer from the permutation."
  },
  {
    "title": "Good Subarray",
    "url": "https://codeforces.com/problemset/problem/2011/F",
    "description": "You are given an integer array $$$a$$$ of size $$$n$$$.Let's call an array good if it can be obtained using the following algorithm: create an array consisting of any single integer; and then perform the following operation an arbitrary number of times: choose an element from the already existing array (let's call it $$$x$$$) and add $$$x$$$, $$$(x-1)$$$, or $$$(x+1)$$$ to the end of the array.For example, the arrays $$$[1, 2, 1]$$$, $$$[5]$$$ and $$$[3, 2, 1, 4]$$$ are good, while $$$[2, 4]$$$ and $$$[3, 1, 2]$$$ are not.Your task is to count the number of good contiguous subarrays of the array $$$a$$$. Two subarrays that have the same elements but are in different positions of the array $$$a$$$ are considered different."
  },
  {
    "title": "Rock-Paper-Scissors Bot",
    "url": "https://codeforces.com/problemset/problem/2011/E",
    "description": "Rock-Paper-Scissors is a game for two players. It is played in rounds. During each round, every player chooses one of three moves: Rock, Paper, or Scissors. Depending on the chosen moves, the following happens:  if one player chooses Rock and the other player chooses Paper, the player who chooses Paper wins and gets a point;  if one player chooses Scissors and the other player chooses Paper, the player who chooses Scissors wins and gets a point;  if one player chooses Scissors and the other player chooses Rock, the player who chooses Rock wins and gets a point;  and if both players choose the same move, nobody wins and nobody gets a point. Monocarp decided to play against a bot. During the game, Monocarp noticed that the bot's behavior is very predictable:   in the first round, it chooses Rock;  in every round except the first, it chooses the move that beats the opponent's move in the previous round (for example, if in the previous round its opponent played Scissors, then the bot chooses Rock now). Monocarp has a favorite string $$$s$$$, consisting of the characters R, P, and/or S. Monocarp decided to play a series of rounds against the bot. However, he wants both of the following conditions to be met:   the final score is in favor of Monocarp (i. e., the number of rounds he won is strictly greater than the number of rounds the bot won);  the string $$$s$$$ appears as a contiguous substring in the sequence of the bot's moves (where R denotes Rock, P denotes Paper, and S denotes Scissors). Help Monocarp and calculate the minimum number of rounds he needs to play against the bot to satisfy both of the aforementioned conditions."
  },
  {
    "title": "Among Wolves",
    "url": "https://codeforces.com/problemset/problem/2011/D",
    "description": "In a game you started playing recently, there is a field that can be represented as a rectangular grid. The field has $$$2$$$ rows and $$$n$$$ columns — $$$2n$$$ cells in total.Some cells are empty, but some are occupied by wolves. In the beginning of the game, you have one sheep in some cell, and you'd like to save it from wolves.Wolves will attack you at night, so you still have some time for preparation. You have two ways to deal with wolves:   You pay $$$h$$$ coins to hunters and choose a cell occupied by a wolf. Hunters will clear the cell, eradicating the wolf in it.  You pay $$$b$$$ coins to builders and choose an empty cell. Builders will dig a trench in the chosen cell that wolves can't cross.  You can use both methods mentioned above any number of times and in any order.Let's say that a wolf can reach the sheep if there is a path that starts at the wolf's cell and finishes at the sheep's cell. This path shouldn't contain any cells with trenches, and each two consecutive cells in the path should be neighbors (share a side).What is the minimum total amount of money you should pay to ensure that none of the wolves can reach the sheep?"
  },
  {
    "title": "Split the Expression",
    "url": "https://codeforces.com/problemset/problem/2011/C",
    "description": "You are given a string $$$s$$$ of the form <block of digits>+<block of digits>+...+<block of digits>. Every block of digits consists of at least $$$2$$$ and at most $$$13$$$ digits; every digit is from $$$1$$$ to $$$9$$$.You have to split this string into expressions of the form <integer>+<integer>. Every expression must be a contiguous part of the given string, and every character of the given string must belong to exactly one expression. For example, if you have a string 123+456+789+555, then:  you are allowed to split it into 123+4, 56+7 and 89+555;  you are not allowed to split it into 123+456 and +789+555, since the second part begins with a + sign;  you are not allowed to split it into 123+4, 56+7, 8 and 9+555, since the third part does not contain a + sign;  you are not allowed to split it into 123+456+78 and 9+555, since the first part contains two + signs. Among all allowed ways to split the string, find one which maximizes the sum of results of all expressions you get, and print this sum."
  },
  {
    "title": "Shuffle",
    "url": "https://codeforces.com/problemset/problem/2011/B",
    "description": "Yes, this is another one of those constructive permutation problems.You are given an integer $$$n$$$. You have to construct a permutation $$$p$$$ of size $$$n$$$, i. e. an array of $$$n$$$ integers, where every integer from $$$1$$$ to $$$n$$$ appears exactly once.Every pair of adjacent elements in the permutation ($$$p_i$$$ and $$$p_{i+1}$$$) must meet the following condition:  if one of them is divisible by the other, the condition $$$p_i < p_{i+1}$$$ must hold;  otherwise, the condition $$$p_i > p_{i+1}$$$ must hold. "
  },
  {
    "title": "Problem Solving",
    "url": "https://codeforces.com/problemset/problem/2011/A",
    "description": "Jane has decided to solve a list of nn problems on Codeforces. The ii-th problem in her list has difficulty did_i, and the last problem in the list is the hardest one (for every problem j<nj < n, dj<dnd_j < d_n).Jane's problem-solving skill is some integer xx (unknown to you). If a problem's difficulty is greater than xx, then Jane cannot solve it, otherwise she can solve it.Jane has solved all problems form the list, except for the last one — she found out that it was too difficult for her. Can you uniquely determine the value of xx — Jane's problem solving skill?"
  },
  {
    "title": "Message Transmission Error (hard version)",
    "url": "https://codeforces.com/problemset/problem/2010/C2",
    "description": "This is a more difficult version of the problem. It differs from the easy one only by the constraints.At the Berland State University, the local network between servers does not always operate without errors. When transmitting two identical messages consecutively, an error may occur, resulting in the two messages merging into one. In this merging, the end of the first message coincides with the beginning of the second. Of course, the merging can only occur at identical characters. The length of the merging must be a positive number less than the length of the message text.For example, when transmitting two messages \"abrakadabra\" consecutively, it is possible that it will be transmitted with the described type of error, resulting in a message like \"abrakadabrabrakadabra\" or \"abrakadabrakadabra' (in the first case, the merging occurred at one character, and in the second case, at four).Given the received message t, determine if it is possible that this is the result of an error of the described type in the operation of the local network, and if so, determine a possible value of s.A situation where two messages completely overlap each other should not be considered an error. For example, if the received message is \"abcd\", it should be considered that there is no error in it. Similarly, simply appending one message after another is not a sign of an error. For instance, if the received message is \"abcabc\", it should also be considered that there is no error in it."
  },
  {
    "title": "Message Transmission Error (easy version)",
    "url": "https://codeforces.com/problemset/problem/2010/C1",
    "description": "This is a simplified version of the problem. It differs from the difficult one only in its constraints.At the Berland State University, the local network between servers does not always operate without errors. When transmitting two identical messages consecutively, an error may occur, resulting in the two messages merging into one. In this merging, the end of the first message coincides with the beginning of the second. Of course, the merging can only occur at identical characters. The length of the merging must be a positive number less than the length of the message text.For example, when transmitting two messages \"abrakadabra\" consecutively, it is possible that it will be transmitted with the described type of error, resulting in a message like \"abrakadabrabrakadabra\" or \"abrakadabrakadabra' (in the first case, the merging occurred at one character, and in the second case, at four).Given the received message t, determine if it is possible that this is the result of an error of the described type in the operation of the local network, and if so, determine a possible value of s.A situation where two messages completely overlap each other should not be considered an error. For example, if the received message is \"abcd\", it should be considered that there is no error in it. Similarly, simply appending one message after another is not a sign of an error. For instance, if the received message is \"abcabc\", it should also be considered that there is no error in it."
  },
  {
    "title": "Three Brothers",
    "url": "https://codeforces.com/problemset/problem/2010/B",
    "description": "Three brothers agreed to meet. Let's number the brothers as follows: the oldest brother is number 1, the middle brother is number 2, and the youngest brother is number 3.When it was time for the meeting, one of the brothers was late. Given the numbers of the two brothers who arrived on time, you need to determine the number of the brother who was late."
  },
  {
    "title": "Alternating Sum of Numbers",
    "url": "https://codeforces.com/problemset/problem/2010/A",
    "description": "You are given a sequence of integers. Output the alternating sum of this sequence. In other words, output $$$a_1 - a_2 + a_3 - a_4 + a_5 - \\dots$$$. That is, the signs of plus and minus alternate, starting with a plus."
  },
  {
    "title": "Yunli's Subarray Queries (extreme version)",
    "url": "https://codeforces.com/problemset/problem/2009/G3",
    "description": "This is the extreme version of the problem. In this version, the output of each query is different from the easy and hard versions. It is also guaranteed that $$$r \\geq l+k-1$$$ for all queries.For an arbitrary array $$$b$$$, Yunli can perform the following operation any number of times:  Select an index $$$i$$$. Set $$$b_i = x$$$ where $$$x$$$ is any integer she desires ($$$x$$$ is not limited to the interval $$$[1,n]$$$). Denote $$$f(b)$$$ as the minimum number of operations she needs to perform until there exists a consecutive subarray$$$^{\\text{∗}}$$$ of length at least $$$k$$$ in $$$b$$$.Yunli is given an array $$$a$$$ of size $$$n$$$ and asks you $$$q$$$ queries. In each query, you must output $$$\\sum_{i=l}^{r-k+1} \\sum_{j=i+k-1}^{r} f([a_i, a_{i+1}, \\ldots, a_j])$$$.$$$^{\\text{∗}}$$$If there exists a consecutive subarray of length $$$k$$$ that starts at index $$$i$$$ ($$$1 \\leq i \\leq |b|-k+1$$$), then $$$b_j = b_{j-1} + 1$$$ for all $$$i < j \\leq i+k-1$$$."
  },
  {
    "title": "Yunli's Subarray Queries (hard version)",
    "url": "https://codeforces.com/problemset/problem/2009/G2",
    "description": "This is the hard version of the problem. In this version, it is guaranteed that $$$r \\geq l+k-1$$$ for all queries.For an arbitrary array $$$b$$$, Yunli can perform the following operation any number of times:  Select an index $$$i$$$. Set $$$b_i = x$$$ where $$$x$$$ is any integer she desires ($$$x$$$ is not limited to the interval $$$[1,n]$$$). Denote $$$f(b)$$$ as the minimum number of operations she needs to perform until there exists a consecutive subarray$$$^{\\text{∗}}$$$ of length at least $$$k$$$ in $$$b$$$.Yunli is given an array $$$a$$$ of size $$$n$$$ and asks you $$$q$$$ queries. In each query, you must output $$$\\sum_{j=l+k-1}^{r} f([a_l, a_{l+1}, \\ldots, a_j])$$$.$$$^{\\text{∗}}$$$If there exists a consecutive subarray of length $$$k$$$ that starts at index $$$i$$$ ($$$1 \\leq i \\leq |b|-k+1$$$), then $$$b_j = b_{j-1} + 1$$$ for all $$$i < j \\leq i+k-1$$$."
  },
  {
    "title": "Yunli's Subarray Queries (easy version)",
    "url": "https://codeforces.com/problemset/problem/2009/G1",
    "description": "This is the easy version of the problem. In this version, it is guaranteed that $$$r=l+k-1$$$ for all queries.For an arbitrary array $$$b$$$, Yunli can perform the following operation any number of times:  Select an index $$$i$$$. Set $$$b_i = x$$$ where $$$x$$$ is any integer she desires ($$$x$$$ is not limited to the interval $$$[1,n]$$$). Denote $$$f(b)$$$ as the minimum number of operations she needs to perform until there exists a consecutive subarray$$$^{\\text{∗}}$$$ of length at least $$$k$$$ in $$$b$$$.Yunli is given an array $$$a$$$ of size $$$n$$$ and asks you $$$q$$$ queries. In each query, you must output $$$\\sum_{j=l+k-1}^{r} f([a_l, a_{l+1}, \\ldots, a_j])$$$. Note that in this version, you are only required to output $$$f([a_l, a_{l+1}, \\ldots, a_{l+k-1}])$$$.$$$^{\\text{∗}}$$$If there exists a consecutive subarray of length $$$k$$$ that starts at index $$$i$$$ ($$$1 \\leq i \\leq |b|-k+1$$$), then $$$b_j = b_{j-1} + 1$$$ for all $$$i < j \\leq i+k-1$$$."
  },
  {
    "title": "Firefly's Queries",
    "url": "https://codeforces.com/problemset/problem/2009/F",
    "description": "Firefly is given an array $$$a$$$ of length $$$n$$$. Let $$$c_i$$$ denote the $$$i$$$'th cyclic shift$$$^{\\text{∗}}$$$ of $$$a$$$. She creates a new array $$$b$$$ such that $$$b = c_1 + c_2 + \\dots + c_n$$$ where $$$+$$$ represents concatenation$$$^{\\text{†}}$$$. Then, she asks you $$$q$$$ queries. For each query, output the sum of all elements in the subarray of $$$b$$$ that starts from the $$$l$$$-th element and ends at the $$$r$$$-th element, inclusive of both ends.$$$^{\\text{∗}}$$$The $$$x$$$-th ($$$1 \\leq x \\leq n$$$) cyclic shift of the array $$$a$$$ is $$$a_x, a_{x+1} \\ldots a_n, a_1, a_2 \\ldots a_{x - 1}$$$. Note that the $$$1$$$-st shift is the initial $$$a$$$.$$$^{\\text{†}}$$$The concatenation of two arrays $$$p$$$ and $$$q$$$ of length $$$n$$$ (in other words, $$$p + q$$$) is $$$p_1, p_2, ..., p_n, q_1, q_2, ..., q_n$$$."
  },
  {
    "title": "Klee's SUPER DUPER LARGE Array!!!",
    "url": "https://codeforces.com/problemset/problem/2009/E",
    "description": "Klee has an array $$$a$$$ of length $$$n$$$ containing integers $$$[k, k+1, ..., k+n-1]$$$ in that order. Klee wants to choose an index $$$i$$$ ($$$1 \\leq i \\leq n$$$) such that $$$x = |a_1 + a_2 + \\dots + a_i - a_{i+1} - \\dots - a_n|$$$ is minimized. Note that for an arbitrary integer $$$z$$$, $$$|z|$$$ represents the absolute value of $$$z$$$. Output the minimum possible value of $$$x$$$."
  },
  {
    "title": "Satyam and Counting",
    "url": "https://codeforces.com/problemset/problem/2009/D",
    "description": "Satyam is given $$$n$$$ distinct points on the 2D coordinate plane. It is guaranteed that $$$0 \\leq y_i \\leq 1$$$ for all given points $$$(x_i, y_i)$$$. How many different nondegenerate right triangles$$$^{\\text{∗}}$$$ can be formed from choosing three different points as its vertices?Two triangles $$$a$$$ and $$$b$$$ are different if there is a point $$$v$$$ such that $$$v$$$ is a vertex of $$$a$$$ but not a vertex of $$$b$$$.$$$^{\\text{∗}}$$$A nondegenerate right triangle has positive area and an interior $$$90^{\\circ}$$$ angle."
  },
  {
    "title": "The Legend of Freya the Frog",
    "url": "https://codeforces.com/problemset/problem/2009/C",
    "description": "Freya the Frog is traveling on the 2D coordinate plane. She is currently at point $$$(0,0)$$$ and wants to go to point $$$(x,y)$$$. In one move, she chooses an integer $$$d$$$ such that $$$0 \\leq d \\leq k$$$ and jumps $$$d$$$ spots forward in the direction she is facing. Initially, she is facing the positive $$$x$$$ direction. After every move, she will alternate between facing the positive $$$x$$$ direction and the positive $$$y$$$ direction (i.e., she will face the positive $$$y$$$ direction on her second move, the positive $$$x$$$ direction on her third move, and so on). What is the minimum amount of moves she must perform to land on point $$$(x,y)$$$?"
  },
  {
    "title": "osu!mania",
    "url": "https://codeforces.com/problemset/problem/2009/B",
    "description": "You are playing your favorite rhythm game, osu!mania. The layout of your beatmap consists of $$$n$$$ rows and $$$4$$$ columns. Because notes at the bottom are closer, you will process the bottommost row first and the topmost row last. Each row will contain exactly one note, represented as a '#'.For each note $$$1, 2, \\dots, n$$$, in the order of processing, output the column in which the note appears."
  },
  {
    "title": "Minimize!",
    "url": "https://codeforces.com/problemset/problem/2009/A",
    "description": "You are given two integers $$$a$$$ and $$$b$$$ ($$$a \\leq b$$$). Over all possible integer values of $$$c$$$ ($$$a \\leq c \\leq b$$$), find the minimum value of $$$(c - a) + (b - c)$$$."
  },
  {
    "title": "Sakurako's Test",
    "url": "https://codeforces.com/problemset/problem/2008/H",
    "description": "Sakurako will soon take a test. The test can be described as an array of integers $$$n$$$ and a task on it:Given an integer $$$x$$$, Sakurako can perform the following operation any number of times:  Choose an integer $$$i$$$ ($$$1\\le i\\le n$$$) such that $$$a_i\\ge x$$$;  Change the value of $$$a_i$$$ to $$$a_i-x$$$. Using this operation any number of times, she must find the minimum possible median$$$^{\\text{∗}}$$$ of the array $$$a$$$.Sakurako knows the array but does not know the integer $$$x$$$. Someone let it slip that one of the $$$q$$$ values of $$$x$$$ will be in the next test, so Sakurako is asking you what the answer is for each such $$$x$$$.$$$^{\\text{∗}}$$$The median of an array of length $$$n$$$ is the element that stands in the middle of the sorted array (at the $$$\\frac{n+2}{2}$$$-th position for even $$$n$$$, and at the $$$\\frac{n+1}{2}$$$-th for odd)"
  },
  {
    "title": "Sakurako's Task",
    "url": "https://codeforces.com/problemset/problem/2008/G",
    "description": "Sakurako has prepared a task for you:She gives you an array of $$$n$$$ integers and allows you to choose $$$i$$$ and $$$j$$$ such that $$$i \\neq j$$$ and $$$a_i \\ge a_j$$$, and then assign $$$a_i = a_i - a_j$$$ or $$$a_i = a_i + a_j$$$. You can perform this operation any number of times for any $$$i$$$ and $$$j$$$, as long as they satisfy the conditions.Sakurako asks you what is the maximum possible value of $$$mex_k$$$$$$^{\\text{∗}}$$$ of the array after any number of operations.$$$^{\\text{∗}}$$$$$$mex_k$$$ is the $$$k$$$-th non-negative integer that is absent in the array. For example, $$$mex_1(\\{1,2,3 \\})=0$$$, since $$$0$$$ is the first element that is not in the array, and $$$mex_2(\\{0,2,4 \\})=3$$$, since $$$3$$$ is the second element that is not in the array."
  },
  {
    "title": "Sakurako's Box",
    "url": "https://codeforces.com/problemset/problem/2008/F",
    "description": "Sakurako has a box with $$$n$$$ balls. Each ball has it's value. She wants to bet with her friend that if the friend randomly picks two balls from the box (it could be two distinct balls, but they may have the same value), the product of their values will be the same as the number that Sakurako guessed.Since Sakurako has a PhD in probability, she knows that the best number to pick is the expected value, but she forgot how to calculate it. Help Sakurako and find the expected value of the product of two elements from the array.It can be shown that the expected value has the form $$$\\frac{P}{Q}$$$, where $$$P$$$ and $$$Q$$$ are non-negative integers, and $$$Q \\ne 0$$$. Report the value of $$$P \\cdot Q^{-1}(\\bmod 10^9+7)$$$."
  },
  {
    "title": "Alternating String",
    "url": "https://codeforces.com/problemset/problem/2008/E",
    "description": "Sakurako really loves alternating strings. She calls a string $$$s$$$ of lowercase Latin letters an alternating string if characters in the even positions are the same, if characters in the odd positions are the same, and the length of the string is even.For example, the strings 'abab' and 'gg' are alternating, while the strings 'aba' and 'ggwp' are not.As a good friend, you decided to gift such a string, but you couldn't find one. Luckily, you can perform two types of operations on the string:   Choose an index $$$i$$$ and delete the $$$i$$$-th character from the string, which will reduce the length of the string by $$$1$$$. This type of operation can be performed no more than $$$1$$$ time;  Choose an index $$$i$$$ and replace $$$s_i$$$ with any other letter. Since you are in a hurry, you need to determine the minimum number of operations required to make the string an alternating one."
  },
  {
    "title": "Sakurako's Hobby",
    "url": "https://codeforces.com/problemset/problem/2008/D",
    "description": "For a certain permutation $$$p$$$$$$^{\\text{∗}}$$$ Sakurako calls an integer $$$j$$$ reachable from an integer $$$i$$$ if it is possible to make $$$i$$$ equal to $$$j$$$ by assigning $$$i=p_i$$$ a certain number of times.If $$$p=[3,5,6,1,2,4]$$$, then, for example, $$$4$$$ is reachable from $$$1$$$, because: $$$i=1$$$ $$$\\rightarrow$$$ $$$i=p_1=3$$$ $$$\\rightarrow$$$ $$$i=p_3=6$$$ $$$\\rightarrow$$$ $$$i=p_6=4$$$. Now $$$i=4$$$, so $$$4$$$ is reachable from $$$1$$$.Each number in the permutation is colored either black or white.Sakurako defines the function $$$F(i)$$$ as the number of black integers that are reachable from $$$i$$$.Sakurako is interested in $$$F(i)$$$ for each $$$1\\le i\\le n$$$, but calculating all values becomes very difficult, so she asks you, as her good friend, to compute this.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation (the number $$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$, but the array contains $$$4$$$)."
  },
  {
    "title": "Longest Good Array",
    "url": "https://codeforces.com/problemset/problem/2008/C",
    "description": "Today, Sakurako was studying arrays. An array $$$a$$$ of length $$$n$$$ is considered good if and only if:  the array $$$a$$$ is increasing, meaning $$$a_{i - 1} < a_i$$$ for all $$$2 \\le i \\le n$$$;  the differences between adjacent elements are increasing, meaning $$$a_i - a_{i-1} < a_{i+1} - a_i$$$ for all $$$2 \\le i < n$$$. Sakurako has come up with boundaries $$$l$$$ and $$$r$$$ and wants to construct a good array of maximum length, where $$$l \\le a_i \\le r$$$ for all $$$a_i$$$.Help Sakurako find the maximum length of a good array for the given $$$l$$$ and $$$r$$$."
  },
  {
    "title": "Square or Not",
    "url": "https://codeforces.com/problemset/problem/2008/B",
    "description": "A beautiful binary matrix is a matrix that has ones on its edges and zeros inside.    Examples of four beautiful binary matrices. Today, Sakurako was playing with a beautiful binary matrix of size $$$r \\times c$$$ and created a binary string $$$s$$$ by writing down all the rows of the matrix, starting from the first and ending with the $$$r$$$-th. More formally, the element from the matrix in the $$$i$$$-th row and $$$j$$$-th column corresponds to the $$$((i-1)*c+j)$$$-th element of the string.You need to check whether the beautiful matrix from which the string $$$s$$$ was obtained could be squared. In other words, you need to check whether the string $$$s$$$ could have been build from a square beautiful binary matrix (i.e., one where $$$r=c$$$)."
  },
  {
    "title": "Sakurako's Exam",
    "url": "https://codeforces.com/problemset/problem/2008/A",
    "description": "Today, Sakurako has a math exam. The teacher gave the array, consisting of $$$a$$$ ones and $$$b$$$ twos.In an array, Sakurako must place either a '+' or a '-' in front of each element so that the sum of all elements in the array equals $$$0$$$.Sakurako is not sure if it is possible to solve this problem, so determine whether there is a way to assign signs such that the sum of all elements in the array equals $$$0$$$."
  },
  {
    "title": "Dora and C++",
    "url": "https://codeforces.com/problemset/problem/2007/C",
    "description": "Dora has just learned the programming language C++!However, she has completely misunderstood the meaning of C++. She considers it as two kinds of adding operations on the array $$$c$$$ with $$$n$$$ elements. Dora has two integers $$$a$$$ and $$$b$$$. In one operation, she can choose one of the following things to do.  Choose an integer $$$i$$$ such that $$$1 \\leq i \\leq n$$$, and increase $$$c_i$$$ by $$$a$$$.  Choose an integer $$$i$$$ such that $$$1 \\leq i \\leq n$$$, and increase $$$c_i$$$ by $$$b$$$. Note that $$$a$$$ and $$$b$$$ are constants, and they can be the same.Let's define a range of array $$$d$$$ as $$$\\max(d_i) - \\min(d_i)$$$. For instance, the range of the array $$$[1, 2, 3, 4]$$$ is $$$4 - 1 = 3$$$, the range of the array $$$[5, 2, 8, 2, 2, 1]$$$ is $$$8 - 1 = 7$$$, and the range of the array $$$[3, 3, 3]$$$ is $$$3 - 3 = 0$$$.After any number of operations (possibly, $$$0$$$), Dora calculates the range of the new array. You need to help Dora minimize this value, but since Dora loves exploring all by herself, you only need to tell her the minimized value."
  },
  {
    "title": "Index and Maximum Value",
    "url": "https://codeforces.com/problemset/problem/2007/B",
    "description": "After receiving yet another integer array $$$a_1, a_2, \\ldots, a_n$$$ at her birthday party, Index decides to perform some operations on it.Formally, there are $$$m$$$ operations that she is going to perform in order. Each of them belongs to one of the two types:  $$$\\texttt{+ l r}$$$. Given two integers $$$l$$$ and $$$r$$$, for all $$$1 \\leq i \\leq n$$$ such that $$$l \\leq a_i \\leq r$$$, set $$$a_i := a_i + 1$$$.  $$$\\texttt{- l r}$$$. Given two integers $$$l$$$ and $$$r$$$, for all $$$1 \\leq i \\leq n$$$ such that $$$l \\leq a_i \\leq r$$$, set $$$a_i := a_i - 1$$$. For example, if the initial array $$$a = [7, 1, 3, 4, 3]$$$, after performing the operation $$$\\texttt{+} \\space 2 \\space 4$$$, the array $$$a = [7, 1, 4, 5, 4]$$$. Then, after performing the operation $$$\\texttt{-} \\space 1 \\space 10$$$, the array $$$a = [6, 0, 3, 4, 3]$$$.Index is curious about the maximum value in the array $$$a$$$. Please help her find it after each of the $$$m$$$ operations."
  },
  {
    "title": "Dora's Set",
    "url": "https://codeforces.com/problemset/problem/2007/A",
    "description": "Dora has a set $$$s$$$ containing integers. In the beginning, she will put all integers in $$$[l, r]$$$ into the set $$$s$$$. That is, an integer $$$x$$$ is initially contained in the set if and only if $$$l \\leq x \\leq r$$$. Then she allows you to perform the following operations:  Select three distinct integers $$$a$$$, $$$b$$$, and $$$c$$$ from the set $$$s$$$, such that $$$\\gcd(a, b) = \\gcd(b, c) = \\gcd(a, c) = 1^\\dagger$$$.  Then, remove these three integers from the set $$$s$$$. What is the maximum number of operations you can perform?$$$^\\dagger$$$Recall that $$$\\gcd(x, y)$$$ means the greatest common divisor of integers $$$x$$$ and $$$y$$$."
  },
  {
    "title": "Dora's Paint",
    "url": "https://codeforces.com/problemset/problem/2006/F",
    "description": "Sadly, Dora poured the paint when painting the class mural. Dora considers the mural as the matrix $$$b$$$ of size $$$n \\times n$$$. Initially, $$$b_{i,j} = 0$$$ for all $$$1 \\le i, j \\le n$$$.Dora has only two brushes which have two different colors. In one operation, she can paint the matrix with one of two brushes:  The first brush has color $$$1$$$ on it and can paint one column of the matrix. That is, Dora chooses $$$1 \\leq j \\leq n$$$ and makes $$$b_{i,j} := 1$$$ for all $$$1 \\leq i \\leq n$$$;  The second brush has color $$$2$$$ on it and can paint one row of the matrix. That is, Dora chooses $$$1 \\leq i \\leq n$$$ and makes $$$b_{i,j} := 2$$$ for all $$$1 \\leq j \\leq n$$$. Dora paints the matrix so that the resulting matrix $$$b$$$ contains only $$$1$$$ and $$$2$$$.For a matrix $$$b$$$, let $$$f(b)$$$ denote the minimum number of operations needed to turn the initial matrix (containing only $$$0$$$) into $$$b$$$. The beauty of a matrix $$$b$$$ is the number of ways to paint the initial matrix in exactly $$$f(b)$$$ operations to turn it into $$$b$$$. If there's no way to turn the initial matrix into $$$b$$$, the beauty of $$$b$$$ is $$$0$$$.However, Dora made a uniformly random mistake; there's exactly one element different in the matrix $$$a$$$ given to you from the real matrix $$$b$$$. That is, there is exactly one pair $$$(i, j)$$$ such that $$$a_{i, j} = 3 - b_{i, j}$$$.Please help Dora compute the expected beauty of the real matrix $$$b$$$ modulo $$$998\\,244\\,353$$$ (all possible $$$n^2$$$ mistakes have equal probability).Since the size of the matrix is too large, Dora will only tell you the positions of $$$m$$$ elements of color $$$1$$$, and the remaining $$$n^2-m$$$ elements have color $$$2$$$."
  },
  {
    "title": "Iris's Full Binary Tree",
    "url": "https://codeforces.com/problemset/problem/2006/E",
    "description": "Iris likes full binary trees.Let's define the depth of a rooted tree as the maximum number of vertices on the simple paths from some vertex to the root. A full binary tree of depth $$$d$$$ is a binary tree of depth $$$d$$$ with exactly $$$2^d - 1$$$ vertices.Iris calls a tree a $$$d$$$-binary tree if some vertices and edges can be added to it to make it a full binary tree of depth $$$d$$$. Note that any vertex can be chosen as the root of a full binary tree.Since performing operations on large trees is difficult, she defines the binary depth of a tree as the minimum $$$d$$$ satisfying that the tree is $$$d$$$-binary. Specifically, if there is no integer $$$d \\ge 1$$$ such that the tree is $$$d$$$-binary, the binary depth of the tree is $$$-1$$$.Iris now has a tree consisting of only vertex $$$1$$$. She wants to add $$$n - 1$$$ more vertices to form a larger tree. She will add the vertices one by one. When she adds vertex $$$i$$$ ($$$2 \\leq i \\leq n$$$), she'll give you an integer $$$p_i$$$ ($$$1 \\leq p_i < i$$$), and add a new edge connecting vertices $$$i$$$ and $$$p_i$$$.Iris wants to ask you the binary depth of the tree formed by the first $$$i$$$ vertices for each $$$1 \\le i \\le n$$$. Can you tell her the answer?"
  },
  {
    "title": "Iris and Adjacent Products",
    "url": "https://codeforces.com/problemset/problem/2006/D",
    "description": "Iris has just learned multiplication in her Maths lessons. However, since her brain is unable to withstand too complex calculations, she could not multiply two integers with the product greater than $$$k$$$ together. Otherwise, her brain may explode!Her teacher sets a difficult task every day as her daily summer holiday homework. Now she is given an array $$$a$$$ consisting of $$$n$$$ elements, and she needs to calculate the product of each two adjacent elements (that is, $$$a_1 \\cdot a_2$$$, $$$a_2 \\cdot a_3$$$, and so on). Iris wants her brain to work safely, and in order to do that, she would like to modify the array $$$a$$$ in such a way that $$$a_i \\cdot a_{i + 1} \\leq k$$$ holds for every $$$1 \\leq i < n$$$. There are two types of operations she can perform:  She can rearrange the elements of the array $$$a$$$ in an arbitrary way. She can select an arbitrary element of the array $$$a$$$ and change its value to an arbitrary integer from $$$1$$$ to $$$k$$$. Iris wants to minimize the number of operations of type $$$2$$$ that she uses.However, that's completely not the end of the summer holiday! Summer holiday lasts for $$$q$$$ days, and on the $$$i$$$-th day, Iris is asked to solve the Math homework for the subarray $$$b_{l_i}, b_{l_i + 1}, \\ldots, b_{r_i}$$$. Help Iris and tell her the minimum number of type $$$2$$$ operations she needs to perform for each day. Note that the operations are independent for each day, i.e. the array $$$b$$$ is not changed."
  },
  {
    "title": "Eri and Expanded Sets",
    "url": "https://codeforces.com/problemset/problem/2006/C",
    "description": "Let there be a set that contains distinct positive integers. To expand the set to contain as many integers as possible, Eri can choose two integers $$$x\\neq y$$$ from the set such that their average $$$\\frac{x+y}2$$$ is still a positive integer and isn't contained in the set, and add it to the set. The integers $$$x$$$ and $$$y$$$ remain in the set.Let's call the set of integers consecutive if, after the elements are sorted, the difference between any pair of adjacent elements is $$$1$$$. For example, sets $$$\\{2\\}$$$, $$$\\{2, 5, 4, 3\\}$$$, $$$\\{5, 6, 8, 7\\}$$$ are consecutive, while $$$\\{2, 4, 5, 6\\}$$$, $$$\\{9, 7\\}$$$ are not.Eri likes consecutive sets. Suppose there is an array $$$b$$$, then Eri puts all elements in $$$b$$$ into the set. If after a finite number of operations described above, the set can become consecutive, the array $$$b$$$ will be called brilliant.Note that if the same integer appears in the array multiple times, we only put it into the set once, as a set always contains distinct positive integers.Eri has an array $$$a$$$ of $$$n$$$ positive integers. Please help him to count the number of pairs of integers $$$(l,r)$$$ such that $$$1 \\leq l \\leq r \\leq n$$$ and the subarray $$$a_l, a_{l+1}, \\ldots, a_r$$$ is brilliant."
  },
  {
    "title": "Iris and the Tree",
    "url": "https://codeforces.com/problemset/problem/2006/B",
    "description": "Given a rooted tree with the root at vertex $$$1$$$. For any vertex $$$i$$$ ($$$1 < i \\leq n$$$) in the tree, there is an edge connecting vertices $$$i$$$ and $$$p_i$$$ ($$$1 \\leq p_i < i$$$), with a weight equal to $$$t_i$$$.Iris does not know the values of $$$t_i$$$, but she knows that $$$\\displaystyle\\sum_{i=2}^n t_i = w$$$ and each of the $$$t_i$$$ is a non-negative integer.The vertices of the tree are numbered in a special way: the numbers of the vertices in each subtree are consecutive integers. In other words, the vertices of the tree are numbered in the order of a depth-first search.   The tree in this picture satisfies the condition. For example, in the subtree of vertex $$$2$$$, the vertex numbers are $$$2, 3, 4, 5$$$, which are consecutive integers.    The tree in this picture does not satisfy the condition, as in the subtree of vertex $$$2$$$, the vertex numbers $$$2$$$ and $$$4$$$ are not consecutive integers. We define $$$\\operatorname{dist}(u, v)$$$ as the length of the simple path between vertices $$$u$$$ and $$$v$$$ in the tree.Next, there will be $$$n - 1$$$ events:  Iris is given integers $$$x$$$ and $$$y$$$, indicating that $$$t_x = y$$$. After each event, Iris wants to know the maximum possible value of $$$\\operatorname{dist}(i, i \\bmod n + 1)$$$ independently for each $$$i$$$ ($$$1\\le i\\le n$$$). She only needs to know the sum of these $$$n$$$ values. Please help Iris quickly get the answers.Note that when calculating the maximum possible values of $$$\\operatorname{dist}(i, i \\bmod n + 1)$$$ and $$$\\operatorname{dist}(j, j \\bmod n + 1)$$$ for $$$i \\ne j$$$, the unknown edge weights may be different."
  },
  {
    "title": "Iris and Game on the Tree",
    "url": "https://codeforces.com/problemset/problem/2006/A",
    "description": "Iris has a tree rooted at vertex $$$1$$$. Each vertex has a value of $$$\\mathtt 0$$$ or $$$\\mathtt 1$$$.Let's consider a leaf of the tree (the vertex $$$1$$$ is never considered a leaf) and define its weight. Construct a string formed by the values of the vertices on the path starting at the root and ending in this leaf. Then the weight of the leaf is the difference between the number of occurrences of $$$\\mathtt{10}$$$ and $$$\\mathtt{01}$$$ substrings in it.Take the following tree as an example. Green vertices have a value of $$$\\mathtt 1$$$ while white vertices have a value of $$$\\mathtt 0$$$.    Let's calculate the weight of the leaf $$$5$$$: the formed string is $$$\\mathtt{10110}$$$. The number of occurrences of substring $$$\\mathtt{10}$$$ is $$$2$$$, the number of occurrences of substring $$$\\mathtt{01}$$$ is $$$1$$$, so the difference is $$$2 - 1 = 1$$$. Let's calculate the weight of the leaf $$$6$$$: the formed string is $$$\\mathtt{101}$$$. The number of occurrences of substring $$$\\mathtt{10}$$$ is $$$1$$$, the number of occurrences of substring $$$\\mathtt{01}$$$ is $$$1$$$, so the difference is $$$1 - 1 = 0$$$.The score of a tree is defined as the number of leaves with non-zero weight in the tree.But the values of some vertices haven't been decided and will be given to you as $$$\\texttt{?}$$$. Filling the blanks would be so boring, so Iris is going to invite Dora to play a game. On each turn, one of the girls chooses any of the remaining vertices with value $$$\\texttt{?}$$$ and changes its value to $$$\\mathtt{0}$$$ or $$$\\mathtt{1}$$$, with Iris going first. The game continues until there are no vertices with value $$$\\mathtt{?}$$$ left in the tree. Iris aims to maximize the score of the tree, while Dora aims to minimize that.Assuming that both girls play optimally, please determine the final score of the tree."
  },
  {
    "title": "Subtangle Game (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2005/E2",
    "description": "This is the hard version of the problem. The differences between the two versions are the constraints on all the variables. You can make hacks only if both versions of the problem are solved.Tsovak and Narek are playing a game. They have an array $$$a$$$ and a matrix $$$b$$$ of integers with $$$n$$$ rows and $$$m$$$ columns, numbered from $$$1$$$. The cell in the $$$i$$$-th row and the $$$j$$$-th column is $$$(i, j)$$$.They are looking for the elements of $$$a$$$ in turns; Tsovak starts first. Each time a player looks for a cell in the matrix containing the current element of $$$a$$$ (Tsovak looks for the first, then Narek looks for the second, etc.). Let's say a player has chosen the cell $$$(r, c)$$$. The next player has to choose his cell in the submatrix starting at $$$(r + 1, c + 1)$$$ and ending in $$$(n, m)$$$ (the submatrix can be empty if $$$r=n$$$ or $$$c=m$$$). If a player cannot find such a cell (or the remaining submatrix is empty) or the array ends (the previous player has chosen the last element), then he loses.Your task is to determine the winner if the players play optimally.Note: since the input is large, you may need to optimize input/output for this problem.For example, in C++, it is enough to use the following lines at the start of the main() function: int main() {    ios_base::sync_with_stdio(false);    cin.tie(NULL); cout.tie(NULL);}"
  },
  {
    "title": "Subtangle Game (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2005/E1",
    "description": "This is the easy version of the problem. The differences between the two versions are the constraints on all the variables. You can make hacks only if both versions of the problem are solved.Tsovak and Narek are playing a game. They have an array $$$a$$$ and a matrix $$$b$$$ of integers with $$$n$$$ rows and $$$m$$$ columns, numbered from $$$1$$$. The cell in the $$$i$$$-th row and the $$$j$$$-th column is $$$(i, j)$$$.They are looking for the elements of $$$a$$$ in turns; Tsovak starts first. Each time a player looks for a cell in the matrix containing the current element of $$$a$$$ (Tsovak looks for the first, then Narek looks for the second, etc.). Let's say a player has chosen the cell $$$(r, c)$$$. The next player has to choose his cell in the submatrix starting at $$$(r + 1, c + 1)$$$ and ending in $$$(n, m)$$$ (the submatrix can be empty if $$$r=n$$$ or $$$c=m$$$). If a player cannot find such a cell (or the remaining submatrix is empty) or the array ends (the previous player has chosen the last element), then he loses.Your task is to determine the winner if the players play optimally."
  },
  {
    "title": "Alter the GCD",
    "url": "https://codeforces.com/problemset/problem/2005/D",
    "description": "You are given two arrays $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$.You must perform the following operation exactly once:  choose any indices $$$l$$$ and $$$r$$$ such that $$$1 \\le l \\le r \\le n$$$;  swap $$$a_i$$$ and $$$b_i$$$ for all $$$i$$$ such that $$$l \\leq i \\leq r$$$. Find the maximum possible value of $$$\\text{gcd}(a_1, a_2, \\ldots, a_n) + \\text{gcd}(b_1, b_2, \\ldots, b_n)$$$ after performing the operation exactly once. Also find the number of distinct pairs $$$(l, r)$$$ which achieve the maximum value."
  },
  {
    "title": "Lazy Narek",
    "url": "https://codeforces.com/problemset/problem/2005/C",
    "description": "Narek is too lazy to create the third problem of this contest. His friend Artur suggests that he should use ChatGPT. ChatGPT creates $$$n$$$ problems, each consisting of $$$m$$$ letters, so Narek has $$$n$$$ strings. To make the problem harder, he combines the problems by selecting some of the $$$n$$$ strings possibly none and concatenating them without altering their order. His chance of solving the problem is defined as $$$score_n - score_c$$$, where $$$score_n$$$ is Narek's score and $$$score_c$$$ is ChatGPT's score.Narek calculates $$$score_n$$$ by examining the selected string (he moves from left to right). He initially searches for the letter $$$\\texttt{\"n\"}$$$, followed by $$$\\texttt{\"a\"}$$$, $$$\\texttt{\"r\"}$$$, $$$\\texttt{\"e\"}$$$, and $$$\\texttt{\"k\"}$$$. Upon finding all occurrences of these letters, he increments $$$score_n$$$ by $$$5$$$ and resumes searching for $$$\\texttt{\"n\"}$$$ again (he doesn't go back, and he just continues from where he left off). After Narek finishes, ChatGPT scans through the array and increments $$$score_c$$$ by $$$1$$$ for each letter $$$\\texttt{\"n\"}$$$, $$$\\texttt{\"a\"}$$$, $$$\\texttt{\"r\"}$$$, $$$\\texttt{\"e\"}$$$, or $$$\\texttt{\"k\"}$$$ that Narek fails to utilize (note that if Narek fails to complete the last occurrence by finding all of the $$$5$$$ letters, then all of the letters he used are counted in ChatGPT's score $$$score_c$$$, and Narek doesn't get any points if he doesn't finish finding all the 5 letters).Narek aims to maximize the value of $$$score_n - score_c$$$ by selecting the most optimal subset of the initial strings."
  },
  {
    "title": "The Strict Teacher (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2005/B2",
    "description": "This is the hard version of the problem. The only differences between the two versions are the constraints on $$$m$$$ and $$$q$$$. In this version, $$$m, q \\le 10^5$$$. You can make hacks only if both versions of the problem are solved.Narek and Tsovak were busy preparing this round, so they have not managed to do their homework and decided to steal David's homework. Their strict teacher noticed that David has no homework and now wants to punish him. She hires other teachers to help her catch David. And now $$$m$$$ teachers together are chasing him. Luckily, the classroom is big, so David has many places to hide.The classroom can be represented as a one-dimensional line with cells from $$$1$$$ to $$$n$$$, inclusive.At the start, all $$$m$$$ teachers and David are in distinct cells. Then they make moves. During each move   David goes to an adjacent cell or stays at the current one.  Then, each of the $$$m$$$ teachers simultaneously goes to an adjacent cell or stays at the current one. This continues until David is caught. David is caught if any of the teachers (possibly more than one) is located in the same cell as David. Everyone sees others' moves, so they all act optimally.Your task is to find how many moves it will take for the teachers to catch David if they all act optimally.Acting optimally means the student makes his moves in a way that maximizes the number of moves the teachers need to catch him; and the teachers coordinate with each other to make their moves in a way that minimizes the number of moves they need to catch the student.Also, as Narek and Tsovak think this task is easy, they decided to give you $$$q$$$ queries on David's position."
  },
  {
    "title": "The Strict Teacher (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2005/B1",
    "description": "This is the easy version of the problem. The only differences between the two versions are the constraints on $$$m$$$ and $$$q$$$. In this version, $$$m=2$$$ and $$$q=1$$$. You can make hacks only if both versions of the problem are solved.Narek and Tsovak were busy preparing this round, so they have not managed to do their homework and decided to steal David's homework. Their strict teacher noticed that David has no homework and now wants to punish him. She hires other teachers to help her catch David. And now $$$m$$$ teachers together are chasing him. Luckily, the classroom is big, so David has many places to hide.The classroom can be represented as a one-dimensional line with cells from $$$1$$$ to $$$n$$$, inclusive.At the start, all $$$m$$$ teachers and David are in distinct cells. Then they make moves. During each move   David goes to an adjacent cell or stays at the current one.  Then, each of the $$$m$$$ teachers simultaneously goes to an adjacent cell or stays at the current one. This continues until David is caught. David is caught if any of the teachers (possibly more than one) is located in the same cell as David. Everyone sees others' moves, so they all act optimally.Your task is to find how many moves it will take for the teachers to catch David if they all act optimally.Acting optimally means the student makes his moves in a way that maximizes the number of moves the teachers need to catch him; and the teachers coordinate with each other to make their moves in a way that minimizes the number of moves they need to catch the student.Also, as Narek and Tsovak think this task is easy, they decided to give you $$$q$$$ queries on David's position. Note: this is the easy version, and you are given only one query."
  },
  {
    "title": "Simple Palindrome",
    "url": "https://codeforces.com/problemset/problem/2005/A",
    "description": "Narek has to spend 2 hours with some 2-year-old kids at the kindergarten. He wants to teach them competitive programming, and their first lesson is about palindromes.Narek found out that the kids only know the vowels of the English alphabet (the letters a\\mathtt{a}, e\\mathtt{e}, i\\mathtt{i}, o\\mathtt{o}, and u\\mathtt{u}), so Narek needs to make a string that consists of vowels only. After making the string, he'll ask the kids to count the number of subsequences that are palindromes. Narek wants to keep it simple, so he's looking for a string such that the amount of palindrome subsequences is minimal.Help Narek find a string of length nn, consisting of lowercase English vowels only (letters a\\mathtt{a}, e\\mathtt{e}, i\\mathtt{i}, o\\mathtt{o}, and u\\mathtt{u}), which minimizes the amount of palindrome†^{\\dagger} subsequences‡^{\\ddagger} in it.†^{\\dagger} A string is called a palindrome if it reads the same from left to right and from right to left.‡^{\\ddagger} String tt is a subsequence of string ss if tt can be obtained from ss by removing several (possibly, zero or all) characters from ss and concatenating the remaining ones, without changing their order. For example, odocs\\mathtt{odocs} is a subsequence of codeforces\\texttt{c}{\\color{red}{\\texttt{od}}}\\texttt{ef}{\\color{red}{\\texttt{o}}}\\texttt{r}{\\color{red}{\\texttt{c}}}\\texttt{e}{\\color{red}{\\texttt{s}}}."
  },
  {
    "title": "Substring Compression",
    "url": "https://codeforces.com/problemset/problem/2004/G",
    "description": "Let's define the operation of compressing a string $$$t$$$, consisting of at least $$$2$$$ digits from $$$1$$$ to $$$9$$$, as follows:   split it into an even number of non-empty substrings — let these substrings be $$$t_1, t_2, \\dots, t_m$$$ (so, $$$t = t_1 + t_2 + \\dots + t_m$$$, where $$$+$$$ is the concatenation operation);  write the string $$$t_2$$$ $$$t_1$$$ times, then the string $$$t_4$$$ $$$t_3$$$ times, and so on. For example, for a string \"12345\", one could do the following: split it into (\"1\", \"23\", \"4\", \"5\"), and write \"235555\".Let the function $$$f(t)$$$ for a string $$$t$$$ return the minimum length of the string that can be obtained as a result of that process.You are given a string $$$s$$$, consisting of $$$n$$$ digits from $$$1$$$ to $$$9$$$, and an integer $$$k$$$. Calculate the value of the function $$$f$$$ for all contiguous substrings of $$$s$$$ of length exactly $$$k$$$."
  },
  {
    "title": "Make a Palindrome",
    "url": "https://codeforces.com/problemset/problem/2004/F",
    "description": "You are given an array $$$a$$$ consisting of $$$n$$$ integers.Let the function $$$f(b)$$$ return the minimum number of operations needed to make an array $$$b$$$ a palindrome. The operations you can make are:  choose two adjacent elements $$$b_i$$$ and $$$b_{i+1}$$$, remove them, and replace them with a single element equal to $$$(b_i + b_{i + 1})$$$;  or choose an element $$$b_i > 1$$$, remove it, and replace it with two positive integers $$$x$$$ and $$$y$$$ ($$$x > 0$$$ and $$$y > 0$$$) such that $$$x + y = b_i$$$. For example, from an array $$$b=[2, 1, 3]$$$, you can obtain the following arrays in one operation: $$$[1, 1, 1, 3]$$$, $$$[2, 1, 1, 2]$$$, $$$[3, 3]$$$, $$$[2, 4]$$$, or $$$[2, 1, 2, 1]$$$.Calculate $$$\\displaystyle \\left(\\sum_{1 \\le l \\le r \\le n}{f(a[l..r])}\\right)$$$, where $$$a[l..r]$$$ is the subarray of $$$a$$$ from index $$$l$$$ to index $$$r$$$, inclusive. In other words, find the sum of the values of the function $$$f$$$ for all subarrays of the array $$$a$$$."
  },
  {
    "title": "Not a Nim Problem",
    "url": "https://codeforces.com/problemset/problem/2004/E",
    "description": "Two players, Alice and Bob, are playing a game. They have $$$n$$$ piles of stones, with the $$$i$$$-th pile initially containing $$$a_i$$$ stones.On their turn, a player can choose any pile of stones and take any positive number of stones from it, with one condition:  let the current number of stones in the pile be $$$x$$$. It is not allowed to take from the pile a number of stones $$$y$$$ such that the greatest common divisor of $$$x$$$ and $$$y$$$ is not equal to $$$1$$$. The player who cannot make a move loses. Both players play optimally (that is, if a player has a strategy that allows them to win, no matter how the opponent responds, they will win). Alice goes first.Determine who will win."
  },
  {
    "title": "Colored Portals",
    "url": "https://codeforces.com/problemset/problem/2004/D",
    "description": "There are $$$n$$$ cities located on a straight line. The cities are numbered from $$$1$$$ to $$$n$$$.Portals are used to move between cities. There are $$$4$$$ colors of portals: blue, green, red, and yellow. Each city has portals of two different colors. You can move from city $$$i$$$ to city $$$j$$$ if they have portals of the same color (for example, you can move between a \"blue-red\" city and a \"blue-green\" city). This movement costs $$$|i-j|$$$ coins.Your task is to answer $$$q$$$ independent queries: calculate the minimum cost to move from city $$$x$$$ to city $$$y$$$."
  },
  {
    "title": "Splitting Items",
    "url": "https://codeforces.com/problemset/problem/2004/C",
    "description": "Alice and Bob have $$$n$$$ items they'd like to split between them, so they decided to play a game. All items have a cost, and the $$$i$$$-th item costs $$$a_i$$$. Players move in turns starting from Alice.In each turn, the player chooses one of the remaining items and takes it. The game goes on until no items are left.Let's say that $$$A$$$ is the total cost of items taken by Alice and $$$B$$$ is the total cost of Bob's items. The resulting score of the game then will be equal to $$$A - B$$$.Alice wants to maximize the score, while Bob wants to minimize it. Both Alice and Bob will play optimally.But the game will take place tomorrow, so today Bob can modify the costs a little. He can increase the costs $$$a_i$$$ of several (possibly none or all) items by an integer value (possibly, by the same value or by different values for each item). However, the total increase must be less than or equal to $$$k$$$. Otherwise, Alice may suspect something. Note that Bob can't decrease costs, only increase.What is the minimum possible score Bob can achieve?"
  },
  {
    "title": "Game with Doors",
    "url": "https://codeforces.com/problemset/problem/2004/B",
    "description": "There are $$$100$$$ rooms arranged in a row and $$$99$$$ doors between them; the $$$i$$$-th door connects rooms $$$i$$$ and $$$i+1$$$. Each door can be either locked or unlocked. Initially, all doors are unlocked.We say that room $$$x$$$ is reachable from room $$$y$$$ if all doors between them are unlocked.You know that:   Alice is in some room from the segment $$$[l, r]$$$;  Bob is in some room from the segment $$$[L, R]$$$;  Alice and Bob are in different rooms. However, you don't know the exact rooms they are in.You don't want Alice and Bob to be able to reach each other, so you are going to lock some doors to prevent that. What's the smallest number of doors you have to lock so that Alice and Bob cannot meet, regardless of their starting positions inside the given segments?"
  },
  {
    "title": "Closest Point",
    "url": "https://codeforces.com/problemset/problem/2004/A",
    "description": "Consider a set of points on a line. The distance between two points $$$i$$$ and $$$j$$$ is $$$|i - j|$$$.The point $$$i$$$ from the set is the closest to the point $$$j$$$ from the set, if there is no other point $$$k$$$ in the set such that the distance from $$$j$$$ to $$$k$$$ is strictly less than the distance from $$$j$$$ to $$$i$$$. In other words, all other points from the set have distance to $$$j$$$ greater or equal to $$$|i - j|$$$.For example, consider a set of points $$$\\{1, 3, 5, 8\\}$$$:  for the point $$$1$$$, the closest point is $$$3$$$ (other points have distance greater than $$$|1-3| = 2$$$);  for the point $$$3$$$, there are two closest points: $$$1$$$ and $$$5$$$;  for the point $$$5$$$, the closest point is $$$3$$$ (but not $$$8$$$, since its distance is greater than $$$|3-5|$$$);  for the point $$$8$$$, the closest point is $$$5$$$. You are given a set of points. You have to add an integer point into this set in such a way that it is different from every existing point in the set, and it becomes the closest point to every point in the set. Is it possible?"
  },
  {
    "title": "Turtle and Three Sequences",
    "url": "https://codeforces.com/problemset/problem/2003/F",
    "description": "Piggy gives Turtle three sequences $$$a_1, a_2, \\ldots, a_n$$$, $$$b_1, b_2, \\ldots, b_n$$$, and $$$c_1, c_2, \\ldots, c_n$$$.Turtle will choose a subsequence of $$$1, 2, \\ldots, n$$$ of length $$$m$$$, let it be $$$p_1, p_2, \\ldots, p_m$$$. The subsequence should satisfy the following conditions:  $$$a_{p_1} \\le a_{p_2} \\le \\cdots \\le a_{p_m}$$$;  All $$$b_{p_i}$$$ for all indices $$$i$$$ are pairwise distinct, i.e., there don't exist two different indices $$$i$$$, $$$j$$$ such that $$$b_{p_i} = b_{p_j}$$$. Help him find the maximum value of $$$\\sum\\limits_{i = 1}^m c_{p_i}$$$, or tell him that it is impossible to choose a subsequence of length $$$m$$$ that satisfies the conditions above.Recall that a sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements."
  },
  {
    "title": "Turtle and Inversions (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2003/E2",
    "description": "This is a hard version of this problem. The differences between the versions are the constraint on $$$m$$$ and $$$r_i < l_{i + 1}$$$ holds for each $$$i$$$ from $$$1$$$ to $$$m - 1$$$ in the easy version. You can make hacks only if both versions of the problem are solved.Turtle gives you $$$m$$$ intervals $$$[l_1, r_1], [l_2, r_2], \\ldots, [l_m, r_m]$$$. He thinks that a permutation $$$p$$$ is interesting if there exists an integer $$$k_i$$$ for every interval ($$$l_i \\le k_i < r_i$$$), and if he lets $$$a_i = \\max\\limits_{j = l_i}^{k_i} p_j, b_i = \\min\\limits_{j = k_i + 1}^{r_i} p_j$$$ for every integer $$$i$$$ from $$$1$$$ to $$$m$$$, the following condition holds:$$$$$$\\max\\limits_{i = 1}^m a_i < \\min\\limits_{i = 1}^m b_i$$$$$$Turtle wants you to calculate the maximum number of inversions of all interesting permutations of length $$$n$$$, or tell him if there is no interesting permutation.An inversion of a permutation $$$p$$$ is a pair of integers $$$(i, j)$$$ ($$$1 \\le i < j \\le n$$$) such that $$$p_i > p_j$$$."
  },
  {
    "title": "Turtle and Inversions (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2003/E1",
    "description": "This is an easy version of this problem. The differences between the versions are the constraint on $$$m$$$ and $$$r_i < l_{i + 1}$$$ holds for each $$$i$$$ from $$$1$$$ to $$$m - 1$$$ in the easy version. You can make hacks only if both versions of the problem are solved.Turtle gives you $$$m$$$ intervals $$$[l_1, r_1], [l_2, r_2], \\ldots, [l_m, r_m]$$$. He thinks that a permutation $$$p$$$ is interesting if there exists an integer $$$k_i$$$ for every interval ($$$l_i \\le k_i < r_i$$$), and if he lets $$$a_i = \\max\\limits_{j = l_i}^{k_i} p_j, b_i = \\min\\limits_{j = k_i + 1}^{r_i} p_j$$$ for every integer $$$i$$$ from $$$1$$$ to $$$m$$$, the following condition holds:$$$$$$\\max\\limits_{i = 1}^m a_i < \\min\\limits_{i = 1}^m b_i$$$$$$Turtle wants you to calculate the maximum number of inversions of all interesting permutations of length $$$n$$$, or tell him if there is no interesting permutation.An inversion of a permutation $$$p$$$ is a pair of integers $$$(i, j)$$$ ($$$1 \\le i < j \\le n$$$) such that $$$p_i > p_j$$$."
  },
  {
    "title": "Turtle and a MEX Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2003/D2",
    "description": "The two versions are different problems. In this version of the problem, you can't choose the same integer twice or more. You can make hacks only if both versions are solved.One day, Turtle was playing with $$$n$$$ sequences. Let the length of the $$$i$$$-th sequence be $$$l_i$$$. Then the $$$i$$$-th sequence was $$$a_{i, 1}, a_{i, 2}, \\ldots, a_{i, l_i}$$$.Piggy gave Turtle a problem to solve when Turtle was playing. The statement of the problem was:  There was a non-negative integer $$$x$$$ at first. Turtle would perform an arbitrary number (possibly zero) of operations on the integer.  In each operation, Turtle could choose an integer $$$i$$$ such that $$$1 \\le i \\le n$$$ and $$$i$$$ wasn't chosen before, and set $$$x$$$ to $$$\\text{mex}^{\\dagger}(x, a_{i, 1}, a_{i, 2}, \\ldots, a_{i, l_i})$$$.  Turtle was asked to find the answer, which was the maximum value of $$$x$$$ after performing an arbitrary number of operations. Turtle solved the above problem without difficulty. He defined $$$f(k)$$$ as the answer to the above problem when the initial value of $$$x$$$ was $$$k$$$.Then Piggy gave Turtle a non-negative integer $$$m$$$ and asked Turtle to find the value of $$$\\sum\\limits_{i = 0}^m f(i)$$$ (i.e., the value of $$$f(0) + f(1) + \\ldots + f(m)$$$). Unfortunately, he couldn't solve this problem. Please help him!$$$^{\\dagger}\\text{mex}(c_1, c_2, \\ldots, c_k)$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the sequence $$$c$$$. For example, $$$\\text{mex}(2, 2, 0, 3)$$$ is $$$1$$$, $$$\\text{mex}(1, 2)$$$ is $$$0$$$."
  },
  {
    "title": "Turtle and a MEX Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2003/D1",
    "description": "The two versions are different problems. In this version of the problem, you can choose the same integer twice or more. You can make hacks only if both versions are solved.One day, Turtle was playing with $$$n$$$ sequences. Let the length of the $$$i$$$-th sequence be $$$l_i$$$. Then the $$$i$$$-th sequence was $$$a_{i, 1}, a_{i, 2}, \\ldots, a_{i, l_i}$$$.Piggy gave Turtle a problem to solve when Turtle was playing. The statement of the problem was:  There was a non-negative integer $$$x$$$ at first. Turtle would perform an arbitrary number (possibly zero) of operations on the integer.  In each operation, Turtle could choose an integer $$$i$$$ such that $$$1 \\le i \\le n$$$, and set $$$x$$$ to $$$\\text{mex}^{\\dagger}(x, a_{i, 1}, a_{i, 2}, \\ldots, a_{i, l_i})$$$.  Turtle was asked to find the answer, which was the maximum value of $$$x$$$ after performing an arbitrary number of operations. Turtle solved the above problem without difficulty. He defined $$$f(k)$$$ as the answer to the above problem when the initial value of $$$x$$$ was $$$k$$$.Then Piggy gave Turtle a non-negative integer $$$m$$$ and asked Turtle to find the value of $$$\\sum\\limits_{i = 0}^m f(i)$$$ (i.e., the value of $$$f(0) + f(1) + \\ldots + f(m)$$$). Unfortunately, he couldn't solve this problem. Please help him!$$$^{\\dagger}\\text{mex}(c_1, c_2, \\ldots, c_k)$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the sequence $$$c$$$. For example, $$$\\text{mex}(2, 2, 0, 3)$$$ is $$$1$$$, $$$\\text{mex}(1, 2)$$$ is $$$0$$$."
  },
  {
    "title": "Turtle and Good Pairs",
    "url": "https://codeforces.com/problemset/problem/2003/C",
    "description": "Turtle gives you a string $$$s$$$, consisting of lowercase Latin letters.Turtle considers a pair of integers $$$(i, j)$$$ ($$$1 \\le i < j \\le n$$$) to be a pleasant pair if and only if there exists an integer $$$k$$$ such that $$$i \\le k < j$$$ and both of the following two conditions hold:  $$$s_k \\ne s_{k + 1}$$$;  $$$s_k \\ne s_i$$$ or $$$s_{k + 1} \\ne s_j$$$. Besides, Turtle considers a pair of integers $$$(i, j)$$$ ($$$1 \\le i < j \\le n$$$) to be a good pair if and only if $$$s_i = s_j$$$ or $$$(i, j)$$$ is a pleasant pair.Turtle wants to reorder the string $$$s$$$ so that the number of good pairs is maximized. Please help him!"
  },
  {
    "title": "Turtle and Piggy Are Playing a Game 2",
    "url": "https://codeforces.com/problemset/problem/2003/B",
    "description": "Turtle and Piggy are playing a game on a sequence. They are given a sequence $$$a_1, a_2, \\ldots, a_n$$$, and Turtle goes first. Turtle and Piggy alternate in turns (so, Turtle does the first turn, Piggy does the second, Turtle does the third, etc.).The game goes as follows:  Let the current length of the sequence be $$$m$$$. If $$$m = 1$$$, the game ends.  If the game does not end and it's Turtle's turn, then Turtle must choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 1$$$, set $$$a_i$$$ to $$$\\max(a_i, a_{i + 1})$$$, and remove $$$a_{i + 1}$$$.  If the game does not end and it's Piggy's turn, then Piggy must choose an integer $$$i$$$ such that $$$1 \\le i \\le m - 1$$$, set $$$a_i$$$ to $$$\\min(a_i, a_{i + 1})$$$, and remove $$$a_{i + 1}$$$. Turtle wants to maximize the value of $$$a_1$$$ in the end, while Piggy wants to minimize the value of $$$a_1$$$ in the end. Find the value of $$$a_1$$$ in the end if both players play optimally.You can refer to notes for further clarification."
  },
  {
    "title": "Turtle and Good Strings",
    "url": "https://codeforces.com/problemset/problem/2003/A",
    "description": "Turtle thinks a string $$$s$$$ is a good string if there exists a sequence of strings $$$t_1, t_2, \\ldots, t_k$$$ ($$$k$$$ is an arbitrary integer) such that:  $$$k \\ge 2$$$.  $$$s = t_1 + t_2 + \\ldots + t_k$$$, where $$$+$$$ represents the concatenation operation. For example, $$$\\texttt{abc} = \\texttt{a} + \\texttt{bc}$$$.  For all $$$1 \\le i < j \\le k$$$, the first character of $$$t_i$$$ isn't equal to the last character of $$$t_j$$$. Turtle is given a string $$$s$$$ consisting of lowercase Latin letters. Please tell him whether the string $$$s$$$ is a good string!"
  },
  {
    "title": "Counting 101",
    "url": "https://codeforces.com/problemset/problem/2002/H",
    "description": "It's been a long summer's day, with the constant chirping of cicadas and the heat which never seemed to end. Finally, it has drawn to a close. The showdown has passed, the gates are open, and only a gentle breeze is left behind.Your predecessors had taken their final bow; it's your turn to take the stage.Sorting through some notes that were left behind, you found a curious statement named Problem 101:  Given a positive integer sequence $$$a_1,a_2,\\ldots,a_n$$$, you can operate on it any number of times. In an operation, you choose three consecutive elements $$$a_i,a_{i+1},a_{i+2}$$$, and merge them into one element $$$\\max(a_i+1,a_{i+1},a_{i+2}+1)$$$. Please calculate the maximum number of operations you can do without creating an element greater than $$$m$$$. After some thought, you decided to propose the following problem, named Counting 101:  Given $$$n$$$ and $$$m$$$. For each $$$k=0,1,\\ldots,\\left\\lfloor\\frac{n-1}{2}\\right\\rfloor$$$, please find the number of integer sequences $$$a_1,a_2,\\ldots,a_n$$$ with elements in $$$[1, m]$$$, such that when used as input for Problem 101, the answer is $$$k$$$. As the answer can be very large, please print it modulo $$$10^9+7$$$. "
  },
  {
    "title": "Lattice Optimizing",
    "url": "https://codeforces.com/problemset/problem/2002/G",
    "description": "Consider a grid graph with $$$n$$$ rows and $$$n$$$ columns. Let the cell in row $$$x$$$ and column $$$y$$$ be $$$(x,y)$$$. There exists a directed edge from $$$(x,y)$$$ to $$$(x+1,y)$$$, with non-negative integer value $$$d_{x,y}$$$, for all $$$1\\le x < n, 1\\le y \\le n$$$, and there also exists a directed edge from $$$(x,y)$$$ to $$$(x,y+1)$$$, with non-negative integer value $$$r_{x,y}$$$, for all $$$1\\le x \\le n, 1\\le y < n$$$.Initially, you are at $$$(1,1)$$$, with an empty set $$$S$$$. You need to walk along the edges and eventually reach $$$(n,n)$$$. Whenever you pass an edge, its value will be inserted into $$$S$$$. Please maximize the MEX$$$^{\\text{∗}}$$$ of $$$S$$$ when you reach $$$(n,n)$$$.$$$^{\\text{∗}}$$$The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:   The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0, 1, 2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Court Blue (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2002/F2",
    "description": "This is the hard version of the problem. In this version, it is not guaranteed that $$$n=m$$$, and the time limit is higher. You can make hacks only if both versions of the problem are solved.In the court of the Blue King, Lelle and Flamm are having a performance match. The match consists of several rounds. In each round, either Lelle or Flamm wins.Let $$$W_L$$$ and $$$W_F$$$ denote the number of wins of Lelle and Flamm, respectively. The Blue King considers a match to be successful if and only if:  after every round, $$$\\gcd(W_L,W_F)\\le 1$$$;  at the end of the match, $$$W_L\\le n, W_F\\le m$$$. Note that $$$\\gcd(0,x)=\\gcd(x,0)=x$$$ for every non-negative integer $$$x$$$.Lelle and Flamm can decide to stop the match whenever they want, and the final score of the performance is $$$l \\cdot W_L + f \\cdot W_F$$$.Please help Lelle and Flamm coordinate their wins and losses such that the performance is successful, and the total score of the performance is maximized."
  },
  {
    "title": "Court Blue (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2002/F1",
    "description": "This is the easy version of the problem. In this version, n=mn=m and the time limit is lower. You can make hacks only if both versions of the problem are solved.In the court of the Blue King, Lelle and Flamm are having a performance match. The match consists of several rounds. In each round, either Lelle or Flamm wins.Let WLW_L and WFW_F denote the number of wins of Lelle and Flamm, respectively. The Blue King considers a match to be successful if and only if:  after every round, gcd\\gcd(W_L,W_F)\\le 1;  at the end of the match, W_L\\le n, W_F\\le mW_L\\le n, W_F\\le m. Note that \\gcd(0,x)=\\gcd(x,0)=x\\gcd(0,x)=\\gcd(x,0)=x for every non-negative integer xx.Lelle and Flamm can decide to stop the match whenever they want, and the final score of the performance is l \\cdot W_L + f \\cdot W_Fl \\cdot W_L + f \\cdot W_F.Please help Lelle and Flamm coordinate their wins and losses such that the performance is successful, and the total score of the performance is maximized."
  },
  {
    "title": "Cosmic Rays",
    "url": "https://codeforces.com/problemset/problem/2002/E",
    "description": "Given an array of integers s1,s2,…,sls_1, s_2, \\ldots, s_l, every second, cosmic rays will cause all sis_i such that i=1i=1 or si≠si−1s_i\\neq s_{i-1} to be deleted simultaneously, and the remaining parts will be concatenated together in order to form the new array s1,s2,…,sl′s_1, s_2, \\ldots, s_{l'}.Define the strength of an array as the number of seconds it takes to become empty.You are given an array of integers compressed in the form of nn pairs that describe the array left to right. Each pair (ai,bi)(a_i,b_i) represents aia_i copies of bib_i, i.e. bi,bi,⋯,bi⏟ai times\\underbrace{b_i,b_i,\\cdots,b_i}_{a_i\\textrm{ times}}.For each i=1,2,…,ni=1,2,\\dots,n, please find the strength of the sequence described by the first ii pairs."
  },
  {
    "title": "DFS Checker (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2002/D2",
    "description": "This is the hard version of the problem. In this version, you are given a generic tree and the constraints on $$$n$$$ and $$$q$$$ are higher. You can make hacks only if both versions of the problem are solved.You are given a rooted tree consisting of $$$n$$$ vertices. The vertices are numbered from $$$1$$$ to $$$n$$$, and the root is the vertex $$$1$$$. You are also given a permutation $$$p_1, p_2, \\ldots, p_n$$$ of $$$[1,2,\\ldots,n]$$$.You need to answer $$$q$$$ queries. For each query, you are given two integers $$$x$$$, $$$y$$$; you need to swap $$$p_x$$$ and $$$p_y$$$ and determine if $$$p_1, p_2, \\ldots, p_n$$$ is a valid DFS order$$$^\\dagger$$$ of the given tree.Please note that the swaps are persistent through queries.$$$^\\dagger$$$ A DFS order is found by calling the following $$$\\texttt{dfs}$$$ function on the given tree.dfs_order = []function dfs(v):    append v to the back of dfs_order    pick an arbitrary permutation s of children of v    for child in s:        dfs(child)dfs(1)Note that the DFS order is not unique."
  },
  {
    "title": "DFS Checker (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2002/D1",
    "description": "This is the easy version of the problem. In this version, the given tree is a perfect binary tree and the constraints on nn and qq are lower. You can make hacks only if both versions of the problem are solved.You are given a perfect binary tree†^\\dagger consisting of nn vertices. The vertices are numbered from 11 to nn, and the root is the vertex 11. You are also given a permutation p1,p2,…,pnp_1, p_2, \\ldots, p_n of [1,2,…,n][1,2,\\ldots,n].You need to answer qq queries. For each query, you are given two integers xx, yy; you need to swap pxp_x and pyp_y and determine if p1,p2,…,pnp_1, p_2, \\ldots, p_n is a valid DFS order‡^\\ddagger of the given tree.Please note that the swaps are persistent through queries.†^\\dagger A perfect binary tree is a tree with vertex 11 as its root, with size n=2k−1n=2^k-1 for a positive integer kk, and where the parent of each vertex ii (1<i≤n1<i\\le n) is ⌊i2⌋\\left\\lfloor\\frac{i}{2}\\right\\rfloor. Thus, all leaves of this tree are at a distance k−1k - 1 from the root.‡^\\ddagger A DFS order is found by calling the following dfs\\texttt{dfs} function on the given tree.dfs_order = []function dfs(v):    append v to the back of dfs_order    pick an arbitrary permutation s of children of v    for child in s:        dfs(child)dfs(1)Note that the DFS order is not unique."
  },
  {
    "title": "Black Circles",
    "url": "https://codeforces.com/problemset/problem/2002/C",
    "description": "There are $$$n$$$ circles on a two-dimensional plane. The $$$i$$$-th circle is centered at $$$(x_i,y_i)$$$. Initially, all circles have a radius of $$$0$$$.The circles' radii increase at a rate of $$$1$$$ unit per second.You are currently at $$$(x_s,y_s)$$$; your goal is to reach $$$(x_t,y_t)$$$ without touching the circumference of any circle (including the moment you reach $$$(x_t,y_t)$$$). You can move in any direction you want. However, your speed is limited to $$$1$$$ unit per second.Please determine whether this is possible."
  },
  {
    "title": "Removals Game",
    "url": "https://codeforces.com/problemset/problem/2002/B",
    "description": "Alice got a permutation a1,a2,…,ana_1, a_2, \\ldots, a_n of [1,2,…,n][1,2,\\ldots,n], and Bob got another permutation b1,b2,…,bnb_1, b_2, \\ldots, b_n of [1,2,…,n][1,2,\\ldots,n]. They are going to play a game with these arrays.In each turn, the following events happen in order:  Alice chooses either the first or the last element of her array and removes it from the array;  Bob chooses either the first or the last element of his array and removes it from the array. The game continues for n−1n-1 turns, after which both arrays will have exactly one remaining element: xx in the array aa and yy in the array bb.If x=yx=y, Bob wins; otherwise, Alice wins. Find which player will win if both players play optimally."
  },
  {
    "title": "Distanced Coloring",
    "url": "https://codeforces.com/problemset/problem/2002/A",
    "description": "You received an $$$n\\times m$$$ grid from a mysterious source. The source also gave you a magic positive integer constant $$$k$$$.The source told you to color the grid with some colors, satisfying the following condition:  If $$$(x_1,y_1)$$$, $$$(x_2,y_2)$$$ are two distinct cells with the same color, then $$$\\max(|x_1-x_2|,|y_1-y_2|)\\ge k$$$. You don't like using too many colors. Please find the minimum number of colors needed to color the grid."
  },
  {
    "title": "Deterministic Heap (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/2001/E2",
    "description": "This is the hard version of the problem. The difference between the two versions is the definition of deterministic max-heap, time limit, and constraints on nn and tt. You can make hacks only if both versions of the problem are solved.Consider a perfect binary tree with size 2n−12^n - 1, with nodes numbered from 11 to 2n−12^n-1 and rooted at 11. For each vertex vv (1≤v≤2n−1−11 \\le v \\le 2^{n - 1} - 1), vertex 2v2v is its left child and vertex 2v+12v + 1 is its right child. Each node vv also has a value ava_v assigned to it.Define the operation pop\\mathrm{pop} as follows:  initialize variable vv as 11;  repeat the following process until vertex vv is a leaf (i.e. until 2n−1≤v≤2n−12^{n - 1} \\le v \\le 2^n - 1);   among the children of vv, choose the one with the larger value on it and denote such vertex as xx; if the values on them are equal (i.e. a2v=a2v+1a_{2v} = a_{2v + 1}), you can choose any of them;  assign axa_x to ava_v (i.e. av:=axa_v := a_x);  assign xx to vv (i.e. v:=xv := x);   assign −1-1 to ava_v (i.e. av:=−1a_v := -1). Then we say the pop\\mathrm{pop} operation is deterministic if there is a unique way to do such operation. In other words, a2v≠a2v+1a_{2v} \\neq a_{2v + 1} would hold whenever choosing between them.A binary tree is called a max-heap if for every vertex vv (1≤v≤2n−1−11 \\le v \\le 2^{n - 1} - 1), both av≥a2va_v \\ge a_{2v} and av≥a2v+1a_v \\ge a_{2v + 1} hold.A max-heap is deterministic if the pop\\mathrm{pop} operation is deterministic to the heap when we do it for the first and the second time.Initially, av:=0a_v := 0 for every vertex vv (1≤v≤2n−11 \\le v \\le 2^n - 1), and your goal is to count the number of different deterministic max-heaps produced by applying the following operation add\\mathrm{add} exactly kk times:  Choose an integer vv (1≤v≤2n−11 \\le v \\le 2^n - 1) and, for every vertex xx on the path between 11 and vv, add 11 to axa_x. Two heaps are considered different if there is a node which has different values in the heaps. Since the answer might be large, print it modulo pp."
  },
  {
    "title": "Deterministic Heap (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/2001/E1",
    "description": "This is the easy version of the problem. The difference between the two versions is the definition of deterministic max-heap, time limit, and constraints on nn and tt. You can make hacks only if both versions of the problem are solved.Consider a perfect binary tree with size 2n−12^n - 1, with nodes numbered from 11 to 2n−12^n-1 and rooted at 11. For each vertex vv (1≤v≤2n−1−11 \\le v \\le 2^{n - 1} - 1), vertex 2v2v is its left child and vertex 2v+12v + 1 is its right child. Each node vv also has a value ava_v assigned to it.Define the operation pop\\mathrm{pop} as follows:  initialize variable vv as 11;  repeat the following process until vertex vv is a leaf (i.e. until 2n−1≤v≤2n−12^{n - 1} \\le v \\le 2^n - 1);   among the children of vv, choose the one with the larger value on it and denote such vertex as xx; if the values on them are equal (i.e. a2v=a2v+1a_{2v} = a_{2v + 1}), you can choose any of them;  assign axa_x to ava_v (i.e. av:=axa_v := a_x);  assign xx to vv (i.e. v:=xv := x);   assign −1-1 to ava_v (i.e. av:=−1a_v := -1). Then we say the pop\\mathrm{pop} operation is deterministic if there is a unique way to do such operation. In other words, a2v≠a2v+1a_{2v} \\neq a_{2v + 1} would hold whenever choosing between them.A binary tree is called a max-heap if for every vertex vv (1≤v≤2n−1−11 \\le v \\le 2^{n - 1} - 1), both av≥a2va_v \\ge a_{2v} and av≥a2v+1a_v \\ge a_{2v + 1} hold.A max-heap is deterministic if the pop\\mathrm{pop} operation is deterministic to the heap when we do it for the first time.Initially, av:=0a_v := 0 for every vertex vv (1≤v≤2n−11 \\le v \\le 2^n - 1), and your goal is to count the number of different deterministic max-heaps produced by applying the following operation add\\mathrm{add} exactly kk times:  Choose an integer vv (1≤v≤2n−11 \\le v \\le 2^n - 1) and, for every vertex xx on the path between 11 and vv, add 11 to axa_x. Two heaps are considered different if there is a node which has different values in the heaps. Since the answer might be large, print it modulo pp."
  },
  {
    "title": "Longest Max Min Subsequence",
    "url": "https://codeforces.com/problemset/problem/2001/D",
    "description": "You are given an integer sequence a1,a2,…,ana_1, a_2, \\ldots, a_n. Let SS be the set of all possible non-empty subsequences of aa without duplicate elements. Your goal is to find the longest sequence in SS. If there are multiple of them, find the one that minimizes lexicographical order after multiplying terms at odd positions by −1-1.For example, given a=[3,2,3,1]a = [3, 2, 3, 1], S={[1],[2],[3],[2,1],[2,3],[3,1],[3,2],[2,3,1],[3,2,1]}S = \\{[1], [2], [3], [2, 1], [2, 3], [3, 1], [3, 2], [2, 3, 1], [3, 2, 1]\\}. Then [2,3,1][2, 3, 1] and [3,2,1][3, 2, 1] would be the longest, and [3,2,1][3, 2, 1] would be the answer since [−3,2,−1][-3, 2, -1] is lexicographically smaller than [−2,3,−1][-2, 3, -1].A sequence cc is a subsequence of a sequence dd if cc can be obtained from dd by the deletion of several (possibly, zero or all) elements.A sequence cc is lexicographically smaller than a sequence dd if and only if one of the following holds: cc is a prefix of dd, but c≠dc \\ne d; in the first position where cc and dd differ, the sequence cc has a smaller element than the corresponding element in dd."
  },
  {
    "title": "Guess The Tree",
    "url": "https://codeforces.com/problemset/problem/2001/C",
    "description": "This is an interactive problem.Misuki has chosen a secret tree with $$$n$$$ nodes, indexed from $$$1$$$ to $$$n$$$, and asked you to guess it by using queries of the following type:   \"? a b\" — Misuki will tell you which node $$$x$$$ minimizes $$$|d(a,x) - d(b,x)|$$$, where $$$d(x,y)$$$ is the distance between nodes $$$x$$$ and $$$y$$$. If more than one such node exists, Misuki will tell you the one which minimizes $$$d(a,x)$$$. Find out the structure of Misuki's secret tree using at most $$$15n$$$ queries!"
  },
  {
    "title": "Generate Permutation",
    "url": "https://codeforces.com/problemset/problem/2001/B",
    "description": "There is an integer sequence $$$a$$$ of length $$$n$$$, where each element is initially $$$-1$$$.Misuki has two typewriters where the first one writes letters from left to right, with a pointer initially pointing to $$$1$$$, and another writes letters from right to left with a pointer initially pointing to $$$n$$$.Misuki would choose one of the typewriters and use it to perform the following operations until $$$a$$$ becomes a permutation of $$$[1, 2, \\ldots, n]$$$  write number: write the minimum positive integer that isn't present in the array $$$a$$$ to the element $$$a_i$$$, $$$i$$$ is the position where the pointer points at. Such operation can be performed only when $$$a_i = -1$$$.  carriage return: return the pointer to its initial position (i.e. $$$1$$$ for the first typewriter, $$$n$$$ for the second)  move pointer: move the pointer to the next position, let $$$i$$$ be the position the pointer points at before this operation, if Misuki is using the first typewriter, $$$i := i + 1$$$ would happen, and $$$i := i - 1$$$ otherwise. Such operation can be performed only if after the operation, $$$1 \\le i \\le n$$$ holds. Your task is to construct any permutation $$$p$$$ of length $$$n$$$, such that the minimum number of carriage return operations needed to make $$$a = p$$$ is the same no matter which typewriter Misuki is using."
  },
  {
    "title": "Make All Equal",
    "url": "https://codeforces.com/problemset/problem/2001/A",
    "description": "You are given a cyclic array $$$a_1, a_2, \\ldots, a_n$$$.You can perform the following operation on $$$a$$$ at most $$$n - 1$$$ times:  Let $$$m$$$ be the current size of $$$a$$$, you can choose any two adjacent elements where the previous one is no greater than the latter one (In particular, $$$a_m$$$ and $$$a_1$$$ are adjacent and $$$a_m$$$ is the previous one), and delete exactly one of them. In other words, choose an integer $$$i$$$ ($$$1 \\leq i \\leq m$$$) where $$$a_i \\leq a_{(i \\bmod m) + 1}$$$ holds, and delete exactly one of $$$a_i$$$ or $$$a_{(i \\bmod m) + 1}$$$ from $$$a$$$. Your goal is to find the minimum number of operations needed to make all elements in $$$a$$$ equal."
  },
  {
    "title": "Ksyusha and the Loaded Set",
    "url": "https://codeforces.com/problemset/problem/2000/H",
    "description": "Ksyusha decided to start a game development company. To stand out among competitors and achieve success, she decided to write her own game engine. The engine must support a set initially consisting of nn distinct integers a1,a2,…,ana_1, a_2, \\ldots, a_n.The set will undergo mm operations sequentially. The operations can be of the following types:   Insert element xx into the set;  Remove element xx from the set;  Report the kk-load of the set. The kk-load of the set is defined as the minimum positive integer dd such that the integers d,d+1,…,d+(k−1)d, d + 1, \\ldots, d + (k - 1) do not appear in this set. For example, the 33-load of the set {3,4,6,11}\\{3, 4, 6, 11\\} is 77, since the integers 7,8,97, 8, 9 are absent from the set, and no smaller value fits.Ksyusha is busy with management tasks, so you will have to write the engine. Implement efficient support for the described operations."
  },
  {
    "title": "Call During the Journey",
    "url": "https://codeforces.com/problemset/problem/2000/G",
    "description": "You live in a city consisting of $$$n$$$ intersections and $$$m$$$ streets connecting some pairs of intersections. You can travel in either direction on each street. No two streets connect the same pair of intersections, and no street connects an intersection to itself. You can reach any intersection from any other, possibly passing through some other intersections.Every minute, you can board a bus at intersection $$$u_i$$$ and travel for $$$l_{i1}$$$ minutes to intersection $$$v_i$$$. Conversely, you can travel from intersection $$$v_i$$$ to intersection $$$u_i$$$ in $$$l_{i1}$$$ minutes. You can only board and exit the bus at intersections. You can only board the bus at an intersection if you are currently there.You can also walk along each street, which takes $$$l_{i2} > l_{i1}$$$ minutes.You can make stops at intersections.You live at intersection number $$$1$$$. Today you woke up at time $$$0$$$, and you have an important event scheduled at intersection number $$$n$$$, which you must reach no later than time $$$t_0$$$. You also have a phone call planned that will last from $$$t_1$$$ to $$$t_2$$$ minutes ($$$t_1 < t_2 < t_0$$$). During the phone call, you cannot ride the bus, but you can walk along any streets, make stops, or stay at home. You can exit the bus at minute $$$t_1$$$ and board the bus again at minute $$$t_2$$$.Since you want to get enough sleep, you became curious — how late can you leave home to have time to talk on the phone and still not be late for the event?"
  },
  {
    "title": "Color Rows and Columns",
    "url": "https://codeforces.com/problemset/problem/2000/F",
    "description": "You have $$$n$$$ rectangles, the $$$i$$$-th of which has a width of $$$a_i$$$ and a height of $$$b_i$$$.You can perform the following operation an unlimited number of times: choose a rectangle and a cell in it, and then color it.Each time you completely color any row or column, you earn $$$1$$$ point. Your task is to score at least $$$k$$$ points with as few operations as possible.Suppose you have a rectangle with a width of $$$6$$$ and a height of $$$3$$$. You can score $$$4$$$ points by coloring all the cells in any $$$4$$$ columns, thus performing $$$12$$$ operations."
  },
  {
    "title": "Photoshoot for Gorillas",
    "url": "https://codeforces.com/problemset/problem/2000/E",
    "description": "You really love gorillas, so you decided to organize a photoshoot for them. Gorillas live in the jungle. The jungle is represented as a grid of nn rows and mm columns. ww gorillas agreed to participate in the photoshoot, and the gorilla with index ii (1≤i≤w1 \\le i \\le w) has a height of aia_i. You want to place all the gorillas in the cells of the grid such that there is no more than one gorilla in each cell.The spectacle of the arrangement is equal to the sum of the spectacles of all sub-squares of the grid with a side length of kk.The spectacle of a sub-square is equal to the sum of the heights of the gorillas in it.From all suitable arrangements, choose the arrangement with the maximum spectacle."
  },
  {
    "title": "Right Left Wrong",
    "url": "https://codeforces.com/problemset/problem/2000/D",
    "description": "Vlad found a strip of $$$n$$$ cells, numbered from left to right from $$$1$$$ to $$$n$$$. In the $$$i$$$-th cell, there is a positive integer $$$a_i$$$ and a letter $$$s_i$$$, where all $$$s_i$$$ are either 'L' or 'R'.Vlad invites you to try to score the maximum possible points by performing any (possibly zero) number of operations.In one operation, you can choose two indices $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le n$$$) such that $$$s_l$$$ = 'L' and $$$s_r$$$ = 'R' and do the following:  add $$$a_l + a_{l + 1} + \\dots + a_{r - 1} + a_r$$$ points to the current score;  replace $$$s_i$$$ with '.' for all $$$l \\le i \\le r$$$, meaning you can no longer choose these indices. For example, consider the following strip: $$$3$$$$$$5$$$$$$1$$$$$$4$$$$$$3$$$$$$2$$$LRLLLR You can first choose $$$l = 1$$$, $$$r = 2$$$ and add $$$3 + 5 = 8$$$ to your score. $$$3$$$$$$5$$$$$$1$$$$$$4$$$$$$3$$$$$$2$$$..LLLR Then choose $$$l = 3$$$, $$$r = 6$$$ and add $$$1 + 4 + 3 + 2 = 10$$$ to your score. $$$3$$$$$$5$$$$$$1$$$$$$4$$$$$$3$$$$$$2$$$...... As a result, it is impossible to perform another operation, and the final score is $$$18$$$.What is the maximum score that can be achieved?"
  },
  {
    "title": "Numeric String Template",
    "url": "https://codeforces.com/problemset/problem/2000/C",
    "description": "Kristina has an array $$$a$$$, called a template, consisting of $$$n$$$ integers. She also has $$$m$$$ strings, each consisting only of lowercase Latin letters. The strings are numbered from $$$1$$$ to $$$m$$$. She wants to check which strings match the template.A string $$$s$$$ is considered to match the template if all of the following conditions are simultaneously satisfied:  The length of the string $$$s$$$ is equal to the number of elements in the array $$$a$$$. The same numbers from $$$a$$$ correspond to the same symbols from $$$s$$$. So, if $$$a_i = a_j$$$, then $$$s_i = s_j$$$ for ($$$1 \\le i, j \\le n$$$). The same symbols from $$$s$$$ correspond to the same numbers from $$$a$$$. So, if $$$s_i = s_j$$$, then $$$a_i = a_j$$$ for ($$$1 \\le i, j \\le n$$$). In other words, there must be a one-to-one correspondence between the characters of the string and the elements of the array.For example, if $$$a$$$ = [$$$3, 5, 2, 1, 3$$$], then the string \"abfda\" matches the template, while the string \"afbfa\" does not, since the character \"f\" corresponds to both numbers $$$1$$$ and $$$5$$$."
  },
  {
    "title": "Seating in a Bus",
    "url": "https://codeforces.com/problemset/problem/2000/B",
    "description": "In Berland, a bus consists of a row of $$$n$$$ seats numbered from $$$1$$$ to $$$n$$$. Passengers are advised to always board the bus following these rules:   If there are no occupied seats in the bus, a passenger can sit in any free seat; Otherwise, a passenger should sit in any free seat that has at least one occupied neighboring seat. In other words, a passenger can sit in a seat with index $$$i$$$ ($$$1 \\le i \\le n$$$) only if at least one of the seats with indices $$$i-1$$$ or $$$i+1$$$ is occupied. Today, $$$n$$$ passengers boarded the bus. The array $$$a$$$ chronologically records the seat numbers they occupied. That is, $$$a_1$$$ contains the seat number where the first passenger sat, $$$a_2$$$ — the seat number where the second passenger sat, and so on.You know the contents of the array $$$a$$$. Determine whether all passengers followed the recommendations.For example, if $$$n = 5$$$, and $$$a$$$ = [$$$5, 4, 2, 1, 3$$$], then the recommendations were not followed, as the $$$3$$$-rd passenger sat in seat number $$$2$$$, while the neighboring seats with numbers $$$1$$$ and $$$3$$$ were free."
  },
  {
    "title": "Primary Task",
    "url": "https://codeforces.com/problemset/problem/2000/A",
    "description": "Dmitry wrote down tt integers on the board, and that is good. He is sure that he lost an important integer nn among them, and that is bad.The integer nn had the form 10^x\\text{10^x} (x≥2x \\ge 2), where the symbol '^\\text{^}' denotes exponentiation.. Something went wrong, and Dmitry missed the symbol '^\\text{^}' when writing the important integer. For example, instead of the integer 10510^5, he would have written 105105, and instead of 101910^{19}, he would have written 10191019.Dmitry wants to understand which of the integers on the board could have been the important integer and which could not."
  },
  {
    "title": "Ruler (hard version)",
    "url": "https://codeforces.com/problemset/problem/1999/G2",
    "description": "This is the hard version of the problem. The only difference between the two versions is that in this version, you can make at most $$$\\mathbf{7}$$$ queries.This is an interactive problem. If you are unsure how interactive problems work, then it is recommended to read the guide for participants.We have a secret ruler that is missing one number $$$x$$$ ($$$2 \\leq x \\leq 999$$$). When you measure an object of length $$$y$$$, the ruler reports the following values:   If $$$y < x$$$, the ruler (correctly) measures the object as having length $$$y$$$.  If $$$y \\geq x$$$, the ruler incorrectly measures the object as having length $$$y+1$$$.  The ruler above is missing the number $$$4$$$, so it correctly measures the first segment as length $$$3$$$ but incorrectly measures the second segment as length $$$6$$$ even though it is actually $$$5$$$. You need to find the value of $$$x$$$. To do that, you can make queries of the following form:  $$$\\texttt{?}~a~b$$$ — in response, we will measure the side lengths of an $$$a \\times b$$$ rectangle with our ruler and multiply the results, reporting the measured area of the rectangle back to you. For example, if $$$x=4$$$ and you query a $$$3 \\times 5$$$ rectangle, we will measure its side lengths as $$$3 \\times 6$$$ and report $$$18$$$ back to you. Find the value of $$$x$$$. You can ask at most $$$\\mathbf{7}$$$ queries."
  },
  {
    "title": "Ruler (easy version)",
    "url": "https://codeforces.com/problemset/problem/1999/G1",
    "description": "This is the easy version of the problem. The only difference between the two versions is that in this version, you can make at most $$$\\mathbf{10}$$$ queries.This is an interactive problem. If you are unsure how interactive problems work, then it is recommended to read the guide for participants.We have a secret ruler that is missing one number $$$x$$$ ($$$2 \\leq x \\leq 999$$$). When you measure an object of length $$$y$$$, the ruler reports the following values:   If $$$y < x$$$, the ruler (correctly) measures the object as having length $$$y$$$.  If $$$y \\geq x$$$, the ruler incorrectly measures the object as having length $$$y+1$$$.  The ruler above is missing the number $$$4$$$, so it correctly measures the first segment as length $$$3$$$ but incorrectly measures the second segment as length $$$6$$$ even though it is actually $$$5$$$. You need to find the value of $$$x$$$. To do that, you can make queries of the following form:  $$$\\texttt{?}~a~b$$$ — in response, we will measure the side lengths of an $$$a \\times b$$$ rectangle with our ruler and multiply the results, reporting the measured area of the rectangle back to you. For example, if $$$x=4$$$ and you query a $$$3 \\times 5$$$ rectangle, we will measure its side lengths as $$$3 \\times 6$$$ and report $$$18$$$ back to you. Find the value of $$$x$$$. You can ask at most $$$\\mathbf{10}$$$ queries."
  },
  {
    "title": "Expected Median",
    "url": "https://codeforces.com/problemset/problem/1999/F",
    "description": "Arul has a binary array$$$^{\\text{∗}}$$$ $$$a$$$ of length $$$n$$$.He will take all subsequences$$$^{\\text{†}}$$$ of length $$$k$$$ ($$$k$$$ is odd) of this array and find their median.$$$^{\\text{‡}}$$$What is the sum of all these values?As this sum can be very large, output it modulo $$$10^9 + 7$$$. In other words, print the remainder of this sum when divided by $$$10^9 + 7$$$.$$$^{\\text{∗}}$$$A binary array is an array consisting only of zeros and ones.$$$^{\\text{†}}$$$An array $$$b$$$ is a subsequence of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements. Subsequences don't have to be contiguous.$$$^{\\text{‡}}$$$The median of an array of odd length $$$k$$$ is the $$$\\frac{k+1}{2}$$$-th element when sorted."
  },
  {
    "title": "Triple Operations",
    "url": "https://codeforces.com/problemset/problem/1999/E",
    "description": "On the board Ivy wrote down all integers from $$$l$$$ to $$$r$$$, inclusive.In an operation, she does the following:   pick two numbers $$$x$$$ and $$$y$$$ on the board, erase them, and in their place write the numbers $$$3x$$$ and $$$\\lfloor \\frac{y}{3} \\rfloor$$$. (Here $$$\\lfloor \\bullet \\rfloor$$$ denotes rounding down to the nearest integer). What is the minimum number of operations Ivy needs to make all numbers on the board equal $$$0$$$? We have a proof that this is always possible."
  },
  {
    "title": "Slavic's Exam",
    "url": "https://codeforces.com/problemset/problem/1999/D",
    "description": "Slavic has a very tough exam and needs your help in order to pass it. Here is the question he is struggling with:There exists a string $$$s$$$, which consists of lowercase English letters and possibly zero or more \"?\". Slavic is asked to change each \"?\" to a lowercase English letter such that string $$$t$$$ becomes a subsequence (not necessarily continuous) of the string $$$s$$$. Output any such string, or say that it is impossible in case no string that respects the conditions exists."
  },
  {
    "title": "Showering",
    "url": "https://codeforces.com/problemset/problem/1999/C",
    "description": "As a computer science student, Alex faces a hard challenge — showering. He tries to shower daily, but despite his best efforts there are always challenges. He takes $$$s$$$ minutes to shower and a day only has $$$m$$$ minutes! He already has $$$n$$$ tasks planned for the day. Task $$$i$$$ is represented as an interval $$$(l_i$$$, $$$r_i)$$$, which means that Alex is busy and can not take a shower in that time interval (at any point in time strictly between $$$l_i$$$ and $$$r_i$$$). No two tasks overlap.Given all $$$n$$$ time intervals, will Alex be able to shower that day? In other words, will Alex have a free time interval of length at least $$$s$$$? In the first test case, Alex can shower for the first $$$3$$$ minutes of the day and not miss any of the tasks. "
  },
  {
    "title": "Card Game",
    "url": "https://codeforces.com/problemset/problem/1999/B",
    "description": "Suneet and Slavic play a card game. The rules of the game are as follows:  Each card has an integer value between $$$1$$$ and $$$10$$$.  Each player receives $$$2$$$ cards which are face-down (so a player doesn't know their cards).  The game is turn-based and consists exactly of two turns. In a round, both players pick a random unflipped card and flip it. The player who flipped a card with a strictly greater number wins the round. In case of equality, no one wins the round.  A player wins a game if he wins the most number of rounds (i.e. strictly greater than the other player). In case of equality, no one wins the game. Since Suneet and Slavic aren't best friends, you need to calculate the number of ways the game could happen that Suneet would end up as the winner.For a better understanding, please check the notes section."
  },
  {
    "title": "A+B Again?",
    "url": "https://codeforces.com/problemset/problem/1999/A",
    "description": "Given a two-digit positive integer $$$n$$$, find the sum of its digits."
  },
  {
    "title": "Eliminating Balls With Merging (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1998/E2",
    "description": "Drink water.— Sun Tzu, The Art of Becoming a Healthy ProgrammerThis is the hard version of the problem. The only difference is that $$$x=1$$$ in this version. You must solve both versions to be able to hack.You are given two integers $$$n$$$ and $$$x$$$ ($$$x=1$$$). There are $$$n$$$ balls lined up in a row, numbered from $$$1$$$ to $$$n$$$ from left to right. Initially, there is a value $$$a_i$$$ written on the $$$i$$$-th ball.For each integer $$$i$$$ from $$$1$$$ to $$$n$$$, we define a function $$$f(i)$$$ as follows:   Suppose you have a set $$$S = \\{1, 2, \\ldots, i\\}$$$.  In each operation, you have to select an integer $$$l$$$ ($$$1 \\leq l < i$$$) from $$$S$$$ such that $$$l$$$ is not the largest element of $$$S$$$. Suppose $$$r$$$ is the smallest element in $$$S$$$ which is greater than $$$l$$$.   If $$$a_l > a_r$$$, you set $$$a_l = a_l + a_r$$$ and remove $$$r$$$ from $$$S$$$.  If $$$a_l < a_r$$$, you set $$$a_r = a_l + a_r$$$ and remove $$$l$$$ from $$$S$$$.  If $$$a_l = a_r$$$, you choose either the integer $$$l$$$ or $$$r$$$ to remove from $$$S$$$:   If you choose to remove $$$l$$$ from $$$S$$$, you set $$$a_r = a_l + a_r$$$ and remove $$$l$$$ from $$$S$$$.  If you choose to remove $$$r$$$ from $$$S$$$, you set $$$a_l = a_l + a_r$$$ and remove $$$r$$$ from $$$S$$$.    $$$f(i)$$$ denotes the number of integers $$$j$$$ ($$$1 \\le j \\le i$$$) such that it is possible to obtain $$$S = \\{j\\}$$$ after performing the above operations exactly $$$i - 1$$$ times. For each integer $$$i$$$ from $$$x$$$ to $$$n$$$, you need to find $$$f(i)$$$."
  },
  {
    "title": "Eliminating Balls With Merging (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1998/E1",
    "description": "Drink water.— Sun Tzu, The Art of Becoming a Healthy ProgrammerThis is the easy version of the problem. The only difference is that $$$x=n$$$ in this version. You must solve both versions to be able to hack.You are given two integers $$$n$$$ and $$$x$$$ ($$$x=n$$$). There are $$$n$$$ balls lined up in a row, numbered from $$$1$$$ to $$$n$$$ from left to right. Initially, there is a value $$$a_i$$$ written on the $$$i$$$-th ball.For each integer $$$i$$$ from $$$1$$$ to $$$n$$$, we define a function $$$f(i)$$$ as follows:   Suppose you have a set $$$S = \\{1, 2, \\ldots, i\\}$$$.  In each operation, you have to select an integer $$$l$$$ ($$$1 \\leq l < i$$$) from $$$S$$$ such that $$$l$$$ is not the largest element of $$$S$$$. Suppose $$$r$$$ is the smallest element in $$$S$$$ which is greater than $$$l$$$.   If $$$a_l > a_r$$$, you set $$$a_l = a_l + a_r$$$ and remove $$$r$$$ from $$$S$$$.  If $$$a_l < a_r$$$, you set $$$a_r = a_l + a_r$$$ and remove $$$l$$$ from $$$S$$$.  If $$$a_l = a_r$$$, you choose either the integer $$$l$$$ or $$$r$$$ to remove from $$$S$$$:   If you choose to remove $$$l$$$ from $$$S$$$, you set $$$a_r = a_l + a_r$$$ and remove $$$l$$$ from $$$S$$$.  If you choose to remove $$$r$$$ from $$$S$$$, you set $$$a_l = a_l + a_r$$$ and remove $$$r$$$ from $$$S$$$.    $$$f(i)$$$ denotes the number of integers $$$j$$$ ($$$1 \\le j \\le i$$$) such that it is possible to obtain $$$S = \\{j\\}$$$ after performing the above operations exactly $$$i - 1$$$ times. For each integer $$$i$$$ from $$$x$$$ to $$$n$$$, you need to find $$$f(i)$$$."
  },
  {
    "title": "Determine Winning Islands in Race",
    "url": "https://codeforces.com/problemset/problem/1998/D",
    "description": "MOOOOOOOOOOOOOOOOO— Bessie the Cow, The Art of Racing on IslandsTwo of Farmer John's cows, Bessie and Elsie, are planning to race on $$$n$$$ islands. There are $$$n - 1$$$ main bridges, connecting island $$$i$$$ to island $$$i + 1$$$ for all $$$1 \\leq i \\leq n - 1$$$. Additionally, there are $$$m$$$ alternative bridges. Elsie can use both main and alternative bridges, while Bessie can only use main bridges. All bridges are one way and can only be used to travel from an island with a lower index to an island with a higher index.Initially, Elsie starts on island $$$1$$$, and Bessie starts on island $$$s$$$. The cows alternate turns, with Bessie making the first turn. Suppose the cow is on island $$$i$$$. During a cow's turn, if there are any bridges connecting island $$$i$$$ to island $$$j$$$, then the cow can move to island $$$j$$$. Then, island $$$i$$$ collapses, and all bridges connecting to island $$$i$$$ also collapse. Also, note the following:  If there are no bridges connecting island $$$i$$$ to another island, then island $$$i$$$ collapses, and this cow is eliminated from the race.  If the other cow is also on island $$$i$$$, then after this cow moves to another island, the island collapses, and the other cow is eliminated from the race.  After an island or bridge collapses, no cows may use them.  If a cow is eliminated, their turn is skipped for the rest of the race. The race ends once either cow reaches island $$$n$$$. It can be shown that regardless of the cows' strategies, at least one cow reaches island $$$n$$$. Bessie wins if and only if she reaches island $$$n$$$ first.For each $$$1 \\leq s \\leq n - 1$$$, determine whether Bessie wins if she starts the race on island $$$s$$$. Assume both cows follow optimal strategies to ensure their own respective victories."
  },
  {
    "title": "Perform Operations to Maximize Score",
    "url": "https://codeforces.com/problemset/problem/1998/C",
    "description": "I see satyam343. I'm shaking. Please more median problems this time. I love those. Please satyam343 we believe in you.— satyam343's biggest fanYou are given an array $$$a$$$ of length $$$n$$$ and an integer $$$k$$$. You are also given a binary array $$$b$$$ of length $$$n$$$. You can perform the following operation at most $$$k$$$ times:   Select an index $$$i$$$ ($$$1 \\leq i \\leq n$$$) such that $$$b_i = 1$$$. Set $$$a_i = a_i + 1$$$ (i.e., increase $$$a_i$$$ by $$$1$$$). Your score is defined to be $$$\\max\\limits_{i = 1}^{n} \\left( a_i + \\operatorname{median}(c_i) \\right)$$$, where $$$c_i$$$ denotes the array of length $$$n-1$$$ that you get by deleting $$$a_i$$$ from $$$a$$$. In other words, your score is the maximum value of $$$a_i + \\operatorname{median}(c_i)$$$ over all $$$i$$$ from $$$1$$$ to $$$n$$$.Find the maximum score that you can achieve if you perform the operations optimally.For an arbitrary array $$$p$$$, $$$\\operatorname{median}(p)$$$ is defined as the $$$\\left\\lfloor \\frac{|p|+1}{2} \\right\\rfloor$$$-th smallest element of $$$p$$$. For example, $$$\\operatorname{median} \\left( [3,2,1,3] \\right) = 2$$$ and $$$\\operatorname{median} \\left( [6,2,4,5,1] \\right) = 4$$$."
  },
  {
    "title": "Minimize Equal Sum Subarrays",
    "url": "https://codeforces.com/problemset/problem/1998/B",
    "description": "It is known that Farmer John likes Permutations, but I like them too!— Sun Tzu, The Art of Constructing PermutationsYou are given a permutation$$$^{\\text{∗}}$$$ $$$p$$$ of length $$$n$$$.Find a permutation $$$q$$$ of length $$$n$$$ that minimizes the number of pairs ($$$i, j$$$) ($$$1 \\leq i \\leq j \\leq n$$$) such that $$$p_i + p_{i+1} + \\ldots + p_j = q_i + q_{i+1} + \\ldots + q_j$$$.$$$^{\\text{∗}}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Find K Distinct Points with Fixed Center",
    "url": "https://codeforces.com/problemset/problem/1998/A",
    "description": "I couldn't think of a good title for this problem, so I decided to learn from LeetCode.— Sun Tzu, The Art of WarYou are given three integers $$$x_c$$$, $$$y_c$$$, and $$$k$$$ ($$$-100 \\leq x_c, y_c \\leq 100$$$, $$$1 \\leq k \\leq 1000$$$). You need to find $$$k$$$ distinct points ($$$x_1, y_1$$$), ($$$x_2, y_2$$$), $$$\\ldots$$$, ($$$x_k, y_k$$$), having integer coordinates, on the 2D coordinate plane such that:   their center$$$^{\\text{∗}}$$$ is ($$$x_c, y_c$$$)  $$$-10^9 \\leq x_i, y_i \\leq 10^9$$$ for all $$$i$$$ from $$$1$$$ to $$$k$$$  It can be proven that at least one set of $$$k$$$ distinct points always exists that satisfies these conditions.$$$^{\\text{∗}}$$$The center of $$$k$$$ points ($$$x_1, y_1$$$), ($$$x_2, y_2$$$), $$$\\ldots$$$, ($$$x_k, y_k$$$) is $$$\\left( \\frac{x_1 + x_2 + \\ldots + x_k}{k}, \\frac{y_1 + y_2 + \\ldots + y_k}{k} \\right)$$$."
  },
  {
    "title": "Chips on a Line",
    "url": "https://codeforces.com/problemset/problem/1997/F",
    "description": "You have $$$n$$$ chips, and you are going to place all of them in one of $$$x$$$ points, numbered from $$$1$$$ to $$$x$$$. There can be multiple chips in each point.After placing the chips, you can perform the following four operations (in any order, any number of times):  choose a chip in point $$$i \\ge 3$$$, remove it and place two chips: one in $$$i-1$$$, one in $$$i-2$$$;  choose two chips in adjacent points $$$i$$$ and $$$i+1$$$, remove them and place a new chip in $$$i+2$$$;  choose a chip in point $$$1$$$ and move it to $$$2$$$;  choose a chip in point $$$2$$$ and move it to $$$1$$$. Note that the coordinates of the chips you place during the operations cannot be less than $$$1$$$, but can be greater than $$$x$$$.Denote the cost of chip placement as the minimum number of chips which can be present on the line after you perform these operations, starting from the placement you've chosen.For example, the cost of placing two chips in points $$$3$$$ and one chip in point $$$5$$$ is $$$2$$$, because you can reduce the number of chips to $$$2$$$ as follows:  choose a chip in point $$$3$$$, remove it, place a chip in $$$1$$$ and another chip in $$$2$$$;  choose the chips in points $$$2$$$ and $$$3$$$, remove them and place a chip in $$$4$$$;  choose the chips in points $$$4$$$ and $$$5$$$, remove them and place a chip in $$$6$$$. You are given three integers $$$n$$$, $$$x$$$ and $$$m$$$. Calculate the number of placements of exactly $$$n$$$ chips in points from $$$1$$$ to $$$x$$$ having cost equal to $$$m$$$, and print it modulo $$$998244353$$$. Two placements are considered different if the number of chips in some point differs between these placements."
  },
  {
    "title": "Level Up",
    "url": "https://codeforces.com/problemset/problem/1997/E",
    "description": "Monocarp is playing a computer game. He starts the game being level $$$1$$$. He is about to fight $$$n$$$ monsters, in order from $$$1$$$ to $$$n$$$. The level of the $$$i$$$-th monster is $$$a_i$$$.For each monster in the given order, Monocarp's encounter goes as follows:  if Monocarp's level is strictly higher than the monster's level, the monster flees (runs away);  otherwise, Monocarp fights the monster. After every $$$k$$$-th fight with a monster (fleeing monsters do not count), Monocarp's level increases by $$$1$$$. So, his level becomes $$$2$$$ after $$$k$$$ monsters he fights, $$$3$$$ after $$$2k$$$ monsters, $$$4$$$ after $$$3k$$$ monsters, and so on.You need to process $$$q$$$ queries of the following form:  $$$i~x$$$: will Monocarp fight the $$$i$$$-th monster (or will this monster flee) if the parameter $$$k$$$ is equal to $$$x$$$? "
  },
  {
    "title": "Maximize the Root",
    "url": "https://codeforces.com/problemset/problem/1997/D",
    "description": "You are given a rooted tree, consisting of $$$n$$$ vertices. The vertices in the tree are numbered from $$$1$$$ to $$$n$$$, and the root is the vertex $$$1$$$. The value $$$a_i$$$ is written at the $$$i$$$-th vertex.You can perform the following operation any number of times (possibly zero): choose a vertex $$$v$$$ which has at least one child; increase $$$a_v$$$ by $$$1$$$; and decrease $$$a_u$$$ by $$$1$$$ for all vertices $$$u$$$ that are in the subtree of $$$v$$$ (except $$$v$$$ itself). However, after each operation, the values on all vertices should be non-negative.Your task is to calculate the maximum possible value written at the root using the aforementioned operation."
  },
  {
    "title": "Even Positions",
    "url": "https://codeforces.com/problemset/problem/1997/C",
    "description": "Monocarp had a regular bracket sequence ss of length nn (nn is even). He even came up with his own way to calculate its cost.He knows that in a regular bracket sequence (RBS), each opening bracket is paired up with the corresponding closing bracket. So he decided to calculate the cost of RBS as the sum of distances between pairs of corresponding bracket pairs.For example, let's look at RBS (())(). It has three pairs of brackets:   (__)__: the distance between brackets at position 11 and at 44 is 4−1=34 - 1 = 3;  _()___: the distance is 3−2=13 - 2 = 1;  ____(): the distance is 6−5=16 - 5 = 1.  So the cost of (())() is 3+1+1=53 + 1 + 1 = 5.Unfortunately, due to data corruption, Monocarp lost all characters on odd positions s1,s3,…,sn−1s_1, s_3, \\dots, s_{n-1}. Only characters on even positions (s2,s4,…,sns_2, s_4, \\dots, s_{n}) remain. For example, (())() turned to _(_)_).Monocarp wants to restore his RBS by placing brackets on the odd positions. But since the restored RBS may not be unique, he wants to choose one with minimum cost. It's too hard to do for Monocarp alone, so can you help him?Reminder: A regular bracket sequence is a string consisting of only brackets, such that this sequence, when inserted 1-s and +-s, gives a valid mathematical expression. For example, (), (()) or (()())() are RBS, while ), ()( or ())(() are not."
  },
  {
    "title": "Make Three Regions",
    "url": "https://codeforces.com/problemset/problem/1997/B",
    "description": "There is a grid, consisting of $$$2$$$ rows and $$$n$$$ columns. Each cell of the grid is either free or blocked.A free cell $$$y$$$ is reachable from a free cell $$$x$$$ if at least one of these conditions holds:   $$$x$$$ and $$$y$$$ share a side;  there exists a free cell $$$z$$$ such that $$$z$$$ is reachable from $$$x$$$ and $$$y$$$ is reachable from $$$z$$$. A connected region is a set of free cells of the grid such that all cells in it are reachable from one another, but adding any other free cell to the set violates this rule.For example, consider the following layout, where white cells are free, and dark grey cells are blocked:   There are $$$3$$$ regions in it, denoted with red, green and blue color respectively:   The given grid contains at most $$$1$$$ connected region. Your task is to calculate the number of free cells meeting the following constraint:  if this cell is blocked, the number of connected regions becomes exactly $$$3$$$. "
  },
  {
    "title": "Strong Password",
    "url": "https://codeforces.com/problemset/problem/1997/A",
    "description": "Monocarp's current password on Codeforces is a string $$$s$$$, consisting of lowercase Latin letters. Monocarp thinks that his current password is too weak, so he wants to insert exactly one lowercase Latin letter into the password to make it stronger. Monocarp can choose any letter and insert it anywhere, even before the first character or after the last character.Monocarp thinks that the password's strength is proportional to the time it takes him to type the password. The time it takes to type the password is calculated as follows:  the time to type the first character is $$$2$$$ seconds;  for each character other than the first, the time it takes to type it is $$$1$$$ second if it is the same as the previous character, or $$$2$$$ seconds otherwise. For example, the time it takes to type the password abacaba is $$$14$$$; the time it takes to type the password a is $$$2$$$; the time it takes to type the password aaabacc is $$$11$$$.You have to help Monocarp — insert a lowercase Latin letter into his password so that the resulting password takes the maximum possible amount of time to type."
  },
  {
    "title": "Penacony",
    "url": "https://codeforces.com/problemset/problem/1996/G",
    "description": "On Penacony, The Land of the Dreams, there exists $$$n$$$ houses and $$$n$$$ roads. There exists a road between house $$$i$$$ and $$$i+1$$$ for all $$$1 \\leq i \\leq n-1$$$ and a road between house $$$n$$$ and house $$$1$$$. All roads are bidirectional. However, due to the crisis on Penacony, the overseeing family has gone into debt and may not be able to maintain all roads.There are $$$m$$$ pairs of friendships between the residents of Penacony. If the resident living in house $$$a$$$ is friends with the resident living in house $$$b$$$, there must be a path between houses $$$a$$$ and $$$b$$$ through maintained roads. What is the minimum number of roads that must be maintained?"
  },
  {
    "title": "Bomb",
    "url": "https://codeforces.com/problemset/problem/1996/F",
    "description": "Sparkle gives you two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$. Initially, your score is $$$0$$$. In one operation, you can choose an integer $$$i$$$ and add $$$a_i$$$ to your score. Then, you must set $$$a_i$$$ = $$$\\max(0, a_i - b_i)$$$.You only have time to perform $$$k$$$ operations before Sparkle sets off a nuclear bomb! What is the maximum score you can acquire after $$$k$$$ operations?"
  },
  {
    "title": "Decode",
    "url": "https://codeforces.com/problemset/problem/1996/E",
    "description": "In a desperate attempt to obtain your waifu favorite character, you have hacked into the source code of the game. After days of struggling, you finally find the binary string that encodes the gacha system of the game. In order to decode it, you must first solve the following problem. You are given a binary string $$$s$$$ of length $$$n$$$. For each pair of integers $$$(l, r)$$$ $$$(1 \\leq l \\leq r \\leq n)$$$, count the number of pairs $$$(x, y)$$$ $$$(l \\leq x \\leq y \\leq r)$$$ such that the amount of $$$\\mathtt{0}$$$ equals the amount of $$$\\mathtt{1}$$$ in the substring $$$s_xs_{x+1}...s_y$$$. Output the sum of counts over all possible $$$(l, r)$$$ modulo $$$10^9+7$$$."
  },
  {
    "title": "Fun",
    "url": "https://codeforces.com/problemset/problem/1996/D",
    "description": "Counting is Fun!— satyam343Given two integers $$$n$$$ and $$$x$$$, find the number of triplets ($$$a,b,c$$$) of positive integers such that $$$ab + ac + bc \\le n$$$ and $$$a + b + c \\le x$$$. Note that order matters (e.g. ($$$1, 1, 2$$$) and ($$$1, 2, 1$$$) are treated as different) and $$$a$$$, $$$b$$$, $$$c$$$ must be strictly greater than $$$0$$$."
  },
  {
    "title": "Sort",
    "url": "https://codeforces.com/problemset/problem/1996/C",
    "description": "You are given two strings $$$a$$$ and $$$b$$$ of length $$$n$$$. Then, you are (forced against your will) to answer $$$q$$$ queries.For each query, you are given a range bounded by $$$l$$$ and $$$r$$$. In one operation, you can choose an integer $$$i$$$ ($$$l \\leq i \\leq r$$$) and set $$$a_i = x$$$ where $$$x$$$ is any character you desire. Output the minimum number of operations you must perform such that $$$\\texttt{sorted(a[l..r])} = \\texttt{sorted(b[l..r])}$$$. The operations you perform on one query does not affect other queries.For an arbitrary string $$$c$$$, $$$\\texttt{sorted(c[l..r])}$$$ denotes the substring consisting of characters $$$c_l, c_{l+1}, ... , c_r$$$ sorted in lexicographical order."
  },
  {
    "title": "Scale",
    "url": "https://codeforces.com/problemset/problem/1996/B",
    "description": "Tina has a square grid with $$$n$$$ rows and $$$n$$$ columns. Each cell in the grid is either $$$0$$$ or $$$1$$$. Tina wants to reduce the grid by a factor of $$$k$$$ ($$$k$$$ is a divisor of $$$n$$$). To do this, Tina splits the grid into $$$k \\times k$$$ nonoverlapping blocks of cells such that every cell belongs to exactly one block.Tina then replaces each block of cells with a single cell equal to the value of the cells in the block. It is guaranteed that every cell in the same block has the same value. For example, the following demonstration shows a grid being reduced by factor of $$$3$$$. Original grid $$$0$$$$$$0$$$$$$0$$$$$$1$$$$$$1$$$$$$1$$$$$$0$$$$$$0$$$$$$0$$$$$$1$$$$$$1$$$$$$1$$$$$$0$$$$$$0$$$$$$0$$$$$$1$$$$$$1$$$$$$1$$$$$$1$$$$$$1$$$$$$1$$$$$$0$$$$$$0$$$$$$0$$$$$$1$$$$$$1$$$$$$1$$$$$$0$$$$$$0$$$$$$0$$$$$$1$$$$$$1$$$$$$1$$$$$$0$$$$$$0$$$$$$0$$$  Reduced grid $$$0$$$$$$1$$$$$$1$$$$$$0$$$ Help Tina reduce the grid by a factor of $$$k$$$."
  },
  {
    "title": "Legs",
    "url": "https://codeforces.com/problemset/problem/1996/A",
    "description": "It's another beautiful day on Farmer John's farm.After Farmer John arrived at his farm, he counted $$$n$$$ legs. It is known only chickens and cows live on the farm, and a chicken has $$$2$$$ legs while a cow has $$$4$$$. What is the minimum number of animals Farmer John can have on his farm assuming he counted the legs of all animals? "
  },
  {
    "title": "Let Me Teach You a Lesson (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1995/E2",
    "description": "This is the hard version of a problem. The only difference between an easy and a hard version is the constraints on $$$t$$$ and $$$n$$$. You can make hacks only if both versions of the problem are solved.Arthur is giving a lesson to his famous $$$2 n$$$ knights. Like any other students, they're sitting at the desks in pairs, but out of habit in a circle. The knight $$$2 i - 1$$$ is sitting at the desk with the knight $$$2 i$$$.Each knight has intelligence, which can be measured by an integer. Let's denote the intelligence of the $$$i$$$-th knight as $$$a_i$$$. Arthur wants the maximal difference in total intelligence over all pairs of desks to be as small as possible. More formally, he wants to minimize $$$\\max\\limits_{1 \\le i \\le n} (a_{2 i - 1} + a_{2 i}) - \\min\\limits_{1 \\le i \\le n} (a_{2 i - 1} + a_{2 i})$$$.However, the Code of Chivalry only allows swapping the opposite knights in the circle, i.e., Arthur can simultaneously perform $$$a_i := a_{i + n}$$$, $$$a_{i + n} := a_i$$$ for any $$$1 \\le i \\le n$$$. Arthur can make any number of such swaps. What is the best result he can achieve?"
  },
  {
    "title": "Let Me Teach You a Lesson (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1995/E1",
    "description": "This is the easy version of a problem. The only difference between an easy and a hard version is the constraints on $$$t$$$ and $$$n$$$. You can make hacks only if both versions of the problem are solved.Arthur is giving a lesson to his famous $$$2 n$$$ knights. Like any other students, they're sitting at the desks in pairs, but out of habit in a circle. The knight $$$2 i - 1$$$ is sitting at the desk with the knight $$$2 i$$$.Each knight has intelligence, which can be measured by an integer. Let's denote the intelligence of the $$$i$$$-th knight as $$$a_i$$$. Arthur wants the maximal difference in total intelligence over all pairs of desks to be as small as possible. More formally, he wants to minimize $$$\\max\\limits_{1 \\le i \\le n} (a_{2 i - 1} + a_{2 i}) - \\min\\limits_{1 \\le i \\le n} (a_{2 i - 1} + a_{2 i})$$$.However, the Code of Chivalry only allows swapping the opposite knights in the circle, i.e., Arthur can simultaneously perform $$$a_i := a_{i + n}$$$, $$$a_{i + n} := a_i$$$ for any $$$1 \\le i \\le n$$$. Arthur can make any number of such swaps. What is the best result he can achieve?"
  },
  {
    "title": "Cases",
    "url": "https://codeforces.com/problemset/problem/1995/D",
    "description": "You're a linguist studying a mysterious ancient language. You know that   Its words consist only of the first $$$c$$$ letters of the Latin alphabet.  Each word has a case which can be unambiguously determined by its last letter (different letters correspond to different cases). For example, words \"ABACABA\" and \"ABA\" (if they exist) have the same case in this language because they both have the same ending 'A', whereas \"ALICE\" and \"BOB\" have different cases. If the language does not have a case corresponding to some letter, it means that the word cannot end with this letter.  The length of each word is $$$k$$$ or less. You have a single text written in this language. Unfortunately, as the language is really ancient, spaces between words are missing and all letters are uppercase. You wonder what is the minimum number of cases the language can have. Can you find this out?"
  },
  {
    "title": "Squaring",
    "url": "https://codeforces.com/problemset/problem/1995/C",
    "description": "ikrpprpp found an array $$$a$$$ consisting of integers. He likes justice, so he wants to make $$$a$$$ fair — that is, make it non-decreasing. To do that, he can perform an act of justice on an index $$$1 \\le i \\le n$$$ of the array, which will replace $$$a_i$$$ with $$$a_i ^ 2$$$ (the element at position $$$i$$$ with its square). For example, if $$$a = [2,4,3,3,5,3]$$$ and ikrpprpp chooses to perform an act of justice on $$$i = 4$$$, $$$a$$$ becomes $$$[2,4,3,9,5,3]$$$.What is the minimum number of acts of justice needed to make the array non-decreasing?"
  },
  {
    "title": "Bouquet (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1995/B2",
    "description": "This is the hard version of the problem. The only difference is that in this version, instead of listing the number of petals for each flower, the number of petals and the quantity of flowers in the store is set for all types of flowers.A girl is preparing for her birthday and wants to buy the most beautiful bouquet. There are a total of $$$n$$$ different types of flowers in the store, each of which is characterized by the number of petals and the quantity of this type of flower. A flower with $$$k$$$ petals costs $$$k$$$ coins. The girl has decided that the difference in the number of petals between any two flowers she will use to decorate her cake should not exceed one. At the same time, the girl wants to assemble a bouquet with the maximum possible number of petals. Unfortunately, she only has $$$m$$$ coins, and she cannot spend more. What is the maximum total number of petals she can assemble in the bouquet?"
  },
  {
    "title": "Bouquet (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1995/B1",
    "description": "This is the easy version of the problem. The only difference is that in this version, the flowers are specified by enumeration.A girl is preparing for her birthday and wants to buy the most beautiful bouquet. There are a total of $$$n$$$ flowers in the store, each of which is characterized by the number of petals, and a flower with $$$k$$$ petals costs $$$k$$$ coins. The girl has decided that the difference in the number of petals between any two flowers she will use in her bouquet should not exceed one. At the same time, the girl wants to assemble a bouquet with the maximum possible number of petals. Unfortunately, she only has $$$m$$$ coins, and she cannot spend more. What is the maximum total number of petals she can assemble in the bouquet?"
  },
  {
    "title": "Diagonals",
    "url": "https://codeforces.com/problemset/problem/1995/A",
    "description": "Vitaly503 is given a checkered board with a side of $$$n$$$ and $$$k$$$ chips. He realized that all these $$$k$$$ chips need to be placed on the cells of the board (no more than one chip can be placed on a single cell).Let's denote the cell in the $$$i$$$-th row and $$$j$$$-th column as $$$(i ,j)$$$. A diagonal is the set of cells for which the value $$$i + j$$$ is the same. For example, cells $$$(3, 1)$$$, $$$(2, 2)$$$, and $$$(1, 3)$$$ lie on the same diagonal, but $$$(1, 2)$$$ and $$$(2, 3)$$$ do not. A diagonal is called occupied if it contains at least one chip. Determine what is the minimum possible number of occupied diagonals among all placements of $$$k$$$ chips."
  },
  {
    "title": "Fortnite",
    "url": "https://codeforces.com/problemset/problem/1994/H",
    "description": "This is an interactive problem!Timofey is writing a competition called Capture the Flag (or CTF for short). He has one task left, which involves hacking a security system. The entire system is based on polynomial hashes$$$^{\\text{∗}}$$$.Timofey can input a string consisting of lowercase Latin letters into the system, and the system will return its polynomial hash. To hack the system, Timofey needs to find the polynomial hash parameters ($$$p$$$ and $$$m$$$) that the system uses.Timofey doesn't have much time left, so he will only be able to make $$$3$$$ queries. Help him solve the task.$$$^{\\text{∗}}$$$ The polynomial hash of a string $$$s$$$, consisting of lowercase Latin letters of length $$$n$$$, based on $$$p$$$ and modulo $$$m$$$ is $$$(\\mathrm{ord}(s_1) \\cdot p ^ 0 + \\mathrm{ord}(s_2) \\cdot p ^ 1 + \\mathrm{ord}(s_3) \\cdot p ^ 2 + \\ldots + \\mathrm{ord}(s_n) \\cdot p ^ {n - 1}) \\bmod m$$$. Where $$$s_i$$$ denotes the $$$i$$$-th character of the string $$$s$$$, $$$\\mathrm{ord}(\\mathrm{chr})$$$ denotes the ordinal number of the character $$$\\mathrm{chr}$$$ in the English alphabet, and $$$x \\bmod m$$$ is the remainder of $$$x$$$ when divided by $$$m$$$."
  },
  {
    "title": "Minecraft",
    "url": "https://codeforces.com/problemset/problem/1994/G",
    "description": "After winning another Bed Wars game, Masha and Olya wanted to relax and decided to play a new game. Masha gives Olya an array $$$a$$$ of length $$$n$$$ and a number $$$s$$$. Now Olya's task is to find a non-negative number $$$x$$$ such that $$$\\displaystyle\\sum_{i=1}^{n} a_i \\oplus x = s$$$. But she is very tired after a tight round, so please help her with this.But this task seemed too simple to them, so they decided to make the numbers larger (up to $$$2^k$$$) and provide you with their binary representation."
  },
  {
    "title": "Stardew Valley",
    "url": "https://codeforces.com/problemset/problem/1994/F",
    "description": "Pelican Town represents $$$n$$$ houses connected by $$$m$$$ bidirectional roads. Some roads have NPCs standing on them. Farmer Buba needs to walk on each road with an NPC and talk to them.Help the farmer find a route satisfying the following properties:   The route starts at some house, follows the roads, and ends at the same house.  The route does not follow any road more than once (in both directions together).  The route follows each road with an NPC exactly once.  Note that the route can follow roads without NPCs, and you do not need to minimize the length of the route.It is guaranteed that you can reach any house from any other by walking on the roads with NPCs only."
  },
  {
    "title": "Wooden Game",
    "url": "https://codeforces.com/problemset/problem/1994/E",
    "description": "You are given a forest of $$$k$$$ rooted trees$$$^{\\text{∗}}$$$. Lumberjack Timofey wants to cut down the entire forest by applying the following operation:   Select a subtree$$$^{\\text{†}}$$$ of any vertex of one of the trees and remove it from the tree. Timofey loves bitwise operations, so he wants the bitwise OR of the sizes of the subtrees he removed to be maximum. Help him and find the maximum result he can obtain.$$$^{\\text{∗}}$$$ A tree is a connected graph without cycles, loops, or multiple edges. In a rooted tree, a selected vertex is called a root. A forest is a collection of one or more trees.$$$^{\\text{†}}$$$ The subtree of a vertex $$$v$$$ is the set of vertices for which $$$v$$$ lies on the shortest path from this vertex to the root, including $$$v$$$ itself."
  },
  {
    "title": "Funny Game",
    "url": "https://codeforces.com/problemset/problem/1994/D",
    "description": "Vanya has a graph with $$$n$$$ vertices (numbered from $$$1$$$ to $$$n$$$) and an array $$$a$$$ of $$$n$$$ integers; initially, there are no edges in the graph. Vanya got bored, and to have fun, he decided to perform $$$n - 1$$$ operations.Operation number $$$x$$$ (operations are numbered in order starting from $$$1$$$) is as follows:  Choose $$$2$$$ different numbers $$$1 \\leq u,v \\leq n$$$, such that $$$|a_u - a_v|$$$ is divisible by $$$x$$$.  Add an undirected edge between vertices $$$u$$$ and $$$v$$$ to the graph. Help Vanya get a connected$$$^{\\text{∗}}$$$ graph using the $$$n - 1$$$ operations, or determine that it is impossible.$$$^{\\text{∗}}$$$A graph is called connected if it is possible to reach any vertex from any other by moving along the edges."
  },
  {
    "title": "Hungry Games",
    "url": "https://codeforces.com/problemset/problem/1994/C",
    "description": "Yaroslav is playing a computer game, and at one of the levels, he encountered $$$n$$$ mushrooms arranged in a row. Each mushroom has its own level of toxicity; the $$$i$$$-th mushroom from the beginning has a toxicity level of $$$a_i$$$. Yaroslav can choose two integers $$$1 \\le l \\le r \\le n$$$, and then his character will take turns from left to right to eat mushrooms from this subsegment one by one, i.e., the mushrooms with numbers $$$l, l+1, l+2, \\ldots, r$$$.The character has a toxicity level $$$g$$$, initially equal to $$$0$$$. The computer game is defined by the number $$$x$$$ — the maximum toxicity level at any given time. When eating a mushroom with toxicity level $$$k$$$, the following happens:  The toxicity level of the character is increased by $$$k$$$.  If $$$g \\leq x$$$, the process continues; otherwise, $$$g$$$ becomes zero and the process continues. Yaroslav became interested in how many ways there are to choose the values of $$$l$$$ and $$$r$$$ such that the final value of $$$g$$$ is not zero. Help Yaroslav find this number!"
  },
  {
    "title": "Fun Game",
    "url": "https://codeforces.com/problemset/problem/1994/B",
    "description": "Vova really loves the XOR operation (denoted as $$$\\oplus$$$). Recently, when he was going to sleep, he came up with a fun game.At the beginning of the game, Vova chooses two binary sequences $$$s$$$ and $$$t$$$ of length $$$n$$$ and gives them to Vanya. A binary sequence is a sequence consisting only of the numbers $$$0$$$ and $$$1$$$. Vanya can choose integers $$$l, r$$$ such that $$$1 \\leq l \\leq r \\leq n$$$, and for all $$$l \\leq i \\leq r$$$ simultaneously replace $$$s_i$$$ with $$$s_i \\oplus s_{i - l + 1}$$$, where $$$s_i$$$ is the $$$i$$$-th element of the sequence $$$s$$$.In order for the game to be interesting, there must be a possibility to win. Vanya wins if, with an unlimited number of actions, he can obtain the sequence $$$t$$$ from the sequence $$$s$$$. Determine if the game will be interesting for the sequences $$$s$$$ and $$$t$$$."
  },
  {
    "title": "Diverse Game",
    "url": "https://codeforces.com/problemset/problem/1994/A",
    "description": "Petr, watching Sergey's stream, came up with a matrix $$$a$$$, consisting of $$$n$$$ rows and $$$m$$$ columns (the number in the $$$i$$$-th row and $$$j$$$-th column is denoted as $$$a_{i, j}$$$), which contains all integers from $$$1$$$ to $$$n \\cdot m$$$. But he didn't like the arrangement of the numbers, and now he wants to come up with a new matrix $$$b$$$, consisting of $$$n$$$ rows and $$$m$$$ columns, which will also contain all integers from $$$1$$$ to $$$n \\cdot m$$$, such that for any $$$1 \\leq i \\leq n, 1 \\leq j \\leq m$$$ it holds that $$$a_{i, j} \\ne b_{i, j}$$$.You are given the matrix $$$a$$$, construct any matrix $$$b$$$ that meets Petr's requirements, or determine that it is impossible.Hurry up! Otherwise, he will donate all his money to the stream in search of an answer to his question."
  },
  {
    "title": "Dyn-scripted Robot (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1993/F2",
    "description": "This is the hard version of the problem. The only difference is that in this version $$$k \\le 10^{12}$$$. You can make hacks only if both versions of the problem are solved.Given a $$$w \\times h$$$ rectangle on the $$$Oxy$$$ plane, with points $$$(0, 0)$$$ at the bottom-left and $$$(w, h)$$$ at the top-right of the rectangle.You also have a robot initially at point $$$(0, 0)$$$ and a script $$$s$$$ of $$$n$$$ characters. Each character is either L, R, U, or D, which tells the robot to move left, right, up, or down respectively.The robot can only move inside the rectangle; otherwise, it will change the script $$$s$$$ as follows:  If it tries to move outside a vertical border, it changes all L characters to R's (and vice versa, all R's to L's).  If it tries to move outside a horizontal border, it changes all U characters to D's (and vice versa, all D's to U's). Then, it will execute the changed script starting from the character which it couldn't execute.  An example of the robot's movement process, $$$s = \\texttt{\"ULULURD\"}$$$ The script $$$s$$$ will be executed for $$$k$$$ times continuously. All changes to the string $$$s$$$ will be retained even when it is repeated. During this process, how many times will the robot move to the point $$$(0, 0)$$$ in total? Note that the initial position does NOT count."
  },
  {
    "title": "Dyn-scripted Robot (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1993/F1",
    "description": "This is the easy version of the problem. The only difference is that in this version $$$k \\le n$$$. You can make hacks only if both versions of the problem are solved.Given a $$$w \\times h$$$ rectangle on the $$$Oxy$$$ plane, with points $$$(0, 0)$$$ at the bottom-left and $$$(w, h)$$$ at the top-right of the rectangle.You also have a robot initially at point $$$(0, 0)$$$ and a script $$$s$$$ of $$$n$$$ characters. Each character is either L, R, U, or D, which tells the robot to move left, right, up, or down respectively.The robot can only move inside the rectangle; otherwise, it will change the script $$$s$$$ as follows:  If it tries to move outside a vertical border, it changes all L characters to R's (and vice versa, all R's to L's).  If it tries to move outside a horizontal border, it changes all U characters to D's (and vice versa, all D's to U's). Then, it will execute the changed script starting from the character which it couldn't execute.  An example of the robot's movement process, $$$s = \\texttt{\"ULULURD\"}$$$ The script $$$s$$$ will be executed for $$$k$$$ times continuously. All changes to the string $$$s$$$ will be retained even when it is repeated. During this process, how many times will the robot move to the point $$$(0, 0)$$$ in total? Note that the initial position does NOT count."
  },
  {
    "title": "Xor-Grid Problem",
    "url": "https://codeforces.com/problemset/problem/1993/E",
    "description": "Given a matrix $$$a$$$ of size $$$n \\times m$$$, each cell of which contains a non-negative integer. The integer lying at the intersection of the $$$i$$$-th row and the $$$j$$$-th column of the matrix is called $$$a_{i,j}$$$.Let's define $$$f(i)$$$ and $$$g(j)$$$ as the XOR of all integers in the $$$i$$$-th row and the $$$j$$$-th column, respectively. In one operation, you can either:   Select any row $$$i$$$, then assign $$$a_{i,j} := g(j)$$$ for each $$$1 \\le j \\le m$$$; or  Select any column $$$j$$$, then assign $$$a_{i,j} := f(i)$$$ for each $$$1 \\le i \\le n$$$.   An example of applying an operation on column $$$2$$$ of the matrix. In this example, as we apply an operation on column $$$2$$$, all elements in this column are changed:   $$$a_{1,2} := f(1) = a_{1,1} \\oplus a_{1,2} \\oplus a_{1,3} \\oplus a_{1,4} = 1 \\oplus 1 \\oplus 1 \\oplus 1 = 0$$$  $$$a_{2,2} := f(2) = a_{2,1} \\oplus a_{2,2} \\oplus a_{2,3} \\oplus a_{2,4} = 2 \\oplus 3 \\oplus 5 \\oplus 7 = 3$$$  $$$a_{3,2} := f(3) = a_{3,1} \\oplus a_{3,2} \\oplus a_{3,3} \\oplus a_{3,4} = 2 \\oplus 0 \\oplus 3 \\oplus 0 = 1$$$  $$$a_{4,2} := f(4) = a_{4,1} \\oplus a_{4,2} \\oplus a_{4,3} \\oplus a_{4,4} = 10 \\oplus 11 \\oplus 12 \\oplus 16 = 29$$$ You can apply the operations any number of times. Then, we calculate the $$$\\textit{beauty}$$$ of the final matrix by summing the absolute differences between all pairs of its adjacent cells.More formally, $$$\\textit{beauty}(a) = \\sum|a_{x,y} - a_{r,c}|$$$ for all cells $$$(x, y)$$$ and $$$(r, c)$$$ if they are adjacent. Two cells are considered adjacent if they share a side.Find the minimum $$$\\textit{beauty}$$$ among all obtainable matrices."
  },
  {
    "title": "Med-imize",
    "url": "https://codeforces.com/problemset/problem/1993/D",
    "description": "Given two positive integers $$$n$$$ and $$$k$$$, and another array $$$a$$$ of $$$n$$$ integers.In one operation, you can select any subarray of size $$$k$$$ of $$$a$$$, then remove it from the array without changing the order of other elements. More formally, let $$$(l, r)$$$ be an operation on subarray $$$a_l, a_{l+1}, \\ldots, a_r$$$ such that $$$r-l+1=k$$$, then performing this operation means replacing $$$a$$$ with $$$[a_1, \\ldots, a_{l-1}, a_{r+1}, \\ldots, a_n]$$$.For example, if $$$a=[1,2,3,4,5]$$$ and we perform operation $$$(3,5)$$$ on this array, it will become $$$a=[1,2]$$$. Moreover, operation $$$(2, 4)$$$ results in $$$a=[1,5]$$$, and operation $$$(1,3)$$$ results in $$$a=[4,5]$$$. You have to repeat the operation while the length of $$$a$$$ is greater than $$$k$$$ (which means $$$|a| \\gt k$$$). What is the largest possible median$$$^\\dagger$$$ of all remaining elements of the array $$$a$$$ after the process?$$$^\\dagger$$$The median of an array of length $$$n$$$ is the element whose index is $$$\\left \\lfloor (n+1)/2 \\right \\rfloor$$$ after we sort the elements in non-decreasing order. For example: $$$median([2,1,5,4,3]) = 3$$$, $$$median([5]) = 5$$$, and $$$median([6,8,2,4]) = 4$$$."
  },
  {
    "title": "Light Switches",
    "url": "https://codeforces.com/problemset/problem/1993/C",
    "description": "There is an apartment consisting of $$$n$$$ rooms, each with its light initially turned off.To control the lights in these rooms, the owner of the apartment decided to install chips in the rooms so that each room has exactly one chip, and the chips are installed at different times. Specifically, these times are represented by the array $$$a_1, a_2, \\ldots, a_n$$$, where $$$a_i$$$ is the time (in minutes) at which a chip is installed in the $$$i$$$-th room.As soon as a chip is installed, it changes the room's light status every $$$k$$$ minutes — it turns on the light for $$$k$$$ minutes, then turns it off for the next $$$k$$$ minutes, then turns it back on for the next $$$k$$$ minutes, and so on. In other words, the light status is changed by the chip at minute $$$a_i$$$, $$$a_i + k$$$, $$$a_i + 2k$$$, $$$a_i + 3k$$$, $$$\\ldots$$$ for the $$$i$$$-th room.What is the earliest moment when all rooms in the apartment have their lights turned on?"
  },
  {
    "title": "Parity and Sum",
    "url": "https://codeforces.com/problemset/problem/1993/B",
    "description": "Given an array $$$a$$$ of $$$n$$$ positive integers.In one operation, you can pick any pair of indexes $$$(i, j)$$$ such that $$$a_i$$$ and $$$a_j$$$ have distinct parity, then replace the smaller one with the sum of them. More formally:   If $$$a_i < a_j$$$, replace $$$a_i$$$ with $$$a_i + a_j$$$;  Otherwise, replace $$$a_j$$$ with $$$a_i + a_j$$$. Find the minimum number of operations needed to make all elements of the array have the same parity."
  },
  {
    "title": "Question Marks",
    "url": "https://codeforces.com/problemset/problem/1993/A",
    "description": "Tim is doing a test consisting of $$$4n$$$ questions; each question has $$$4$$$ options: 'A', 'B', 'C', and 'D'. For each option, there are exactly $$$n$$$ correct answers corresponding to that option — meaning there are $$$n$$$ questions with the answer 'A', $$$n$$$ questions with the answer 'B', $$$n$$$ questions with the answer 'C', and $$$n$$$ questions with the answer 'D'.For each question, Tim wrote his answer on the answer sheet. If he could not figure out the answer, he would leave a question mark '?' for that question.You are given his answer sheet of $$$4n$$$ characters. What is the maximum number of correct answers Tim can get?"
  },
  {
    "title": "Ultra-Meow",
    "url": "https://codeforces.com/problemset/problem/1992/G",
    "description": "K1o0n gave you an array $$$a$$$ of length $$$n$$$, consisting of numbers $$$1, 2, \\ldots, n$$$. Accept it? Of course! But what to do with it? Of course, calculate $$$\\text{MEOW}(a)$$$.Let $$$\\text{MEX}(S, k)$$$ be the $$$k$$$-th positive (strictly greater than zero) integer in ascending order that is not present in the set $$$S$$$. Denote $$$\\text{MEOW}(a)$$$ as the sum of $$$\\text{MEX}(b, |b| + 1)$$$, over all distinct subsets $$$b$$$ of the array $$$a$$$.Examples of $$$\\text{MEX}(S, k)$$$ values for sets:   $$$\\text{MEX}(\\{3,2\\}, 1) = 1$$$, because $$$1$$$ is the first positive integer not present in the set;  $$$\\text{MEX}(\\{4,2,1\\}, 2) = 5$$$, because the first two positive integers not present in the set are $$$3$$$ and $$$5$$$;  $$$\\text{MEX}(\\{\\}, 4) = 4$$$, because there are no numbers in the empty set, so the first $$$4$$$ positive integers not present in it are $$$1, 2, 3, 4$$$. "
  },
  {
    "title": "Valuable Cards",
    "url": "https://codeforces.com/problemset/problem/1992/F",
    "description": "In his favorite cafe Kmes once again wanted to try the herring under a fur coat. Previously, it would not have been difficult for him to do this, but the cafe recently introduced a new purchasing policy.Now, in order to make a purchase, Kmes needs to solve the following problem: $$$n$$$ cards with prices for different positions are laid out in front of him, on the $$$i$$$-th card there is an integer $$$a_i$$$, among these prices there is no whole positive integer $$$x$$$.Kmes is asked to divide these cards into the minimum number of bad segments (so that each card belongs to exactly one segment). A segment is considered bad if it is impossible to select a subset of cards with a product equal to $$$x$$$. All segments, in which Kmes will divide the cards, must be bad.Formally, the segment $$$(l, r)$$$ is bad if there are no indices $$$i_1 < i_2 < \\ldots < i_k$$$ such that $$$l \\le i_1, i_k \\le r$$$, and $$$a_{i_1} \\cdot a_{i_2} \\ldots \\cdot a_{i_k} = x$$$.Help Kmes determine the minimum number of bad segments in order to enjoy his favorite dish."
  },
  {
    "title": "Novice's Mistake",
    "url": "https://codeforces.com/problemset/problem/1992/E",
    "description": "One of the first programming problems by K1o0n looked like this: \"Noobish_Monk has $$$n$$$ $$$(1 \\le n \\le 100)$$$ friends. Each of them gave him $$$a$$$ $$$(1 \\le a \\le 10000)$$$ apples for his birthday. Delighted with such a gift, Noobish_Monk returned $$$b$$$ $$$(1 \\le b \\le \\min(10000, a \\cdot n))$$$ apples to his friends. How many apples are left with Noobish_Monk?\"K1o0n wrote a solution, but accidentally considered the value of $$$n$$$ as a string, so the value of $$$n \\cdot a - b$$$ was calculated differently. Specifically:   when multiplying the string $$$n$$$ by the integer $$$a$$$, he will get the string $$$s=\\underbrace{n + n + \\dots + n + n}_{a\\ \\text{times}}$$$  when subtracting the integer $$$b$$$ from the string $$$s$$$, the last $$$b$$$ characters will be removed from it. If $$$b$$$ is greater than or equal to the length of the string $$$s$$$, it will become empty. Learning about this, ErnKor became interested in how many pairs $$$(a, b)$$$ exist for a given $$$n$$$, satisfying the constraints of the problem, on which K1o0n's solution gives the correct answer.\"The solution gives the correct answer\" means that it outputs a non-empty string, and this string, when converted to an integer, equals the correct answer, i.e., the value of $$$n \\cdot a - b$$$."
  },
  {
    "title": "Test of Love",
    "url": "https://codeforces.com/problemset/problem/1992/D",
    "description": "ErnKor is ready to do anything for Julen, even to swim through crocodile-infested swamps. We decided to test this love. ErnKor will have to swim across a river with a width of $$$1$$$ meter and a length of $$$n$$$ meters.The river is very cold. Therefore, in total (that is, throughout the entire swim from $$$0$$$ to $$$n+1$$$) ErnKor can swim in the water for no more than $$$k$$$ meters. For the sake of humanity, we have added not only crocodiles to the river, but also logs on which he can jump. Our test is as follows:Initially, ErnKor is on the left bank and needs to reach the right bank. They are located at the $$$0$$$ and $$$n+1$$$ meters respectively. The river can be represented as $$$n$$$ segments, each with a length of $$$1$$$ meter. Each segment contains either a log 'L', a crocodile 'C', or just water 'W'. ErnKor can move as follows:   If he is on the surface (i.e., on the bank or on a log), he can jump forward for no more than $$$m$$$ ($$$1 \\le m \\le 10$$$) meters (he can jump on the bank, on a log, or in the water).  If he is in the water, he can only swim to the next river segment (or to the bank if he is at the $$$n$$$-th meter).  ErnKor cannot land in a segment with a crocodile in any way. Determine if ErnKor can reach the right bank."
  },
  {
    "title": "Gorilla and Permutation",
    "url": "https://codeforces.com/problemset/problem/1992/C",
    "description": "Gorilla and Noobish_Monk found three numbers $$$n$$$, $$$m$$$, and $$$k$$$ ($$$m < k$$$). They decided to construct a permutation$$$^{\\dagger}$$$ of length $$$n$$$.For the permutation, Noobish_Monk came up with the following function: $$$g(i)$$$ is the sum of all the numbers in the permutation on a prefix of length $$$i$$$ that are not greater than $$$m$$$. Similarly, Gorilla came up with the function $$$f$$$, where $$$f(i)$$$ is the sum of all the numbers in the permutation on a prefix of length $$$i$$$ that are not less than $$$k$$$. A prefix of length $$$i$$$ is a subarray consisting of the first $$$i$$$ elements of the original array.For example, if $$$n = 5$$$, $$$m = 2$$$, $$$k = 5$$$, and the permutation is $$$[5, 3, 4, 1, 2]$$$, then:  $$$f(1) = 5$$$, because $$$5 \\ge 5$$$; $$$g(1) = 0$$$, because $$$5 > 2$$$;  $$$f(2) = 5$$$, because $$$3 < 5$$$; $$$g(2) = 0$$$, because $$$3 > 2$$$;  $$$f(3) = 5$$$, because $$$4 < 5$$$; $$$g(3) = 0$$$, because $$$4 > 2$$$;  $$$f(4) = 5$$$, because $$$1 < 5$$$; $$$g(4) = 1$$$, because $$$1 \\le 2$$$;  $$$f(5) = 5$$$, because $$$2 < 5$$$; $$$g(5) = 1 + 2 = 3$$$, because $$$2 \\le 2$$$. Help them find a permutation for which the value of $$$\\left(\\sum_{i=1}^n f(i) - \\sum_{i=1}^n g(i)\\right)$$$ is maximized.$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation (as $$$2$$$ appears twice in the array) and $$$[1,3,4]$$$ is also not a permutation (as $$$n=3$$$, but $$$4$$$ appears in the array)."
  },
  {
    "title": "Angry Monk",
    "url": "https://codeforces.com/problemset/problem/1992/B",
    "description": "To celebrate his recovery, k1o0n has baked an enormous $$$n$$$ metres long potato casserole.Turns out, Noobish_Monk just can't stand potatoes, so he decided to ruin k1o0n's meal. He has cut it into $$$k$$$ pieces, of lengths $$$a_1, a_2, \\dots, a_k$$$ meters.k1o0n wasn't keen on that. Luckily, everything can be fixed. In order to do that, k1o0n can do one of the following operations:   Pick a piece with length $$$a_i \\ge 2$$$ and divide it into two pieces with lengths $$$1$$$ and $$$a_i - 1$$$. As a result, the number of pieces will increase by $$$1$$$;  Pick a slice $$$a_i$$$ and another slice with length $$$a_j=1$$$ ($$$i \\ne j$$$) and merge them into one piece with length $$$a_i+1$$$. As a result, the number of pieces will decrease by $$$1$$$. Help k1o0n to find the minimum number of operations he needs to do in order to merge the casserole into one piece with length $$$n$$$.For example, if $$$n=5$$$, $$$k=2$$$ and $$$a = [3, 2]$$$, it is optimal to do the following:  Divide the piece with length $$$2$$$ into two pieces with lengths $$$2-1=1$$$ and $$$1$$$, as a result $$$a = [3, 1, 1]$$$.  Merge the piece with length $$$3$$$ and the piece with length $$$1$$$, as a result $$$a = [4, 1]$$$.  Merge the piece with length $$$4$$$ and the piece with length $$$1$$$, as a result $$$a = [5]$$$."
  },
  {
    "title": "Only Pluses",
    "url": "https://codeforces.com/problemset/problem/1992/A",
    "description": "Kmes has written three integers $$$a$$$, $$$b$$$ and $$$c$$$ in order to remember that he has to give Noobish_Monk $$$a \\times b \\times c$$$ bananas.Noobish_Monk has found these integers and decided to do the following at most $$$5$$$ times:  pick one of these integers;  increase it by $$$1$$$. For example, if $$$a = 2$$$, $$$b = 3$$$ and $$$c = 4$$$, then one can increase $$$a$$$ three times by one and increase $$$b$$$ two times. After that $$$a = 5$$$, $$$b = 5$$$, $$$c = 4$$$. Then the total number of bananas will be $$$5 \\times 5 \\times 4 = 100$$$.What is the maximum value of $$$a \\times b \\times c$$$ Noobish_Monk can achieve with these operations?"
  },
  {
    "title": "Grid Game",
    "url": "https://codeforces.com/problemset/problem/1991/I",
    "description": "This is an interactive problem.You are given a grid with $$$n$$$ rows and $$$m$$$ columns. You need to fill each cell with a unique integer from $$$1$$$ to $$$n \\cdot m$$$.After filling the grid, you will play a game on this grid against the interactor. Players take turns selecting one of the previously unselected cells from the grid, with the interactor going first.On the first turn, the interactor can choose any cell from the grid. After that, any chosen cell must be orthogonally adjacent to at least one previously selected cell. Two cells are considered orthogonally adjacent if they share an edge. The game continues until all cells have been selected.Your goal is to let the sum of numbers in the cells selected by you be strictly less than the sum of numbers in the cells selected by the interactor."
  },
  {
    "title": "Prime Split Game",
    "url": "https://codeforces.com/problemset/problem/1991/H",
    "description": "Alice and Bob are playing a game with $$$n$$$ piles of stones, where the $$$i$$$-th pile has $$$a_i$$$ stones. Players take turns making moves, with Alice going first.On each move, the player does the following three-step process:   Choose an integer $$$k$$$ ($$$1 \\leq k \\leq \\frac n 2$$$). Note that the value of $$$k$$$ can be different for different moves.  Remove $$$k$$$ piles of stones.  Choose another $$$k$$$ piles of stones and split each pile into two piles. The number of stones in each new pile must be a prime number. The player who is unable to make a move loses.Determine who will win if both players play optimally."
  },
  {
    "title": "Grid Reset",
    "url": "https://codeforces.com/problemset/problem/1991/G",
    "description": "You are given a grid consisting of $$$n$$$ rows and $$$m$$$ columns, where each cell is initially white. Additionally, you are given an integer $$$k$$$, where $$$1 \\le k \\le \\min(n, m)$$$.You will process $$$q$$$ operations of two types:   $$$\\mathtt{H}$$$ (horizontal operation) — You choose a $$$1 \\times k$$$ rectangle completely within the grid, where all cells in this rectangle are white. Then, all cells in this rectangle are changed to black.  $$$\\mathtt{V}$$$ (vertical operation) — You choose a $$$k \\times 1$$$ rectangle completely within the grid, where all cells in this rectangle are white. Then, all cells in this rectangle are changed to black. After each operation, if any rows or columns become completely black, all cells in these rows and columns are simultaneously reset to white. Specifically, if all cells in the row and column a cell is contained in become black, all cells in both the row and column will be reset to white.Choose the rectangles in a way that you can perform all given operations, or determine that it is impossible."
  },
  {
    "title": "Triangle Formation",
    "url": "https://codeforces.com/problemset/problem/1991/F",
    "description": "You are given $$$n$$$ sticks, numbered from $$$1$$$ to $$$n$$$. The length of the $$$i$$$-th stick is $$$a_i$$$.You need to answer $$$q$$$ queries. In each query, you are given two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le n$$$, $$$r - l + 1 \\ge 6$$$). Determine whether it is possible to choose $$$6$$$ distinct sticks from the sticks numbered $$$l$$$ to $$$r$$$, to form $$$2$$$ non-degenerate triangles$$$^{\\text{∗}}$$$.$$$^{\\text{∗}}$$$A triangle with side lengths $$$a$$$, $$$b$$$, and $$$c$$$ is called non-degenerate if:   $$$a < b + c$$$,  $$$b < a + c$$$, and  $$$c < a + b$$$. "
  },
  {
    "title": "Coloring Game",
    "url": "https://codeforces.com/problemset/problem/1991/E",
    "description": "This is an interactive problem.Consider an undirected connected graph consisting of $$$n$$$ vertices and $$$m$$$ edges. Each vertex can be colored with one of three colors: $$$1$$$, $$$2$$$, or $$$3$$$. Initially, all vertices are uncolored.Alice and Bob are playing a game consisting of $$$n$$$ rounds. In each round, the following two-step process happens:   Alice chooses two different colors.  Bob chooses an uncolored vertex and colors it with one of the two colors chosen by Alice. Alice wins if there exists an edge connecting two vertices of the same color. Otherwise, Bob wins.You are given the graph. Your task is to decide which player you wish to play as and win the game."
  },
  {
    "title": "Prime XOR Coloring",
    "url": "https://codeforces.com/problemset/problem/1991/D",
    "description": "You are given an undirected graph with $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. There is an edge between vertices $$$u$$$ and $$$v$$$ if and only if $$$u \\oplus v$$$ is a prime number, where $$$\\oplus$$$ denotes the bitwise XOR operator.Color all vertices of the graph using the minimum number of colors, such that no two vertices directly connected by an edge have the same color."
  },
  {
    "title": "Absolute Zero",
    "url": "https://codeforces.com/problemset/problem/1991/C",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers.In one operation, you will perform the following two-step move:   Choose an integer $$$x$$$ ($$$0 \\le x \\le 10^{9}$$$).  Replace each $$$a_i$$$ with $$$|a_i - x|$$$, where $$$|v|$$$ denotes the absolute value of $$$v$$$. For example, by choosing $$$x = 8$$$, the array $$$[5, 7, 10]$$$ will be changed into $$$[|5-8|, |7-8|, |10-8|] = [3,1,2]$$$.Construct a sequence of operations to make all elements of $$$a$$$ equal to $$$0$$$ in at most $$$40$$$ operations or determine that it is impossible. You do not need to minimize the number of operations."
  },
  {
    "title": "AND Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1991/B",
    "description": "You are given an array $$$b$$$ of $$$n - 1$$$ integers.An array $$$a$$$ of $$$n$$$ integers is called good if $$$b_i = a_i \\, \\& \\, a_{i + 1}$$$ for $$$1 \\le i \\le n-1$$$, where $$$\\&$$$ denotes the bitwise AND operator.Construct a good array, or report that no good arrays exist."
  },
  {
    "title": "Maximize the Last Element",
    "url": "https://codeforces.com/problemset/problem/1991/A",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers, where $$$n$$$ is odd.In one operation, you will remove two adjacent elements from the array $$$a$$$, and then concatenate the remaining parts of the array. For example, given the array $$$[4,7,4,2,9]$$$, we can obtain the arrays $$$[4,2,9]$$$ and $$$[4,7,9]$$$ by the operations $$$[\\underline{4,7}, 4,2,9] \\to [4,2,9]$$$ and $$$[4,7,\\underline{4,2},9] \\to [4,7,9]$$$ respectively. However, we cannot obtain the array $$$[7,2,9]$$$ as it requires deleting non-adjacent elements $$$[\\underline{4},7,\\underline{4},2,9]$$$.You will repeatedly perform this operation until exactly one element remains in $$$a$$$.Find the maximum possible value of the remaining element in $$$a$$$."
  },
  {
    "title": "Polygonal Segments",
    "url": "https://codeforces.com/problemset/problem/1990/F",
    "description": "You are given an array $$$a$$$ of size $$$n$$$.A segment $$$[l, r](1 \\le l < r \\le n)$$$ is called a polygonal segment only if the following conditions hold:  $$$(r-l+1) \\geq 3$$$;  Considering $$$a_l, a_{l+1}, \\ldots, a_r$$$ as side lengths, these sides can form a polygon with $$$(r-l+1)$$$ sides. Process $$$q$$$ queries of two types:  \"1 l r\": find the length of the longest segment among all polygonal segments $$$[l_0,r_0]$$$ satisfying $$$l \\le l_0 \\le r_0 \\le r$$$. If there is no such polygonal segment, output $$$-1$$$ instead;  \"2 i x\": assign $$$a_i := x$$$. "
  },
  {
    "title": "Catch the Mole(Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1990/E2",
    "description": "This is the hard version of the problem. The only difference is the limit on the number of queries.This is an interactive problem.You are given a tree of $$$n$$$ nodes with node $$$1$$$ as its root node.There is a hidden mole in one of the nodes. To find its position, you can pick an integer $$$x$$$ ($$$1 \\le x \\le n$$$) to make an inquiry to the jury. Next, the jury will return $$$1$$$ when the mole is in subtree $$$x$$$. Otherwise, the judge will return $$$0$$$. If the judge returns $$$0$$$ and the mole is not in root node $$$1$$$, the mole will move to the parent node of the node it is currently on.Use at most $$$160$$$ operations to find the current node where the mole is located."
  },
  {
    "title": "Catch the Mole(Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1990/E1",
    "description": "This is the easy version of the problem. The only difference is the limit on the number of queries.This is an interactive problem.You are given a tree of $$$n$$$ nodes with node $$$1$$$ as its root node.There is a hidden mole in one of the nodes. To find its position, you can pick an integer $$$x$$$ ($$$1 \\le x \\le n$$$) to make an inquiry to the jury. Next, the jury will return $$$1$$$ when the mole is in subtree $$$x$$$. Otherwise, the judge will return $$$0$$$. If the judge returns $$$0$$$ and the mole is not in root node $$$1$$$, the mole will move to the parent node of the node it is currently on.Use at most $$$300$$$ operations to find the current node where the mole is located."
  },
  {
    "title": "Grid Puzzle",
    "url": "https://codeforces.com/problemset/problem/1990/D",
    "description": "You are given an array $$$a$$$ of size $$$n$$$.There is an $$$n \\times n$$$ grid. In the $$$i$$$-th row, the first $$$a_i$$$ cells are black and the other cells are white. In other words, note $$$(i,j)$$$ as the cell in the $$$i$$$-th row and $$$j$$$-th column, cells $$$(i,1), (i,2), \\ldots, (i,a_i)$$$ are black, and cells $$$(i,a_i+1), \\ldots, (i,n)$$$ are white.You can do the following operations any number of times in any order:   Dye a $$$2 \\times 2$$$ subgrid white;  Dye a whole row white. Note you can not dye a whole column white. Find the minimum number of operations to dye all cells white."
  },
  {
    "title": "Mad MAD Sum",
    "url": "https://codeforces.com/problemset/problem/1990/C",
    "description": "We define the $$$\\operatorname{MAD}$$$ (Maximum Appearing Duplicate) in an array as the largest number that appears at least twice in the array. Specifically, if there is no number that appears at least twice, the $$$\\operatorname{MAD}$$$ value is $$$0$$$.For example, $$$\\operatorname{MAD}([1, 2, 1]) = 1$$$, $$$\\operatorname{MAD}([2, 2, 3, 3]) = 3$$$, $$$\\operatorname{MAD}([1, 2, 3, 4]) = 0$$$.You are given an array $$$a$$$ of size $$$n$$$. Initially, a variable $$$sum$$$ is set to $$$0$$$.The following process will be executed in a sequential loop until all numbers in $$$a$$$ become $$$0$$$:  Set $$$sum := sum + \\sum_{i=1}^{n} a_i$$$;  Let $$$b$$$ be an array of size $$$n$$$. Set $$$b_i :=\\ \\operatorname{MAD}([a_1, a_2, \\ldots, a_i])$$$ for all $$$1 \\le i \\le n$$$, and then set $$$a_i := b_i$$$ for all $$$1 \\le i \\le n$$$. Find the value of $$$sum$$$ after the process."
  },
  {
    "title": "Array Craft",
    "url": "https://codeforces.com/problemset/problem/1990/B",
    "description": "For an array $$$b$$$ of size $$$m$$$, we define: the maximum prefix position of $$$b$$$ is the smallest index $$$i$$$ that satisfies $$$b_1+\\ldots+b_i=\\max_{j=1}^{m}(b_1+\\ldots+b_j)$$$; the maximum suffix position of $$$b$$$ is the largest index $$$i$$$ that satisfies $$$b_i+\\ldots+b_m=\\max_{j=1}^{m}(b_j+\\ldots+b_m)$$$.You are given three integers $$$n$$$, $$$x$$$, and $$$y$$$ ($$$x > y$$$). Construct an array $$$a$$$ of size $$$n$$$ satisfying: $$$a_i$$$ is either $$$1$$$ or $$$-1$$$ for all $$$1 \\le i \\le n$$$; the maximum prefix position of $$$a$$$ is $$$x$$$; the maximum suffix position of $$$a$$$ is $$$y$$$.If there are multiple arrays that meet the conditions, print any. It can be proven that such an array always exists under the given conditions."
  },
  {
    "title": "Submission Bait",
    "url": "https://codeforces.com/problemset/problem/1990/A",
    "description": "Alice and Bob are playing a game in an array $$$a$$$ of size $$$n$$$.They take turns to do operations, with Alice starting first. The player who can not operate will lose. At first, a variable $$$mx$$$ is set to $$$0$$$.In one operation, a player can do: Choose an index $$$i$$$ ($$$1 \\le i \\le n$$$) such that $$$a_{i} \\geq mx$$$ and set $$$mx$$$ to $$$a_{i}$$$. Then, set $$$a_{i}$$$ to $$$0$$$.Determine whether Alice has a winning strategy."
  },
  {
    "title": "Simultaneous Coloring",
    "url": "https://codeforces.com/problemset/problem/1989/F",
    "description": "You are given a matrix, consisting of $$$n$$$ rows and $$$m$$$ columns.You can perform two types of actions on it:   paint the entire column in blue;  paint the entire row in red. Note that you cannot choose which color to paint the row or column.In one second, you can perform either one action or multiple actions at the same time. If you perform one action, it will be free. If you perform $$$k > 1$$$ actions at the same time, it will cost $$$k^2$$$ coins. When multiple actions are performed at the same time, for each cell affected by actions of both types, the color can be chosen independently.You are asked to process $$$q$$$ queries. Before each query, all cells become colorless. Initially, there are no restrictions on the color of any cells. In the $$$i$$$-th query, a restriction of the following form is added:   $$$x_i~y_i~c_i$$$ — the cell in row $$$x_i$$$ in column $$$y_i$$$ should be painted in color $$$c_i$$$. Thus, after $$$i$$$ queries, there are $$$i$$$ restrictions on the required colors of the matrix cells. After each query, output the minimum cost of painting the matrix according to the restrictions."
  },
  {
    "title": "Distance to Different",
    "url": "https://codeforces.com/problemset/problem/1989/E",
    "description": "Consider an array $$$a$$$ of $$$n$$$ integers, where every element is from $$$1$$$ to $$$k$$$, and every integer from $$$1$$$ to $$$k$$$ appears at least once.Let the array $$$b$$$ be constructed as follows: for the $$$i$$$-th element of $$$a$$$, $$$b_i$$$ is the distance to the closest element in $$$a$$$ which is not equal to $$$a_i$$$. In other words, $$$b_i = \\min \\limits_{j \\in [1, n], a_j \\ne a_i} |i - j|$$$.For example, if $$$a = [1, 1, 2, 3, 3, 3, 3, 1]$$$, then $$$b = [2, 1, 1, 1, 2, 2, 1, 1]$$$.Calculate the number of different arrays $$$b$$$ you can obtain if you consider all possible arrays $$$a$$$, and print it modulo $$$998244353$$$."
  },
  {
    "title": "Smithing Skill",
    "url": "https://codeforces.com/problemset/problem/1989/D",
    "description": "You are playing a famous computer game (that just works) where you have various skills you can level up. Today, you focused on the \"Smithing\" skill. Your tactic is obvious: forging weapons from ingots and then melting them back to return the materials partially. For simplicity, every time you create an item, you get 11 experience point, and every time you melt an item, you also get 11 experience point.There are nn classes of weapons you can forge and mm types of metal ingots.You can create one weapon of the ii-th class, spending aia_i ingots of metal of the same type. Melting a weapon of the ii-th class (which you crafted earlier) returns you bib_i ingots of the type of metal it was made of.You have cjc_j metal ingots of the jj-th type, and you know that you can craft a weapon of any class from any metal type. Each combination of a weapon class and a metal type can be used any number of times.What is the maximum total amount of experience you can earn by crafting and melting weapons?"
  },
  {
    "title": "Two Movies",
    "url": "https://codeforces.com/problemset/problem/1989/C",
    "description": "A movie company has released 22 movies. These 22 movies were watched by nn people. For each person, we know their attitude towards the first movie (liked it, neutral, or disliked it) and towards the second movie.If a person is asked to leave a review for the movie, then:   if that person liked the movie, they will leave a positive review, and the movie's rating will increase by 11;  if that person disliked the movie, they will leave a negative review, and the movie's rating will decrease by 11;  otherwise, they will leave a neutral review, and the movie's rating will not change. Every person will review exactly one movie — and for every person, you can choose which movie they will review.The company's rating is the minimum of the ratings of the two movies. Your task is to calculate the maximum possible rating of the company."
  },
  {
    "title": "Substring and Subsequence",
    "url": "https://codeforces.com/problemset/problem/1989/B",
    "description": "You are given two strings $$$a$$$ and $$$b$$$, both consisting of lowercase Latin letters. A subsequence of a string is a string which can be obtained by removing several (possibly zero) characters from the original string. A substring of a string is a contiguous subsequence of that string.For example, consider the string abac:  a, b, c, ab, aa, ac, ba, bc, aba, abc, aac, bac and abac are its subsequences;  a, b, c, ab, ba, ac, aba, bac and abac are its substrings. Your task is to calculate the minimum possible length of the string that contains $$$a$$$ as a substring and $$$b$$$ as a subsequence."
  },
  {
    "title": "Catch the Coin",
    "url": "https://codeforces.com/problemset/problem/1989/A",
    "description": "Monocarp visited a retro arcade club with arcade cabinets. There got curious about the \"Catch the Coin\" cabinet.The game is pretty simple. The screen represents a coordinate grid such that:   the X-axis is directed from left to right;  the Y-axis is directed from bottom to top;  the center of the screen has coordinates $$$(0, 0)$$$. At the beginning of the game, the character is located in the center, and $$$n$$$ coins appear on the screen — the $$$i$$$-th coin is at coordinates $$$(x_i, y_i)$$$. The coordinates of all coins are different and not equal to $$$(0, 0)$$$.In one second, Monocarp can move the character in one of eight directions. If the character is at coordinates $$$(x, y)$$$, then it can end up at any of the coordinates $$$(x, y + 1)$$$, $$$(x + 1, y + 1)$$$, $$$(x + 1, y)$$$, $$$(x + 1, y - 1)$$$, $$$(x, y - 1)$$$, $$$(x - 1, y - 1)$$$, $$$(x - 1, y)$$$, $$$(x - 1, y + 1)$$$.If the character ends up at the coordinates with a coin, then Monocarp collects that coin.After Monocarp makes a move, all coins fall down by $$$1$$$, that is, they move from $$$(x, y)$$$ to $$$(x, y - 1)$$$. You can assume that the game field is infinite in all directions.Monocarp wants to collect at least one coin, but cannot decide which coin to go for. Help him determine, for each coin, whether he can collect it."
  },
  {
    "title": "Heartbeat",
    "url": "https://codeforces.com/problemset/problem/1988/F",
    "description": "For an array $$$u_1, u_2, \\ldots, u_n$$$, define   a prefix maximum as an index $$$i$$$ such that $$$u_i>u_j$$$ for all $$$j<i$$$;  a suffix maximum as an index $$$i$$$ such that $$$u_i>u_j$$$ for all $$$j>i$$$;  an ascent as an index $$$i$$$ ($$$i>1$$$) such that $$$u_i>u_{i-1}$$$. You are given three cost arrays: $$$[a_1, a_2, \\ldots, a_n]$$$, $$$[b_1, b_2, \\ldots, b_n]$$$, and $$$[c_0, c_1, \\ldots, c_{n-1}]$$$.Define the cost of an array that has $$$x$$$ prefix maximums, $$$y$$$ suffix maximums, and $$$z$$$ ascents as $$$a_x\\cdot b_y\\cdot c_z$$$.Let the sum of costs of all permutations of $$$1,2,\\ldots,n$$$ be $$$f(n)$$$. Find $$$f(1)$$$, $$$f(2)$$$, ..., $$$f(n)$$$ modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Range Minimum Sum",
    "url": "https://codeforces.com/problemset/problem/1988/E",
    "description": "For an array $$$[a_1,a_2,\\ldots,a_n]$$$ of length $$$n$$$, define $$$f(a)$$$ as the sum of the minimum element over all subsegments. That is, $$$$$$f(a)=\\sum_{l=1}^n\\sum_{r=l}^n \\min_{l\\le i\\le r}a_i.$$$$$$A permutation is a sequence of integers from $$$1$$$ to $$$n$$$ of length $$$n$$$ containing each number exactly once. You are given a permutation $$$[a_1,a_2,\\ldots,a_n]$$$. For each $$$i$$$, solve the following problem independently:  Erase $$$a_i$$$ from $$$a$$$, concatenating the remaining parts, resulting in $$$b = [a_1,a_2,\\ldots,a_{i-1},\\;a_{i+1},\\ldots,a_{n}]$$$.  Calculate $$$f(b)$$$. "
  },
  {
    "title": "The Omnipotent Monster Killer",
    "url": "https://codeforces.com/problemset/problem/1988/D",
    "description": "You, the monster killer, want to kill a group of monsters. The monsters are on a tree with nn vertices. On vertex with number ii (1≤i≤n1\\le i\\le n), there is a monster with aia_i attack points. You want to battle with monsters for 1010010^{100} rounds. In each round, the following happens in order:  All living monsters attack you. Your health decreases by the sum of attack points of all living monsters.  You select some (possibly all or none) monsters and kill them. After being killed, the monster will not be able to do any attacks in the future. There is a restriction: in one round, you cannot kill two monsters that are directly connected by an edge.If you choose what monsters to attack optimally, what is the smallest health decrement you can have after all rounds?"
  },
  {
    "title": "Increasing Sequence with Fixed OR",
    "url": "https://codeforces.com/problemset/problem/1988/C",
    "description": "You are given a positive integer $$$n$$$. Find the longest sequence of positive integers $$$a=[a_1,a_2,\\ldots,a_k]$$$ that satisfies the following conditions, and print the sequence:  $$$a_i\\le n$$$ for all $$$1\\le i\\le k$$$.  $$$a$$$ is strictly increasing. That is, $$$a_i>a_{i-1}$$$ for all $$$2\\le i\\le k$$$.  $$$a_i\\,|\\,a_{i-1}=n$$$ for all $$$2\\le i\\le k$$$, where $$$|$$$ denotes the bitwise OR operation. "
  },
  {
    "title": "Make Majority",
    "url": "https://codeforces.com/problemset/problem/1988/B",
    "description": "You are given a sequence $$$[a_1,\\ldots,a_n]$$$ where each element $$$a_i$$$ is either $$$0$$$ or $$$1$$$. You can apply several (possibly zero) operations to the sequence. In each operation, you select two integers $$$1\\le l\\le r\\le |a|$$$ (where $$$|a|$$$ is the current length of $$$a$$$) and replace $$$[a_l,\\ldots,a_r]$$$ with a single element $$$x$$$, where $$$x$$$ is the majority of $$$[a_l,\\ldots,a_r]$$$.Here, the majority of a sequence consisting of $$$0$$$ and $$$1$$$ is defined as follows: suppose there are $$$c_0$$$ zeros and $$$c_1$$$ ones in the sequence, respectively.   If $$$c_0\\ge c_1$$$, the majority is $$$0$$$.  If $$$c_0<c_1$$$, the majority is $$$1$$$. For example, suppose $$$a=[1,0,0,0,1,1]$$$. If we select $$$l=1,r=2$$$, the resulting sequence will be $$$[0,0,0,1,1]$$$. If we select $$$l=4,r=6$$$, the resulting sequence will be $$$[1,0,0,1]$$$. Determine if you can make $$$a=[1]$$$ with a finite number of operations."
  },
  {
    "title": "Split the Multiset",
    "url": "https://codeforces.com/problemset/problem/1988/A",
    "description": "A multiset is a set of numbers in which there can be equal elements, and the order of the numbers does not matter. For example, $$$\\{2,2,4\\}$$$ is a multiset.You have a multiset $$$S$$$. Initially, the multiset contains only one positive integer $$$n$$$. That is, $$$S=\\{n\\}$$$. Additionally, there is a given positive integer $$$k$$$.In one operation, you can select any positive integer $$$u$$$ in $$$S$$$ and remove one copy of $$$u$$$ from $$$S$$$. Then, insert no more than $$$k$$$ positive integers into $$$S$$$ so that the sum of all inserted integers is equal to $$$u$$$.Find the minimum number of operations to make $$$S$$$ contain $$$n$$$ ones."
  },
  {
    "title": "Fumo Temple",
    "url": "https://codeforces.com/problemset/problem/1987/H",
    "description": "This temple only magnifies the mountain's power.BadelineThis is an interactive problem.You are given two positive integers $$$n$$$ and $$$m$$$ ($$$\\bf{n \\le m}$$$).The jury has hidden from you a rectangular matrix $$$a$$$ with $$$n$$$ rows and $$$m$$$ columns, where $$$a_{i,j} \\in \\{ -1, 0, 1 \\}$$$ for all $$$1 \\le i \\le n$$$ and $$$1 \\le j \\le m$$$. The jury has also selected a cell $$$(i_0, j_0)$$$. Your goal is to find $$$(i_0,j_0)$$$.In one query, you give a cell $$$(i, j)$$$, then the jury will reply with an integer.   If $$$(i, j) = (i_0, j_0)$$$, the jury will reply with $$$0$$$.  Else, let $$$S$$$ be the sum of $$$a_{x,y}$$$ over all $$$x$$$ and $$$y$$$ such that $$$\\min(i, i_0) \\le x \\le \\max(i, i_0)$$$ and $$$\\min(j, j_0) \\le y \\le \\max(j, j_0)$$$. Then, the jury will reply with $$$|i - i_0| + |j - j_0| + |S|$$$. Find $$$(i_0, j_0)$$$ by making at most $$$n + 225$$$ queries.Note: the grader is not adaptive: $$$a$$$ and $$$(i_0,j_0)$$$ are fixed before any queries are made."
  },
  {
    "title": "Spinning Round (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1987/G2",
    "description": "This is the hard version of the problem. The only difference between the two versions are the allowed characters in $$$s$$$. You can make hacks only if both versions of the problem are solved.You are given a permutation $$$p$$$ of length $$$n$$$. You are also given a string $$$s$$$ of length $$$n$$$, where each character is either L, R, or ?.For each $$$i$$$ from $$$1$$$ to $$$n$$$:   Define $$$l_i$$$ as the largest index $$$j < i$$$ such that $$$p_j > p_i$$$. If there is no such index, $$$l_i := i$$$.  Define $$$r_i$$$ as the smallest index $$$j > i$$$ such that $$$p_j > p_i$$$. If there is no such index, $$$r_i := i$$$. Initially, you have an undirected graph with $$$n$$$ vertices (numbered from $$$1$$$ to $$$n$$$) and no edges. Then, for each $$$i$$$ from $$$1$$$ to $$$n$$$, add one edge to the graph:   If $$$s_i =$$$ L, add the edge $$$(i, l_i)$$$ to the graph.  If $$$s_i =$$$ R, add the edge $$$(i, r_i)$$$ to the graph.  If $$$s_i =$$$ ?, either add the edge $$$(i, l_i)$$$ or the edge $$$(i, r_i)$$$ to the graph at your choice. Find the maximum possible diameter over all connected$$$^{\\text{∗}}$$$ graphs that you can form. Output $$$-1$$$ if it is not possible to form any connected graphs.$$$^{\\text{∗}}$$$ Let $$$d(s, t)$$$ denote the smallest number of edges on any path between $$$s$$$ and $$$t$$$.The diameter of the graph is defined as the maximum value of $$$d(s, t)$$$ over all pairs of vertices $$$s$$$ and $$$t$$$. "
  },
  {
    "title": "Spinning Round (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1987/G1",
    "description": "This is the easy version of the problem. The only difference between the two versions are the allowed characters in $$$s$$$. In the easy version, $$$s$$$ only contains the character ?. You can make hacks only if both versions of the problem are solved.You are given a permutation $$$p$$$ of length $$$n$$$. You are also given a string $$$s$$$ of length $$$n$$$, consisting only of the character ?.For each $$$i$$$ from $$$1$$$ to $$$n$$$:   Define $$$l_i$$$ as the largest index $$$j < i$$$ such that $$$p_j > p_i$$$. If there is no such index, $$$l_i := i$$$.  Define $$$r_i$$$ as the smallest index $$$j > i$$$ such that $$$p_j > p_i$$$. If there is no such index, $$$r_i := i$$$. Initially, you have an undirected graph with $$$n$$$ vertices (numbered from $$$1$$$ to $$$n$$$) and no edges. Then, for each $$$i$$$ from $$$1$$$ to $$$n$$$, add one edge to the graph:   If $$$s_i =$$$ L, add the edge $$$(i, l_i)$$$ to the graph.  If $$$s_i =$$$ R, add the edge $$$(i, r_i)$$$ to the graph.  If $$$s_i =$$$ ?, either add the edge $$$(i, l_i)$$$ or the edge $$$(i, r_i)$$$ to the graph at your choice. Find the maximum possible diameter$$$^{\\text{∗}}$$$ over all connected graphs that you can form. Output $$$-1$$$ if it is not possible to form any connected graphs.$$$^{\\text{∗}}$$$ Let $$$d(s, t)$$$ denote the smallest number of edges on any path between $$$s$$$ and $$$t$$$.The diameter of the graph is defined as the maximum value of $$$d(s, t)$$$ over all pairs of vertices $$$s$$$ and $$$t$$$. "
  },
  {
    "title": "Interesting Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1987/F2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on $$$n$$$. You can make hacks only if both versions of the problem are solved.You are given an array of integers $$$a$$$ of length $$$n$$$. In one operation, you will perform the following two-step process:   Choose an index $$$i$$$ such that $$$1 \\le i < |a|$$$ and $$$a_i = i$$$.  Remove $$$a_i$$$ and $$$a_{i+1}$$$ from the array and concatenate the remaining parts. Find the maximum number of times that you can perform the operation above."
  },
  {
    "title": "Interesting Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1987/F1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$n$$$. You can make hacks only if both versions of the problem are solved.You are given an array of integers $$$a$$$ of length $$$n$$$. In one operation, you will perform the following two-step process:   Choose an index $$$i$$$ such that $$$1 \\le i < |a|$$$ and $$$a_i = i$$$.  Remove $$$a_i$$$ and $$$a_{i+1}$$$ from the array and concatenate the remaining parts. Find the maximum number of times that you can perform the operation above."
  },
  {
    "title": "Wonderful Tree!",
    "url": "https://codeforces.com/problemset/problem/1987/E",
    "description": "God's Blessing on This ArrayForces!A Random PebbleYou are given a tree with $$$n$$$ vertices, rooted at vertex $$$1$$$. The $$$i$$$-th vertex has an integer $$$a_i$$$ written on it.Let $$$L$$$ be the set of all direct children$$$^{\\text{∗}}$$$ of $$$v$$$. A tree is called wonderful, if for all vertices $$$v$$$ where $$$L$$$ is not empty, $$$$$$a_v \\le \\sum_{u \\in L}{a_u}.$$$$$$ In one operation, you choose any vertex $$$v$$$ and increase $$$a_v$$$ by $$$1$$$.Find the minimum number of operations needed to make the given tree wonderful!$$$^{\\text{∗}}$$$ Vertex $$$u$$$ is called a direct child of vertex $$$v$$$ if:   $$$u$$$ and $$$v$$$ are connected by an edge, and  $$$v$$$ is on the (unique) path from $$$u$$$ to the root of the tree. "
  },
  {
    "title": "World is Mine",
    "url": "https://codeforces.com/problemset/problem/1987/D",
    "description": "Alice and Bob are playing a game. Initially, there are $$$n$$$ cakes, with the $$$i$$$-th cake having a tastiness value of $$$a_i$$$.Alice and Bob take turns eating them, with Alice starting first:   In her turn, Alice chooses and eats any remaining cake whose tastiness is strictly greater than the maximum tastiness of any of the cakes she's eaten before that. Note that on the first turn, she can choose any cake.  In his turn, Bob chooses any remaining cake and eats it. The game ends when the current player can't eat a suitable cake. Let $$$x$$$ be the number of cakes that Alice ate. Then, Alice wants to maximize $$$x$$$, while Bob wants to minimize $$$x$$$.Find out how many cakes Alice will eat if both players play optimally."
  },
  {
    "title": "Basil's Garden",
    "url": "https://codeforces.com/problemset/problem/1987/C",
    "description": "There are $$$n$$$ flowers in a row, the $$$i$$$-th of them initially has a positive height of $$$h_i$$$ meters.Every second, the wind will blow from the left, causing the height of some flowers to decrease.Specifically, every second, for each $$$i$$$ from $$$1$$$ to $$$n$$$, in this order, the following happens:   If $$$i = n$$$ or $$$h_i > h_{i + 1}$$$, the value of $$$h_i$$$ changes to $$$\\max(0, h_i - 1)$$$. How many seconds will pass before $$$h_i=0$$$ for all $$$1 \\le i \\le n$$$ for the first time?"
  },
  {
    "title": "K-Sort",
    "url": "https://codeforces.com/problemset/problem/1987/B",
    "description": "You are given an array of integers $$$a$$$ of length $$$n$$$. You can apply the following operation any number of times (maybe, zero):   First, choose an integer $$$k$$$ such that $$$1 \\le k \\le n$$$ and pay $$$k + 1$$$ coins.  Then, choose exactly $$$k$$$ indices such that $$$1 \\le i_1 < i_2 < \\ldots < i_k \\le n$$$.  Then, for each $$$x$$$ from $$$1$$$ to $$$k$$$, increase $$$a_{i_x}$$$ by $$$1$$$. Find the minimum number of coins needed to make $$$a$$$ non-decreasing. That is, $$$a_1 \\le a_2 \\le \\ldots \\le a_n$$$."
  },
  {
    "title": "Upload More RAM",
    "url": "https://codeforces.com/problemset/problem/1987/A",
    "description": "Oh no, the ForceCodes servers are running out of memory! Luckily, you can help them out by uploading some of your RAM!You want to upload $$$n$$$ GBs of RAM. Every second, you will upload either $$$0$$$ or $$$1$$$ GB of RAM. However, there is a restriction on your network speed: in any $$$k$$$ consecutive seconds, you can upload only at most $$$1$$$ GB of RAM in total.Find the minimum number of seconds needed to upload $$$n$$$ GBs of RAM!"
  },
  {
    "title": "Permutation Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1986/G2",
    "description": "This is the hard version of the problem. The only difference is that in this version $$$n \\leq 5 \\cdot 10^5$$$ and the sum of $$$n$$$ for all sets of input data does not exceed $$$5 \\cdot 10^5$$$.You are given a permutation $$$p$$$ of length $$$n$$$. Calculate the number of index pairs $$$1 \\leq i < j \\leq n$$$ such that $$$p_i \\cdot p_j$$$ is divisible by $$$i \\cdot j$$$ without remainder.A permutation is a sequence of $$$n$$$ integers, in which each integer from $$$1$$$ to $$$n$$$ occurs exactly once. For example, $$$[1]$$$, $$$[3,5,2,1,4]$$$, $$$[1,3,2]$$$ are permutations, while $$$[2,3,2]$$$, $$$[4,3,1]$$$, $$$[0]$$$ are not."
  },
  {
    "title": "Permutation Problem (Simple Version)",
    "url": "https://codeforces.com/problemset/problem/1986/G1",
    "description": "This is a simple version of the problem. The only difference is that in this version $$$n \\leq 10^5$$$ and the sum of $$$n$$$ for all sets of input data does not exceed $$$10^5$$$.You are given a permutation $$$p$$$ of length $$$n$$$. Calculate the number of index pairs $$$1 \\leq i < j \\leq n$$$ such that $$$p_i \\cdot p_j$$$ is divisible by $$$i \\cdot j$$$ without remainder.A permutation is a sequence of $$$n$$$ integers, where each integer from $$$1$$$ to $$$n$$$ occurs exactly once. For example, $$$[1]$$$, $$$[3,5,2,1,4]$$$, $$$[1,3,2]$$$ are permutations, while $$$[2,3,2]$$$, $$$[4,3,1]$$$, $$$[0]$$$ are not."
  },
  {
    "title": "Non-academic Problem",
    "url": "https://codeforces.com/problemset/problem/1986/F",
    "description": "You are given a connected undirected graph, the vertices of which are numbered with integers from $$$1$$$ to $$$n$$$. Your task is to minimize the number of pairs of vertices $$$1 \\leq u < v \\leq n$$$ between which there exists a path in this graph. To achieve this, you can remove exactly one edge from the graph.Find the smallest number of pairs of vertices!"
  },
  {
    "title": "Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1986/E",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$ and an integer $$$k$$$. You need to make it beautiful with the least amount of operations.Before applying operations, you can shuffle the array elements as you like. For one operation, you can do the following: Choose an index $$$1 \\leq i \\leq n$$$, Make $$$a_i = a_i + k$$$.The array $$$b_1, b_2, \\ldots, b_n$$$ is beautiful if $$$b_i = b_{n - i + 1}$$$ for all $$$1 \\leq i \\leq n$$$.Find the minimum number of operations needed to make the array beautiful, or report that it is impossible."
  },
  {
    "title": "Mathematical Problem",
    "url": "https://codeforces.com/problemset/problem/1986/D",
    "description": "You are given a string $$$s$$$ of length $$$n > 1$$$, consisting of digits from $$$0$$$ to $$$9$$$. You must insert exactly $$$n - 2$$$ symbols $$$+$$$ (addition) or $$$\\times$$$ (multiplication) into this string to form a valid arithmetic expression.In this problem, the symbols cannot be placed before the first or after the last character of the string $$$s$$$, and two symbols cannot be written consecutively. Also, note that the order of the digits in the string cannot be changed. Let's consider $$$s = 987009$$$: From this string, the following arithmetic expressions can be obtained: $$$9 \\times 8 + 70 \\times 0 + 9 = 81$$$, $$$98 \\times 7 \\times 0 + 0 \\times 9 = 0$$$, $$$9 + 8 + 7 + 0 + 09 = 9 + 8 + 7 + 0 + 9 = 33$$$. Note that the number $$$09$$$ is considered valid and is simply transformed into $$$9$$$. From this string, the following arithmetic expressions cannot be obtained: $$$+9 \\times 8 \\times 70 + 09$$$ (symbols should only be placed between digits), $$$98 \\times 70 + 0 + 9$$$ (since there are $$$6$$$ digits, there must be exactly $$$4$$$ symbols).The result of the arithmetic expression is calculated according to the rules of mathematics — first all multiplication operations are performed, then addition. You need to find the minimum result that can be obtained by inserting exactly $$$n - 2$$$ addition or multiplication symbols into the given string $$$s$$$."
  },
  {
    "title": "Update Queries",
    "url": "https://codeforces.com/problemset/problem/1986/C",
    "description": "Let's consider the following simple problem. You are given a string $$$s$$$ of length $$$n$$$, consisting of lowercase Latin letters, as well as an array of indices $$$ind$$$ of length $$$m$$$ ($$$1 \\leq ind_i \\leq n$$$) and a string $$$c$$$ of length $$$m$$$, consisting of lowercase Latin letters. Then, in order, you perform the update operations, namely, during the $$$i$$$-th operation, you set $$$s_{ind_i} = c_i$$$. Note that you perform all $$$m$$$ operations from the first to the last.Of course, if you change the order of indices in the array $$$ind$$$ and/or the order of letters in the string $$$c$$$, you can get different results. Find the lexicographically smallest string $$$s$$$ that can be obtained after $$$m$$$ update operations, if you can rearrange the indices in the array $$$ind$$$ and the letters in the string $$$c$$$ as you like.A string $$$a$$$ is lexicographically less than a string $$$b$$$ if and only if one of the following conditions is met: $$$a$$$ is a prefix of $$$b$$$, but $$$a \\neq b$$$; in the first position where $$$a$$$ and $$$b$$$ differ, the symbol in string $$$a$$$ is earlier in the alphabet than the corresponding symbol in string $$$b$$$."
  },
  {
    "title": "Matrix Stabilization",
    "url": "https://codeforces.com/problemset/problem/1986/B",
    "description": "You are given a matrix of size $$$n \\times m$$$, where the rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The element at the intersection of the $$$i$$$-th row and the $$$j$$$-th column is denoted by $$$a_{ij}$$$.Consider the algorithm for stabilizing matrix $$$a$$$: Find the cell $$$(i, j)$$$ such that its value is strictly greater than the values of all its neighboring cells. If there is no such cell, terminate the algorithm. If there are multiple such cells, choose the cell with the smallest value of $$$i$$$, and if there are still multiple cells, choose the one with the smallest value of $$$j$$$. Set $$$a_{ij} = a_{ij} - 1$$$.  Go to step $$$1$$$. In this problem, cells $$$(a, b)$$$ and $$$(c, d)$$$ are considered neighbors if they share a common side, i.e., $$$|a - c| + |b - d| = 1$$$.Your task is to output the matrix $$$a$$$ after the stabilization algorithm has been executed. It can be shown that this algorithm cannot run for an infinite number of iterations."
  },
  {
    "title": "X Axis",
    "url": "https://codeforces.com/problemset/problem/1986/A",
    "description": "You are given three points with integer coordinates $$$x_1$$$, $$$x_2$$$, and $$$x_3$$$ on the $$$X$$$ axis ($$$1 \\leq x_i \\leq 10$$$). You can choose any point with an integer coordinate $$$a$$$ on the $$$X$$$ axis. Note that the point $$$a$$$ may coincide with $$$x_1$$$, $$$x_2$$$, or $$$x_3$$$. Let $$$f(a)$$$ be the total distance from the given points to the point $$$a$$$. Find the smallest value of $$$f(a)$$$.The distance between points $$$a$$$ and $$$b$$$ is equal to $$$|a - b|$$$. For example, the distance between points $$$a = 5$$$ and $$$b = 2$$$ is $$$3$$$."
  },
  {
    "title": "Maximize the Largest Component (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1985/H2",
    "description": "Easy and hard versions are actually different problems, so read statements of both problems completely and carefully. The only difference between the two versions is the operation.Alex has a grid with $$$n$$$ rows and $$$m$$$ columns consisting of '.' and '#' characters. A set of '#' cells forms a connected component if from any cell in this set, it is possible to reach any other cell in this set by only moving to another cell in the set that shares a common side. The size of a connected component is the number of cells in the set.In one operation, Alex selects any row $$$r$$$ ($$$1 \\le r \\le n$$$) and any column $$$c$$$ ($$$1 \\le c \\le m$$$), then sets every cell in row $$$r$$$ and column $$$c$$$ to be '#'. Help Alex find the maximum possible size of the largest connected component of '#' cells that he can achieve after performing the operation at most once."
  },
  {
    "title": "Maximize the Largest Component (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1985/H1",
    "description": "Easy and hard versions are actually different problems, so read statements of both problems completely and carefully. The only difference between the two versions is the operation.Alex has a grid with $$$n$$$ rows and $$$m$$$ columns consisting of '.' and '#' characters. A set of '#' cells forms a connected component if from any cell in this set, it is possible to reach any other cell in this set by only moving to another cell in the set that shares a common side. The size of a connected component is the number of cells in the set.In one operation, Alex selects any row $$$r$$$ ($$$1 \\le r \\le n$$$) or any column $$$c$$$ ($$$1 \\le c \\le m$$$), then sets every cell in row $$$r$$$ or column $$$c$$$ to be '#'. Help Alex find the maximum possible size of the largest connected component of '#' cells that he can achieve after performing the operation at most once."
  },
  {
    "title": "D-Function",
    "url": "https://codeforces.com/problemset/problem/1985/G",
    "description": "Let $$$D(n)$$$ represent the sum of digits of $$$n$$$. For how many integers $$$n$$$ where $$$10^{l} \\leq n < 10^{r}$$$ satisfy $$$D(k \\cdot n) = k \\cdot D(n)$$$? Output the answer modulo $$$10^9+7$$$."
  },
  {
    "title": "Final Boss",
    "url": "https://codeforces.com/problemset/problem/1985/F",
    "description": "You are facing the final boss in your favorite video game. The boss enemy has $$$h$$$ health. Your character has $$$n$$$ attacks. The $$$i$$$'th attack deals $$$a_i$$$ damage to the boss but has a cooldown of $$$c_i$$$ turns, meaning the next time you can use this attack is turn $$$x + c_i$$$ if your current turn is $$$x$$$. Each turn, you can use all attacks that are not currently on cooldown, all at once. If all attacks are on cooldown, you do nothing for the turn and skip to the next turn.Initially, all attacks are not on cooldown. How many turns will you take to beat the boss? The boss is beaten when its health is $$$0$$$ or less."
  },
  {
    "title": "Secret Box",
    "url": "https://codeforces.com/problemset/problem/1985/E",
    "description": "Ntarsis has a box $$$B$$$ with side lengths $$$x$$$, $$$y$$$, and $$$z$$$. It lies in the 3D coordinate plane, extending from $$$(0,0,0)$$$ to $$$(x,y,z)$$$. Ntarsis has a secret box $$$S$$$. He wants to choose its dimensions such that all side lengths are positive integers, and the volume of $$$S$$$ is $$$k$$$. He can place $$$S$$$ somewhere within $$$B$$$ such that:   $$$S$$$ is parallel to all axes.  every corner of $$$S$$$ lies on an integer coordinate. $$$S$$$ is magical, so when placed at an integer location inside $$$B$$$, it will not fall to the ground. Among all possible ways to choose the dimensions of $$$S$$$, determine the maximum number of distinct locations he can choose to place his secret box $$$S$$$ inside $$$B$$$. Ntarsis does not rotate $$$S$$$ once its side lengths are selected."
  },
  {
    "title": "Manhattan Circle",
    "url": "https://codeforces.com/problemset/problem/1985/D",
    "description": "Given a $$$n$$$ by $$$m$$$ grid consisting of '.' and '#' characters, there exists a whole manhattan circle on the grid. The top left corner of the grid has coordinates $$$(1,1)$$$, and the bottom right corner has coordinates $$$(n, m)$$$.Point ($$$a, b$$$) belongs to the manhattan circle centered at ($$$h, k$$$) if $$$|h - a| + |k - b| < r$$$, where $$$r$$$ is a positive constant.On the grid, the set of points that are part of the manhattan circle is marked as '#'. Find the coordinates of the center of the circle."
  },
  {
    "title": "Good Prefixes",
    "url": "https://codeforces.com/problemset/problem/1985/C",
    "description": "Alex thinks some array is good if there exists some element that can be represented as the sum of all other elements (the sum of all other elements is $$$0$$$ if there are no other elements). For example, the array $$$[1,6,3,2]$$$ is good since $$$1+3+2=6$$$. Furthermore, the array $$$[0]$$$ is also good. However, the arrays $$$[1,2,3,4]$$$ and $$$[1]$$$ are not good.Alex has an array $$$a_1,a_2,\\ldots,a_n$$$. Help him count the number of good non-empty prefixes of the array $$$a$$$. In other words, count the number of integers $$$i$$$ ($$$1 \\le i \\le n$$$) such that the length $$$i$$$ prefix (i.e. $$$a_1,a_2,\\ldots,a_i$$$) is good."
  },
  {
    "title": "Maximum Multiple Sum",
    "url": "https://codeforces.com/problemset/problem/1985/B",
    "description": "Given an integer $$$n$$$, find an integer $$$x$$$ such that:   $$$2 \\leq x \\leq n$$$.  The sum of multiples of $$$x$$$ that are less than or equal to $$$n$$$ is maximized. Formally, $$$x + 2x + 3x + \\dots + kx$$$ where $$$kx \\leq n$$$ is maximized over all possible values of $$$x$$$. "
  },
  {
    "title": "Creating Words",
    "url": "https://codeforces.com/problemset/problem/1985/A",
    "description": "Matthew is given two strings $$$a$$$ and $$$b$$$, both of length $$$3$$$. He thinks it's particularly funny to create two new words by swapping the first character of $$$a$$$ with the first character of $$$b$$$. He wants you to output $$$a$$$ and $$$b$$$ after the swap.Note that the new words may not necessarily be different."
  },
  {
    "title": "Tower Capturing",
    "url": "https://codeforces.com/problemset/problem/1984/H",
    "description": "There are $$$n$$$ towers at $$$n$$$ distinct points $$$(x_1, y_1), (x_2, y_2), \\ldots, (x_n, y_n)$$$, such that no three are collinear and no four are concyclic. Initially, you own towers $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$, and you want to capture all of them. To do this, you can do the following operation any number of times:   Pick two towers $$$P$$$ and $$$Q$$$ you own and one tower $$$R$$$ you don't own, such that the circle through $$$P$$$, $$$Q$$$, and $$$R$$$ contains all $$$n$$$ towers inside of it.  Afterwards, capture all towers in or on triangle $$$\\triangle PQR$$$, including $$$R$$$ itself.  An attack plan is a series of choices of $$$R$$$ ($$$R_1, R_2, \\ldots, R_k$$$) using the above operations after which you capture all towers. Note that two attack plans are considered different only if they differ in their choice of $$$R$$$ in some operation; in particular, two attack plans using the same choices of $$$R$$$ but different choices of $$$P$$$ and $$$Q$$$ are considered the same.Count the number of attack plans of minimal length. Note that it might not be possible to capture all towers, in which case the answer is $$$0$$$. Since the answer may be large, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Magic Trick II",
    "url": "https://codeforces.com/problemset/problem/1984/G",
    "description": "The secret behind Oscar's first magic trick has been revealed! Because he still wants to impress Lura, he comes up with a new idea: he still wants to sort a permutation $$$p_1, p_2, \\ldots, p_n$$$ of $$$[1, 2, \\ldots, n]$$$.This time, he chooses an integer $$$k$$$. He wants to sort the permutation in non-decreasing order using the following operation several times:   Pick a continuous subarray of length $$$k$$$ and remove it from $$$p$$$.  Insert the continuous subarray back into $$$p$$$ at any position (perhaps, in the very front or the very back). To be as impressive as possible, Oscar would like to choose the maximal value of $$$k$$$ such that he can sort his permutation. Please help him find the maximal $$$k$$$ as well as a sequence of operations that will sort the permutation. You don't need to minimize the number of operations, but you are allowed to use at most $$$5n^2$$$ operations.We have a proof that, for the maximal $$$k$$$ such that you can sort the permutation in any number of operations, you can also sort it in at most $$$5n^2$$$ operations."
  },
  {
    "title": "Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1984/F",
    "description": "There is a hidden array $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$ whose elements are integers between $$$-m$$$ and $$$m$$$, inclusive.You are given an array $$$b_1, b_2, \\ldots, b_n$$$ of length $$$n$$$ and a string $$$s$$$ of length $$$n$$$ consisting of the characters $$$\\texttt{P}$$$, $$$\\texttt{S}$$$, and $$$\\texttt{?}$$$.For each $$$i$$$ from $$$1$$$ to $$$n$$$ inclusive, we must have:   If $$$s_i = \\texttt{P}$$$, $$$b_i$$$ is the sum of $$$a_1$$$ through $$$a_i$$$.  If $$$s_i = \\texttt{S}$$$, $$$b_i$$$ is the sum of $$$a_i$$$ through $$$a_n$$$. Output the number of ways to replace all $$$\\texttt{?}$$$ in $$$s$$$ with either $$$\\texttt{P}$$$ or $$$\\texttt{S}$$$ such that there exists an array $$$a_1, a_2, \\ldots, a_n$$$ with elements not exceeding $$$m$$$ by absolute value satisfying the constraints given by the array $$$b_1, b_2, \\ldots, b_n$$$ and the string $$$s$$$.Since the answer may be large, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Shuffle",
    "url": "https://codeforces.com/problemset/problem/1984/E",
    "description": "Two hungry red pandas, Oscar and Lura, have a tree $$$T$$$ with $$$n$$$ nodes. They are willing to perform the following shuffle procedure on the whole tree $$$T$$$ exactly once. With this shuffle procedure, they will create a new tree out of the nodes of the old tree.   Choose any node $$$V$$$ from the original tree $$$T$$$. Create a new tree $$$T_2$$$, with $$$V$$$ as the root.  Remove $$$V$$$ from $$$T$$$, such that the original tree is split into one or more subtrees (or zero subtrees, if $$$V$$$ is the only node in $$$T$$$).  Shuffle each subtree with the same procedure (again choosing any node as the root), then connect all shuffled subtrees' roots back to $$$V$$$ to finish constructing $$$T_2$$$. After this, Oscar and Lura are left with a new tree $$$T_2$$$. They can only eat leaves and are very hungry, so please find the maximum number of leaves over all trees that can be created in exactly one shuffle.Note that leaves are all nodes with degree $$$1$$$. Thus, the root may be considered as a leaf if it has only one child."
  },
  {
    "title": "\"a\" String Problem",
    "url": "https://codeforces.com/problemset/problem/1984/D",
    "description": "You are given a string $$$s$$$ consisting of lowercase Latin characters. Count the number of nonempty strings $$$t \\neq$$$ \"$$$\\texttt{a}$$$\" such that it is possible to partition$$$^{\\dagger}$$$ $$$s$$$ into some substrings satisfying the following conditions:   each substring either equals $$$t$$$ or \"$$$\\texttt{a}$$$\", and  at least one substring equals $$$t$$$.  $$$^{\\dagger}$$$ A partition of a string $$$s$$$ is an ordered sequence of some $$$k$$$ strings $$$t_1, t_2, \\ldots, t_k$$$ (called substrings) such that $$$t_1 + t_2 + \\ldots + t_k = s$$$, where $$$+$$$ represents the concatenation operation."
  },
  {
    "title": "Magnitude (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1984/C2",
    "description": "The two versions of the problem are different. You may want to read both versions. You can make hacks only if both versions are solved.You are given an array $$$a$$$ of length $$$n$$$. Start with $$$c = 0$$$. Then, for each $$$i$$$ from $$$1$$$ to $$$n$$$ (in increasing order) do exactly one of the following:   Option $$$1$$$: set $$$c$$$ to $$$c + a_i$$$.  Option $$$2$$$: set $$$c$$$ to $$$|c + a_i|$$$, where $$$|x|$$$ is the absolute value of $$$x$$$. Let the maximum final value of $$$c$$$ after the procedure described above be equal to $$$k$$$. Find the number of unique procedures that result in $$$c = k$$$. Two procedures are different if at any index $$$i$$$, one procedure chose option $$$1$$$ and another chose option $$$2$$$, even if the value of $$$c$$$ is equal for both procedures after that turn.Since the answer may be large, output it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Magnitude (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1984/C1",
    "description": "The two versions of the problem are different. You may want to read both versions. You can make hacks only if both versions are solved.You are given an array $$$a$$$ of length $$$n$$$. Start with $$$c = 0$$$. Then, for each $$$i$$$ from $$$1$$$ to $$$n$$$ (in increasing order) do exactly one of the following:   Option $$$1$$$: set $$$c$$$ to $$$c + a_i$$$.  Option $$$2$$$: set $$$c$$$ to $$$|c + a_i|$$$, where $$$|x|$$$ is the absolute value of $$$x$$$. Let the maximum final value of $$$c$$$ after the procedure described above be equal to $$$k$$$. Find $$$k$$$."
  },
  {
    "title": "Large Addition",
    "url": "https://codeforces.com/problemset/problem/1984/B",
    "description": "A digit is large if it is between $$$5$$$ and $$$9$$$, inclusive. A positive integer is large if all of its digits are large.You are given an integer $$$x$$$. Can it be the sum of two large positive integers with the same number of digits?"
  },
  {
    "title": "Strange Splitting",
    "url": "https://codeforces.com/problemset/problem/1984/A",
    "description": "Define the range of a non-empty array to be the maximum value minus the minimum value. For example, the range of $$$[1,4,2]$$$ is $$$4-1=3$$$.You are given an array $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n \\geq 3$$$. It is guaranteed $$$a$$$ is sorted.You have to color each element of $$$a$$$ red or blue so that:   the range of the red elements does not equal the range of the blue elements, and  there is at least one element of each color. If there does not exist any such coloring, you should report it. If there are multiple valid colorings, you can print any of them."
  },
  {
    "title": "Your Loss",
    "url": "https://codeforces.com/problemset/problem/1983/G",
    "description": "You are given a tree with $$$n$$$ nodes numbered from $$$1$$$ to $$$n$$$, along with an array of size $$$n$$$. The value of $$$i$$$-th node is $$$a_{i}$$$. There are $$$q$$$ queries. In each query, you are given 2 nodes numbered as $$$x$$$ and $$$y$$$. Consider the path from the node numbered as $$$x$$$ to the node numbered as $$$y$$$. Let the path be represented by $$$x = p_0, p_1, p_2, \\ldots, p_r = y$$$, where $$$p_i$$$ are the intermediate nodes. Compute the sum of $$$a_{p_i}\\oplus i$$$ for each $$$i$$$ such that $$$0 \\le i \\le r$$$ where $$$\\oplus$$$ is the XOR operator. More formally, compute $$$$$$\\sum_{i =0}^{r} a_{p_i}\\oplus i$$$$$$. "
  },
  {
    "title": "array-value",
    "url": "https://codeforces.com/problemset/problem/1983/F",
    "description": "You have an array of non-negative integers $$$a_1, a_2, \\ldots, a_n$$$.The value of a sub-array of length $$$\\ge 2$$$, $$$a[l, r] = [a_l, a_{l+1}, \\ldots, a_r]$$$ is the minimum value of $$$a_i \\oplus a_j$$$ such that $$$l \\le i < j \\le r$$$, where $$$\\oplus$$$ is the xor (exclusive-or) operator.You have to find the $$$k$$$-th smallest value over all sub-arrays of length $$$\\ge 2$$$."
  },
  {
    "title": "I Love Balls",
    "url": "https://codeforces.com/problemset/problem/1983/E",
    "description": "Alice and Bob are playing a game. There are $$$n$$$ balls, out of which $$$k$$$ are special. Each ball has a value associated with it. The players play turn by turn. In each turn, the player randomly picks a ball and adds the value of the ball to their score, which is $$$0$$$ at the beginning of the game. The selected ball is removed from the game. If the ball was special, the same player takes the next turn if at least one ball is remaining. If the ball picked was not special, the next player plays their turn.They play this game until no balls are remaining in the game. Alice plays first.Find the expected score that both the players have at the end of the game modulo $$$10^9+7$$$. Formally, let $$$M = 10^9+7$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$."
  },
  {
    "title": "Swap Dilemma",
    "url": "https://codeforces.com/problemset/problem/1983/D",
    "description": "Given two arrays of distinct positive integers $$$a$$$ and $$$b$$$ of length $$$n$$$, we would like to make both the arrays the same. Two arrays $$$x$$$ and $$$y$$$ of length $$$k$$$ are said to be the same when for all $$$1 \\le i \\le k$$$, $$$x_i = y_i$$$.Now in one move, you can choose some index $$$l$$$ and $$$r$$$ in $$$a$$$ ($$$l \\le r$$$) and swap $$$a_l$$$ and $$$a_r$$$, then choose some $$$p$$$ and $$$q$$$ ($$$p \\le q$$$) in $$$b$$$ such that $$$r-l=q-p$$$ and swap $$$b_p$$$ and $$$b_q$$$.Is it possible to make both arrays the same?"
  },
  {
    "title": "Have Your Cake and Eat It Too",
    "url": "https://codeforces.com/problemset/problem/1983/C",
    "description": "Alice, Bob and Charlie want to share a rectangular cake cut into $$$n$$$ pieces. Each person considers every piece to be worth a different value. The $$$i$$$-th piece is considered to be of value $$$a_i$$$ by Alice, $$$b_i$$$ by Bob and $$$c_i$$$ by Charlie.The sum over all $$$a_i$$$, all $$$b_i$$$ and all $$$c_i$$$ individually is the same, equal to $$$tot$$$.Given the values of each piece of the cake for each person, you need to give each person a contiguous slice of cake. In other words, the indices at the left and right ends of these subarrays (the slices given to each person) can be represented as $$$(l_a, r_a)$$$, $$$(l_b, r_b)$$$ and $$$(l_c, r_c)$$$ respectively for Alice, Bob and Charlie. The division needs to satisfy the following constraints:  No piece is assigned to more than one person, i.e., no two subarrays among $$$[l_a,\\ldots,r_a]$$$, $$$[l_b, \\ldots, r_b]$$$ and $$$[l_c, \\ldots, r_c]$$$ intersect. $$$ \\sum_{i = l_a}^{r_a} a_i, \\sum_{i = l_b}^{r_b} b_i, \\sum_{i = l_c}^{r_c} c_i \\geq \\lceil \\frac{tot}{3} \\rceil$$$. Here, the notation $$$\\lceil \\frac{a}{b} \\rceil$$$ represents ceiling division. It is defined as the smallest integer greater than or equal to the exact division of $$$a$$$ by $$$b$$$. In other words, it rounds up the division result to the nearest integer. For instance $$$\\lceil \\frac{10}{3} \\rceil = 4$$$ and $$$\\lceil \\frac{15}{3} \\rceil = 5$$$. "
  },
  {
    "title": "Corner Twist",
    "url": "https://codeforces.com/problemset/problem/1983/B",
    "description": "You are given two grids of numbers $$$a$$$ and $$$b$$$, with $$$n$$$ rows and $$$m$$$ columns. All the values in the grid are $$$0$$$, $$$1$$$ or $$$2$$$.You can perform the following operation on $$$a$$$ any number of times:   Pick any subrectangle in the grid with length and width $$$\\ge 2$$$. You are allowed to choose the entire grid as a subrectangle.  The subrectangle has four corners. Take any pair of diagonally opposite corners of the chosen subrectangle and add $$$1$$$ to their values modulo $$$3$$$.  For the pair of corners not picked, add $$$2$$$ to their values modulo $$$3$$$. Note that the operation only changes the values of the corners of the picked subrectangle.Is it possible to convert the grid $$$a$$$ into grid $$$b$$$ by applying the above operation any number of times (possibly zero)?"
  },
  {
    "title": "Array Divisibility",
    "url": "https://codeforces.com/problemset/problem/1983/A",
    "description": "An array of integers $$$a_1,a_2,\\cdots,a_n$$$ is beautiful subject to an integer $$$k$$$ if it satisfies the following:   The sum of $$$a_{j}$$$ over all $$$j$$$ such that $$$j$$$ is a multiple of $$$k$$$ and $$$1 \\le j \\le n $$$, itself, is a multiple of $$$k$$$.  More formally, if $$$\\sum_{k | j} a_{j}$$$ is divisible by $$$k$$$ for all $$$1 \\le j \\le n$$$ then the array $$$a$$$ is beautiful subject to $$$k$$$. Here, the notation $$${k|j}$$$ means $$$k$$$ divides $$$j$$$, that is, $$$j$$$ is a multiple of $$$k$$$.  Given $$$n$$$, find an array of positive nonzero integers, with each element less than or equal to $$$10^5$$$ that is beautiful subject to all $$$1 \\le k \\le n$$$.It can be shown that an answer always exists."
  },
  {
    "title": "Sorting Problem Again",
    "url": "https://codeforces.com/problemset/problem/1982/F",
    "description": "You have an array $$$a$$$ of $$$n$$$ elements. There are also $$$q$$$ modifications of the array. Before the first modification and after each modification, you would like to know the following:What is the minimum length subarray that needs to be sorted in non-decreasing order in order for the array $$$a$$$ to be completely sorted in non-decreasing order?More formally, you want to select a subarray of the array $$$(l, r)$$$ with the minimum value of $$$r - l + 1$$$. After that, you will sort the elements $$$a_{l}, a_{l + 1}, \\ldots, a_{r}$$$ and want the condition $$$a_{i} \\le a_{i + 1}$$$ to hold for all $$$1 \\le i < n$$$. If the array is already sorted in non-decreasing order, then $$$l$$$ and $$$r$$$ should be considered as equal to $$$-1$$$.Note that finding such $$$(l, r)$$$ does not change the array in any way. The modifications themselves take the form: assign $$$a_{pos} = x$$$ for given $$$pos$$$ and $$$x$$$."
  },
  {
    "title": "Number of k-good subarrays",
    "url": "https://codeforces.com/problemset/problem/1982/E",
    "description": "Let $$$bit(x)$$$ denote the number of ones in the binary representation of a non-negative integer $$$x$$$.A subarray of an array is called $$$k$$$-good if it consists only of numbers with no more than $$$k$$$ ones in their binary representation, i.e., a subarray $$$(l, r)$$$ of array $$$a$$$ is good if for any $$$i$$$ such that $$$l \\le i \\le r$$$ condition $$$bit(a_{i}) \\le k$$$ is satisfied.You are given an array $$$a$$$ of length $$$n$$$, consisting of consecutive non-negative integers starting from $$$0$$$, i.e., $$$a_{i} = i$$$ for $$$0 \\le i \\le n - 1$$$ (in $$$0$$$-based indexing). You need to count the number of $$$k$$$-good subarrays in this array.As the answer can be very large, output it modulo $$$10^{9} + 7$$$."
  },
  {
    "title": "Beauty of the mountains",
    "url": "https://codeforces.com/problemset/problem/1982/D",
    "description": "Nikita loves mountains and has finally decided to visit the Berlyand mountain range! The range was so beautiful that Nikita decided to capture it on a map. The map is a table of $$$n$$$ rows and $$$m$$$ columns, with each cell containing a non-negative integer representing the height of the mountain.He also noticed that mountains come in two types:  With snowy caps.  Without snowy caps. Nikita is a very pragmatic person. He wants the sum of the heights of the mountains with snowy caps to be equal to the sum of the heights of the mountains without them. He has arranged with the mayor of Berlyand, Polikarp Polikarpovich, to allow him to transform the landscape.Nikita can perform transformations on submatrices of size $$$k \\times k$$$ as follows: he can add an integer constant $$$c$$$ to the heights of the mountains within this area, but the type of the mountain remains unchanged. Nikita can choose the constant $$$c$$$ independently for each transformation. Note that $$$c$$$ can be negative.Before making the transformations, Nikita asks you to find out if it is possible to achieve equality of the sums, or if it is impossible. It doesn't matter at what cost, even if the mountains turn into canyons and have negative heights.If only one type of mountain is represented on the map, then the sum of the heights of the other type of mountain is considered to be zero."
  },
  {
    "title": "Boring Day",
    "url": "https://codeforces.com/problemset/problem/1982/C",
    "description": "On another boring day, Egor got bored and decided to do something. But since he has no friends, he came up with a game to play.Egor has a deck of $$$n$$$ cards, the $$$i$$$-th card from the top has a number $$$a_i$$$ written on it. Egor wants to play a certain number of rounds until the cards run out. In each round, he takes a non-zero number of cards from the top of the deck and finishes the round. If the sum of the numbers on the cards collected during the round is between $$$l$$$ and $$$r$$$, inclusive, the round is won; otherwise, it is lost. Egor knows by heart the order of the cards. Help Egor determine the maximum number of rounds he can win in such a game. Note that Egor is not required to win rounds consecutively."
  },
  {
    "title": "Collatz Conjecture",
    "url": "https://codeforces.com/problemset/problem/1982/B",
    "description": "Recently, the first-year student Maxim learned about the Collatz conjecture, but he didn't pay much attention during the lecture, so he believes that the following process is mentioned in the conjecture:There is a variable $$$x$$$ and a constant $$$y$$$. The following operation is performed $$$k$$$ times:   increase $$$x$$$ by $$$1$$$, then  while the number $$$x$$$ is divisible by $$$y$$$, divide it by $$$y$$$.  Note that both of these actions are performed sequentially within one operation.For example, if the number $$$x = 16$$$, $$$y = 3$$$, and $$$k = 2$$$, then after one operation $$$x$$$ becomes $$$17$$$, and after another operation $$$x$$$ becomes $$$2$$$, because after adding one, $$$x = 18$$$ is divisible by $$$3$$$ twice.Given the initial values of $$$x$$$, $$$y$$$, and $$$k$$$, Maxim wants to know what is the final value of $$$x$$$."
  },
  {
    "title": "Soccer",
    "url": "https://codeforces.com/problemset/problem/1982/A",
    "description": "Dima loves watching soccer. In such a game, the score on the scoreboard is represented as $$$x$$$ : $$$y$$$, where $$$x$$$ is the number of goals of the first team, and $$$y$$$ is the number of goals of the second team. At any given time, only one team can score a goal, so the score $$$x$$$ : $$$y$$$ can change to either $$$(x + 1)$$$ : $$$y$$$, or $$$x$$$ : $$$(y + 1)$$$.While watching a soccer game, Dima was distracted by very important matters, and after some time, he returned to watching the game. Dima remembers the score right before he was distracted, and the score right after he returned. Given these two scores, he wonders the following question. Is it possible that, while Dima was not watching the game, the teams never had an equal score?It is guaranteed that at neither of the two time points Dima remembers the teams had equal scores. However, it is possible that the score did not change during his absence.Help Dima and answer the question!"
  },
  {
    "title": "Turtle and Paths on a Tree",
    "url": "https://codeforces.com/problemset/problem/1981/F",
    "description": "Note the unusual definition of $$$\\text{MEX}$$$ in this problem.Piggy gave Turtle a binary tree$$$^{\\dagger}$$$ with $$$n$$$ vertices and a sequence $$$a_1, a_2, \\ldots, a_n$$$ on his birthday. The binary tree is rooted at vertex $$$1$$$.If a set of paths $$$P = \\{(x_i, y_i)\\}$$$ in the tree covers each edge exactly once, then Turtle will think that the set of paths is good. Note that a good set of paths can cover a vertex twice or more.Turtle defines the value of a set of paths as $$$\\sum\\limits_{(x, y) \\in P} f(x, y)$$$, where $$$f(x, y)$$$ denotes the $$$\\text{MEX}^{\\ddagger}$$$ of all $$$a_u$$$ such that vertex $$$u$$$ is on the simple path from $$$x$$$ to $$$y$$$ in the tree (including the starting vertex $$$x$$$ and the ending vertex $$$y$$$).Turtle wonders the minimum value over all good sets of paths. Please help him calculate the answer!$$$^{\\dagger}$$$A binary tree is a tree where every non-leaf vertex has at most $$$2$$$ sons.$$$^{\\ddagger}\\text{MEX}$$$ of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest positive integer $$$x$$$ which does not occur in the collection $$$c$$$. For example, $$$\\text{MEX}$$$ of $$$[3, 3, 1, 4]$$$ is $$$2$$$, $$$\\text{MEX}$$$ of $$$[2, 3]$$$ is $$$1$$$."
  },
  {
    "title": "Turtle and Intersected Segments",
    "url": "https://codeforces.com/problemset/problem/1981/E",
    "description": "Turtle just received $$$n$$$ segments and a sequence $$$a_1, a_2, \\ldots, a_n$$$. The $$$i$$$-th segment is $$$[l_i, r_i]$$$.Turtle will create an undirected graph $$$G$$$. If segment $$$i$$$ and segment $$$j$$$ intersect, then Turtle will add an undirected edge between $$$i$$$ and $$$j$$$ with a weight of $$$|a_i - a_j|$$$, for every $$$i \\ne j$$$.Turtle wants you to calculate the sum of the weights of the edges of the minimum spanning tree of the graph $$$G$$$, or report that the graph $$$G$$$ has no spanning tree.We say two segments $$$[l_1, r_1]$$$ and $$$[l_2, r_2]$$$ intersect if and only if $$$\\max(l_1, l_2) \\le \\min(r_1, r_2)$$$."
  },
  {
    "title": "Turtle and Multiplication",
    "url": "https://codeforces.com/problemset/problem/1981/D",
    "description": "Turtle just learned how to multiply two integers in his math class, and he was very excited.Then Piggy gave him an integer $$$n$$$, and asked him to construct a sequence $$$a_1, a_2, \\ldots, a_n$$$ consisting of integers which satisfied the following conditions:  For all $$$1 \\le i \\le n$$$, $$$1 \\le a_i \\le 3 \\cdot 10^5$$$.  For all $$$1 \\le i < j \\le n - 1$$$, $$$a_i \\cdot a_{i + 1} \\ne a_j \\cdot a_{j + 1}$$$. Of all such sequences, Piggy asked Turtle to find the one with the minimum number of distinct elements.Turtle definitely could not solve the problem, so please help him!"
  },
  {
    "title": "Turtle and an Incomplete Sequence",
    "url": "https://codeforces.com/problemset/problem/1981/C",
    "description": "Turtle was playing with a sequence $$$a_1, a_2, \\ldots, a_n$$$ consisting of positive integers. Unfortunately, some of the integers went missing while playing.Now the sequence becomes incomplete. There may exist an arbitrary number of indices $$$i$$$ such that $$$a_i$$$ becomes $$$-1$$$. Let the new sequence be $$$a'$$$.Turtle is sad. But Turtle remembers that for every integer $$$i$$$ from $$$1$$$ to $$$n - 1$$$, either $$$a_i = \\left\\lfloor\\frac{a_{i + 1}}{2}\\right\\rfloor$$$ or $$$a_{i + 1} = \\left\\lfloor\\frac{a_i}{2}\\right\\rfloor$$$ holds for the original sequence $$$a$$$.Turtle wants you to help him complete the sequence. But sometimes Turtle makes mistakes, so you need to tell him if you can't complete the sequence.Formally, you need to find another sequence $$$b_1, b_2, \\ldots, b_n$$$ consisting of positive integers such that:  For every integer $$$i$$$ from $$$1$$$ to $$$n$$$, if $$$a'_i \\ne -1$$$, then $$$b_i = a'_i$$$.  For every integer $$$i$$$ from $$$1$$$ to $$$n - 1$$$, either $$$b_i = \\left\\lfloor\\frac{b_{i + 1}}{2}\\right\\rfloor$$$ or $$$b_{i + 1} = \\left\\lfloor\\frac{b_i}{2}\\right\\rfloor$$$ holds.  For every integer $$$i$$$ from $$$1$$$ to $$$n$$$, $$$1 \\le b_i \\le 10^9$$$. If there is no sequence $$$b_1, b_2, \\ldots, b_n$$$ that satisfies all of the conditions above, you need to report $$$-1$$$."
  },
  {
    "title": "Turtle and an Infinite Sequence",
    "url": "https://codeforces.com/problemset/problem/1981/B",
    "description": "There is a sequence $$$a_0, a_1, a_2, \\ldots$$$ of infinite length. Initially $$$a_i = i$$$ for every non-negative integer $$$i$$$.After every second, each element of the sequence will simultaneously change. $$$a_i$$$ will change to $$$a_{i - 1} \\mid a_i \\mid a_{i + 1}$$$ for every positive integer $$$i$$$. $$$a_0$$$ will change to $$$a_0 \\mid a_1$$$. Here, $$$|$$$ denotes bitwise OR.Turtle is asked to find the value of $$$a_n$$$ after $$$m$$$ seconds. In particular, if $$$m = 0$$$, then he needs to find the initial value of $$$a_n$$$. He is tired of calculating so many values, so please help him!"
  },
  {
    "title": "Turtle and Piggy Are Playing a Game",
    "url": "https://codeforces.com/problemset/problem/1981/A",
    "description": "Turtle and Piggy are playing a number game.First, Turtle will choose an integer $$$x$$$, such that $$$l \\le x \\le r$$$, where $$$l, r$$$ are given. It's also guaranteed that $$$2l \\le r$$$.Then, Piggy will keep doing the following operation until $$$x$$$ becomes $$$1$$$:  Choose an integer $$$p$$$ such that $$$p \\ge 2$$$ and $$$p \\mid x$$$ (i.e. $$$x$$$ is a multiple of $$$p$$$).  Set $$$x$$$ to $$$\\frac{x}{p}$$$, and the score will increase by $$$1$$$. The score is initially $$$0$$$. Both Turtle and Piggy want to maximize the score. Please help them to calculate the maximum score."
  },
  {
    "title": "Yasya and the Mysterious Tree",
    "url": "https://codeforces.com/problemset/problem/1980/G",
    "description": "Yasya was walking in the forest and accidentally found a tree with $$$n$$$ vertices. A tree is a connected undirected graph with no cycles.Next to the tree, the girl found an ancient manuscript with $$$m$$$ queries written on it. The queries can be of two types.The first type of query is described by the integer $$$y$$$. The weight of each edge in the tree is replaced by the bitwise exclusive OR of the weight of that edge and the integer $$$y$$$.The second type is described by the vertex $$$v$$$ and the integer $$$x$$$. Yasya chooses a vertex $$$u$$$ ($$$1 \\le u \\le n$$$, $$$u \\neq v$$$) and mentally draws a bidirectional edge of weight $$$x$$$ from $$$v$$$ to $$$u$$$ in the tree.Then Yasya finds a simple cycle in the resulting graph and calculates the bitwise exclusive OR of all the edges in it. She wants to choose a vertex $$$u$$$ such that the calculated value is maximum. This calculated value will be the answer to the query. It can be shown that such a cycle exists and is unique under the given constraints (independent of the choice of $$$u$$$). If an edge between $$$v$$$ and $$$u$$$ already existed, a simple cycle is the path $$$v \\to u \\to v$$$.Note that the second type of query is performed mentally, meaning the tree does not change in any way after it.Help Yasya answer all the queries."
  },
  {
    "title": "Field Division (hard version)",
    "url": "https://codeforces.com/problemset/problem/1980/F2",
    "description": "This is a hard version of the problem; it differs from the easy version only by the question. The easy version only needs you to print whether some values are non-zero or not. The hard version needs you to print the exact values.Alice and Bob are dividing the field. The field is a rectangle of size $$$n \\times m$$$ ($$$2 \\le n, m \\le 10^9$$$); the rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The cell at the intersection of row $$$r$$$ and column $$$c$$$ is denoted as ($$$r, c$$$).Bob has $$$k$$$ ($$$2 \\le k \\le 2 \\cdot 10^5$$$) fountains, all of them are located in different cells of the field. Alice is responsible for dividing the field, but she must meet several conditions:  To divide the field, Alice will start her path in any free (without a fountain) cell on the left or top side of the field and will move, each time moving to the adjacent cell down or right. Her path will end on the right or bottom side of the field.  Alice's path will divide the field into two parts — one part will belong to Alice (this part includes the cells of her path), the other part — to Bob.  Alice will own the part that includes the cell ($$$n, 1$$$).  Bob will own the part that includes the cell ($$$1, m$$$). Alice wants to divide the field in such a way as to get as many cells as possible.Bob wants to keep ownership of all the fountains, but he can give one of them to Alice. First, output the integer $$$\\alpha$$$ — the maximum possible size of Alice's plot, if Bob does not give her any fountain (i.e., all fountains will remain on Bob's plot).Then output $$$k$$$ non-negative integers $$$a_1, a_2, \\dots, a_k$$$, where $$$a_i$$$ is a value such that after Bob gives Alice the $$$i$$$-th fountain, the maximum size of her plot will be $$$\\alpha + a_i$$$."
  },
  {
    "title": "Field Division (easy version)",
    "url": "https://codeforces.com/problemset/problem/1980/F1",
    "description": "This is an easy version of the problem; it differs from the hard version only by the question. The easy version only needs you to print whether some values are non-zero or not. The hard version needs you to print the exact values.Alice and Bob are dividing the field. The field is a rectangle of size $$$n \\times m$$$ ($$$2 \\le n, m \\le 10^9$$$), the rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The cell at the intersection of row $$$r$$$ and column $$$c$$$ is denoted as ($$$r, c$$$).Bob has $$$k$$$ ($$$2 \\le k \\le 2 \\cdot 10^5$$$) fountains, all of them are located in different cells of the field. Alice is responsible for dividing the field, but she must meet several conditions:  To divide the field, Alice will start her path in any free (without a fountain) cell on the left or top side of the field and will move, each time moving to the adjacent cell down or right. Her path will end on the right or bottom side of the field.  Alice's path will divide the field into two parts — one part will belong to Alice (this part includes the cells of her path), the other part — to Bob.  Alice will own the part that includes the cell ($$$n, 1$$$).  Bob will own the part that includes the cell ($$$1, m$$$). Alice wants to divide the field in such a way as to get as many cells as possible.Bob wants to keep ownership of all the fountains, but he can give one of them to Alice. First, output the integer $$$\\alpha$$$ — the maximum possible size of Alice's plot, if Bob does not give her any fountain (i.e., all fountains will remain on Bob's plot). Then output $$$k$$$ non-negative integers $$$a_1, a_2, \\dots, a_k$$$, where:  $$$a_i=0$$$, if after Bob gives Alice the $$$i$$$-th fountain, the maximum possible size of Alice's plot does not increase (i.e., remains equal to $$$\\alpha$$$);  $$$a_i=1$$$, if after Bob gives Alice the $$$i$$$-th fountain, the maximum possible size of Alice's plot increases (i.e., becomes greater than $$$\\alpha$$$). "
  },
  {
    "title": "Permutation of Rows and Columns",
    "url": "https://codeforces.com/problemset/problem/1980/E",
    "description": "You have been given a matrix $$$a$$$ of size $$$n$$$ by $$$m$$$, containing a permutation of integers from $$$1$$$ to $$$n \\cdot m$$$.A permutation of $$$n$$$ integers is an array containing all numbers from $$$1$$$ to $$$n$$$ exactly once. For example, the arrays $$$[1]$$$, $$$[2, 1, 3]$$$, $$$[5, 4, 3, 2, 1]$$$ are permutations, while the arrays $$$[1, 1]$$$, $$$[100]$$$, $$$[1, 2, 4, 5]$$$ are not.A matrix contains a permutation if, when all its elements are written out, the resulting array is a permutation. Matrices $$$[[1, 2], [3, 4]]$$$, $$$[[1]]$$$, $$$[[1, 5, 3], [2, 6, 4]]$$$ contain permutations, while matrices $$$[[2]]$$$, $$$[[1, 1], [2, 2]]$$$, $$$[[1, 2], [100, 200]]$$$ do not.You can perform one of the following two actions in one operation:  choose columns $$$c$$$ and $$$d$$$ ($$$1 \\le c, d \\le m$$$, $$$c \\ne d$$$) and swap these columns;  choose rows $$$c$$$ and $$$d$$$ ($$$1 \\le c, d \\le n$$$, $$$c \\ne d$$$) and swap these rows. You can perform any number of operations.You are given the original matrix $$$a$$$ and the matrix $$$b$$$. Your task is to determine whether it is possible to transform matrix $$$a$$$ into matrix $$$b$$$ using the given operations."
  },
  {
    "title": "GCD-sequence",
    "url": "https://codeforces.com/problemset/problem/1980/D",
    "description": "GCD (Greatest Common Divisor) of two integers $$$x$$$ and $$$y$$$ is the maximum integer $$$z$$$ by which both $$$x$$$ and $$$y$$$ are divisible. For example, $$$GCD(36, 48) = 12$$$, $$$GCD(5, 10) = 5$$$, and $$$GCD(7,11) = 1$$$.Kristina has an array $$$a$$$ consisting of exactly $$$n$$$ positive integers. She wants to count the GCD of each neighbouring pair of numbers to get a new array $$$b$$$, called GCD-sequence. So, the elements of the GCD-sequence $$$b$$$ will be calculated using the formula $$$b_i = GCD(a_i, a_{i + 1})$$$ for $$$1 \\le i \\le n - 1$$$.Determine whether it is possible to remove exactly one number from the array $$$a$$$ so that the GCD sequence $$$b$$$ is non-decreasing (i.e., $$$b_i \\le b_{i+1}$$$ is always true).For example, let Khristina had an array $$$a$$$ = [$$$20, 6, 12, 3, 48, 36$$$]. If she removes $$$a_4 = 3$$$ from it and counts the GCD-sequence of $$$b$$$, she gets:  $$$b_1 = GCD(20, 6) = 2$$$  $$$b_2 = GCD(6, 12) = 6$$$  $$$b_3 = GCD(12, 48) = 12$$$  $$$b_4 = GCD(48, 36) = 12$$$  The resulting GCD sequence $$$b$$$ = [$$$2,6,12,12$$$] is non-decreasing because $$$b_1 \\le b_2 \\le b_3 \\le b_4$$$."
  },
  {
    "title": "Sofia and the Lost Operations",
    "url": "https://codeforces.com/problemset/problem/1980/C",
    "description": "Sofia had an array of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$. One day she got bored with it, so she decided to sequentially apply $$$m$$$ modification operations to it.Each modification operation is described by a pair of numbers $$$\\langle c_j, d_j \\rangle$$$ and means that the element of the array with index $$$c_j$$$ should be assigned the value $$$d_j$$$, i.e., perform the assignment $$$a_{c_j} = d_j$$$. After applying all modification operations sequentially, Sofia discarded the resulting array.Recently, you found an array of $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$. You are interested in whether this array is Sofia's array. You know the values of the original array, as well as the values $$$d_1, d_2, \\ldots, d_m$$$. The values $$$c_1, c_2, \\ldots, c_m$$$ turned out to be lost.Is there a sequence $$$c_1, c_2, \\ldots, c_m$$$ such that the sequential application of modification operations $$$\\langle c_1, d_1, \\rangle, \\langle c_2, d_2, \\rangle, \\ldots, \\langle c_m, d_m \\rangle$$$ to the array $$$a_1, a_2, \\ldots, a_n$$$ transforms it into the array $$$b_1, b_2, \\ldots, b_n$$$?"
  },
  {
    "title": "Choosing Cubes",
    "url": "https://codeforces.com/problemset/problem/1980/B",
    "description": "Dmitry has nn cubes, numbered from left to right from 11 to nn. The cube with index ff is his favorite.Dmitry threw all the cubes on the table, and the ii-th cube showed the value aia_i (1≤ai≤1001 \\le a_i \\le 100). After that, he arranged the cubes in non-increasing order of their values, from largest to smallest. If two cubes show the same value, they can go in any order.After sorting, Dmitry removed the first kk cubes. Then he became interested in whether he removed his favorite cube (note that its position could have changed after sorting).For example, if n=5n=5, f=2f=2, a=[4,3,3,2,3]a = [4, \\color{green}3, 3, 2, 3] (the favorite cube is highlighted in green), and k=2k = 2, the following could have happened:  After sorting a=[4,3,3,3,2]a=[4, \\color{green}3, 3, 3, 2], since the favorite cube ended up in the second position, it will be removed.  After sorting a=[4,3,3,3,2]a=[4, 3, \\color{green}3, 3, 2], since the favorite cube ended up in the third position, it will not be removed. "
  },
  {
    "title": "Problem Generator",
    "url": "https://codeforces.com/problemset/problem/1980/A",
    "description": "Vlad is planning to hold $$$m$$$ rounds next month. Each round should contain one problem of difficulty levels 'A', 'B', 'C', 'D', 'E', 'F', and 'G'.Vlad already has a bank of $$$n$$$ problems, where the $$$i$$$-th problem has a difficulty level of $$$a_i$$$. There may not be enough of these problems, so he may have to come up with a few more problems.Vlad wants to come up with as few problems as possible, so he asks you to find the minimum number of problems he needs to come up with in order to hold $$$m$$$ rounds.For example, if $$$m=1$$$, $$$n = 10$$$, $$$a=$$$ 'BGECDCBDED', then he needs to come up with two problems: one of difficulty level 'A' and one of difficulty level 'F'."
  },
  {
    "title": "Kostyanych's Theorem",
    "url": "https://codeforces.com/problemset/problem/1979/F",
    "description": "This is an interactive problem.Kostyanych has chosen a complete undirected graph$$$^{\\dagger}$$$ with $$$n$$$ vertices, and then removed exactly $$$(n - 2)$$$ edges from it. You can ask queries of the following type:  \"? $$$d$$$\" — Kostyanych tells you the number of vertex $$$v$$$ with a degree at least $$$d$$$. Among all possible such vertices, he selects the vertex with the minimum degree, and if there are several such vertices, he selects the one with the minimum number. He also tells you the number of another vertex in the graph, with which $$$v$$$ is not connected by an edge (if none is found, then $$$0$$$ is reported). Among all possible such vertices, he selects the one with the minimum number. Then he removes the vertex $$$v$$$ and all edges coming out of it. If the required vertex $$$v$$$ is not found, then \"$$$0\\ 0$$$\" is reported. Find a Hamiltonian path$$$^{\\ddagger}$$$ in the original graph in at most $$$n$$$ queries. It can be proven that under these constraints, a Hamiltonian path always exists.$$$^{\\dagger}$$$A complete undirected graph is a graph in which there is exactly one undirected edge between any pair of distinct vertices. Thus, a complete undirected graph with $$$n$$$ vertices contains $$$\\frac{n(n-1)}{2}$$$ edges.$$$^{\\ddagger}$$$A Hamiltonian path in a graph is a path that passes through each vertex exactly once."
  },
  {
    "title": "Manhattan Triangle",
    "url": "https://codeforces.com/problemset/problem/1979/E",
    "description": "The Manhattan distance between two points $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ is defined as: $$$$$$|x_1 - x_2| + |y_1 - y_2|.$$$$$$We call a Manhattan triangle three points on the plane, the Manhattan distances between each pair of which are equal.You are given a set of pairwise distinct points and an even integer $$$d$$$. Your task is to find any Manhattan triangle, composed of three distinct points from the given set, where the Manhattan distance between any pair of vertices is equal to $$$d$$$."
  },
  {
    "title": "Fixing a Binary String",
    "url": "https://codeforces.com/problemset/problem/1979/D",
    "description": "You are given a binary string $$$s$$$ of length $$$n$$$, consisting of zeros and ones. You can perform the following operation exactly once:  Choose an integer $$$p$$$ ($$$1 \\le p \\le n$$$).  Reverse the substring $$$s_1 s_2 \\ldots s_p$$$. After this step, the string $$$s_1 s_2 \\ldots s_n$$$ will become $$$s_p s_{p-1} \\ldots s_1 s_{p+1} s_{p+2} \\ldots s_n$$$.  Then, perform a cyclic shift of the string $$$s$$$ to the left $$$p$$$ times. After this step, the initial string $$$s_1s_2 \\ldots s_n$$$ will become $$$s_{p+1}s_{p+2} \\ldots s_n s_p s_{p-1} \\ldots s_1$$$. For example, if you apply the operation to the string 110001100110 with $$$p=3$$$, after the second step, the string will become 011001100110, and after the third step, it will become 001100110011.A string $$$s$$$ is called $$$k$$$-proper if two conditions are met:  $$$s_1=s_2=\\ldots=s_k$$$;  $$$s_{i+k} \\neq s_i$$$ for any $$$i$$$ ($$$1 \\le i \\le n - k$$$). For example, with $$$k=3$$$, the strings 000, 111000111, and 111000 are $$$k$$$-proper, while the strings 000000, 001100, and 1110000 are not.You are given an integer $$$k$$$, which is a divisor of $$$n$$$. Find an integer $$$p$$$ ($$$1 \\le p \\le n$$$) such that after performing the operation, the string $$$s$$$ becomes $$$k$$$-proper, or determine that it is impossible. Note that if the string is initially $$$k$$$-proper, you still need to apply exactly one operation to it."
  },
  {
    "title": "Earning on Bets",
    "url": "https://codeforces.com/problemset/problem/1979/C",
    "description": "You have been offered to play a game. In this game, there are $$$n$$$ possible outcomes, and for each of them, you must bet a certain integer amount of coins. In the event that the $$$i$$$-th outcome turns out to be winning, you will receive back the amount of coins equal to your bet on that outcome, multiplied by $$$k_i$$$. Note that exactly one of the $$$n$$$ outcomes will be winning.Your task is to determine how to distribute the coins in such a way that you will come out ahead in the event of any winning outcome. More formally, the total amount of coins you bet on all outcomes must be strictly less than the number of coins received back for each possible winning outcome."
  },
  {
    "title": "XOR Sequences",
    "url": "https://codeforces.com/problemset/problem/1979/B",
    "description": "You are given two distinct non-negative integers $$$x$$$ and $$$y$$$. Consider two infinite sequences $$$a_1, a_2, a_3, \\ldots$$$ and $$$b_1, b_2, b_3, \\ldots$$$, where  $$$a_n = n \\oplus x$$$;  $$$b_n = n \\oplus y$$$. Here, $$$x \\oplus y$$$ denotes the bitwise XOR operation of integers $$$x$$$ and $$$y$$$.For example, with $$$x = 6$$$, the first $$$8$$$ elements of sequence $$$a$$$ will look as follows: $$$[7, 4, 5, 2, 3, 0, 1, 14, \\ldots]$$$. Note that the indices of elements start with $$$1$$$.Your task is to find the length of the longest common subsegment$$$^\\dagger$$$ of sequences $$$a$$$ and $$$b$$$. In other words, find the maximum integer $$$m$$$ such that $$$a_i = b_j, a_{i + 1} = b_{j + 1}, \\ldots, a_{i + m - 1} = b_{j + m - 1}$$$ for some $$$i, j \\ge 1$$$.$$$^\\dagger$$$A subsegment of sequence $$$p$$$ is a sequence $$$p_l,p_{l+1},\\ldots,p_r$$$, where $$$1 \\le l \\le r$$$."
  },
  {
    "title": "Guess the Maximum",
    "url": "https://codeforces.com/problemset/problem/1979/A",
    "description": "Alice and Bob came up with a rather strange game. They have an array of integers $$$a_1, a_2,\\ldots, a_n$$$. Alice chooses a certain integer $$$k$$$ and tells it to Bob, then the following happens:  Bob chooses two integers $$$i$$$ and $$$j$$$ ($$$1 \\le i < j \\le n$$$), and then finds the maximum among the integers $$$a_i, a_{i + 1},\\ldots, a_j$$$;  If the obtained maximum is strictly greater than $$$k$$$, Alice wins, otherwise Bob wins. Help Alice find the maximum $$$k$$$ at which she is guaranteed to win."
  },
  {
    "title": "Large Graph",
    "url": "https://codeforces.com/problemset/problem/1978/F",
    "description": "Given an array $$$a$$$ of length $$$n$$$. Let's construct a square matrix $$$b$$$ of size $$$n \\times n$$$, in which the $$$i$$$-th row contains the array $$$a$$$ cyclically shifted to the right by $$$(i - 1)$$$. For example, for the array $$$a = [3, 4, 5]$$$, the obtained matrix is$$$$$$b = \\begin{bmatrix} 3 & 4 & 5 \\\\ 5 & 3 & 4 \\\\ 4 & 5 & 3 \\end{bmatrix}$$$$$$Let's construct the following graph:  The graph contains $$$n^2$$$ vertices, each of which corresponds to one of the elements of the matrix. Let's denote the vertex corresponding to the element $$$b_{i, j}$$$ as $$$(i, j)$$$. We will draw an edge between vertices $$$(i_1, j_1)$$$ and $$$(i_2, j_2)$$$ if $$$|i_1 - i_2| + |j_1 - j_2| \\le k$$$ and $$$\\gcd(b_{i_1, j_1}, b_{i_2, j_2}) > 1$$$, where $$$\\gcd(x, y)$$$ denotes the greatest common divisor of integers $$$x$$$ and $$$y$$$. Your task is to calculate the number of connected components$$$^{\\dagger}$$$ in the obtained graph.$$$^{\\dagger}$$$A connected component of a graph is a set of vertices in which any vertex is reachable from any other via edges, and adding any other vertex to the set violates this rule."
  },
  {
    "title": "Computing Machine",
    "url": "https://codeforces.com/problemset/problem/1978/E",
    "description": "Sasha has two binary strings $$$s$$$ and $$$t$$$ of the same length $$$n$$$, consisting of the characters 0 and 1.There is also a computing machine that can perform two types of operations on binary strings $$$a$$$ and $$$b$$$ of the same length $$$k$$$:  If $$$a_{i} = a_{i + 2} =$$$ 0, then you can assign $$$b_{i + 1} :=$$$ 1 ($$$1 \\le i \\le k - 2$$$).  If $$$b_{i} = b_{i + 2} =$$$ 1, then you can assign $$$a_{i + 1} :=$$$ 1 ($$$1 \\le i \\le k - 2$$$). Sasha became interested in the following: if we consider the string $$$a=s_ls_{l+1}\\ldots s_r$$$ and the string $$$b=t_lt_{l+1}\\ldots t_r$$$, what is the maximum number of 1 characters in the string $$$a$$$ that can be obtained using the computing machine. Since Sasha is very curious but lazy, it is up to you to answer this question for several pairs $$$(l_i, r_i)$$$ that interest him."
  },
  {
    "title": "Elections",
    "url": "https://codeforces.com/problemset/problem/1978/D",
    "description": "Elections are taking place in Berland. There are $$$n$$$ candidates participating in the elections, numbered from $$$1$$$ to $$$n$$$. The $$$i$$$-th candidate has $$$a_i$$$ fans who will vote for him. Additionally, there are $$$c$$$ people who are undecided about their favorite candidate, let's call them undecided. Undecided people will vote for the candidate with the lowest number.The candidate who receives the maximum number of votes wins the elections, and if multiple candidates receive the same maximum number of votes, the candidate with the lowest number among them wins.You found these elections too boring and predictable, so you decided to exclude some candidates from them. If you do not allow candidate number $$$i$$$ to participate in the elections, all $$$a_i$$$ of his fans will become undecided, and will vote for the candidate with the lowest number.You are curious to find, for each $$$i$$$ from $$$1$$$ to $$$n$$$, the minimum number of candidates that need to be excluded from the elections for candidate number $$$i$$$ to win the elections."
  },
  {
    "title": "Manhattan Permutations",
    "url": "https://codeforces.com/problemset/problem/1978/C",
    "description": "Let's call the Manhattan value of a permutation$$$^{\\dagger}$$$ $$$p$$$ the value of the expression $$$|p_1 - 1| + |p_2 - 2| + \\ldots + |p_n - n|$$$.For example, for the permutation $$$[1, 2, 3]$$$, the Manhattan value is $$$|1 - 1| + |2 - 2| + |3 - 3| = 0$$$, and for the permutation $$$[3, 1, 2]$$$, the Manhattan value is $$$|3 - 1| + |1 - 2| + |2 - 3| = 2 + 1 + 1 = 4$$$.You are given integers $$$n$$$ and $$$k$$$. Find a permutation $$$p$$$ of length $$$n$$$ such that its Manhattan value is equal to $$$k$$$, or determine that no such permutation exists.$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "New Bakery",
    "url": "https://codeforces.com/problemset/problem/1978/B",
    "description": "Bob decided to open a bakery. On the opening day, he baked $$$n$$$ buns that he can sell. The usual price of a bun is $$$a$$$ coins, but to attract customers, Bob organized the following promotion: Bob chooses some integer $$$k$$$ ($$$0 \\le k \\le \\min(n, b)$$$). Bob sells the first $$$k$$$ buns at a modified price. In this case, the price of the $$$i$$$-th ($$$1 \\le i \\le k$$$) sold bun is $$$(b - i + 1)$$$ coins. The remaining $$$(n - k)$$$ buns are sold at $$$a$$$ coins each.Note that $$$k$$$ can be equal to $$$0$$$. In this case, Bob will sell all the buns at $$$a$$$ coins each.Help Bob determine the maximum profit he can obtain by selling all $$$n$$$ buns."
  },
  {
    "title": "Alice and Books",
    "url": "https://codeforces.com/problemset/problem/1978/A",
    "description": "Alice has $$$n$$$ books. The $$$1$$$-st book contains $$$a_1$$$ pages, the $$$2$$$-nd book contains $$$a_2$$$ pages, $$$\\ldots$$$, the $$$n$$$-th book contains $$$a_n$$$ pages. Alice does the following: She divides all the books into two non-empty piles. Thus, each book ends up in exactly one of the two piles. Alice reads one book with the highest number in each pile.Alice loves reading very much. Help her find the maximum total number of pages she can read by dividing the books into two piles."
  },
  {
    "title": "Tensor",
    "url": "https://codeforces.com/problemset/problem/1977/E",
    "description": "This is an interactive problem.You are given an integer $$$n$$$.The jury has hidden from you a directed graph with $$$n$$$ vertices (numbered from $$$1$$$ to $$$n$$$) and some number of edges. You additionally know that:   The graph only contains edges of the form $$$i \\leftarrow j$$$, where $$$1 \\le i < j \\le n$$$.  For any three vertices $$$1 \\le i < j < k \\le n$$$, at least one of the following holds$$$^\\dagger$$$:   Vertex $$$i$$$ is reachable from vertex $$$j$$$, or  Vertex $$$i$$$ is reachable from vertex $$$k$$$, or  Vertex $$$j$$$ is reachable from vertex $$$k$$$.  You want to color each vertex in either black or white such that for any two vertices $$$i$$$ and $$$j$$$ ($$$1 \\le i < j \\le n$$$) of the same color, vertex $$$i$$$ is reachable from vertex $$$j$$$.To do that, you can ask queries of the following type:   ?  i  j — is vertex $$$i$$$ reachable from vertex $$$j$$$ ($$$1 \\le i < j \\le n$$$)? Find any valid vertex coloring of the hidden graph in at most $$$2 \\cdot n$$$ queries. It can be proven that such a coloring always exists.Note that the grader is not adaptive: the graph is fixed before any queries are made.$$$^\\dagger$$$ Vertex $$$a$$$ is reachable from vertex $$$b$$$ if there exists a path from vertex $$$b$$$ to vertex $$$a$$$ in the graph."
  },
  {
    "title": "XORificator",
    "url": "https://codeforces.com/problemset/problem/1977/D",
    "description": "You are given a binary (consisting only of 0s and 1s) $$$n \\times m$$$ matrix. You are also given a XORificator, using which you can invert all the values in a chosen row (i.e. replace 0 with 1 and 1 with 0).A column in the matrix is considered special if it contains exactly one 1. Your task is to find the maximum number of columns that can be made special at the same time, and the set of rows the XORificator should be used on to achieve that."
  },
  {
    "title": "Nikita and LCM",
    "url": "https://codeforces.com/problemset/problem/1977/C",
    "description": "Nikita is a student passionate about number theory and algorithms. He faces an interesting problem related to an array of numbers.Suppose Nikita has an array of integers $$$a$$$ of length $$$n$$$. He will call a subsequence$$$^\\dagger$$$ of the array special if its least common multiple (LCM) is not contained in $$$a$$$. The LCM of an empty subsequence is equal to $$$0$$$.Nikita wonders: what is the length of the longest special subsequence of $$$a$$$? Help him answer this question!$$$^\\dagger$$$ A sequence $$$b$$$ is a subsequence of $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements, without changing the order of the remaining elements. For example, $$$[5,2,3]$$$ is a subsequence of $$$[1,5,7,8,2,4,3]$$$."
  },
  {
    "title": "Binary Colouring",
    "url": "https://codeforces.com/problemset/problem/1977/B",
    "description": "You are given a positive integer $$$x$$$. Find any array of integers $$$a_0, a_1, \\ldots, a_{n-1}$$$ for which the following holds:   $$$1 \\le n \\le 32$$$,  $$$a_i$$$ is $$$1$$$, $$$0$$$, or $$$-1$$$ for all $$$0 \\le i \\le n - 1$$$,  $$$x = \\displaystyle{\\sum_{i=0}^{n - 1}{a_i \\cdot 2^i}}$$$,  There does not exist an index $$$0 \\le i \\le n - 2$$$ such that both $$$a_{i} \\neq 0$$$ and $$$a_{i + 1} \\neq 0$$$. It can be proven that under the constraints of the problem, a valid array always exists."
  },
  {
    "title": "Little Nikita",
    "url": "https://codeforces.com/problemset/problem/1977/A",
    "description": "The little boy Nikita was given some cubes as a present. He decided to build a tower out of them.Initially, the tower doesn't have any cubes. In one move, Nikita either puts exactly $$$1$$$ cube on top of the tower or removes exactly $$$1$$$ cube from the top of the tower. Is it possible that after $$$n$$$ moves, the resulting tower has exactly $$$m$$$ cubes?"
  },
  {
    "title": "Remove Bridges",
    "url": "https://codeforces.com/problemset/problem/1976/F",
    "description": "You are given a rooted tree, consisting of $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. Vertex $$$1$$$ is the root. Additionally, the root only has one child.You are asked to add exactly $$$k$$$ edges to the tree (possibly, multiple edges and/or edges already existing in the tree).Recall that a bridge is such an edge that, after you remove it, the number of connected components in the graph increases. So, initially, all edges of the tree are bridges.After $$$k$$$ edges are added, some original edges of the tree are still bridges and some are not anymore. You want to satisfy two conditions:   for every bridge, all tree edges in the subtree of the lower vertex of that bridge should also be bridges;  the number of bridges is as small as possible. Solve the task for all values of $$$k$$$ from $$$1$$$ to $$$n - 1$$$ and output the smallest number of bridges."
  },
  {
    "title": "Splittable Permutations",
    "url": "https://codeforces.com/problemset/problem/1976/E",
    "description": "Initially, we had one array, which was a permutation of size nn (an array of size nn where each integer from 11 to nn appears exactly once).We performed qq operations. During the ii-th operation, we did the following:  choose any array we have with at least 22 elements;  split it into two non-empty arrays (prefix and suffix);  write two integers lil_i and rir_i, where lil_i is the maximum element in the left part which we get after the split, and rir_i is the maximum element in the right part;  remove the array we've chosen from the pool of arrays we can use, and add the two resulting parts into the pool. For example, suppose the initial array was [6,3,4,1,2,5][6, 3, 4, 1, 2, 5], and we performed the following operations:  choose the array [6,3,4,1,2,5][6, 3, 4, 1, 2, 5] and split it into [6,3][6, 3] and [4,1,2,5][4, 1, 2, 5]. Then we write l1=6l_1 = 6 and r1=5r_1 = 5, and the arrays we have are [6,3][6, 3] and [4,1,2,5][4, 1, 2, 5];  choose the array [4,1,2,5][4, 1, 2, 5] and split it into [4,1,2][4, 1, 2] and [5][5]. Then we write l2=4l_2 = 4 and r2=5r_2 = 5, and the arrays we have are [6,3][6, 3], [4,1,2][4, 1, 2] and [5][5];  choose the array [4,1,2][4, 1, 2] and split it into [4][4] and [1,2][1, 2]. Then we write l3=4l_3 = 4 and r3=2r_3 = 2, and the arrays we have are [6,3][6, 3], [4][4], [1,2][1, 2] and [5][5]. You are given two integers nn and qq, and two sequences [l1,l2,…,lq][l_1, l_2, \\dots, l_q] and [r1,r2,…,rq][r_1, r_2, \\dots, r_q]. A permutation of size nn is called valid if we can perform qq operations and produce the given sequences [l1,l2,…,lq][l_1, l_2, \\dots, l_q] and [r1,r2,…,rq][r_1, r_2, \\dots, r_q].Calculate the number of valid permutations."
  },
  {
    "title": "Invertible Bracket Sequences",
    "url": "https://codeforces.com/problemset/problem/1976/D",
    "description": "A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters '1' and '+' between the original characters of the sequence. For example:  bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");  bracket sequences \")(\", \"(\" and \")\" are not. Let's define the inverse of the bracket sequence as follows: replace all brackets '(' with ')', and vice versa (all brackets ')' with '('). For example, strings \"()((\" and \")())\" are inverses of each other.You are given a regular bracket sequence ss. Calculate the number of pairs of integers (l,r)(l,r) (1≤l≤r≤|s|1 \\le l \\le r \\le |s|) such that if you replace the substring of ss from the ll-th character to the rr-th character (inclusive) with its inverse, ss will still be a regular bracket sequence."
  },
  {
    "title": "Job Interview",
    "url": "https://codeforces.com/problemset/problem/1976/C",
    "description": "Monocarp is opening his own IT company. He wants to hire nn programmers and mm testers. There are n+m+1n+m+1 candidates, numbered from 11 to n+m+1n+m+1 in chronological order of their arriving time. The ii-th candidate has programming skill aia_i and testing skill bib_i (a person's programming skill is different from their testing skill). The skill of the team is the sum of the programming skills of all candidates hired as programmers, and the sum of the testing skills of all candidates hired as testers.When a candidate arrives to interview, Monocarp tries to assign them to the most suitable position for them (if their programming skill is higher, then he hires them as a programmer, otherwise as a tester). If all slots for that position are filled, Monocarp assigns them to the other position.Your task is, for each candidate, calculate the skill of the team if everyone except them comes to interview. Note that it means that exactly n+mn+m candidates will arrive, so all n+mn+m positions in the company will be filled."
  },
  {
    "title": "Increase/Decrease/Copy",
    "url": "https://codeforces.com/problemset/problem/1976/B",
    "description": "You are given two integer arrays: array aa of length nn and array bb of length n+1n+1.You can perform the following operations any number of times in any order:   choose any element of the array aa and increase it by 11;  choose any element of the array aa and decrease it by 11;  choose any element of the array aa, copy it and append the copy to the end of the array aa. Your task is to calculate the minimum number of aforementioned operations (possibly zero) required to transform the array aa into the array bb. It can be shown that under the constraints of the problem, it is always possible."
  },
  {
    "title": "Verify Password",
    "url": "https://codeforces.com/problemset/problem/1976/A",
    "description": "Monocarp is working on his new site, and the current challenge is to make the users pick strong passwords.Monocarp decided that strong passwords should satisfy the following conditions:   password should consist only of lowercase Latin letters and digits;  there should be no digit that comes after a letter (so, after each letter, there is either another letter or the string ends);  all digits should be sorted in the non-decreasing order;  all letters should be sorted in the non-decreasing order. Note that it's allowed for the password to have only letters or only digits.Monocarp managed to implement the first condition, but he struggles with the remaining ones. Can you help him to verify the passwords?"
  },
  {
    "title": "Mind Bloom",
    "url": "https://codeforces.com/problemset/problem/1975/I",
    "description": "This is the way it always was. This is the way it always will be. All will be forgotten again soon...Jellyfish is playing a one-player card game called \"Slay the Spire\". There are nn cards in total numbered from 11 to nn. The ii-th card has power cic_i.There is a binary string ss of length nn. If si=0s_i = \\texttt{0}, the ii-th card is initially in the draw pile. If si=1s_i = \\texttt{1}, the ii-th card is initially in Jellyfish's hand.Jellyfish will repeat the following process until either her hand or the draw pile is empty.   Let xx be the power of the card with the largest power in her hand.  Place a single card with power xx back into the draw pile.  Randomly draw xx cards from the draw pile. All subsets of xx cards from the draw pile have an equal chance of being drawn. If there are fewer than xx cards in the draw pile, Jellyfish will draw all cards. At the end of this process, find the probability that Jellyfish can empty the draw pile, modulo 10000000071\\,000\\,000\\,007.Formally, let M=1000000007M=1\\,000\\,000\\,007. It can be shown that the answer can be expressed as an irreducible fraction pq\\frac{p}{q}, where pp and qq are integers and q≢q \\not \\equiv 0 \\pmod{M}. Output the integer equal to p \\cdot q^{-1} \\bmod Mp \\cdot q^{-1} \\bmod M. In other words, output such an integer xx that 0 \\le x < M0 \\le x < M and x \\cdot q \\equiv p \\pmod{M}x \\cdot q \\equiv p \\pmod{M}."
  },
  {
    "title": "378QAQ and Core",
    "url": "https://codeforces.com/problemset/problem/1975/H",
    "description": "378QAQ has a string $$$s$$$ of length $$$n$$$. Define the core of a string as the substring$$$^\\dagger$$$ with maximum lexicographic$$$^\\ddagger$$$ order.For example, the core of \"$$$\\mathtt{bazoka}$$$\" is \"$$$\\mathtt{zoka}$$$\", and the core of \"$$$\\mathtt{aaa}$$$\" is \"$$$\\mathtt{aaa}$$$\".378QAQ wants to rearrange the string $$$s$$$ so that the core is lexicographically minimum. Find the lexicographically minimum possible core over all rearrangements of $$$s$$$.$$$^\\dagger$$$ A substring of string $$$s$$$ is a continuous segment of letters from $$$s$$$. For example, \"$$$\\mathtt{defor}$$$\", \"$$$\\mathtt{code}$$$\" and \"$$$\\mathtt{o}$$$\" are all substrings of \"$$$\\mathtt{codeforces}$$$\" while \"$$$\\mathtt{codes}$$$\" and \"$$$\\mathtt{aaa}$$$\" are not.$$$^\\ddagger$$$ A string $$$p$$$ is lexicographically smaller than a string $$$q$$$ if and only if one of the following holds:   $$$p$$$ is a prefix of $$$q$$$, but $$$p \\ne q$$$; or  in the first position where $$$p$$$ and $$$q$$$ differ, the string $$$p$$$ has a smaller element than the corresponding element in $$$q$$$ (when compared by their ASCII code). For example, \"$$$\\mathtt{code}$$$\" and \"$$$\\mathtt{coda}$$$\" are both lexicographically smaller than \"$$$\\mathtt{codeforces}$$$\" while \"$$$\\mathtt{codeforceston}$$$\" and \"$$$\\mathtt{z}$$$\" are not."
  },
  {
    "title": "Zimpha Fan Club",
    "url": "https://codeforces.com/problemset/problem/1975/G",
    "description": "One day, Zimpha casually came up with a problem. As a member of \"Zimpha fan club\", you decided to solve that problem.You are given two strings $$$s$$$ and $$$t$$$ of length $$$n$$$ and $$$m$$$, respectively. Both strings only consist of lowercase English letters, - and *.You need to replace all occurrences of * and -, observing the following rules:  For each -, you must replace it with any lowercase English letter.  For each *, you must replace it with a string of any (possibly, zero) length which only consists of lowercase English letters. Note that you can replace two different instances of - with different characters. You can also replace each two different instances of * with different strings.Suppose $$$s$$$ and $$$t$$$ have been transformed into $$$s'$$$ and $$$t'$$$. Now you're wondering if there's a replacement that makes $$$s'=t'$$$."
  },
  {
    "title": "Set",
    "url": "https://codeforces.com/problemset/problem/1975/F",
    "description": "Define the binary encoding of a finite set of natural numbers $$$T \\subseteq \\{0,1,2,\\ldots\\}$$$ as $$$f(T) = \\sum\\limits_{i \\in T} 2^i$$$. For example, $$$f(\\{0,2\\}) = 2^0 + 2^2 = 5$$$ and $$$f(\\{\\}) = 0$$$. Notice that $$$f$$$ is a bijection from all such sets to all non-negative integers. As such, $$$f^{-1}$$$ is also defined.You are given an integer $$$n$$$ along with $$$2^n-1$$$ sets $$$V_1,V_2,\\ldots,V_{2^n-1}$$$.Find all sets $$$S$$$ that satisfy the following constraint:   $$$S \\subseteq \\{0,1,\\ldots,n-1\\}$$$. Note that $$$S$$$ can be empty.  For all non-empty subsets $$$T \\subseteq \\{0,1,\\ldots,n-1\\}$$$, $$$|S \\cap T| \\in V_{f(T)}$$$. Due to the large input and output, both input and output will be given in terms of binary encodings of the sets."
  },
  {
    "title": "Chain Queries",
    "url": "https://codeforces.com/problemset/problem/1975/E",
    "description": "You are given a tree of nn vertices numbered from 11 to nn. Initially, all vertices are colored white or black.You are asked to perform qq queries:  \"u\" — toggle the color of vertex uu (if it was white, change it to black and vice versa). After each query, you should answer whether all the black vertices form a chain. That is, there exist two black vertices such that the simple path between them passes through all the black vertices and only the black vertices. Specifically, if there is only one black vertex, they form a chain. If there are no black vertices, they do not form a chain."
  },
  {
    "title": "Paint the Tree",
    "url": "https://codeforces.com/problemset/problem/1975/D",
    "description": "378QAQ has a tree with $$$n$$$ vertices. Initially, all vertices are white. There are two chess pieces called $$$P_A$$$ and $$$P_B$$$ on the tree. $$$P_A$$$ and $$$P_B$$$ are initially located on vertices $$$a$$$ and $$$b$$$ respectively. In one step, 378QAQ will do the following in order:  Move $$$P_A$$$ to a neighboring vertex. If the target vertex is white, this vertex will be painted red.  Move $$$P_B$$$ to a neighboring vertex. If the target vertex is colored in red, this vertex will be painted blue. Initially, the vertex $$$a$$$ is painted red. If $$$a=b$$$, the vertex $$$a$$$ is painted blue instead. Note that both the chess pieces must be moved in each step. Two pieces can be on the same vertex at any given time.378QAQ wants to know the minimum number of steps to paint all vertices blue."
  },
  {
    "title": "Chamo and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1975/C",
    "description": "Mocha likes arrays, so before her departure, Chamo gave her an array $$$a$$$ consisting of $$$n$$$ positive integers as a gift.Mocha doesn't like arrays containing different numbers, so Mocha decides to use magic to change the array. Mocha can perform the following three-step operation some (possibly, zero) times:   Choose indices $$$l$$$ and $$$r$$$ ($$$1 \\leq l < r \\leq n$$$)  Let $$$x$$$ be the median$$$^\\dagger$$$ of the subarray $$$[a_l, a_{l+1},\\ldots, a_r]$$$  Set all values $$$a_l, a_{l+1},\\ldots, a_r$$$ to $$$x$$$ Suppose $$$a=[1,2,3,4,5]$$$ initially:   If Mocha chooses $$$(l,r)=(3,4)$$$ in the first operation, then $$$x=3$$$, the array will be changed into $$$a=[1,2,3,3,5]$$$.  If Mocha chooses $$$(l,r)=(1,3)$$$ in the first operation, then $$$x=2$$$, the array will be changed into $$$a=[2,2,2,4,5]$$$. Mocha will perform the operation until the array contains only the same number. Mocha wants to know what is the maximum possible value of this number.$$$^\\dagger$$$ The median in an array $$$b$$$ of length $$$m$$$ is an element that occupies position number $$$\\lfloor \\frac{m+1}{2} \\rfloor$$$ after we sort the elements in non-decreasing order. For example, the median of $$$[3,1,4,1,5]$$$ is $$$3$$$ and the median of $$$[5,25,20,24]$$$ is $$$20$$$."
  },
  {
    "title": "378QAQ and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1975/B",
    "description": "Mocha likes arrays, so before her departure, 378QAQ gave her an array $$$a$$$ consisting of $$$n$$$ positive integers as a gift.Mocha thinks that $$$a$$$ is beautiful if there exist two numbers $$$i$$$ and $$$j$$$ ($$$1\\leq i,j\\leq n$$$, $$$i\\neq j$$$) such that for all $$$k$$$ ($$$1 \\leq k \\leq n$$$), $$$a_k$$$ is divisible$$$^\\dagger$$$ by either $$$a_i$$$ or $$$a_j$$$.Determine whether $$$a$$$ is beautiful.$$$^\\dagger$$$ $$$x$$$ is divisible by $$$y$$$ if there exists an integer $$$z$$$ such that $$$x = y \\cdot z$$$."
  },
  {
    "title": "Bazoka and Mocha's Array",
    "url": "https://codeforces.com/problemset/problem/1975/A",
    "description": "Mocha likes arrays, so before her departure, Bazoka gave her an array $$$a$$$ consisting of $$$n$$$ positive integers as a gift.Now Mocha wants to know whether array $$$a$$$ could become sorted in non-decreasing order after performing the following operation some (possibly, zero) times:  Split the array into two parts — a prefix and a suffix, then swap these two parts. In other words, let $$$a=x+y$$$. Then, we can set $$$a:= y+x$$$. Here $$$+$$$ denotes the array concatenation operation. For example, if $$$a=[3,1,4,1,5]$$$, we can choose $$$x=[3,1]$$$ and $$$y=[4,1,5]$$$, satisfying $$$a=x+y$$$. Then, we can set $$$a:= y + x = [4,1,5,3,1]$$$. We can also choose $$$x=[3,1,4,1,5]$$$ and $$$y=[\\,]$$$, satisfying $$$a=x+y$$$. Then, we can set $$$a := y+x = [3,1,4,1,5]$$$. Note that we are not allowed to choose $$$x=[3,1,1]$$$ and $$$y=[4,5]$$$, neither are we allowed to choose $$$x=[1,3]$$$ and $$$y=[5,1,4]$$$, as both these choices do not satisfy $$$a=x+y$$$."
  },
  {
    "title": "Money Buys Less Happiness Now ",
    "url": "https://codeforces.com/problemset/problem/1974/G",
    "description": "You can never buy enough happiness, so here we go again! In this version, you can only buy hi=1h_i = 1 unit of happiness each month, but the number of months is hugely increased. We are in the realm of quantum happiness and time dilation.Being a physicist, Charlie likes to plan his life in simple and precise terms. For the next mm months, starting with no money, Charlie will work hard and earn xx pounds per month. For the ii-th month (1≤i≤m)(1 \\le i \\le m), there'll be a single opportunity of paying cost cic_i pounds to obtain one unit of happiness. You cannot buy more than one unit each month.Borrowing is not allowed. Money earned in the ii-th month can only be spent in a later jj-th month (j>ij>i).Since physicists don't code, help Charlie find the maximum reachable units of happiness."
  },
  {
    "title": "Cutting Game",
    "url": "https://codeforces.com/problemset/problem/1974/F",
    "description": "Alice and Bob were playing a game again. They have a grid of size $$$a \\times b$$$ ($$$1 \\le a, b \\le 10^9$$$), on which there are $$$n$$$ chips, with at most one chip in each cell. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column has coordinates $$$(x, y)$$$.Alice made the first move, and the players took turns. On each move, a player could cut several (but not all) rows or columns from the beginning or end of the remaining grid and earn a point for each chip that was on the cut part of the grid. Each move can be described by the character 'U', 'D', 'L', or 'R' and an integer $$$k$$$:  If the character is 'U', then the first $$$k$$$ remaining rows will be cut;  If the character is 'D', then the last $$$k$$$ remaining rows will be cut;  If the character is 'L', then the first $$$k$$$ remaining columns will be cut;  If the character is 'R', then the last $$$k$$$ remaining columns will be cut. Based on the initial state of the grid and the players' moves, determine the number of points earned by Alice and Bob, respectively."
  },
  {
    "title": "Money Buys Happiness",
    "url": "https://codeforces.com/problemset/problem/1974/E",
    "description": "Being a physicist, Charlie likes to plan his life in simple and precise terms. For the next $$$m$$$ months, starting with no money, Charlie will work hard and earn $$$x$$$ pounds per month. For the $$$i$$$-th month $$$(1 \\le i \\le m)$$$, there'll be a single opportunity of paying cost $$$c_i$$$ pounds to obtain happiness $$$h_i$$$.Borrowing is not allowed. Money earned in the $$$i$$$-th month can only be spent in a later $$$j$$$-th month ($$$j>i$$$).Since physicists don't code, help Charlie find the maximum obtainable sum of happiness."
  },
  {
    "title": "Ingenuity-2",
    "url": "https://codeforces.com/problemset/problem/1974/D",
    "description": "Let's imagine the surface of Mars as an infinite coordinate plane. Initially, the rover Perseverance-2 and the helicopter Ingenuity-2 are located at the point with coordinates $$$(0, 0)$$$. A set of instructions $$$s$$$ consisting of $$$n$$$ instructions of the following types was specially developed for them:  N: move one meter north (from point $$$(x, y)$$$ to $$$(x, y + 1)$$$);  S: move one meter south (from point $$$(x, y)$$$ to $$$(x, y - 1)$$$);  E: move one meter east (from point $$$(x, y)$$$ to $$$(x + 1, y)$$$);  W: move one meter west (from point $$$(x, y)$$$ to $$$(x - 1, y)$$$). Each instruction must be executed either by the rover or by the helicopter. Moreover, each device must execute at least one instruction. Your task is to distribute the instructions in such a way that after executing all $$$n$$$ instructions, the helicopter and the rover end up at the same point, or determine that this is impossible."
  },
  {
    "title": "Beautiful Triple Pairs",
    "url": "https://codeforces.com/problemset/problem/1974/C",
    "description": "Polycarp was given an array $$$a$$$ of $$$n$$$ integers. He really likes triples of numbers, so for each $$$j$$$ ($$$1 \\le j \\le n - 2$$$) he wrote down a triple of elements $$$[a_j, a_{j + 1}, a_{j + 2}]$$$.Polycarp considers a pair of triples $$$b$$$ and $$$c$$$ beautiful if they differ in exactly one position, that is, one of the following conditions is satisfied:  $$$b_1 \\ne c_1$$$ and $$$b_2 = c_2$$$ and $$$b_3 = c_3$$$;  $$$b_1 = c_1$$$ and $$$b_2 \\ne c_2$$$ and $$$b_3 = c_3$$$;  $$$b_1 = c_1$$$ and $$$b_2 = c_2$$$ and $$$b_3 \\ne c_3$$$. Find the number of beautiful pairs of triples among the written triples $$$[a_j, a_{j + 1}, a_{j + 2}]$$$."
  },
  {
    "title": "Symmetric Encoding",
    "url": "https://codeforces.com/problemset/problem/1974/B",
    "description": "Polycarp has a string $$$s$$$, which consists of lowercase Latin letters. He encodes this string using the following algorithm:  first, he constructs a new auxiliary string $$$r$$$, which consists of all distinct letters of the string $$$s$$$, written in alphabetical order;  then the encoding happens as follows: each character in the string $$$s$$$ is replaced by its symmetric character from the string $$$r$$$ (the first character of the string $$$r$$$ will be replaced by the last, the second by the second from the end, and so on). For example, encoding the string $$$s$$$=\"codeforces\" happens as follows:  the string $$$r$$$ is obtained as \"cdefors\";  the first character $$$s_1$$$='c' is replaced by 's';  the second character $$$s_2$$$='o' is replaced by 'e';  the third character $$$s_3$$$='d' is replaced by 'r';  ...  the last character $$$s_{10}$$$='s' is replaced by 'c'.   The string $$$r$$$ and replacements for $$$s$$$=\"codeforces\". Thus, the result of encoding the string $$$s$$$=\"codeforces\" is the string \"serofedsoc\".Write a program that performs decoding — that is, restores the original string $$$s$$$ from the encoding result."
  },
  {
    "title": "Phone Desktop",
    "url": "https://codeforces.com/problemset/problem/1974/A",
    "description": "Little Rosie has a phone with a desktop (or launcher, as it is also called). The desktop can consist of several screens. Each screen is represented as a grid of size $$$5 \\times 3$$$, i.e., five rows and three columns.There are $$$x$$$ applications with an icon size of $$$1 \\times 1$$$ cells; such an icon occupies only one cell of the screen. There are also $$$y$$$ applications with an icon size of $$$2 \\times 2$$$ cells; such an icon occupies a square of $$$4$$$ cells on the screen. Each cell of each screen can be occupied by no more than one icon.Rosie wants to place the application icons on the minimum number of screens. Help her find the minimum number of screens needed."
  },
  {
    "title": "Maximum GCD Sum Queries",
    "url": "https://codeforces.com/problemset/problem/1973/F",
    "description": "For $$$k$$$ positive integers $$$x_1, x_2, \\ldots, x_k$$$, the value $$$\\gcd(x_1, x_2, \\ldots, x_k)$$$ is the greatest common divisor of the integers $$$x_1, x_2, \\ldots, x_k$$$ — the largest integer $$$z$$$ such that all the integers $$$x_1, x_2, \\ldots, x_k$$$ are divisible by $$$z$$$.You are given three arrays $$$a_1, a_2, \\ldots, a_n$$$, $$$b_1, b_2, \\ldots, b_n$$$ and $$$c_1, c_2, \\ldots, c_n$$$ of length $$$n$$$, containing positive integers. You also have a machine that allows you to swap $$$a_i$$$ and $$$b_i$$$ for any $$$i$$$ ($$$1 \\le i \\le n$$$). Each swap costs you $$$c_i$$$ coins.Find the maximum possible value of $$$$$$\\gcd(a_1, a_2, \\ldots, a_n) + \\gcd(b_1, b_2, \\ldots, b_n)$$$$$$ that you can get by paying in total at most $$$d$$$ coins for swapping some elements. The amount of coins you have changes a lot, so find the answer to this question for each of the $$$q$$$ possible values $$$d_1, d_2, \\ldots, d_q$$$."
  },
  {
    "title": "Cat, Fox and Swaps ",
    "url": "https://codeforces.com/problemset/problem/1973/E",
    "description": "Fox has found an array $$$p_1, p_2, \\ldots, p_n$$$, that is a permutation of length $$$n^\\dagger$$$ of the numbers $$$1, 2, \\ldots, n$$$. She wants to sort the elements in increasing order. Cat wants to help her — he is able to swap any two numbers $$$x$$$ and $$$y$$$ in the array, but only if $$$l \\leq x + y \\leq r$$$ (note that the constraint is imposed on the values of the elements, not their positions). He can make such swaps any number of times.They don't know the numbers $$$l$$$, $$$r$$$ yet, they only know that it's true that $$$1 \\leq l \\leq r \\leq 2 \\cdot n$$$. You are given the number $$$n$$$ and the array $$$p_1, p_2, \\ldots, p_n$$$. Determine how many pairs $$$(l, r)$$$ satisfying the conditions are there such that you can sort the permutation if you can only swap two number $$$(x, y)$$$ such that $$$l \\leq x + y \\leq r$$$ (arbitrary number of times, possibly $$$0$$$).$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Cat, Fox and Maximum Array Split",
    "url": "https://codeforces.com/problemset/problem/1973/D",
    "description": "This is an interactive problem.Fox gave Cat two positive integers $$$n$$$ and $$$k$$$. She has a hidden array $$$a_1, \\ldots , a_n$$$ of length $$$n$$$, such that $$$1 \\leq a_i \\leq n$$$ for every $$$i$$$. Now they are going to play the following game:For any two integers $$$l, r$$$ such that $$$1 \\leq l \\leq r \\leq n$$$, define $$$f(l, r) = (r - l + 1) \\cdot \\max\\limits_{x=l}^r a_x$$$. In other words, $$$f(l, r)$$$ is equal to the maximum of the subarray $$$a_l, \\ldots, a_r$$$ multiplied by its size.Cat can ask Fox at most $$$2 n$$$ questions about the array. He will tell her two integers $$$l$$$ and $$$x$$$ ($$$1 \\leq l \\leq n, 1 \\leq x \\leq 10^9$$$), and she will tell him one integer $$$p$$$ as the answer — the smallest positive integer $$$r$$$ such that $$$f(l, r) = x$$$, or $$$n+1$$$ if no such $$$r$$$ exists.Now, Cat needs to find the largest value $$$m$$$ such that there exists a sequence $$$c_1, \\ldots, c_{k-1}$$$ such that $$$1 \\leq c_1 < \\ldots < c_{k-1} < n$$$ and $$$f(1, c_1) = f(c_1 + 1, c_2) = \\ldots = f(c_{k-1}+1, n) = m$$$. If no such $$$m$$$ exists, he should indicate this and take $$$-1$$$ as the answer. Note that for $$$k = 1$$$, $$$m$$$ is always equal to $$$f(1, n)$$$.In other words, the goal is to find the largest $$$m$$$ such that you can split the array into exactly $$$k$$$ subarrays ($$$k$$$ is the constant given to you in the beginning of the interaction) so that all the subarrays have the product of their length and their maximum equal to $$$m$$$, or determine that no such $$$m$$$ exists. Every element should belong in exactly one of the subarrays.Cat doesn't know what he should do, so he asked you to play the game for him."
  },
  {
    "title": "Cat, Fox and Double Maximum",
    "url": "https://codeforces.com/problemset/problem/1973/C",
    "description": "Fox loves permutations! She came up with the following problem and asked Cat to solve it:You are given an even positive integer $$$n$$$ and a permutation$$$^\\dagger$$$ $$$p$$$ of length $$$n$$$. The score of another permutation $$$q$$$ of length $$$n$$$ is the number of local maximums in the array $$$a$$$ of length $$$n$$$, where $$$a_i = p_i + q_i$$$ for all $$$i$$$ ($$$1 \\le i \\le n$$$). In other words, the score of $$$q$$$ is the number of $$$i$$$ such that $$$1 < i < n$$$ (note the strict inequalities), $$$a_{i-1} < a_i$$$, and $$$a_i > a_{i+1}$$$ (once again, note the strict inequalities). Find the permutation $$$q$$$ that achieves the maximum score for given $$$n$$$ and $$$p$$$. If there exist multiple such permutations, you can pick any of them.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Cat, Fox and the Lonely Array",
    "url": "https://codeforces.com/problemset/problem/1973/B",
    "description": "Today, Cat and Fox found an array $$$a$$$ consisting of $$$n$$$ non-negative integers. Define the loneliness of $$$a$$$ as the smallest positive integer $$$k$$$ ($$$1 \\le k \\le n$$$) such that for any two positive integers $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq n - k +1$$$), the following holds: $$$$$$a_i | a_{i+1} | \\ldots | a_{i+k-1} = a_j | a_{j+1} | \\ldots | a_{j+k-1},$$$$$$ where $$$x | y$$$ denotes the bitwise OR of $$$x$$$ and $$$y$$$. In other words, for every $$$k$$$ consecutive elements, their bitwise OR should be the same. Note that the loneliness of $$$a$$$ is well-defined, because for $$$k = n$$$ the condition is satisfied.Cat and Fox want to know how lonely the array $$$a$$$ is. Help them calculate the loneliness of the found array."
  },
  {
    "title": "Chess For Three",
    "url": "https://codeforces.com/problemset/problem/1973/A",
    "description": "Three friends gathered to play a few games of chess together.In every game, two of them play against each other. The winner gets $$$2$$$ points while the loser gets $$$0$$$, and in case of a draw, both players get $$$1$$$ point each. Note that the same pair of players could have played any non-negative number of times (possibly zero). It is also possible that no games were played at all. You've been told that their scores after all the games were played were $$$p_1$$$, $$$p_2$$$ and $$$p_3$$$. Additionally, it is guaranteed that $$$p_1 \\leq p_2 \\leq p_3$$$ holds.Find the maximum number of draws that could have happened and print it. If there isn't any way to obtain $$$p_1$$$, $$$p_2$$$ and $$$p_3$$$ as a result of a non-negative number of games between the three players, print $$$-1$$$ instead."
  },
  {
    "title": "Coin Games",
    "url": "https://codeforces.com/problemset/problem/1972/B",
    "description": "There are $$$n$$$ coins on the table forming a circle, and each coin is either facing up or facing down. Alice and Bob take turns to play the following game, and Alice goes first.In each operation, the player chooses a facing-up coin, removes the coin, and flips the two coins that are adjacent to it. If (before the operation) there are only two coins left, then one will be removed and the other won't be flipped (as it would be flipped twice). If (before the operation) there is only one coin left, no coins will be flipped. If (before the operation) there are no facing-up coins, the player loses.Decide who will win the game if they both play optimally. It can be proved that the game will end in a finite number of operations, and one of them will win."
  },
  {
    "title": "Contest Proposal",
    "url": "https://codeforces.com/problemset/problem/1972/A",
    "description": "A contest contains $$$n$$$ problems and the difficulty of the $$$i$$$-th problem is expected to be at most $$$b_i$$$. There are already $$$n$$$ problem proposals and the difficulty of the $$$i$$$-th problem is $$$a_i$$$. Initially, both $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$ are sorted in non-decreasing order.Some of the problems may be more difficult than expected, so the writers must propose more problems. When a new problem with difficulty $$$w$$$ is proposed, the most difficult problem will be deleted from the contest, and the problems will be sorted in a way that the difficulties are non-decreasing.In other words, in each operation, you choose an integer $$$w$$$, insert it into the array $$$a$$$, sort array $$$a$$$ in non-decreasing order, and remove the last element from it.Find the minimum number of new problems to make $$$a_i\\le b_i$$$ for all $$$i$$$."
  },
  {
    "title": "±1",
    "url": "https://codeforces.com/problemset/problem/1971/H",
    "description": "Bob has a grid with $$$3$$$ rows and $$$n$$$ columns, each of which contains either $$$a_i$$$ or $$$-a_i$$$ for some integer $$$1 \\leq i \\leq n$$$. For example, one possible grid for $$$n=4$$$ is shown below:$$$$$$\\begin{bmatrix} a_1 & -a_2 & -a_3 & -a_2 \\\\ -a_4 & a_4 & -a_1 & -a_3 \\\\ a_1 & a_2 & -a_2 & a_4 \\end{bmatrix}$$$$$$Alice and Bob play a game as follows:   Bob shows Alice his grid.  Alice gives Bob an array $$$a_1, a_2, \\dots, a_n$$$ of her choosing, whose elements are all $$$\\mathbf{-1}$$$ or $$$\\mathbf{1}$$$.  Bob substitutes these values into his grid to make a grid of $$$-1$$$s and $$$1$$$s.  Bob sorts the elements of each column in non-decreasing order.  Alice wins if all the elements in the middle row are $$$1$$$; otherwise, Bob wins. For example, suppose Alice gives Bob the array $$$[1, -1, -1, 1]$$$ for the grid above. Then the following will happen (colors are added for clarity):$$$$$$\\begin{bmatrix} \\color{red}{a_1} & \\color{green}{-a_2} & \\color{blue}{-a_3} & \\color{green}{-a_2} \\\\ -a_4 & a_4 & \\color{red}{-a_1} & \\color{blue}{-a_3} \\\\ \\color{red}{a_1} & \\color{green}{a_2} & \\color{green}{-a_2} & a_4 \\end{bmatrix} \\xrightarrow{[\\color{red}{1},\\color{green}{-1},\\color{blue}{-1},1]} \\begin{bmatrix} \\color{red}{1} & \\color{green}{1} & \\color{blue}{1} & \\color{green}{1} \\\\ -1 & 1 & \\color{red}{-1} & \\color{blue}{1} \\\\ \\color{red}{1} & \\color{green}{-1} & \\color{green}{1} & 1 \\end{bmatrix} \\xrightarrow{\\text{sort each column}} \\begin{bmatrix} -1 & -1 & -1 & 1 \\\\ \\mathbf{1} & \\mathbf{1} & \\mathbf{1} & \\mathbf{1} \\\\ 1 & 1 & 1 & 1 \\\\ \\end{bmatrix}\\,. $$$$$$ Since the middle row is all $$$1$$$, Alice wins.Given Bob's grid, determine whether or not Alice can choose the array $$$a$$$ to win the game."
  },
  {
    "title": "XOUR",
    "url": "https://codeforces.com/problemset/problem/1971/G",
    "description": "You are given an array $$$a$$$ consisting of $$$n$$$ nonnegative integers. You can swap the elements at positions $$$i$$$ and $$$j$$$ if $$$a_i~\\mathsf{XOR}~a_j < 4$$$, where $$$\\mathsf{XOR}$$$ is the bitwise XOR operation.Find the lexicographically smallest array that can be made with any number of swaps.An array $$$x$$$ is lexicographically smaller than an array $$$y$$$ if in the first position where $$$x$$$ and $$$y$$$ differ, $$$x_i < y_i$$$."
  },
  {
    "title": "Circle Perimeter",
    "url": "https://codeforces.com/problemset/problem/1971/F",
    "description": "Given an integer $$$r$$$, find the number of lattice points that have a Euclidean distance from $$$(0, 0)$$$ greater than or equal to $$$r$$$ but strictly less than $$$r+1$$$.A lattice point is a point with integer coordinates. The Euclidean distance from $$$(0, 0)$$$ to the point $$$(x,y)$$$ is $$$\\sqrt{x^2 + y^2}$$$."
  },
  {
    "title": "Find the Car",
    "url": "https://codeforces.com/problemset/problem/1971/E",
    "description": "Timur is in a car traveling on the number line from point $$$0$$$ to point $$$n$$$. The car starts moving from point $$$0$$$ at minute $$$0$$$.There are $$$k+1$$$ signs on the line at points $$$0, a_1, a_2, \\dots, a_k$$$, and Timur knows that the car will arrive there at minutes $$$0, b_1, b_2, \\dots, b_k$$$, respectively. The sequences $$$a$$$ and $$$b$$$ are strictly increasing with $$$a_k = n$$$.  Between any two adjacent signs, the car travels with a constant speed. Timur has $$$q$$$ queries: each query will be an integer $$$d$$$, and Timur wants you to output how many minutes it takes the car to reach point $$$d$$$, rounded down to the nearest integer."
  },
  {
    "title": "Binary Cut",
    "url": "https://codeforces.com/problemset/problem/1971/D",
    "description": "You are given a binary string$$$^{\\dagger}$$$. Please find the minimum number of pieces you need to cut it into, so that the resulting pieces can be rearranged into a sorted binary string.  Note that:   each character must lie in exactly one of the pieces;  the pieces must be contiguous substrings of the original string;  you must use all the pieces in the rearrangement. $$$^{\\dagger}$$$ A binary string is a string consisting of characters $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$. A sorted binary string is a binary string such that all characters $$$\\texttt{0}$$$ come before all characters $$$\\texttt{1}$$$."
  },
  {
    "title": "Clock and Strings",
    "url": "https://codeforces.com/problemset/problem/1971/C",
    "description": "There is a clock labeled with the numbers $$$1$$$ through $$$12$$$ in clockwise order, as shown below. In this example, $$$(a,b,c,d)=(2,9,10,6)$$$, and the strings intersect. Alice and Bob have four distinct integers $$$a$$$, $$$b$$$, $$$c$$$, $$$d$$$ not more than $$$12$$$. Alice ties a red string connecting $$$a$$$ and $$$b$$$, and Bob ties a blue string connecting $$$c$$$ and $$$d$$$. Do the strings intersect? (The strings are straight line segments.)"
  },
  {
    "title": "Different String",
    "url": "https://codeforces.com/problemset/problem/1971/B",
    "description": "You are given a string $$$s$$$ consisting of lowercase English letters.Rearrange the characters of $$$s$$$ to form a new string $$$r$$$ that is not equal to $$$s$$$, or report that it's impossible."
  },
  {
    "title": "My First Sorting Problem",
    "url": "https://codeforces.com/problemset/problem/1971/A",
    "description": "You are given two integers $$$x$$$ and $$$y$$$. Output two integers: the minimum of $$$x$$$ and $$$y$$$, followed by the maximum of $$$x$$$ and $$$y$$$."
  },
  {
    "title": "Min-Fund Prison (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/G3",
    "description": "In the hard version, $$$2 \\leq \\sum n \\leq 10^5$$$ and $$$1 \\leq \\sum m \\leq 5 \\times 10^{5}$$$After a worker's strike organized by the Dementors asking for equal rights, the prison of Azkaban has suffered some damage. After settling the spirits, the Ministry of Magic is looking to renovate the prison to ensure that the Dementors are kept in check. The prison consists of $$$n$$$ prison cells and $$$m$$$ bi-directional corridors. The $$$i^{th}$$$ corridor is from cells $$$u_i$$$ to $$$v_i$$$. A subset of these cells $$$S$$$ is called a complex if any cell in $$$S$$$ is reachable from any other cell in $$$S$$$. Formally, a subset of cells $$$S$$$ is a complex if $$$x$$$ and $$$y$$$ are reachable from each other for all $$$x, y \\in S$$$, using only cells from $$$S$$$ on the way. The funding required for a complex $$$S$$$ consisting of $$$k$$$ cells is defined as $$$k^2$$$.As part of your Intro to Magical Interior Design course at Hogwarts, you have been tasked with designing the prison. The Ministry of Magic has asked that you divide the prison into $$$2$$$ complexes with $$$\\textbf{exactly one corridor}$$$ connecting them, so that the Dementors can't organize union meetings. For this purpose, you are allowed to build bi-directional corridors. The funding required to build a corridor between any $$$2$$$ cells is $$$c$$$. Due to budget cuts and the ongoing fight against the Death Eaters, you must find the $$$\\textbf{minimum total funding}$$$ required to divide the prison as per the Ministry's requirements or $$$-1$$$ if no division is possible.Note: The total funding is the sum of the funding required for the $$$2$$$ complexes and the corridors built. If after the division, the two complexes have $$$x$$$ and $$$y$$$ cells respectively and you have built a total of $$$a$$$ corridors, the total funding will be $$$x^2 + y^2 + c \\times a$$$. Note that $$$x+y=n$$$."
  },
  {
    "title": "Min-Fund Prison (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/G2",
    "description": "In the medium version, $$$2 \\leq \\sum n \\leq 300$$$ and $$$1 \\leq \\sum m \\leq 300$$$After a worker's strike organized by the Dementors asking for equal rights, the prison of Azkaban has suffered some damage. After settling the spirits, the Ministry of Magic is looking to renovate the prison to ensure that the Dementors are kept in check. The prison consists of $$$n$$$ prison cells and $$$m$$$ bi-directional corridors. The $$$i^{th}$$$ corridor is from cells $$$u_i$$$ to $$$v_i$$$. A subset of these cells $$$S$$$ is called a complex if any cell in $$$S$$$ is reachable from any other cell in $$$S$$$. Formally, a subset of cells $$$S$$$ is a complex if $$$x$$$ and $$$y$$$ are reachable from each other for all $$$x, y \\in S$$$, using only cells from $$$S$$$ on the way. The funding required for a complex $$$S$$$ consisting of $$$k$$$ cells is defined as $$$k^2$$$.As part of your Intro to Magical Interior Design course at Hogwarts, you have been tasked with designing the prison. The Ministry of Magic has asked that you divide the prison into $$$2$$$ complexes with $$$\\textbf{exactly one corridor}$$$ connecting them, so that the Dementors can't organize union meetings. For this purpose, you are allowed to build bi-directional corridors. The funding required to build a corridor between any $$$2$$$ cells is $$$c$$$. Due to budget cuts and the ongoing fight against the Death Eaters, you must find the $$$\\textbf{minimum total funding}$$$ required to divide the prison as per the Ministry's requirements or $$$-1$$$ if no division is possible.Note: The total funding is the sum of the funding required for the $$$2$$$ complexes and the corridors built. If after the division, the two complexes have $$$x$$$ and $$$y$$$ cells respectively and you have built a total of $$$a$$$ corridors, the total funding will be $$$x^2 + y^2 + c \\times a$$$. Note that $$$x+y=n$$$."
  },
  {
    "title": "Min-Fund Prison (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/G1",
    "description": "In the easy version, $$$m = n-1$$$ and there exists a path between $$$u$$$ and $$$v$$$ for all $$$u, v$$$ ($$$1 \\leq u, v \\leq n$$$).After a worker's strike organized by the Dementors asking for equal rights, the prison of Azkaban has suffered some damage. After settling the spirits, the Ministry of Magic is looking to renovate the prison to ensure that the Dementors are kept in check. The prison consists of $$$n$$$ prison cells and $$$m$$$ bi-directional corridors. The $$$i^{th}$$$ corridor is from cells $$$u_i$$$ to $$$v_i$$$. A subset of these cells $$$S$$$ is called a complex if any cell in $$$S$$$ is reachable from any other cell in $$$S$$$. Formally, a subset of cells $$$S$$$ is a complex if $$$x$$$ and $$$y$$$ are reachable from each other for all $$$x, y \\in S$$$, using only cells from $$$S$$$ on the way. The funding required for a complex $$$S$$$ consisting of $$$k$$$ cells is defined as $$$k^2$$$.As part of your Intro to Magical Interior Design course at Hogwarts, you have been tasked with designing the prison. The Ministry of Magic has asked that you divide the prison into $$$2$$$ complexes with $$$\\textbf{exactly one corridor}$$$ connecting them, so that the Dementors can't organize union meetings. For this purpose, you are allowed to build bi-directional corridors. The funding required to build a corridor between any $$$2$$$ cells is $$$c$$$. Due to budget cuts and the ongoing fight against the Death Eaters, you must find the $$$\\textbf{minimum total funding}$$$ required to divide the prison as per the Ministry's requirements or $$$-1$$$ if no division is possible.Note: The total funding is the sum of the funding required for the $$$2$$$ complexes and the corridors built. If after the division, the two complexes have $$$x$$$ and $$$y$$$ cells respectively and you have built a total of $$$a$$$ corridors, the total funding will be $$$x^2 + y^2 + c \\times a$$$. Note that $$$x+y=n$$$."
  },
  {
    "title": "Playing Quidditch (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/F3",
    "description": "This afternoon, you decided to enjoy the first days of Spring by taking a walk outside. As you come near the Quidditch field, you hear screams. Once again, there is a conflict about the score: the two teams are convinced that they won the game! To prevent this problem from happening one more time, you decide to get involved in the refereeing of the matches.Now, you will stay in the stadium to watch the game and count the score. At the end of the game, you will decide the winner.Today, two teams are competing: the red Gryffindor (R) and the blue Ravenclaw (B) team. Each team is composed of $$$P$$$ players ($$$1 \\leq P \\leq 10$$$).The field is a rectangle of $$$N$$$ lines and $$$M$$$ columns ($$$3 \\leq N, M \\leq 99$$$, $$$N$$$ and $$$M$$$ are odd). All the positions are integers, and several entities are allowed to be at the same position in the field. At the beginning of the game, the field contains goals for the two teams (each team can own between one and five goals), the players, and exactly one Quaffle. In this version of the problem, one Bludger and a Golden Snitch can be present.A game is composed of $$$T$$$ steps ($$$0 \\leq T \\leq 10000$$$). At each step, one entity on the field (a player or a ball) performs one action. All entities can move. A player can also catch a ball or throw the Quaffle that it is carrying. To catch a ball, a player must be located on the same cell as it. The Quaffle does not perform any action while it is being carried; it only follows the movements of the player. If a player carrying the Quaffle decides to throw it, the Quaffle is simply put at the current position of the player. If a player is on the same cell as a Bludger (either after a movement from the player or the Bludger), the player is eliminated. If the player is eliminated while it is carrying the Quaffle, the Quaffle remains on the cell containing both the player and the Bludger after the move. It is guaranteed that this never occurs while the player is in a cell containing a goal.To win a point, a player must leave the Quaffle at a goal of the other team. When it does, the team of the player wins one point, and the Quaffle instantly moves to the middle of the field (the cell at the $$$(M+1)/2$$$-th column of the $$$(N+1)/2$$$-th line of the field, starting from 1). There is no goal in the middle of the field. If a player puts the ball in its own goal, the other team wins the point. If a player catches the Golden Snitch, their team wins 10 points and the game is over."
  },
  {
    "title": "Playing Quidditch (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/F2",
    "description": "This afternoon, you decided to enjoy the first days of Spring by taking a walk outside. As you come near the Quidditch field, you hear screams. Once again, there is a conflict about the score: the two teams are convinced that they won the game! To prevent this problem from happening one more time, you decide to get involved in the refereeing of the matches.Now, you will stay in the stadium to watch the game and count the score. At the end of the game, you will decide the winner.Today, two teams are competing: the red Gryffindor (R) and the blue Ravenclaw (B) team. Each team is composed of $$$P$$$ players ($$$1 \\leq P \\leq 10$$$).The field is a rectangle of $$$N$$$ lines and $$$M$$$ columns ($$$3 \\leq N, M \\leq 99$$$, $$$N$$$ and $$$M$$$ are odd). All the positions are integers, and several entities are allowed to be at the same position in the field. At the beginning of the game, the field contains goals for the two teams (each team can own between one and five goals), the players, and exactly one Quaffle. In this version of the problem, one Bludger can be present. An other type of ball will be available in the harder version of the problem.A game is composed of $$$T$$$ steps ($$$0 \\leq T \\leq 10000$$$). At each step, one entity on the field (a player or a ball) performs one action. All entities can move. A player can also catch a ball or throw the Quaffle that it is carrying. To catch a ball, a player must be located on the same cell as it. The Quaffle does not perform any action while it is being carried; it only follows the movements of the player. If a player carrying the Quaffle decides to throw it, the Quaffle is simply put at the current position of the player. If a player is on the same cell as a Bludger (either after a movement from the player or the Bludger), the player is eliminated. If the player is eliminated while it is carrying the Quaffle, the Quaffle remains on the cell containing both the player and the Bludger after the move. It is guaranteed that this never occurs while the player is in a cell containing a goal.To win a point, a player must leave the Quaffle at a goal of the other team. When it does, the team of the player wins one point, and the Quaffle instantly moves to the middle of the field (the cell at the $$$(M+1)/2$$$-th column of the $$$(N+1)/2$$$-th line of the field, starting from 1). There is no goal in the middle of the field. If a player puts the ball in its own goal, the other team wins the point."
  },
  {
    "title": "Playing Quidditch (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/F1",
    "description": "This afternoon, you decided to enjoy the first days of Spring by taking a walk outside. As you come near the Quidditch field, you hear screams. Once again, there is a conflict about the score: the two teams are convinced that they won the game! To prevent this problem from happening one more time, you decide to get involved in the refereeing of the matches.Now, you will stay in the stadium to watch the game and count the score. At the end of the game, you will decide the winner.Today, two teams are competing: the red Gryffindor (R) and the blue Ravenclaw (B) team. Each team is composed of $$$P$$$ players ($$$1 \\leq P \\leq 10$$$).The field is a rectangle of $$$N$$$ lines and $$$M$$$ columns ($$$3 \\leq N, M \\leq 99$$$, $$$N$$$ and $$$M$$$ are odd). All the positions are integers, and several entities are allowed to be at the same position in the field. At the beginning of the game, the field contains goals for the two teams (each team can own between one and five goals), the players, and exactly one Quaffle. Other types of balls will be available in the harder versions of the problem.A game is composed of $$$T$$$ steps ($$$0 \\leq T \\leq 10000$$$). At each step, one entity on the field (a player or a ball) performs one action. All entities can move. A player can also catch a ball or throw the Quaffle that it is carrying. To catch a ball, a player must be located on the same cell as it. The Quaffle does not perform any action while it is being carried; it only follows the movements of the player. If a player carrying the Quaffle decides to throw it, the Quaffle is simply put at the current position of the player.To win a point, a player must leave the Quaffle at a goal of the other team. When it does, the team of the player wins one point, and the Quaffle instantly moves to the middle of the field (the cell at the $$$(M+1)/2$$$-th column of the $$$(N+1)/2$$$-th line of the field, starting from 1). There is no goal in the middle of the field. If a player puts the ball in its own goal, the other team wins the point."
  },
  {
    "title": "Trails (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/E3",
    "description": "Harry Potter is hiking in the Alps surrounding Lake Geneva. In this area there are $$$m$$$ cabins, numbered 1 to $$$m$$$. Each cabin is connected, with one or more trails, to a central meeting point next to the lake. Each trail is either short or long. Cabin $$$i$$$ is connected with $$$s_i$$$ short trails and $$$l_i$$$ long trails to the lake.Each day, Harry walks a trail from the cabin where he currently is to Lake Geneva, and then from there he walks a trail to any of the $$$m$$$ cabins (including the one he started in). However, as he has to finish the hike in a day, at least one of the two trails has to be short.How many possible combinations of trails can Harry take if he starts in cabin 1 and walks for $$$n$$$ days?Give the answer modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Trails (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/E2",
    "description": "Harry Potter is hiking in the Alps surrounding Lake Geneva. In this area there are $$$m$$$ cabins, numbered 1 to $$$m$$$. Each cabin is connected, with one or more trails, to a central meeting point next to the lake. Each trail is either short or long. Cabin $$$i$$$ is connected with $$$s_i$$$ short trails and $$$l_i$$$ long trails to the lake.Each day, Harry walks a trail from the cabin where he currently is to Lake Geneva, and then from there he walks a trail to any of the $$$m$$$ cabins (including the one he started in). However, as he has to finish the hike in a day, at least one of the two trails has to be short.How many possible combinations of trails can Harry take if he starts in cabin 1 and walks for $$$n$$$ days?Give the answer modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Trails (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/E1",
    "description": "Harry Potter is hiking in the Alps surrounding Lake Geneva. In this area there are $$$m$$$ cabins, numbered 1 to $$$m$$$. Each cabin is connected, with one or more trails, to a central meeting point next to the lake. Each trail is either short or long. Cabin $$$i$$$ is connected with $$$s_i$$$ short trails and $$$l_i$$$ long trails to the lake.Each day, Harry walks a trail from the cabin where he currently is to Lake Geneva, and then from there he walks a trail to any of the $$$m$$$ cabins (including the one he started in). However, as he has to finish the hike in a day, at least one of the two trails has to be short.How many possible combinations of trails can Harry take if he starts in cabin 1 and walks for $$$n$$$ days?Give the answer modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Arithmancy (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/D3",
    "description": "The only difference between the versions of this problem is the maximum value of $$$n$$$.Professor Vector is preparing to teach her Arithmancy class. She needs to prepare $$$n$$$ distinct magic words for the class. Each magic word is a string consisting of characters X and O. A spell is a string created by concatenating two magic words together. The power of a spell is equal to the number of its different non-empty substrings. For example, the power of the spell XOXO is equal to 7, because it has 7 different substrings: X, O, XO, OX, XOX, OXO and XOXO.Each student will create their own spell by concatenating two magic words. Since the students are not very good at magic yet, they will choose each of the two words independently and uniformly at random from the $$$n$$$ words provided by Professor Vector. It is therefore also possible that the two words a student chooses are the same. Each student will then compute the power of their spell, and tell it to Professor Vector. In order to check their work, and of course to impress the students, Professor Vector needs to find out which two magic words and in which order were concatenated by each student.Your program needs to perform the role of Professor Vector: first, create $$$n$$$ distinct magic words, and then handle multiple requests where it is given the spell power and needs to determine the indices of the two magic words, in the correct order, that were used to create the corresponding spell."
  },
  {
    "title": "Arithmancy (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/D2",
    "description": "The only difference between the versions of this problem is the maximum value of $$$n$$$.Professor Vector is preparing to teach her Arithmancy class. She needs to prepare $$$n$$$ distinct magic words for the class. Each magic word is a string consisting of characters X and O. A spell is a string created by concatenating two magic words together. The power of a spell is equal to the number of its different non-empty substrings. For example, the power of the spell XOXO is equal to 7, because it has 7 different substrings: X, O, XO, OX, XOX, OXO and XOXO.Each student will create their own spell by concatenating two magic words. Since the students are not very good at magic yet, they will choose each of the two words independently and uniformly at random from the $$$n$$$ words provided by Professor Vector. It is therefore also possible that the two words a student chooses are the same. Each student will then compute the power of their spell, and tell it to Professor Vector. In order to check their work, and of course to impress the students, Professor Vector needs to find out which two magic words and in which order were concatenated by each student.Your program needs to perform the role of Professor Vector: first, create $$$n$$$ distinct magic words, and then handle multiple requests where it is given the spell power and needs to determine the indices of the two magic words, in the correct order, that were used to create the corresponding spell."
  },
  {
    "title": "Arithmancy (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/D1",
    "description": "Professor Vector is preparing to teach her Arithmancy class. She needs to prepare $$$n$$$ distinct magic words for the class. Each magic word is a string consisting of characters X and O. A spell is a string created by concatenating two magic words together. The power of a spell is equal to the number of its different non-empty substrings. For example, the power of the spell XOXO is equal to 7, because it has 7 different substrings: X, O, XO, OX, XOX, OXO and XOXO.Each student will create their own spell by concatenating two magic words. Since the students are not very good at magic yet, they will choose each of the two words independently and uniformly at random from the $$$n$$$ words provided by Professor Vector. It is therefore also possible that the two words a student chooses are the same. Each student will then compute the power of their spell, and tell it to Professor Vector. In order to check their work, and of course to impress the students, Professor Vector needs to find out which two magic words and in which order were concatenated by each student.Your program needs to perform the role of Professor Vector: first, create $$$n$$$ distinct magic words, and then handle multiple requests where it is given the spell power and needs to determine the indices of the two magic words, in the correct order, that were used to create the corresponding spell."
  },
  {
    "title": "Game on Tree (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/C3",
    "description": "This is the hard version of the problem. The only difference in this version is the constraint on $$$t$$$.Ron and Hermione are playing a game on a tree of $$$n$$$ nodes that are initially inactive. The game consists of $$$t$$$ rounds, each of which starts with a stone on exactly one node, which is considered as activated. A move consists of picking an inactive neighbor of the node with a stone on it and moving the stone there (thus activating this neighbor). Ron makes the first move, after which he alternates with Hermione until no valid move is available. The player that cannot make a move loses the round. If both players play optimally, who wins each round of this game? Note that all the rounds are played with the same tree; only the starting node changes. Moreover, after each round, all active nodes are considered inactive again."
  },
  {
    "title": "Game on Tree (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/C2",
    "description": "This is the medium version of the problem. The difference in this version is that $$$t=1$$$ and we work on trees.Ron and Hermione are playing a game on a tree of $$$n$$$ nodes that are initially inactive. The game consists of $$$t$$$ rounds, each of which starts with a stone on exactly one node, which is considered as activated. A move consists of picking an inactive neighbor of the node with a stone on it and moving the stone there (thus activating this neighbor). Ron makes the first move, after which he alternates with Hermione until no valid move is available. The player that cannot make a move loses the round. If both players play optimally, who wins each round of this game? Note that all the rounds are played with the same tree; only the starting node changes. Moreover, after each round, all active nodes are considered inactive again."
  },
  {
    "title": "Game on Tree (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/C1",
    "description": "This is the easy version of the problem. The difference in this version is that $$$t=1$$$ and we work on an array-like tree.Ron and Hermione are playing a game on a tree of $$$n$$$ nodes that are initially inactive. This tree is special because it has exactly two leaves. It can thus be seen as an array. The game consists of $$$t$$$ rounds, each of which starts with a stone on exactly one node, which is considered as activated. A move consists of picking an inactive neighbor of the node with a stone on it and moving the stone there (thus activating this neighbor). Ron makes the first move, after which he alternates with Hermione until no valid move is available. The player that cannot make a move loses the round. If both players play optimally, who wins each round of this game? Note that all the rounds are played with the same tree; only the starting node changes. Moreover, after each round, all active nodes are considered inactive again."
  },
  {
    "title": "Exact Neighbours (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/B3",
    "description": "After some recent attacks on Hogwarts Castle by the Death Eaters, the Order of the Phoenix has decided to station $$$n$$$ members in Hogsmead Village. The houses will be situated on a picturesque $$$n\\times n$$$ square field. Each wizard will have their own house, and every house will belong to some wizard. Each house will take up the space of one square.However, as you might know wizards are very superstitious. During the weekends, each wizard $$$i$$$ will want to visit the house that is exactly $$$a_{i}$$$ $$$(0 \\leq a_{i} \\leq n)$$$ away from their own house. The roads in the village are built horizontally and vertically, so the distance between points $$$(x_{i}, y_{i})$$$ and $$$(x_{j}, y_{j})$$$ on the $$$n\\times n$$$ field is $$$ |x_{i} - x_{j}| + |y_{i} - y_{j}|$$$. The wizards know and trust each other, so one wizard can visit another wizard's house when the second wizard is away. The houses to be built will be big enough for all $$$n$$$ wizards to simultaneously visit any house.Apart from that, each wizard is mandated to have a view of the Hogwarts Castle in the north and the Forbidden Forest in the south, so the house of no other wizard should block the view. In terms of the village, it means that in each column of the $$$n\\times n$$$ field, there can be at most one house, i.e. if the $$$i$$$-th house has coordinates $$$(x_{i}, y_{i})$$$, then $$$x_{i} \\neq x_{j}$$$ for all $$$i \\neq j$$$.The Order of the Phoenix doesn't yet know if it is possible to place $$$n$$$ houses in such a way that will satisfy the visit and view requirements of all $$$n$$$ wizards, so they are asking for your help in designing such a plan.If it is possible to have a correct placement, where for the $$$i$$$-th wizard there is a house that is $$$a_{i}$$$ away from it and the house of the $$$i$$$-th wizard is the only house in their column, output YES, the position of houses for each wizard, and to the house of which wizard should each wizard go during the weekends.If it is impossible to have a correct placement, output NO."
  },
  {
    "title": "Exact Neighbours (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/B2",
    "description": "The only difference between this and the hard version is that a1=0a_{1} = 0.After some recent attacks on Hogwarts Castle by the Death Eaters, the Order of the Phoenix has decided to station nn members in Hogsmead Village. The houses will be situated on a picturesque n×nn\\times n square field. Each wizard will have their own house, and every house will belong to some wizard. Each house will take up the space of one square.However, as you might know wizards are very superstitious. During the weekends, each wizard ii will want to visit the house that is exactly aia_{i} (0≤ai≤n)(0 \\leq a_{i} \\leq n) away from their own house. The roads in the village are built horizontally and vertically, so the distance between points (xi,yi)(x_{i}, y_{i}) and (xj,yj)(x_{j}, y_{j}) on the n×nn\\times n field is |xi−xj|+|yi−yj| |x_{i} - x_{j}| + |y_{i} - y_{j}|. The wizards know and trust each other, so one wizard can visit another wizard's house when the second wizard is away. The houses to be built will be big enough for all nn wizards to simultaneously visit any house.Apart from that, each wizard is mandated to have a view of the Hogwarts Castle in the north and the Forbidden Forest in the south, so the house of no other wizard should block the view. In terms of the village, it means that in each column of the n×nn\\times n field, there can be at most one house, i.e. if the ii-th house has coordinates (xi,yi)(x_{i}, y_{i}), then xi≠xjx_{i} \\neq x_{j} for all i≠ji \\neq j.The Order of the Phoenix doesn't yet know if it is possible to place nn houses in such a way that will satisfy the visit and view requirements of all nn wizards, so they are asking for your help in designing such a plan.If it is possible to have a correct placement, where for the ii-th wizard there is a house that is aia_{i} away from it and the house of the ii-th wizard is the only house in their column, output YES, the position of houses for each wizard, and to the house of which wizard should each wizard go during the weekends.If it is impossible to have a correct placement, output NO."
  },
  {
    "title": "Exact Neighbours (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/B1",
    "description": "The only difference between this and the hard version is that all $$$a_{i}$$$ are even.After some recent attacks on Hogwarts Castle by the Death Eaters, the Order of the Phoenix has decided to station $$$n$$$ members in Hogsmead Village. The houses will be situated on a picturesque $$$n\\times n$$$ square field. Each wizard will have their own house, and every house will belong to some wizard. Each house will take up the space of one square.However, as you might know wizards are very superstitious. During the weekends, each wizard $$$i$$$ will want to visit the house that is exactly $$$a_{i}$$$ $$$(0 \\leq a_{i} \\leq n)$$$ away from their own house. The roads in the village are built horizontally and vertically, so the distance between points $$$(x_{i}, y_{i})$$$ and $$$(x_{j}, y_{j})$$$ on the $$$n\\times n$$$ field is $$$ |x_{i} - x_{j}| + |y_{i} - y_{j}|$$$. The wizards know and trust each other, so one wizard can visit another wizard's house when the second wizard is away. The houses to be built will be big enough for all $$$n$$$ wizards to simultaneously visit any house.Apart from that, each wizard is mandated to have a view of the Hogwarts Castle in the north and the Forbidden Forest in the south, so the house of no other wizard should block the view. In terms of the village, it means that in each column of the $$$n\\times n$$$ field, there can be at most one house, i.e. if the $$$i$$$-th house has coordinates $$$(x_{i}, y_{i})$$$, then $$$x_{i} \\neq x_{j}$$$ for all $$$i \\neq j$$$.The Order of the Phoenix doesn't yet know if it is possible to place $$$n$$$ houses in such a way that will satisfy the visit and view requirements of all $$$n$$$ wizards, so they are asking for your help in designing such a plan.If it is possible to have a correct placement, where for the $$$i$$$-th wizard there is a house that is $$$a_{i}$$$ away from it and the house of the $$$i$$$-th wizard is the only house in their column, output YES, the position of houses for each wizard, and to the house of which wizard should each wizard go during the weekends.If it is impossible to have a correct placement, output NO."
  },
  {
    "title": "Balanced Unshuffle (Hard)",
    "url": "https://codeforces.com/problemset/problem/1970/A3",
    "description": "The only difference with the medium version is the maximum length of the input.A parentheses sequence is a string consisting of characters \"(\" and \")\", for example \"(()((\".A balanced parentheses sequence is a parentheses sequence which can become a valid mathematical expression after inserting numbers and operations into it, for example \"(()(()))\".The balance of a parentheses sequence is defined as the number of opening parentheses \"(\" minus the number of closing parentheses \")\". For example, the balance of the sequence \"(()((\" is 3.A balanced parentheses sequence can also be defined as a parentheses sequence with balance 0 such that each of its prefixes has a non-negative balance.We define the balanced shuffle operation that takes a parentheses sequence and returns a parentheses sequence as follows: first, for every character of the input sequence, we compute the balance of the prefix of the sequence before that character and write those down in a table together with the positions of the characters in the input sequence, for example:Prefix balance01212321Position12345678Character(()(()))Then, we sort the columns of this table in increasing order of prefix balance, breaking ties in decreasing order of position. In the above example, we get:Prefix balance01112223Position18427536Character()(()())The last row of this table forms another parentheses sequence, in this case \"()(()())\". This sequence is called the result of applying the balanced shuffle operation to the input sequence, or in short just the balanced shuffle of the input sequence.Surprisingly, it turns out that the balanced shuffle of any balanced parentheses sequence is always another balanced parentheses sequence (we will omit the proof for brevity). Even more surprisingly, the balanced shuffles of two different balanced parentheses sequences are always different, therefore the balanced shuffle operation is a bijection on the set of balanced parentheses sequences of any given length (we will omit this proof, too).You are given a balanced parentheses sequence. Find its preimage: the balanced parentheses sequence the balanced shuffle of which is equal to the given sequence."
  },
  {
    "title": "Balanced Unshuffle (Medium)",
    "url": "https://codeforces.com/problemset/problem/1970/A2",
    "description": "The differences with the easy version of this problem are highlighted in bold.A parentheses sequence is a string consisting of characters \"(\" and \")\", for example \"(()((\".A balanced parentheses sequence is a parentheses sequence which can become a valid mathematical expression after inserting numbers and operations into it, for example \"(()(()))\".The balance of a parentheses sequence is defined as the number of opening parentheses \"(\" minus the number of closing parentheses \")\". For example, the balance of the sequence \"(()((\" is 3.A balanced parentheses sequence can also be defined as a parentheses sequence with balance 0 such that each of its prefixes has a non-negative balance.We define the balanced shuffle operation that takes a parentheses sequence and returns a parentheses sequence as follows: first, for every character of the input sequence, we compute the balance of the prefix of the sequence before that character and write those down in a table together with the positions of the characters in the input sequence, for example:Prefix balance01212321Position12345678Character(()(()))Then, we sort the columns of this table in increasing order of prefix balance, breaking ties in decreasing order of position. In the above example, we get:Prefix balance01112223Position18427536Character()(()())The last row of this table forms another parentheses sequence, in this case \"()(()())\". This sequence is called the result of applying the balanced shuffle operation to the input sequence, or in short just the balanced shuffle of the input sequence.Surprisingly, it turns out that the balanced shuffle of any balanced parentheses sequence is always another balanced parentheses sequence (we will omit the proof for brevity). Even more surprisingly, the balanced shuffles of two different balanced parentheses sequences are always different, therefore the balanced shuffle operation is a bijection on the set of balanced parentheses sequences of any given length (we will omit this proof, too).You are given a balanced parentheses sequence. Find its preimage: the balanced parentheses sequence the balanced shuffle of which is equal to the given sequence."
  },
  {
    "title": "Balanced Shuffle (Easy)",
    "url": "https://codeforces.com/problemset/problem/1970/A1",
    "description": "A parentheses sequence is a string consisting of characters \"(\" and \")\", for example \"(()((\".A balanced parentheses sequence is a parentheses sequence which can become a valid mathematical expression after inserting numbers and operations into it, for example \"(()(()))\".The balance of a parentheses sequence is defined as the number of opening parentheses \"(\" minus the number of closing parentheses \")\". For example, the balance of the sequence \"(()((\" is 3.A balanced parentheses sequence can also be defined as a parentheses sequence with balance 0 such that each of its prefixes has a non-negative balance.We define the balanced shuffle operation that takes a parentheses sequence and returns a parentheses sequence as follows: first, for every character of the input sequence, we compute the balance of the prefix of the sequence before that character and write those down in a table together with the positions of the characters in the input sequence, for example:Prefix balance01212321Position12345678Character(()(()))Then, we sort the columns of this table in increasing order of prefix balance, breaking ties in decreasing order of position. In the above example, we get:Prefix balance01112223Position18427536Character()(()())The last row of this table forms another parentheses sequence, in this case \"()(()())\". This sequence is called the result of applying the balanced shuffle operation to the input sequence, or in short just the balanced shuffle of the input sequence.You are given a balanced parentheses sequence. Print its balanced shuffle."
  },
  {
    "title": "Card Pairing",
    "url": "https://codeforces.com/problemset/problem/1969/F",
    "description": "There is a deck of $$$n$$$ cards, each card has one of $$$k$$$ types. You are given the sequence $$$a_1, a_2, \\dots, a_n$$$ denoting the types of cards in the deck from top to bottom. Both $$$n$$$ and $$$k$$$ are even numbers.You play a game with these cards. First, you draw $$$k$$$ topmost cards from the deck. Then, the following happens each turn of the game:  you choose exactly two cards from your hand and play them. If these cards have the same type, you earn a coin;  then, if the deck is not empty, you draw exactly two top cards from it;  then, if both your hand and your deck are empty, the game ends. Otherwise, the new turn begins. You have to calculate the maximum number of coins you can earn during the game."
  },
  {
    "title": "Unique Array",
    "url": "https://codeforces.com/problemset/problem/1969/E",
    "description": "You are given an integer array $$$a$$$ of length $$$n$$$. A subarray of $$$a$$$ is one of its contiguous subsequences (i. e. an array $$$[a_l, a_{l+1}, \\dots, a_r]$$$ for some integers $$$l$$$ and $$$r$$$ such that $$$1 \\le l < r \\le n$$$). Let's call a subarray unique if there is an integer that occurs exactly once in the subarray.You can perform the following operation any number of times (possibly zero): choose an element of the array and replace it with any integer.Your task is to calculate the minimum number of aforementioned operation in order for all the subarrays of the array $$$a$$$ to be unique."
  },
  {
    "title": "Shop Game",
    "url": "https://codeforces.com/problemset/problem/1969/D",
    "description": "Alice and Bob are playing a game in the shop. There are $$$n$$$ items in the shop; each item has two parameters: $$$a_i$$$ (item price for Alice) and $$$b_i$$$ (item price for Bob).Alice wants to choose a subset (possibly empty) of items and buy them. After that, Bob does the following:   if Alice bought less than $$$k$$$ items, Bob can take all of them for free;  otherwise, he will take $$$k$$$ items for free that Alice bought (Bob chooses which $$$k$$$ items it will be), and for the rest of the chosen items, Bob will buy them from Alice and pay $$$b_i$$$ for the $$$i$$$-th item. Alice's profit is equal to $$$\\sum\\limits_{i \\in S} b_i - \\sum\\limits_{j \\in T} a_j$$$, where $$$S$$$ is the set of items Bob buys from Alice, and $$$T$$$ is the set of items Alice buys from the shop. In other words, Alice's profit is the difference between the amount Bob pays her and the amount she spends buying the items.Alice wants to maximize her profit, Bob wants to minimize Alice's profit. Your task is to calculate Alice's profit if both Alice and Bob act optimally."
  },
  {
    "title": "Minimizing the Sum",
    "url": "https://codeforces.com/problemset/problem/1969/C",
    "description": "You are given an integer array $$$a$$$ of length $$$n$$$.You can perform the following operation: choose an element of the array and replace it with any of its neighbor's value.For example, if $$$a=[3, 1, 2]$$$, you can get one of the arrays $$$[3, 3, 2]$$$, $$$[3, 2, 2]$$$ and $$$[1, 1, 2]$$$ using one operation, but not $$$[2, 1, 2$$$] or $$$[3, 4, 2]$$$. Your task is to calculate the minimum possible total sum of the array if you can perform the aforementioned operation at most $$$k$$$ times."
  },
  {
    "title": "Shifts and Sorting",
    "url": "https://codeforces.com/problemset/problem/1969/B",
    "description": "Let's define a cyclic shift of some string $$$s$$$ as a transformation from $$$s_1 s_2 \\dots s_{n-1} s_{n}$$$ into $$$s_{n} s_1 s_2 \\dots s_{n-1}$$$. In other words, you take one last character $$$s_n$$$ and place it before the first character while moving all other characters to the right.You are given a binary string $$$s$$$ (a string consisting of only 0-s and/or 1-s).In one operation, you can choose any substring $$$s_l s_{l+1} \\dots s_r$$$ ($$$1 \\le l < r \\le |s|$$$) and cyclically shift it. The cost of such operation is equal to $$$r - l + 1$$$ (or the length of the chosen substring).You can perform the given operation any number of times. What is the minimum total cost to make $$$s$$$ sorted in non-descending order?"
  },
  {
    "title": "Two Friends",
    "url": "https://codeforces.com/problemset/problem/1969/A",
    "description": "Monocarp wants to throw a party. He has $$$n$$$ friends, and he wants to have at least $$$2$$$ of them at his party.The $$$i$$$-th friend's best friend is $$$p_i$$$. All $$$p_i$$$ are distinct, and for every $$$i \\in [1, n]$$$, $$$p_i \\ne i$$$.Monocarp can send invitations to friends. The $$$i$$$-th friend comes to the party if both the $$$i$$$-th friend and the $$$p_i$$$-th friend receive an invitation (note that the $$$p_i$$$-th friend doesn't have to actually come to the party). Each invitation is sent to exactly one of the friends.For example, if $$$p = [3, 1, 2, 5, 4]$$$, and Monocarp sends invitations to the friends $$$[1, 2, 4, 5]$$$, then the friends $$$[2, 4, 5]$$$ will come to the party. The friend $$$1$$$ won't come since his best friend didn't receive an invitation; the friend $$$3$$$ won't come since he didn't receive an invitation.Calculate the minimum number of invitations Monocarp has to send so that at least $$$2$$$ friends come to the party."
  },
  {
    "title": "Division + LCP (hard version)",
    "url": "https://codeforces.com/problemset/problem/1968/G2",
    "description": "This is the hard version of the problem. In this version $$$l\\le r$$$.You are given a string $$$s$$$. For a fixed $$$k$$$, consider a division of $$$s$$$ into exactly $$$k$$$ continuous substrings $$$w_1,\\dots,w_k$$$. Let $$$f_k$$$ be the maximal possible $$$LCP(w_1,\\dots,w_k)$$$ among all divisions.$$$LCP(w_1,\\dots,w_m)$$$ is the length of the Longest Common Prefix of the strings $$$w_1,\\dots,w_m$$$.For example, if $$$s=abababcab$$$ and $$$k=4$$$, a possible division is $$$\\color{red}{ab}\\color{blue}{ab}\\color{orange}{abc}\\color{green}{ab}$$$. The $$$LCP(\\color{red}{ab},\\color{blue}{ab},\\color{orange}{abc},\\color{green}{ab})$$$ is $$$2$$$, since $$$ab$$$ is the Longest Common Prefix of those four strings. Note that each substring consists of a continuous segment of characters and each character belongs to exactly one substring.Your task is to find $$$f_l,f_{l+1},\\dots,f_r$$$."
  },
  {
    "title": "Division + LCP (easy version)",
    "url": "https://codeforces.com/problemset/problem/1968/G1",
    "description": "This is the easy version of the problem. In this version $$$l=r$$$.You are given a string $$$s$$$. For a fixed $$$k$$$, consider a division of $$$s$$$ into exactly $$$k$$$ continuous substrings $$$w_1,\\dots,w_k$$$. Let $$$f_k$$$ be the maximal possible $$$LCP(w_1,\\dots,w_k)$$$ among all divisions.$$$LCP(w_1,\\dots,w_m)$$$ is the length of the Longest Common Prefix of the strings $$$w_1,\\dots,w_m$$$.For example, if $$$s=abababcab$$$ and $$$k=4$$$, a possible division is $$$\\color{red}{ab}\\color{blue}{ab}\\color{orange}{abc}\\color{green}{ab}$$$. The $$$LCP(\\color{red}{ab},\\color{blue}{ab},\\color{orange}{abc},\\color{green}{ab})$$$ is $$$2$$$, since $$$ab$$$ is the Longest Common Prefix of those four strings. Note that each substring consists of a continuous segment of characters and each character belongs to exactly one substring.Your task is to find $$$f_l,f_{l+1},\\dots,f_r$$$. In this version $$$l=r$$$."
  },
  {
    "title": "Equal XOR Segments",
    "url": "https://codeforces.com/problemset/problem/1968/F",
    "description": "Let us call an array $$$x_1,\\dots,x_m$$$ interesting if it is possible to divide the array into $$$k>1$$$ parts so that bitwise XOR of values from each part are equal. More formally, you must split array $$$x$$$ into $$$k$$$ consecutive segments, each element of $$$x$$$ must belong to exactly $$$1$$$ segment. Let $$$y_1,\\dots,y_k$$$ be the XOR of elements from each part respectively. Then $$$y_1=y_2=\\dots=y_k$$$ must be fulfilled.For example, if $$$x = [1, 1, 2, 3, 0]$$$, you can split it as follows: $$$[\\color{blue}1], [\\color{green}1], [\\color{red}2, \\color{red}3, \\color{red}0]$$$. Indeed $$$\\color{blue}1=\\color{green}1=\\color{red}2 \\oplus \\color{red}3\\oplus \\color{red}0$$$.You are given an array $$$a_1,\\dots,a_n$$$. Your task is to answer $$$q$$$ queries:   For fixed $$$l$$$, $$$r$$$, determine whether the subarray $$$a_l,a_{l+1},\\dots,a_r$$$ is interesting. "
  },
  {
    "title": "Cells Arrangement",
    "url": "https://codeforces.com/problemset/problem/1968/E",
    "description": "You are given an integer $$$n$$$. You choose $$$n$$$ cells $$$(x_1,y_1), (x_2,y_2),\\dots,(x_n,y_n)$$$ in the grid $$$n\\times n$$$ where $$$1\\le x_i\\le n$$$ and $$$1\\le y_i\\le n$$$.Let $$$\\mathcal{H}$$$ be the set of distinct Manhattan distances between any pair of cells. Your task is to maximize the size of $$$\\mathcal{H}$$$. Examples of sets and their construction are given in the notes.If there exists more than one solution, you are allowed to output any.Manhattan distance between cells $$$(x_1,y_1)$$$ and $$$(x_2,y_2)$$$ equals $$$|x_1-x_2|+|y_1-y_2|$$$."
  },
  {
    "title": "Permutation Game",
    "url": "https://codeforces.com/problemset/problem/1968/D",
    "description": "Bodya and Sasha found a permutation $$$p_1,\\dots,p_n$$$ and an array $$$a_1,\\dots,a_n$$$. They decided to play a well-known \"Permutation game\".A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).Both of them chose a starting position in the permutation.The game lasts $$$k$$$ turns. The players make moves simultaneously. On each turn, two things happen to each player:   If the current position of the player is $$$x$$$, his score increases by $$$a_x$$$.  Then the player either stays at his current position $$$x$$$ or moves from $$$x$$$ to $$$p_x$$$.  The winner of the game is the player with the higher score after exactly $$$k$$$ turns.Knowing Bodya's starting position $$$P_B$$$ and Sasha's starting position $$$P_S$$$, determine who wins the game if both players are trying to win."
  },
  {
    "title": "Assembly via Remainders",
    "url": "https://codeforces.com/problemset/problem/1968/C",
    "description": "You are given an array $$$x_2,x_3,\\dots,x_n$$$. Your task is to find any array $$$a_1,\\dots,a_n$$$, where:   $$$1\\le a_i\\le 10^9$$$ for all $$$1\\le i\\le n$$$.  $$$x_i=a_i \\bmod a_{i-1}$$$ for all $$$2\\le i\\le n$$$. Here $$$c\\bmod d$$$ denotes the remainder of the division of the integer $$$c$$$ by the integer $$$d$$$. For example $$$5 \\bmod 2 = 1$$$, $$$72 \\bmod 3 = 0$$$, $$$143 \\bmod 14 = 3$$$.Note that if there is more than one $$$a$$$ which satisfies the statement, you are allowed to find any."
  },
  {
    "title": "Prefiquence",
    "url": "https://codeforces.com/problemset/problem/1968/B",
    "description": "You are given two binary strings $$$a$$$ and $$$b$$$. A binary string is a string consisting of the characters '0' and '1'.Your task is to determine the maximum possible number $$$k$$$ such that a prefix of string $$$a$$$ of length $$$k$$$ is a subsequence of string $$$b$$$.A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements."
  },
  {
    "title": "Maximize?",
    "url": "https://codeforces.com/problemset/problem/1968/A",
    "description": "You are given an integer $$$x$$$. Your task is to find any integer $$$y$$$ $$$(1\\le y<x)$$$ such that $$$\\gcd(x,y)+y$$$ is maximum possible.Note that if there is more than one $$$y$$$ which satisfies the statement, you are allowed to find any.$$$\\gcd(a,b)$$$ is the Greatest Common Divisor of $$$a$$$ and $$$b$$$. For example, $$$\\gcd(6,4)=2$$$."
  },
  {
    "title": "Next and Prev",
    "url": "https://codeforces.com/problemset/problem/1967/F",
    "description": "Let p1,…,pnp_1, \\ldots, p_n be a permutation of [1,…,n][1, \\ldots, n].Let the qq-subsequence of pp be a permutation of [1,q][1, q], whose elements are in the same relative order as in p1,…,pnp_1, \\ldots, p_n. That is, we extract all elements not exceeding qq together from pp in the original order, and they make the qq-subsequence of pp.For a given array aa, let pre(i)pre(i) be the largest value satisfying pre(i)<ipre(i) < i and apre(i)>aia_{pre(i)} > a_i. If it does not exist, let pre(i)=−10100pre(i) = -10^{100}. Let nxt(i)nxt(i) be the smallest value satisfying nxt(i)>inxt(i) > i and anxt(i)>aia_{nxt(i)} > a_i. If it does not exist, let nxt(i)=10100nxt(i) = 10^{100}.For each qq such that 1≤q≤n1 \\leq q \\leq n, let a1,…,aqa_1, \\ldots, a_q be the qq-subsequence of pp. For each ii such that 1≤i≤q1 \\leq i \\leq q, pre(i)pre(i) and nxt(i)nxt(i) will be calculated as defined. Then, you will be given some integer values of xx, and for each of them you have to calculate q∑i=1min(nxt(i)−pre(i),x)\\sum\\limits_{i=1}^q \\min(nxt(i) - pre(i), x)."
  },
  {
    "title": "Again Counting Arrays (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1967/E2",
    "description": "This is the hard version of the problem. The differences between the two versions are the constraints on $$$n, m, b_0$$$ and the time limit. You can make hacks only if both versions are solved.Little R has counted many sets before, and now she decides to count arrays.Little R thinks an array $$$b_0, \\ldots, b_n$$$ consisting of non-negative integers is continuous if and only if, for each $$$i$$$ such that $$$1 \\leq i \\leq n$$$, $$$\\lvert b_i - b_{i-1} \\rvert = 1$$$ is satisfied. She likes continuity, so she only wants to generate continuous arrays.If Little R is given $$$b_0$$$ and $$$a_1, \\ldots, a_n$$$, she will try to generate a non-negative continuous array $$$b$$$, which has no similarity with $$$a$$$. More formally, for all $$$1 \\leq i \\leq n$$$, $$$a_i \\neq b_i$$$ holds.However, Little R does not have any array $$$a$$$. Instead, she gives you $$$n$$$, $$$m$$$ and $$$b_0$$$. She wants to count the different integer arrays $$$a_1, \\ldots, a_n$$$ satisfying:  $$$1 \\leq a_i \\leq m$$$;  At least one non-negative continuous array $$$b_0, \\ldots, b_n$$$ can be generated. Note that $$$b_i \\geq 0$$$, but the $$$b_i$$$ can be arbitrarily large.Since the actual answer may be enormous, please just tell her the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Again Counting Arrays (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1967/E1",
    "description": "This is the easy version of the problem. The differences between the two versions are the constraints on $$$n, m, b_0$$$ and the time limit. You can make hacks only if both versions are solved.Little R has counted many sets before, and now she decides to count arrays.Little R thinks an array $$$b_0, \\ldots, b_n$$$ consisting of non-negative integers is continuous if and only if, for each $$$i$$$ such that $$$1 \\leq i \\leq n$$$, $$$\\lvert b_i - b_{i-1} \\rvert = 1$$$ is satisfied. She likes continuity, so she only wants to generate continuous arrays.If Little R is given $$$b_0$$$ and $$$a_1, \\ldots, a_n$$$, she will try to generate a non-negative continuous array $$$b$$$, which has no similarity with $$$a$$$. More formally, for all $$$1 \\leq i \\leq n$$$, $$$a_i \\neq b_i$$$ holds.However, Little R does not have any array $$$a$$$. Instead, she gives you $$$n$$$, $$$m$$$ and $$$b_0$$$. She wants to count the different integer arrays $$$a_1, \\ldots, a_n$$$ satisfying:  $$$1 \\leq a_i \\leq m$$$;  At least one non-negative continuous array $$$b_0, \\ldots, b_n$$$ can be generated. Note that $$$b_i \\geq 0$$$, but the $$$b_i$$$ can be arbitrarily large.Since the actual answer may be enormous, please just tell her the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Long Way to be Non-decreasing",
    "url": "https://codeforces.com/problemset/problem/1967/D",
    "description": "Little R is a magician who likes non-decreasing arrays. She has an array of length $$$n$$$, initially as $$$a_1, \\ldots, a_n$$$, in which each element is an integer between $$$[1, m]$$$. She wants it to be non-decreasing, i.e., $$$a_1 \\leq a_2 \\leq \\ldots \\leq a_n$$$.To do this, she can perform several magic tricks. Little R has a fixed array $$$b_1\\ldots b_m$$$ of length $$$m$$$. Formally, let's define a trick as a procedure that does the following things in order:  Choose a set $$$S \\subseteq \\{1, 2, \\ldots, n\\}$$$.  For each $$$u \\in S$$$, assign $$$a_u$$$ with $$$b_{a_u}$$$. Little R wonders how many tricks are needed at least to make the initial array non-decreasing. If it is not possible with any amount of tricks, print $$$-1$$$ instead."
  },
  {
    "title": "Fenwick Tree",
    "url": "https://codeforces.com/problemset/problem/1967/C",
    "description": "Let $$$\\operatorname{lowbit}(x)$$$ denote the value of the lowest binary bit of $$$x$$$, e.g. $$$\\operatorname{lowbit}(12)=4$$$, $$$\\operatorname{lowbit}(8)=8$$$.For an array $$$a$$$ of length $$$n$$$, if an array $$$s$$$ of length $$$n$$$ satisfies $$$s_k=\\left(\\sum\\limits_{i=k-\\operatorname{lowbit}(k)+1}^{k}a_i\\right)\\bmod 998\\,244\\,353$$$ for all $$$k$$$, then $$$s$$$ is called the Fenwick Tree of $$$a$$$. Let's denote it as $$$s=f(a)$$$.For a positive integer $$$k$$$ and an array $$$a$$$, $$$f^k(a)$$$ is defined as follows:$$$$$$ f^k(a)= \\begin{cases} f(a)&\\textrm{if }k=1\\\\ f(f^{k-1}(a))&\\textrm{otherwise.}\\\\ \\end{cases} $$$$$$You are given an array $$$b$$$ of length $$$n$$$ and a positive integer $$$k$$$. Find an array $$$a$$$ that satisfies $$$0\\le a_i < 998\\,244\\,353$$$ and $$$f^k(a)=b$$$. It can be proved that an answer always exists. If there are multiple possible answers, you may print any of them."
  },
  {
    "title": "Reverse Card (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1967/B2",
    "description": "The two versions are different problems. You may want to read both versions. You can make hacks only if both versions are solved.You are given two positive integers $$$n$$$, $$$m$$$.Calculate the number of ordered pairs $$$(a, b)$$$ satisfying the following conditions:  $$$1\\le a\\le n$$$, $$$1\\le b\\le m$$$;  $$$b \\cdot \\gcd(a,b)$$$ is a multiple of $$$a+b$$$. "
  },
  {
    "title": "Reverse Card (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1967/B1",
    "description": "The two versions are different problems. You may want to read both versions. You can make hacks only if both versions are solved.You are given two positive integers $$$n$$$, $$$m$$$.Calculate the number of ordered pairs $$$(a, b)$$$ satisfying the following conditions:  $$$1\\le a\\le n$$$, $$$1\\le b\\le m$$$;  $$$a+b$$$ is a multiple of $$$b \\cdot \\gcd(a,b)$$$. "
  },
  {
    "title": "Permutation Counting",
    "url": "https://codeforces.com/problemset/problem/1967/A",
    "description": "You have some cards. An integer between $$$1$$$ and $$$n$$$ is written on each card: specifically, for each $$$i$$$ from $$$1$$$ to $$$n$$$, you have $$$a_i$$$ cards which have the number $$$i$$$ written on them.There is also a shop which contains unlimited cards of each type. You have $$$k$$$ coins, so you can buy $$$k$$$ new cards in total, and the cards you buy can contain any integer between $$$1$$$ and $$$n$$$.After buying the new cards, you rearrange all your cards in a line. The score of a rearrangement is the number of (contiguous) subarrays of length $$$n$$$ which are a permutation of $$$[1, 2, \\ldots, n]$$$. What's the maximum score you can get?"
  },
  {
    "title": "Rectangle Filling",
    "url": "https://codeforces.com/problemset/problem/1966/B",
    "description": "There is an n×mn \\times m grid of white and black squares. In one operation, you can select any two squares of the same color, and color all squares in the subrectangle between them that color.Formally, if you select positions (x1,y1)(x_1, y_1) and (x2,y2)(x_2, y_2), both of which are currently the same color cc, set the color of all (x,y)(x, y) where min(x1,x2)≤x≤max(x1,x2)\\min(x_1, x_2) \\le x \\le \\max(x_1, x_2) and min(y1,y2)≤y≤max(y1,y2)\\min(y_1, y_2) \\le y \\le \\max(y_1, y_2) to cc.This diagram shows a sequence of two possible operations on a grid:  Is it possible for all squares in the grid to be the same color, after performing any number of operations (possibly zero)?"
  },
  {
    "title": "Card Exchange",
    "url": "https://codeforces.com/problemset/problem/1966/A",
    "description": "You have a hand of nn cards, where each card has a number written on it, and a fixed integer kk. You can perform the following operation any number of times:  Choose any kk cards from your hand that all have the same number.  Exchange these cards for k−1k-1 cards, each of which can have any number you choose (including the number written on the cards you just exchanged). Here is one possible sequence of operations for the first example case, which has k=3k=3:  What is the minimum number of cards you can have in your hand at the end of this process?"
  },
  {
    "title": "Conference",
    "url": "https://codeforces.com/problemset/problem/1965/F",
    "description": "You have been asked to organize a very important art conference. The first step is to choose the dates.The conference must last for a certain number of consecutive days. Each day, one lecturer must perform, and the same lecturer cannot perform more than once.You asked $$$n$$$ potential lecturers if they could participate in the conference. Lecturer $$$i$$$ indicated that they could perform on any day from $$$l_i$$$ to $$$r_i$$$ inclusive.A certain segment of days can be chosen as the conference dates if there is a way to assign an available lecturer to each day of the segment, assigning each lecturer to no more than one day.For each $$$k$$$ from $$$1$$$ to $$$n$$$, find how many ways there are to choose a segment of $$$k$$$ consecutive days as the conference dates."
  },
  {
    "title": "Connected Cubes",
    "url": "https://codeforces.com/problemset/problem/1965/E",
    "description": "There are $$$n \\cdot m$$$ unit cubes currently in positions $$$(1, 1, 1)$$$ through $$$(n, m, 1)$$$. Each of these cubes is one of $$$k$$$ colors. You want to add additional cubes at any integer coordinates such that the subset of cubes of each color is connected, where two cubes are considered connected if they share a face.In other words, for every pair of cubes of the same color $$$c$$$, it should be possible to travel from one to the other, moving only through cubes of color $$$c$$$ that share a face.The existing cubes are currently in the corner of a room. There are colorless cubes completely filling the planes $$$x = 0$$$, $$$y = 0$$$, and $$$z = 0$$$, preventing you from placing additional cubes there or at any negative coordinates.  Find a solution that uses at most $$$4 \\cdot 10^5$$$ additional cubes (not including the cubes that are currently present), or determine that there is no solution. It can be shown that under the given constraints, if there is a solution, there is one using at most $$$4 \\cdot 10^5$$$ additional cubes."
  },
  {
    "title": "Missing Subarray Sum",
    "url": "https://codeforces.com/problemset/problem/1965/D",
    "description": "There is a hidden array $$$a$$$ of $$$n$$$ positive integers. You know that $$$a$$$ is a palindrome, or in other words, for all $$$1 \\le i \\le n$$$, $$$a_i = a_{n + 1 - i}$$$. You are given the sums of all but one of its distinct subarrays, in arbitrary order. The subarray whose sum is not given can be any of the $$$\\frac{n(n+1)}{2}$$$ distinct subarrays of $$$a$$$.Recover any possible palindrome $$$a$$$. The input is chosen such that there is always at least one array $$$a$$$ that satisfies the conditions.An array $$$b$$$ is a subarray of $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end."
  },
  {
    "title": "Folding Strip",
    "url": "https://codeforces.com/problemset/problem/1965/C",
    "description": "You have a strip of paper with a binary string $$$s$$$ of length $$$n$$$. You can fold the paper in between any pair of adjacent digits.A set of folds is considered valid if after the folds, all characters that are on top of or below each other match. Note that all folds are made at the same time, so the characters don't have to match in between folds.For example, these are valid foldings of $$$s = \\mathtt{110110110011}$$$ and $$$s = \\mathtt{01110}$$$:  The length of the folded strip is the length seen from above after all folds are made. So for the two above examples, after the folds shown above, the lengths would be $$$7$$$ and $$$3$$$, respectively.Notice that for the above folding of $$$s = \\mathtt{01110}$$$, if we made either of the two folds on their own, that would not be a valid folding. However, because we don't check for validity until all folds are made, this folding is valid.After performing a set of valid folds, what is the minimum length strip you can form?"
  },
  {
    "title": "Missing Subsequence Sum",
    "url": "https://codeforces.com/problemset/problem/1965/B",
    "description": "You are given two integers $$$n$$$ and $$$k$$$. Find a sequence $$$a$$$ of non-negative integers of size at most $$$25$$$ such that the following conditions hold.  There is no subsequence of $$$a$$$ with a sum of $$$k$$$.  For all $$$1 \\le v \\le n$$$ where $$$v \\ne k$$$, there is a subsequence of $$$a$$$ with a sum of $$$v$$$. A sequence $$$b$$$ is a subsequence of $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements, without changing the order of the remaining elements. For example, $$$[5, 2, 3]$$$ is a subsequence of $$$[1, 5, 7, 8, 2, 4, 3]$$$.It can be shown that under the given constraints, a solution always exists."
  },
  {
    "title": "Everything Nim",
    "url": "https://codeforces.com/problemset/problem/1965/A",
    "description": "Alice and Bob are playing a game on $$$n$$$ piles of stones. On each player's turn, they select a positive integer $$$k$$$ that is at most the size of the smallest nonempty pile and remove $$$k$$$ stones from each nonempty pile at once. The first player who is unable to make a move (because all piles are empty) loses.Given that Alice goes first, who will win the game if both players play optimally?"
  },
  {
    "title": "Necromancer",
    "url": "https://codeforces.com/problemset/problem/1958/J",
    "description": "Monocarp is playing a computer game. In this game, his character is a necromancer. He is fighting $$$n$$$ monsters numbered from $$$1$$$ to $$$n$$$. Each monster has two parameters: health and strength.Monocarp considers $$$q$$$ scenarios of the battle. In each scenario, he chooses some segment $$$[l, r]$$$ of monsters and calculates the number of moves it takes to defeat all these monsters.Each scenario proceeds as follows. First, Monocarp kills monster $$$l$$$ and revives it as a zombie (this does not count as a move). Then each move the following happens: let $$$i$$$ be the index of the first monster in the segment $$$[l, r]$$$ that is still alive. All zombies attack monster $$$i$$$, reducing its health by their total strength. After that, if monster $$$i$$$ has $$$0$$$ or less health, it dies and Monocarp revives it as a zombie.When the monster is revived, the zombie's strength is equal to the monster's strength.Help Monocarp for each scenario to calculate how many moves it will take to kill all the monsters in the segment."
  },
  {
    "title": "Equal Trees",
    "url": "https://codeforces.com/problemset/problem/1958/I",
    "description": "You are given two rooted trees, consisting of $$$n$$$ vertices each. The vertices in the trees are numbered from $$$1$$$ to $$$n$$$, and the root is the vertex $$$1$$$.You can perform the following operation: choose the tree and the vertex $$$v$$$ (except the root of the tree) in it; connect the child nodes of $$$v$$$ to the parent of $$$v$$$ and remove $$$v$$$ from the tree.Let's say that two trees are equal if both of the following conditions hold:   the sets of remaining vertices in both trees are the same;  for every vertex $$$v$$$ which is not deleted, its parent in the first tree is the same as its parent in the second tree. Your task is to calculate the minimum number of aforementioned operation in order to make the trees equal."
  },
  {
    "title": "Composite Spells",
    "url": "https://codeforces.com/problemset/problem/1958/H",
    "description": "Monocarp plays a fantasy RPG. His character is a mage, so he casts spells. There are two types of spells he knows — basic spells and composite spells.There are $$$n$$$ basic spells in Monocarp's spell book, numbered from $$$1$$$ to $$$n$$$. Each basic spell simply changes the health of the target: either decreases it or increases it. The $$$i$$$-th basic spell changes the target's health value by $$$b_i$$$ (increases by $$$b_i$$$ if $$$b_i$$$ is non-negative, or decreases by $$$|b_i|$$$ if $$$b_i$$$ is negative). If the target's health value goes to $$$0$$$ or below, it dies, and all next spells cast at it do nothing.There are also $$$m$$$ composite spells in the spell book, numbered from $$$n+1$$$ to $$$n+m$$$. Each composite spell is a sequence of other spells, cast in specific order. A composite spell can consist both of basic spells and composite spells; the $$$i$$$-th spell consists of $$$s_i$$$ other spells, and each of those spells has index strictly less than $$$i$$$ (so there is no situation that composite spells infinitely cast each other). So, actually, each composite spell can be considered a finite sequence of basic spells, although its length might be huge. Note that the same spell can appear in a composite spell multiple times.Monocarp has decided to cast the $$$(n+m)$$$-th spell from his spell book. The target of this spell is a monster with an initial health value of $$$hp$$$. Monocarp wants to know whether the monster will be killed or not, and if it will be killed, which basic spell will kill it."
  },
  {
    "title": "Observation Towers",
    "url": "https://codeforces.com/problemset/problem/1958/G",
    "description": "Consider a segment of an OX axis from $$$1$$$ to $$$n$$$. There are $$$k$$$ observation towers on this segment.Each tower has two parameters — the coordinate $$$x_i$$$ and the height $$$h_i$$$. The coordinates of all towers are distinct. From tower $$$i$$$, you can see point $$$j$$$ if $$$|x_i - j| \\le h_i$$$ (where $$$|a|$$$ is an absolute value of $$$a$$$).You can increase the height of any tower by $$$1$$$ for one coin. The height of each tower can be increased any number of times (including zero).You need to process $$$q$$$ independent queries. In the $$$i$$$-th query, two different points $$$l$$$ and $$$r$$$ are given. You need to calculate the minimum number of coins required to be able to see both of these points (from one tower or from different towers)."
  },
  {
    "title": "Narrow Paths",
    "url": "https://codeforces.com/problemset/problem/1958/F",
    "description": "Monocarp is wandering through a matrix consisting of $$$2$$$ rows and $$$n$$$ columns. Let's denote the cell in the $$$i$$$-th row and $$$j$$$-th column as $$$(i, j)$$$. Monocarp starts at cell $$$(1, 1)$$$ and wants to reach cell $$$(2, n)$$$.In one move, Monocarp can move in one of two directions:   right — from cell $$$(i, j)$$$ to cell $$$(i, j + 1)$$$;  down — from cell $$$(i, j)$$$ to cell $$$(i + 1, j)$$$. Monocarp can't go outside the matrix.Polycarp wants to prevent Monocarp from freely wandering through the matrix. To do this, he wants to choose exactly $$$k$$$ different cells in the matrix and block them. He cannot choose cells $$$(1, 1)$$$ and $$$(2, n)$$$.For each $$$i$$$ from $$$0$$$ to $$$n$$$, Polycarp wants to know how many ways he can block exactly $$$k$$$ cells, so that Monocarp has exactly $$$i$$$ different paths from $$$(1, 1)$$$ to $$$(2, n)$$$. Two paths are considered different if there exists a cell that Monocarp visits in one path but not in the other.As the number of ways can be quite large, output it modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Yet Another Permutation Constructive",
    "url": "https://codeforces.com/problemset/problem/1958/E",
    "description": "Suppose you have a permutation pp of nn integers — an array where each element is an integer from 11 to nn, and every integer from 11 to nn appears exactly once.In one operation, you remove every element of this permutation which is less than at least one of its neighbors. For example, when you apply the operation to [3,1,2,5,4][3, 1, 2, 5, 4], you get [3,5][3, 5]. If you apply an operation again, you get [5][5].It's easy to see that after applying a finite number of operations, you get an array consisting of a single integer nn.You are given two integers nn and kk. Find a permutation of nn integers such that it becomes an array consisting of a single element nn after exactly kk operations (and not earlier)."
  },
  {
    "title": "Staircase",
    "url": "https://codeforces.com/problemset/problem/1958/D",
    "description": "There is a staircase consisting of $$$n$$$ steps. Each step is either intact, or broken. For each broken step, an integer $$$a_i$$$ is given denoting the difficulty of repairing it.Every day, you can either:  repair an arbitrary broken step. The effort it takes to repair the $$$i$$$-th step is equal to $$$a_i$$$;  or repair two adjacent broken steps. The effort it takes to repair both the $$$i$$$-th step and the $$$(i+1)$$$-th step is equal to $$$2 \\cdot (a_i+a_{i+1})$$$. You want to repair all broken steps of the staircase, and you want to do it in the minimum possible number of days. What is the minimum total effort it will take to repair all broken steps in the minimum number of days?"
  },
  {
    "title": "Firewood",
    "url": "https://codeforces.com/problemset/problem/1958/C",
    "description": "It's pretty cold in Berland (yes, even in May). So Monocarp has to light his fireplace.Monocarp has a big log of wood, which weighs $$$2^n$$$ grams. Monocarp has watched the weather forecast and decided that he has to burn $$$k$$$ grams of wood in the fireplace today, and the remaining $$$2^n-k$$$ grams of wood will be used tomorrow.In one minute, Monocarp can use his saw to split one of his logs in half. Initially he has only one log, but of course, after splitting a log, he gets two new logs. If the weight of the log is $$$x$$$, then each of the resulting logs has weight equal to $$$\\frac{x}{2}$$$. Monocarp can't split logs of weight $$$1$$$ gram.Monocarp has to cut his log in such a way that some of the resulting logs weigh exactly $$$k$$$ grams in total (and since the total weight of wood doesn't change, the remaining logs will have a total weight equal to exactly $$$2^n-k$$$). Help him to calculate the minimum number of minutes he has to spend cutting the logs."
  },
  {
    "title": "Clock in the Pool",
    "url": "https://codeforces.com/problemset/problem/1958/B",
    "description": "You are swimming in the pool, and you need to control the time of swimming.The pool has a clock that cycles between three different modes: showing water temperature, showing air temperature, and showing time. At the start of the $$$0$$$-th second it starts showing water temperature, at the start of the $$$k$$$-th second it switches to air temperature. At the start of the $$$2k$$$-th second, it switches to showing time.At the start of the $$$3k$$$-th second the clock starts showing water temperature again, at the start of the $$$4k$$$-th second — air temperature, and so on.You looked at the clock during the $$$m$$$-th second to check the time, but it may be that the clock is not showing time right now. How much time do you have to wait to see the time on the clock?Answer $$$t$$$ independent test cases."
  },
  {
    "title": "1-3-5",
    "url": "https://codeforces.com/problemset/problem/1958/A",
    "description": "In Berland, coins of worth $$$1$$$, $$$3$$$ and $$$5$$$ burles are commonly used (burles are local currency).Eva has to pay exactly $$$n$$$ burles in a shop. She has an infinite amount of coins of all three types. However, she doesn't like to pay using coins worth $$$1$$$ burle — she thinks they are the most convenient to use.Help Eva to calculate the minimum number of coins worth $$$1$$$ burle she has to use, if she has to pay exactly $$$n$$$ burles. Note that she can spend any number of coins worth $$$3$$$ and/or $$$5$$$ burles."
  },
  {
    "title": "Frequency Mismatch (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1957/F2",
    "description": "This is the hard version of the problem. The difference between the two versions of this problem is the constraint on $$$k$$$. You can make hacks only if all versions of the problem are solved.You are given an undirected tree of $$$n$$$ nodes. Each node $$$v$$$ has a value $$$a_v$$$ written on it. You have to answer queries related to the tree.You are given $$$q$$$ queries. In each query, you are given $$$5$$$ integers, $$$u_1, v_1, u_2, v_2, k$$$. Denote the count of nodes with value $$$c$$$ on path $$$u_1 \\rightarrow v_1$$$ with $$$x_c$$$, and the count of nodes with value $$$c$$$ on path $$$u_2 \\rightarrow v_2$$$ with $$$y_c$$$. If there are $$$z$$$ such values of $$$c$$$ such that $$$x_c \\neq y_c$$$, output any $$$\\min(z, k)$$$ such values in any order."
  },
  {
    "title": "Frequency Mismatch (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1957/F1",
    "description": "This is the easy version of the problem. The difference between the two versions of this problem is the constraint on kk. You can make hacks only if all versions of the problem are solved.You are given an undirected tree of nn nodes. Each node vv has a value ava_v written on it. You have to answer queries related to the tree.You are given qq queries. In each query, you are given 55 integers, u1,v1,u2,v2,ku_1, v_1, u_2, v_2, k. Denote the count of nodes with value cc on path u1→v1u_1 \\rightarrow v_1 with xcx_c, and the count of nodes with value cc on path u2→v2u_2 \\rightarrow v_2 with ycy_c. If there are zz such values of cc such that xc≠ycx_c \\neq y_c, output any min(z,k)\\min(z, k) such values in any order."
  },
  {
    "title": "Carousel of Combinations",
    "url": "https://codeforces.com/problemset/problem/1957/E",
    "description": "You are given an integer nn. The function C(i,k)C(i,k) represents the number of distinct ways you can select kk distinct numbers from the set {1,2,…,i1, 2, \\ldots, i} and arrange them in a circle†^\\dagger.Find the value of n∑i=1i∑j=1(C(i,j)modj). \\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^i \\left( C(i,j) \\bmod j \\right).  Here, the operation xmodyx \\bmod y denotes the remainder from dividing xx by yy.Since this value can be very large, find it modulo 109+710^9+7.†^\\dagger In a circular arrangement, sequences are considered identical if one can be rotated to match the other. For instance, [1,2,3][1, 2, 3] and [2,3,1][2, 3, 1] are equivalent in a circle."
  },
  {
    "title": "A BIT of an Inequality",
    "url": "https://codeforces.com/problemset/problem/1957/D",
    "description": "You are given an array $$$a_1, a_2, \\ldots, a_n$$$. Find the number of tuples ($$$x, y, z$$$) such that:   $$$1 \\leq x \\leq y \\leq z \\leq n$$$, and  $$$f(x, y) \\oplus f(y, z) > f(x, z)$$$. We define $$$f(l, r) = a_l \\oplus a_{l + 1} \\oplus \\ldots \\oplus a_{r}$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "How Does the Rook Move?",
    "url": "https://codeforces.com/problemset/problem/1957/C",
    "description": "You are given an $$$n \\times n$$$ chessboard where you and the computer take turns alternatingly to place white rooks & black rooks on the board respectively. While placing rooks, you have to ensure that no two rooks attack each other. Two rooks attack each other if they share the same row or column regardless of color.A valid move is placing a rook on a position ($$$r$$$, $$$c$$$) such that it doesn't attack any other rook.You start first, and when you make a valid move in your turn, placing a white rook at position ($$$r$$$, $$$c$$$), the computer will mirror you and place a black rook at position ($$$c$$$, $$$r$$$) in its turn. If $$$r = c$$$, then the computer can't mirror your move, and skips its turn.You have already played $$$k$$$ moves with the computer (the computer tries to mirror these moves too), and you must continue playing the game until there are no valid moves remaining. How many different final configurations are possible when you continue the game after the $$$k$$$ moves? It is guaranteed that the $$$k$$$ moves and the implied computer moves are valid. Since the answer may be large, print it modulo $$$10^9+7$$$.Two configurations are considered different if there exists a coordinate ($$$r$$$, $$$c$$$) which has a rook in one configuration, but not in the other or the color of the rook on the coordinate is different."
  },
  {
    "title": "A BIT of a Construction",
    "url": "https://codeforces.com/problemset/problem/1957/B",
    "description": "Given integers $$$n$$$ and $$$k$$$, construct a sequence of $$$n$$$ non-negative (i.e. $$$\\geq 0$$$) integers $$$a_1, a_2, \\ldots, a_n$$$ such that   $$$\\sum\\limits_{i = 1}^n a_i = k$$$  The number of $$$1$$$s in the binary representation of $$$a_1 | a_2 | \\ldots | a_n$$$ is maximized, where $$$|$$$ denotes the bitwise OR operation. "
  },
  {
    "title": "Stickogon",
    "url": "https://codeforces.com/problemset/problem/1957/A",
    "description": "You are given $$$n$$$ sticks of lengths $$$a_1, a_2, \\ldots, a_n$$$. Find the maximum number of regular (equal-sided) polygons you can construct simultaneously, such that:   Each side of a polygon is formed by exactly one stick.  No stick is used in more than $$$1$$$ polygon. Note: Sticks cannot be broken."
  },
  {
    "title": "Nene and the Passing Game",
    "url": "https://codeforces.com/problemset/problem/1956/F",
    "description": "Nene is training her team as a basketball coach. Nene's team consists of $$$n$$$ players, numbered from $$$1$$$ to $$$n$$$. The $$$i$$$-th player has an arm interval $$$[l_i,r_i]$$$. Two players $$$i$$$ and $$$j$$$ ($$$i \\neq j$$$) can pass the ball to each other if and only if $$$|i-j|\\in[l_i+l_j,r_i+r_j]$$$ (here, $$$|x|$$$ denotes the absolute value of $$$x$$$).Nene wants to test the cooperation ability of these players. In order to do this, she will hold several rounds of assessment.  In each round, Nene will select a sequence of players $$$p_1,p_2,\\ldots,p_m$$$ such that players $$$p_i$$$ and $$$p_{i+1}$$$ can pass the ball to each other for all $$$1 \\le i < m$$$. The length of the sequence $$$m$$$ can be chosen by Nene. Each player can appear in the sequence $$$p_1,p_2,\\ldots,p_m$$$ multiple times or not appear in it at all.  Then, Nene will throw a ball to player $$$p_1$$$, player $$$p_1$$$ will pass the ball to player $$$p_2$$$ and so on... Player $$$p_m$$$ will throw a ball away from the basketball court so it can no longer be used. As a coach, Nene wants each of $$$n$$$ players to appear in at least one round of assessment. Since Nene has to go on a date after school, Nene wants you to calculate the minimum number of rounds of assessment needed to complete the task."
  },
  {
    "title": "Nene vs",
    "url": "https://codeforces.com/problemset/problem/1956/E2",
    "description": "This is the hard version of the problem. The only difference between the versions is the constraints on $$$a_i$$$. You can make hacks only if both versions of the problem are solved.Nene is fighting with $$$n$$$ monsters, located in a circle. These monsters are numbered from $$$1$$$ to $$$n$$$, and the $$$i$$$-th ($$$1 \\le i \\le n$$$) monster's current energy level is $$$a_i$$$.Since the monsters are too strong, Nene decided to fight with them using the Attack Your Neighbour spell. When Nene uses this spell, the following actions happen in the following order one by one:   The $$$1$$$-st monster attacks the $$$2$$$-nd monster;  The $$$2$$$-nd monster attacks the $$$3$$$-rd monster;  $$$\\ldots$$$  The $$$(n-1)$$$-th monster attacks the $$$n$$$-th monster;  The $$$n$$$-th monster attacks the $$$1$$$-st monster. When the monster with energy level $$$x$$$ attacks the monster with the energy level $$$y$$$, the energy level of the defending monster becomes $$$\\max(0, y-x)$$$ (the energy level of the attacking monster remains equal to $$$x$$$).Nene is going to use this spell $$$10^{100}$$$ times and deal with the monsters that will still have a non-zero energy level herself. She wants you to determine which monsters will have a non-zero energy level once she will use the described spell $$$10^{100}$$$ times."
  },
  {
    "title": "Nene vs",
    "url": "https://codeforces.com/problemset/problem/1956/E1",
    "description": "This is the easy version of the problem. The only difference between the versions is the constraints on $$$a_i$$$. You can make hacks only if both versions of the problem are solved.Nene is fighting with $$$n$$$ monsters, located in a circle. These monsters are numbered from $$$1$$$ to $$$n$$$, and the $$$i$$$-th ($$$1 \\le i \\le n$$$) monster's current energy level is $$$a_i$$$.Since the monsters are too strong, Nene decided to fight with them using the Attack Your Neighbour spell. When Nene uses this spell, the following actions happen in the following order one by one:   The $$$1$$$-st monster attacks the $$$2$$$-nd monster;  The $$$2$$$-nd monster attacks the $$$3$$$-rd monster;  $$$\\ldots$$$  The $$$(n-1)$$$-th monster attacks the $$$n$$$-th monster;  The $$$n$$$-th monster attacks the $$$1$$$-st monster. When the monster with energy level $$$x$$$ attacks the monster with the energy level $$$y$$$, the energy level of the defending monster becomes $$$\\max(0, y-x)$$$ (the energy level of the attacking monster remains equal to $$$x$$$).Nene is going to use this spell $$$10^{100}$$$ times and deal with the monsters that will still have a non-zero energy level herself. She wants you to determine which monsters will have a non-zero energy level once she will use the described spell $$$10^{100}$$$ times."
  },
  {
    "title": "Nene and the Mex Operator",
    "url": "https://codeforces.com/problemset/problem/1956/D",
    "description": "Nene gave you an array of integers $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$.You can perform the following operation no more than $$$5\\cdot 10^5$$$ times (possibly zero):  Choose two integers $$$l$$$ and $$$r$$$ such that $$$1 \\le l \\le r \\le n$$$, compute $$$x$$$ as $$$\\operatorname{MEX}(\\{a_l, a_{l+1}, \\ldots, a_r\\})$$$, and simultaneously set $$$a_l:=x, a_{l+1}:=x, \\ldots, a_r:=x$$$. Here, $$$\\operatorname{MEX}$$$ of a set of integers $$$\\{c_1, c_2, \\ldots, c_k\\}$$$ is defined as the smallest non-negative integer $$$m$$$ which does not occur in the set $$$c$$$.Your goal is to maximize the sum of the elements of the array $$$a$$$. Find the maximum sum and construct a sequence of operations that achieves this sum. Note that you don't need to minimize the number of operations in this sequence, you only should use no more than $$$5\\cdot 10^5$$$ operations in your solution."
  },
  {
    "title": "Nene's Magical Matrix",
    "url": "https://codeforces.com/problemset/problem/1956/C",
    "description": "The magical girl Nene has an $$$n\\times n$$$ matrix $$$a$$$ filled with zeroes. The $$$j$$$-th element of the $$$i$$$-th row of matrix $$$a$$$ is denoted as $$$a_{i, j}$$$.She can perform operations of the following two types with this matrix:  Type $$$1$$$ operation: choose an integer $$$i$$$ between $$$1$$$ and $$$n$$$ and a permutation $$$p_1, p_2, \\ldots, p_n$$$ of integers from $$$1$$$ to $$$n$$$. Assign $$$a_{i, j}:=p_j$$$ for all $$$1 \\le j \\le n$$$ simultaneously.  Type $$$2$$$ operation: choose an integer $$$i$$$ between $$$1$$$ and $$$n$$$ and a permutation $$$p_1, p_2, \\ldots, p_n$$$ of integers from $$$1$$$ to $$$n$$$. Assign $$$a_{j, i}:=p_j$$$ for all $$$1 \\le j \\le n$$$ simultaneously. Nene wants to maximize the sum of all the numbers in the matrix $$$\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{n}a_{i,j}$$$. She asks you to find the way to perform the operations so that this sum is maximized. As she doesn't want to make too many operations, you should provide a solution with no more than $$$2n$$$ operations.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Nene and the Card Game",
    "url": "https://codeforces.com/problemset/problem/1956/B",
    "description": "You and Nene are playing a card game. The deck with $$$2n$$$ cards is used to play this game. Each card has an integer from $$$1$$$ to $$$n$$$ on it, and each of integers $$$1$$$ through $$$n$$$ appears exactly on $$$2$$$ cards. Additionally, there is a table where cards are placed during the game (initially, the table is empty).In the beginning of the game, these $$$2n$$$ cards are distributed between you and Nene so that each player receives $$$n$$$ cards. After it, you and Nene alternatively take $$$2n$$$ turns, i.e. each person takes $$$n$$$ turns, starting with you. On each turn:  The player whose turn is it selects one of the cards in his hand. Let $$$x$$$ be the number on it.  The player whose turn is it receives $$$1$$$ point if there is already a card with the integer $$$x$$$ on the table (otherwise, he receives no points). After it, he places the selected card with the integer $$$x$$$ on the table. Note that turns are made publicly: each player can see all the cards on the table at each moment.Nene is very smart so she always selects cards optimally in order to maximize her score in the end of the game (after $$$2n$$$ rounds). If she has several optimal moves, she selects the move that minimizes your score in the end of the game.More formally, Nene always takes turns optimally in order to maximize her score in the end of the game in the first place and to minimize your score in the end of the game in the second place.Assuming that the cards are already distributed and cards in your hand have integers $$$a_1, a_2, \\ldots, a_n$$$ written on them, what is the maximum number of points you can get by taking your turns optimally?"
  },
  {
    "title": "Nene's Game",
    "url": "https://codeforces.com/problemset/problem/1956/A",
    "description": "Nene invented a new game based on an increasing sequence of integers $$$a_1, a_2, \\ldots, a_k$$$.In this game, initially $$$n$$$ players are lined up in a row. In each of the rounds of this game, the following happens:  Nene finds the $$$a_1$$$-th, $$$a_2$$$-th, $$$\\ldots$$$, $$$a_k$$$-th players in a row. They are kicked out of the game simultaneously. If the $$$i$$$-th player in a row should be kicked out, but there are fewer than $$$i$$$ players in a row, they are skipped. Once no one is kicked out of the game in some round, all the players that are still in the game are declared as winners.For example, consider the game with $$$a=[3, 5]$$$ and $$$n=5$$$ players. Let the players be named player A, player B, $$$\\ldots$$$, player E in the order they are lined up initially. Then,   Before the first round, players are lined up as ABCDE. Nene finds the $$$3$$$-rd and the $$$5$$$-th players in a row. These are players C and E. They are kicked out in the first round.  Now players are lined up as ABD. Nene finds the $$$3$$$-rd and the $$$5$$$-th players in a row. The $$$3$$$-rd player is player D and there is no $$$5$$$-th player in a row. Thus, only player D is kicked out in the second round.  In the third round, no one is kicked out of the game, so the game ends after this round.  Players A and B are declared as the winners. Nene has not yet decided how many people would join the game initially. Nene gave you $$$q$$$ integers $$$n_1, n_2, \\ldots, n_q$$$ and you should answer the following question for each $$$1 \\le i \\le q$$$ independently:  How many people would be declared as winners if there are $$$n_i$$$ players in the game initially? "
  },
  {
    "title": "The Most Reckless Defense",
    "url": "https://codeforces.com/problemset/problem/1955/H",
    "description": "You are playing a very popular Tower Defense game called \"Runnerfield 2\". In this game, the player sets up defensive towers that attack enemies moving from a certain starting point to the player's base.You are given a grid of size $$$n \\times m$$$, on which $$$k$$$ towers are already placed and a path is laid out through which enemies will move. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column is denoted as $$$(x, y)$$$.Each second, a tower deals $$$p_i$$$ units of damage to all enemies within its range. For example, if an enemy is located at cell $$$(x, y)$$$ and a tower is at $$$(x_i, y_i)$$$ with a range of $$$r$$$, then the enemy will take damage of $$$p_i$$$ if $$$(x - x_i) ^ 2 + (y - y_i) ^ 2 \\le r ^ 2$$$.Enemies move from cell $$$(1, 1)$$$ to cell $$$(n, m)$$$, visiting each cell of the path exactly once. An enemy instantly moves to an adjacent cell horizontally or vertically, but before doing so, it spends one second in the current cell. If its health becomes zero or less during this second, the enemy can no longer move. The player loses if an enemy reaches cell $$$(n, m)$$$ and can make one more move.By default, all towers have a zero range, but the player can set a tower's range to an integer $$$r$$$ ($$$r > 0$$$), in which case the health of all enemies will increase by $$$3^r$$$. However, each $$$r$$$ can only be used for at most one tower.Suppose an enemy has a base health of $$$h$$$ units. If the tower ranges are $$$2$$$, $$$4$$$, and $$$5$$$, then the enemy's health at the start of the path will be $$$h + 3 ^ 2 + 3 ^ 4 + 3 ^ 5 = h + 9 + 81 + 243 = h + 333$$$. The choice of ranges is made once before the appearance of enemies and cannot be changed after the game starts.Find the maximum amount of base health $$$h$$$ for which it is possible to set the ranges so that the player does not lose when an enemy with health $$$h$$$ passes through (without considering the additions for tower ranges)."
  },
  {
    "title": "GCD on a grid",
    "url": "https://codeforces.com/problemset/problem/1955/G",
    "description": "Not long ago, Egor learned about the Euclidean algorithm for finding the greatest common divisor of two numbers. The greatest common divisor of two numbers $$$a$$$ and $$$b$$$ is the largest number that divides both $$$a$$$ and $$$b$$$ without leaving a remainder. With this knowledge, Egor can solve a problem that he once couldn't.Vasily has a grid with $$$n$$$ rows and $$$m$$$ columns, and the integer $$${a_i}_j$$$ is located at the intersection of the $$$i$$$-th row and the $$$j$$$-th column. Egor wants to go from the top left corner (at the intersection of the first row and the first column) to the bottom right corner (at the intersection of the last row and the last column) and find the greatest common divisor of all the numbers along the path. He is only allowed to move down and to the right. Egor has written down several paths and obtained different GCD values. He became interested in finding the maximum possible GCD.Unfortunately, Egor is tired of calculating GCDs, so he asks for your help in finding the maximum GCD of the integers along the path from the top left corner to the bottom right corner of the grid."
  },
  {
    "title": "Unfair Game",
    "url": "https://codeforces.com/problemset/problem/1955/F",
    "description": "Alice and Bob gathered in the evening to play an exciting game on a sequence of $$$n$$$ integers, each integer of the sequence doesn't exceed $$$4$$$. The rules of the game are too complex to describe, so let's just describe the winning condition — Alice wins if the bitwise XOR of all the numbers in the sequence is non-zero; otherwise, Bob wins.The guys invited Eve to act as a judge. Initially, Alice and Bob play with $$$n$$$ numbers. After one game, Eve removes one of the numbers from the sequence, then Alice and Bob play with $$$n-1$$$ numbers. Eve removes one number again, after which Alice and Bob play with $$$n - 2$$$ numbers. This continues until the sequence of numbers is empty.Eve seems to think that in such a game, Alice almost always wins, so she wants Bob to win as many times as possible. Determine the maximum number of times Bob can win against Alice if Eve removes the numbers optimally."
  },
  {
    "title": "Long Inversions",
    "url": "https://codeforces.com/problemset/problem/1955/E",
    "description": "A binary string $$$s$$$ of length $$$n$$$ is given. A binary string is a string consisting only of the characters '1' and '0'.You can choose an integer $$$k$$$ ($$$1 \\le k \\le n$$$) and then apply the following operation any number of times: choose $$$k$$$ consecutive characters of the string and invert them, i.e., replace all '0' with '1' and vice versa.Using these operations, you need to make all the characters in the string equal to '1'.For example, if $$$n=5$$$, $$$s=00100$$$, you can choose $$$k=3$$$ and proceed as follows:   choose the substring from the $$$1$$$-st to the $$$3$$$-rd character and obtain $$$s=\\color{blue}{110}00$$$;  choose the substring from the $$$3$$$-rd to the $$$5$$$-th character and obtain $$$s=11\\color{blue}{111}$$$; Find the maximum value of $$$k$$$ for which it is possible to make all the characters in the string equal to '1' using the described operations. Note that the number of operations required to achieve this is not important."
  },
  {
    "title": "Inaccurate Subsequence Search",
    "url": "https://codeforces.com/problemset/problem/1955/D",
    "description": "Maxim has an array $$$a$$$ of $$$n$$$ integers and an array $$$b$$$ of $$$m$$$ integers ($$$m \\le n$$$).Maxim considers an array $$$c$$$ of length $$$m$$$ to be good if the elements of array $$$c$$$ can be rearranged in such a way that at least $$$k$$$ of them match the elements of array $$$b$$$. For example, if $$$b = [1, 2, 3, 4]$$$ and $$$k = 3$$$, then the arrays $$$[4, 1, 2, 3]$$$ and $$$[2, 3, 4, 5]$$$ are good (they can be reordered as follows: $$$[1, 2, 3, 4]$$$ and $$$[5, 2, 3, 4]$$$), while the arrays $$$[3, 4, 5, 6]$$$ and $$$[3, 4, 3, 4]$$$ are not good.Maxim wants to choose every subsegment of array $$$a$$$ of length $$$m$$$ as the elements of array $$$c$$$. Help Maxim count how many selected arrays will be good.In other words, find the number of positions $$$1 \\le l \\le n - m + 1$$$ such that the elements $$$a_l, a_{l+1}, \\dots, a_{l + m - 1}$$$ form a good array."
  },
  {
    "title": "Inhabitant of the Deep Sea",
    "url": "https://codeforces.com/problemset/problem/1955/C",
    "description": "$$$n$$$ ships set out to explore the depths of the ocean. The ships are numbered from $$$1$$$ to $$$n$$$ and follow each other in ascending order; the $$$i$$$-th ship has a durability of $$$a_i$$$.The Kraken attacked the ships $$$k$$$ times in a specific order. First, it attacks the first of the ships, then the last, then the first again, and so on.Each attack by the Kraken reduces the durability of the ship by $$$1$$$. When the durability of the ship drops to $$$0$$$, it sinks and is no longer subjected to attacks (thus the ship ceases to be the first or last, and the Kraken only attacks the ships that have not yet sunk). If all the ships have sunk, the Kraken has nothing to attack and it swims away.For example, if $$$n=4$$$, $$$k=5$$$, and $$$a=[1, 2, 4, 3]$$$, the following will happen:  The Kraken attacks the first ship, its durability becomes zero and now $$$a = [2, 4, 3]$$$;  The Kraken attacks the last ship, now $$$a = [2, 4, 2]$$$;  The Kraken attacks the first ship, now $$$a = [1, 4, 2]$$$;  The Kraken attacks the last ship, now $$$a = [1, 4, 1]$$$;  The Kraken attacks the first ship, its durability becomes zero and now $$$a = [4, 1]$$$. How many ships were sunk after the Kraken's attack?"
  },
  {
    "title": "Progressive Square",
    "url": "https://codeforces.com/problemset/problem/1955/B",
    "description": "A progressive square of size $$$n$$$ is an $$$n \\times n$$$ matrix. Maxim chooses three integers $$$a_{1,1}$$$, $$$c$$$, and $$$d$$$ and constructs a progressive square according to the following rules:$$$$$$a_{i+1,j} = a_{i,j} + c$$$$$$$$$$$$a_{i,j+1} = a_{i,j} + d$$$$$$For example, if $$$n = 3$$$, $$$a_{1,1} = 1$$$, $$$c=2$$$, and $$$d=3$$$, then the progressive square looks as follows:$$$$$$ \\begin{pmatrix} 1 & 4 & 7 \\\\ 3 & 6 & 9 \\\\ 5 & 8 & 11 \\end{pmatrix} $$$$$$Last month Maxim constructed a progressive square and remembered the values of $$$n$$$, $$$c$$$, and $$$d$$$. Recently, he found an array $$$b$$$ of $$$n^2$$$ integers in random order and wants to make sure that these elements are the elements of that specific square.It can be shown that for any values of $$$n$$$, $$$a_{1,1}$$$, $$$c$$$, and $$$d$$$, there exists exactly one progressive square that satisfies all the rules."
  },
  {
    "title": "Yogurt Sale",
    "url": "https://codeforces.com/problemset/problem/1955/A",
    "description": "The price of one yogurt at the \"Vosmiorochka\" store is $$$a$$$ burles, but there is a promotion where you can buy two yogurts for $$$b$$$ burles.Maxim needs to buy exactly $$$n$$$ yogurts. When buying two yogurts, he can choose to buy them at the regular price or at the promotion price.What is the minimum amount of burles Maxim should spend to buy $$$n$$$ yogurts?"
  },
  {
    "title": "Unique Strings",
    "url": "https://codeforces.com/problemset/problem/1954/F",
    "description": "Let's say that two strings $$$a$$$ and $$$b$$$ are equal if you can get the string $$$b$$$ by cyclically shifting string $$$a$$$. For example, the strings 0100110 and 1100100 are equal, while 1010 and 1100 are not.You are given a binary string $$$s$$$ of length $$$n$$$. Its first $$$c$$$ characters are 1-s, and its last $$$n - c$$$ characters are 0-s.In one operation, you can replace one 0 with 1.Calculate the number of unique strings you can get using no more than $$$k$$$ operations. Since the answer may be too large, print it modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Chain Reaction",
    "url": "https://codeforces.com/problemset/problem/1954/E",
    "description": "There are $$$n$$$ monsters standing in a row. The $$$i$$$-th monster has $$$a_i$$$ health points.Every second, you can choose one alive monster and launch a chain lightning at it. The lightning deals $$$k$$$ damage to it, and also spreads to the left (towards decreasing $$$i$$$) and to the right (towards increasing $$$i$$$) to alive monsters, dealing $$$k$$$ damage to each. When the lightning reaches a dead monster or the beginning/end of the row, it stops. A monster is considered alive if its health points are strictly greater than $$$0$$$.For example, consider the following scenario: there are three monsters with health equal to $$$[5, 2, 7]$$$, and $$$k = 3$$$. You can kill them all in $$$4$$$ seconds:  launch a chain lightning at the $$$3$$$-rd monster, then their health values are $$$[2, -1, 4]$$$;  launch a chain lightning at the $$$1$$$-st monster, then their health values are $$$[-1, -1, 4]$$$;  launch a chain lightning at the $$$3$$$-rd monster, then their health values are $$$[-1, -1, 1]$$$;  launch a chain lightning at the $$$3$$$-th monster, then their health values are $$$[-1, -1, -2]$$$. For each $$$k$$$ from $$$1$$$ to $$$\\max(a_1, a_2, \\dots, a_n)$$$, calculate the minimum number of seconds it takes to kill all the monsters."
  },
  {
    "title": "Colored Balls",
    "url": "https://codeforces.com/problemset/problem/1954/D",
    "description": "There are balls of $$$n$$$ different colors; the number of balls of the $$$i$$$-th color is $$$a_i$$$.The balls can be combined into groups. Each group should contain at most $$$2$$$ balls, and no more than $$$1$$$ ball of each color.Consider all $$$2^n$$$ sets of colors. For a set of colors, let's denote its value as the minimum number of groups the balls of those colors can be distributed into. For example, if there are three colors with $$$3$$$, $$$1$$$ and $$$7$$$ balls respectively, they can be combined into $$$7$$$ groups (and not less than $$$7$$$), so the value of that set of colors is $$$7$$$.Your task is to calculate the sum of values over all $$$2^n$$$ possible sets of colors. Since the answer may be too large, print it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Long Multiplication",
    "url": "https://codeforces.com/problemset/problem/1954/C",
    "description": "You are given two integers $$$x$$$ and $$$y$$$ of the same length, consisting of digits from $$$1$$$ to $$$9$$$.You can perform the following operation any number of times (possibly zero): swap the $$$i$$$-th digit in $$$x$$$ and the $$$i$$$-th digit in $$$y$$$.For example, if $$$x=73$$$ and $$$y=31$$$, you can swap the $$$2$$$-nd digits and get $$$x=71$$$ and $$$y=33$$$.Your task is to maximize the product of $$$x$$$ and $$$y$$$ using the aforementioned operation any number of times. If there are multiple answers, print any of them."
  },
  {
    "title": "Make It Ugly",
    "url": "https://codeforces.com/problemset/problem/1954/B",
    "description": "Let's call an array $$$a$$$ beautiful if you can make all its elements the same by using the following operation an arbitrary number of times (possibly, zero):   choose an index $$$i$$$ ($$$2 \\le i \\le |a| - 1$$$) such that $$$a_{i - 1} = a_{i + 1}$$$, and replace $$$a_i$$$ with $$$a_{i - 1}$$$. You are given a beautiful array $$$a_1, a_2, \\dots, a_n$$$. What is the minimum number of elements you have to remove from it in order for it to stop being beautiful? Swapping elements is prohibited. If it is impossible to do so, then output -1."
  },
  {
    "title": "Painting the Ribbon",
    "url": "https://codeforces.com/problemset/problem/1954/A",
    "description": "Alice and Bob have bought a ribbon consisting of $$$n$$$ parts. Now they want to paint it.First, Alice will paint every part of the ribbon into one of $$$m$$$ colors. For each part, she can choose its color arbitrarily.Then, Bob will choose at most $$$k$$$ parts of the ribbon and repaint them into the same color (he chooses the affected parts and the color arbitrarily).Bob would like all parts to have the same color. However, Alice thinks that this is too dull, so she wants to paint the ribbon in such a way that Bob cannot make all parts have the same color.Is it possible to paint the ribbon in such a way?"
  },
  {
    "title": "Accuracy-Preserving Summation Algorithm",
    "url": "https://codeforces.com/problemset/problem/1953/A",
    "description": "In the classic high-performance computing domain (HPC), the vast majority of computations are conducted in double-precision 64-bit floating-point numbers (fp64, double-precision, IEEE-754 binary64). The rise of Deep Neural Networks (DNNs) resulted in hardware (HW) capable of processing 16-bit floating point numbers (fp16, half precision, IEEE-754 binary16) up to 16 times faster in terms of floating-point operations per second (flops) and up to 4 times faster in terms of memory bandwidth (BW). At the same time, the short mantissa and exponent for fp16 numbers lead to a very fast loss of precision of computations, producing wrong computational results without any option to recover them in reduction operations of size greater than approximately $$$2000$$$. As the typical problem size in HPC is much larger than $$$2000$$$, this makes fp16 computations almost useless. To surmount this major roadblock, smarter algorithms for reduction operations are needed.Description. There is a sequence of floating-point numbers stored in IEEE-754 binary64 (double precision, fp64) format $$$x_i$$$ of length $$$N$$$. The sequence needs to be summed up to $$$S = x_1 + x_2 + \\ldots + x_N$$$. As professional computer equipment with native support for fp16 is usually unavailable to the general audience, we propose to do operations in a simplified simulated environment, that is, we do computations in fp64 format with mantissa and exponent cut to the range admissible in fp16. In particular, small values that do not fit fp16 admissible range turn into zeros, while excessively large values turn into infinities. Objective. Your objective is to sum up as many sequences as possible as fast as possible and as accurately as possible. Please note that you may do summation in fp64 format, but the summation process would be slow though accurate. If you do plain summation in fp16 format, it can be fast, but inaccurate, especially for larger sequences."
  },
  {
    "title": "Help, what does it mean to be \"Based\"",
    "url": "https://codeforces.com/problemset/problem/1952/J",
    "description": "InputSup, gimme a single integer $$$x$$$ ($$$1 \\le x \\le 4$$$) homie uwu :3OutputIf $$$x = 1$$$, spit out some based code that, like when ya feed it two integers $$$a$$$ and $$$b$$$, it hands over their sum.If $$$x = 2$$$, slap some based code that takes an integer $$$a$$$ and returns its absolute value like magic, no cap.If $$$x = 3$$$, check this out: blaze some based code that grabs an integer $$$n$$$ ($$$1 \\le n \\le 50$$$) and an array $$$a$$$ of $$$n$$$ distinct integers, then flexes the maximum value real quick.If $$$x = 4$$$, toss me some based code that snatches an integer $$$n$$$ ($$$1 \\le n \\le 50$$$), an array $$$a$$$ of $$$n$$$ distinct integers and an integer $$$k$$$ ($$$1 \\le k \\le n$$$), then nails down that $$$k$$$-th largest value in the array. Get it, fam!ExamplesInputCopy1OutputCopyyoink a\nyoink b\n*slaps a on top of b*\nyeet b\ngo touch some grass\nInputCopy2OutputCopyyoink a\nbruh b is lowkey just 0\nrip this b fell off by a\nvibe check a ratios b\nsimp for 7\nbruh a is lowkey just b\nyeet a\ngo touch some grass\nInputCopy3OutputCopyyoink n\nyoink a\nbruh m is lowkey just a[0]\nbruh i is lowkey just 1\nvibe check n ratios i\nsimp for 9\nyeet m\ngo touch some grass\nvibe check a[i] ratios m\nbruh m is lowkey just a[i]\n*slaps 1 on top of i*\nsimp for 5\nInputCopy4OutputCopy NoteSlide into the \"My Submissions\" page and vibe check ur code by clicking on its ID. You'll see just how based or cringe it is."
  },
  {
    "title": "Dark Matter",
    "url": "https://codeforces.com/problemset/problem/1952/I",
    "description": "View the statement as a PDF."
  },
  {
    "title": "Palindrome",
    "url": "https://codeforces.com/problemset/problem/1952/H",
    "description": "A palindrome is a string that reads the same in both directions, for example z, uwu, or moom."
  },
  {
    "title": "Mathematician Takeover",
    "url": "https://codeforces.com/problemset/problem/1952/G",
    "description": "A mathematician grabbed my computer as I was preparing this problem, deleted the statement, and changed the samples to fit his liking. The model solution and input/output format are still correct, but the samples are wrong. I've partially fixed the problem so that when you submit, it will be tested against the correct version of the problem. However, I can't fix the samples below. As a computer scientist, can you solve the correct problem?"
  },
  {
    "title": "Grid",
    "url": "https://codeforces.com/problemset/problem/1952/F",
    "description": "InputThe input contains $$$21$$$ lines, each containing $$$21$$$ characters $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$.ExampleInputCopy111111101011101111111100000100011001000001101110101101001011101101110101100101011101101110101001001011101100000100111101000001111111101010101111111000000000001100000000111100101111110011101000111010101100110101111101101101001000011001001000001000011000111101110000111001011000000001001001111100111111100001101010000100000100010010100111101110100110110011100101110101100000100010101110101010110000100100000101000011001001111111101011111111100OutputCopy12\n"
  },
  {
    "title": "Sweep Line",
    "url": "https://codeforces.com/problemset/problem/1952/E",
    "description": "Be careful not to make a mistake. You might have to start all over again.— Someone, probably"
  },
  {
    "title": "Are You a Procrastinator?",
    "url": "https://codeforces.com/problemset/problem/1952/D",
    "description": "!"
  },
  {
    "title": "They Have Fooled",
    "url": "https://codeforces.com/problemset/problem/1952/C",
    "description": "  "
  },
  {
    "title": "Is it stated?",
    "url": "https://codeforces.com/problemset/problem/1952/B",
    "description": "InputThe first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$) — the number of testcases.The following $$$t$$$ lines each contain a string of length at most $$$100$$$ consisting of lowercase English letters. OutputFor each test case, output \"YES\" or \"NO\", denoting the answer.ExampleInputCopy10isitstatedsubmitacacceptedwawronganswertletimelimitexceededOutputCopyNO\nYES\nNO\nYES\nNO\nNO\nNO\nNO\nNO\nYES\n"
  },
  {
    "title": "Are You a Robot, Again?",
    "url": "https://codeforces.com/problemset/problem/1952/A",
    "description": "  "
  },
  {
    "title": "Growing Trees",
    "url": "https://codeforces.com/problemset/problem/1951/I",
    "description": "wowaka ft. Hatsune Miku - Ura-Omote LoversඞYou are given an undirected connected simple graph with $$$n$$$ nodes and $$$m$$$ edges, where edge $$$i$$$ connects node $$$u_i$$$ and $$$v_i$$$, with two positive parameters $$$a_i$$$ and $$$b_i$$$ attached to it. Additionally, you are also given an integer $$$k$$$.A non-negative array $$$x$$$ with size $$$m$$$ is called a $$$k$$$-spanning-tree generator if it satisfies the following:   Consider the undirected multigraph with $$$n$$$ nodes where edge $$$i$$$ is cloned $$$x_i$$$ times (i.e. there are $$$x_i$$$ edges connecting $$$u_i$$$ and $$$v_i$$$). It is possible to partition the edges of this graph into $$$k$$$ spanning trees, where each edge belongs to exactly one spanning tree$$$^\\dagger$$$. The cost of such array $$$x$$$ is defined as $$$\\sum_{i = 1}^m a_i x_i^2 + b_i x_i$$$. Find the minimum cost of a $$$k$$$-spanning-tree generator.$$$^\\dagger$$$ A spanning tree of a (multi)graph is a subset of the graph's edges that form a tree connecting all vertices of the graph."
  },
  {
    "title": "Thanos Snap",
    "url": "https://codeforces.com/problemset/problem/1951/H",
    "description": "Piotr Rubik - Psalm dla CiebieඞThere is an array $$$a$$$ of size $$$2^k$$$ for some positive integer $$$k$$$, which is initially a permutation of values from $$$1$$$ to $$$2^k$$$. Alice and Bob play the following game on the array $$$a$$$. First, a value $$$t$$$ between $$$1$$$ and $$$k$$$ is shown to both Alice and Bob. Then, for exactly $$$t$$$ turns, the following happens:   Alice either does nothing, or chooses two distinct elements of the array $$$a$$$ and swaps them.  Bob chooses either the left half or the right half of the array $$$a$$$ and erases it. The score of the game is defined as the maximum value in $$$a$$$ after all $$$t$$$ turns have been played. Alice wants to maximize this score, while Bob wants to minimize it.You need to output $$$k$$$ numbers: the score of the game if both Alice and Bob play optimally for $$$t$$$ from $$$1$$$ to $$$k$$$."
  },
  {
    "title": "Clacking Balls",
    "url": "https://codeforces.com/problemset/problem/1951/G",
    "description": "Rammstein - AusländerඞThere are mm baskets placed along a circle, numbered from 11 to mm in clockwise order (basket mm is next to basket 11). Furthermore, there are nn balls, where ball ii is initially placed in basket aia_i, and no basket contains more than one ball.Alice is allowed to perform the following operation, which always takes exactly one second whether you move/throw a ball or not:   Alice chooses an integer ii between 11 and nn uniformly at random.  If ball ii was thrown away before, do nothing.  Otherwise, ball ii is moved from the basket currently containing it to the next basket (in clockwise order). If the target basket currently contains another ball jj, throw ball jj away. She repeats this operation until there is exactly one ball left. Calculate the expected time needed (in seconds) for Alice to end the process.It can be proven that the answer can be represented as a rational number pq\\frac{p}{q} with coprime pp and qq. You need to output p⋅q−1mod109+7p \\cdot q^{-1} \\bmod 10^9 + 7. It can be proven that 109+7∤10^9 + 7 \\nmid q."
  },
  {
    "title": "Inversion Composition",
    "url": "https://codeforces.com/problemset/problem/1951/F",
    "description": "My Chemical Romance - DisenchantedඞYou are given a permutation pp of size nn, as well as a non-negative integer kk. You need to construct a permutation qq of size nn such that inv(q)+inv(q⋅p)=k†‡\\operatorname{inv}(q) + \\operatorname{inv}(q \\cdot p) = k {}^\\dagger {}^\\ddagger, or determine if it is impossible to do so.†{}^\\dagger For two permutations pp and qq of the same size nn, the permutation w=q⋅pw = q \\cdot p is such that wi=qpiw_i = q_{p_i} for all 1≤i≤n1 \\le i \\le n.‡{}^\\ddagger For a permutation pp of size nn, the function inv(p)\\operatorname{inv}(p) returns the number of inversions of pp, i.e. the number of pairs of indices 1≤i<j≤n1 \\le i < j \\le n such that pi>pjp_i > p_j."
  },
  {
    "title": "No Palindromes",
    "url": "https://codeforces.com/problemset/problem/1951/E",
    "description": "Christopher Tin ft. Soweto Gospel Choir - Baba YetuඞYou are given a string $$$s$$$ consisting of lowercase Latin characters. You need to partition$$$^\\dagger$$$ this string into some substrings, such that each substring is not a palindrome$$$^\\ddagger$$$.$$$^\\dagger$$$ A partition of a string $$$s$$$ is an ordered sequence of some $$$k$$$ strings $$$t_1, t_2, \\ldots, t_k$$$, such that $$$t_1 + t_2 + \\ldots + t_k = s$$$, where $$$+$$$ here represents the concatenation operation.$$$^\\ddagger$$$ A string $$$s$$$ is considered a palindrome if it reads the same backwards as forwards. For example, $$$\\mathtt{racecar}$$$, $$$\\mathtt{abccba}$$$, and $$$\\mathtt{a}$$$ are palindromes, but $$$\\mathtt{ab}$$$, $$$\\mathtt{dokibird}$$$, and $$$\\mathtt{kurosanji}$$$ are not."
  },
  {
    "title": "Buying Jewels",
    "url": "https://codeforces.com/problemset/problem/1951/D",
    "description": "Nightwish feat. Jonsu - Erämaan ViimeinenඞAlice has $$$n$$$ coins and wants to shop at Bob's jewelry store. Today, although Bob has not set up the store yet, Bob wants to make sure Alice will buy exactly $$$k$$$ jewels. To set up the store, Bob can erect at most $$$60$$$ stalls (each containing an unlimited amount of jewels) and set the price per jewel for each stall to be an integer number of coins between $$$1$$$ and $$$10^{18}$$$.Fortunately, Bob knows that Alice buys greedily: and she will go to stall $$$1$$$, buy as many jewels as possible, then go to stall $$$2$$$, buy as many jewels as possible, and so on until the last stall. Knowing this, Bob can choose the number of stalls to set up, as well as set the price for each stall so that Alice buys exactly $$$k$$$ jewels. Help Bob fulfill the task, or determine if it is impossible to do so.Note that Alice does not need to spend all her coins."
  },
  {
    "title": "Ticket Hoarding",
    "url": "https://codeforces.com/problemset/problem/1951/C",
    "description": "Maître Gims - Est-ce que tu m'aimes ?ඞAs the CEO of a startup company, you want to reward each of your $$$k$$$ employees with a ticket to the upcoming concert. The tickets will be on sale for $$$n$$$ days, and by some time travelling, you have predicted that the price per ticket at day $$$i$$$ will be $$$a_i$$$. However, to prevent ticket hoarding, the concert organizers have implemented the following measures:  A person may purchase no more than $$$m$$$ tickets per day.  If a person purchases $$$x$$$ tickets on day $$$i$$$, all subsequent days (i.e. from day $$$i+1$$$ onwards) will have their prices per ticket increased by $$$x$$$. For example, if $$$a = [1, 3, 8, 4, 5]$$$ and you purchase $$$2$$$ tickets on day $$$1$$$, they will cost $$$2$$$ in total, and the prices from day $$$2$$$ onwards will become $$$[5, 10, 6, 7]$$$. If you then purchase $$$3$$$ more tickets on day $$$2$$$, they will cost in total an additional $$$15$$$, and the prices from day $$$3$$$ onwards will become $$$[13, 9, 10]$$$.Find the minimum spending to purchase $$$k$$$ tickets."
  },
  {
    "title": "Battle Cows",
    "url": "https://codeforces.com/problemset/problem/1951/B",
    "description": "The HU - Shireg ShiregඞThere are $$$n$$$ cows participating in a coding tournament. Cow $$$i$$$ has a Cowdeforces rating of $$$a_i$$$ (all distinct), and is initially in position $$$i$$$. The tournament consists of $$$n-1$$$ matches as follows:   The first match is between the cow in position $$$1$$$ and the cow in position $$$2$$$.  Subsequently, each match $$$i$$$ is between the cow in position $$$i+1$$$ and the winner of match $$$i-1$$$.  In each match, the cow with the higher Cowdeforces rating wins and proceeds to the next match. You are the owner of cow $$$k$$$. For you, winning the tournament is not important; rather, you want your cow to win in as many matches as possible. As an acquaintance of the tournament organizers, you can ask them to swap the position of your cow with another cow only once, or you can choose to do nothing.Find the maximum number of wins your cow can achieve."
  },
  {
    "title": "Dual Trigger",
    "url": "https://codeforces.com/problemset/problem/1951/A",
    "description": "Ngọt - LẦN CUỐI (đi bên em xót xa người ơi)ඞThere are $$$n$$$ lamps numbered $$$1$$$ to $$$n$$$ lined up in a row, initially turned off. You can perform the following operation any number of times (possibly zero):   Choose two non-adjacent$$${}^\\dagger$$$ lamps that are currently turned off, then turn them on. Determine whether you can reach configuration $$$s$$$, where $$$s_i = 1$$$ means the $$$i$$$-th lamp is turned on, and $$$s_i = 0$$$ otherwise.$$${}^\\dagger$$$ Only lamp $$$i$$$ and $$$i + 1$$$ are adjacent for all $$$1 \\le i < n$$$. Note that lamp $$$n$$$ and $$$1$$$ are not adjacent when $$$n \\ne 2$$$."
  },
  {
    "title": "Shuffling Songs",
    "url": "https://codeforces.com/problemset/problem/1950/G",
    "description": "Vladislav has a playlist consisting of $$$n$$$ songs, numbered from $$$1$$$ to $$$n$$$. Song $$$i$$$ has genre $$$g_i$$$ and writer $$$w_i$$$. He wants to make a playlist in such a way that every pair of adjacent songs either have the same writer or are from the same genre (or both). He calls such a playlist exciting. Both $$$g_i$$$ and $$$w_i$$$ are strings of length no more than $$$10^4$$$.It might not always be possible to make an exciting playlist using all the songs, so the shuffling process occurs in two steps. First, some amount (possibly zero) of the songs are removed, and then the remaining songs in the playlist are rearranged to make it exciting.Since Vladislav doesn't like when songs get removed from his playlist, he wants the making playlist to perform as few removals as possible. Help him find the minimum number of removals that need to be performed in order to be able to rearrange the rest of the songs to make the playlist exciting."
  },
  {
    "title": "0, 1, 2, Tree!",
    "url": "https://codeforces.com/problemset/problem/1950/F",
    "description": "Find the minimum height of a rooted tree$$$^{\\dagger}$$$ with $$$a+b+c$$$ vertices that satisfies the following conditions:   $$$a$$$ vertices have exactly $$$2$$$ children,  $$$b$$$ vertices have exactly $$$1$$$ child, and  $$$c$$$ vertices have exactly $$$0$$$ children.  If no such tree exists, you should report it. The tree above is rooted at the top vertex, and each vertex is labeled with the number of children it has. Here $$$a=2$$$, $$$b=1$$$, $$$c=3$$$, and the height is $$$2$$$. $$$^{\\dagger}$$$ A rooted tree is a connected graph without cycles, with a special vertex called the root. In a rooted tree, among any two vertices connected by an edge, one vertex is a parent (the one closer to the root), and the other one is a child. The distance between two vertices in a tree is the number of edges in the shortest path between them. The height of a rooted tree is the maximum distance from a vertex to the root."
  },
  {
    "title": "Nearly Shortest Repeating Substring",
    "url": "https://codeforces.com/problemset/problem/1950/E",
    "description": "You are given a string $$$s$$$ of length $$$n$$$ consisting of lowercase Latin characters. Find the length of the shortest string $$$k$$$ such that several (possibly one) copies of $$$k$$$ can be concatenated together to form a string with the same length as $$$s$$$ and, at most, one different character.More formally, find the length of the shortest string $$$k$$$ such that $$$c = \\underbrace{k + \\cdots + k}_{x\\rm\\ \\text{times}}$$$ for some positive integer $$$x$$$, strings $$$s$$$ and $$$c$$$ has the same length and $$$c_i \\neq s_i$$$ for at most one $$$i$$$ (i.e. there exist $$$0$$$ or $$$1$$$ such positions)."
  },
  {
    "title": "Product of Binary Decimals",
    "url": "https://codeforces.com/problemset/problem/1950/D",
    "description": "Let's call a number a binary decimal if it is a positive integer and all digits in its decimal notation are either $$$0$$$ or $$$1$$$. For example, $$$1\\,010\\,111$$$ is a binary decimal, while $$$10\\,201$$$ and $$$787\\,788$$$ are not.Given a number $$$n$$$, you are asked whether or not it is possible to represent $$$n$$$ as a product of some (not necessarily distinct) binary decimals."
  },
  {
    "title": "Clock Conversion",
    "url": "https://codeforces.com/problemset/problem/1950/C",
    "description": "Given the time in 24-hour format, output the equivalent time in 12-hour format.   24-hour format divides the day into 24 hours from $$$00$$$ to $$$23$$$, each of which has 60 minutes from $$$00$$$ to $$$59$$$.  12-hour format divides the day into two halves: the first half is $$$\\mathrm{AM}$$$, and the second half is $$$\\mathrm{PM}$$$. In each half, the hours are numbered in the order $$$12, 01, 02, 03, \\dots, 11$$$. Each hour has 60 minutes numbered from $$$00$$$ to $$$59$$$. "
  },
  {
    "title": "Upscaling",
    "url": "https://codeforces.com/problemset/problem/1950/B",
    "description": "You are given an integer $$$n$$$. Output a $$$2n \\times 2n$$$ checkerboard made of $$$2 \\times 2$$$ squares alternating '$$$\\texttt{#}$$$' and '$$$\\texttt{.}$$$', with the top-left cell being '$$$\\texttt{#}$$$'.  The picture above shows the answers for $$$n=1,2,3,4$$$. "
  },
  {
    "title": "Stair, Peak, or Neither?",
    "url": "https://codeforces.com/problemset/problem/1950/A",
    "description": "You are given three digits $$$a$$$, $$$b$$$, and $$$c$$$. Determine whether they form a stair, a peak, or neither.   A stair satisfies the condition $$$a<b<c$$$.  A peak satisfies the condition $$$a<b>c$$$. "
  },
  {
    "title": "Make Triangle",
    "url": "https://codeforces.com/problemset/problem/1949/K",
    "description": "You are given $$$n$$$ positive integers $$$x_1, x_2, \\ldots, x_n$$$ and three positive integers $$$n_a, n_b, n_c$$$ satisfying $$$n_a+n_b+n_c = n$$$. You want to split the $$$n$$$ positive integers into three groups, so that: The first group contains $$$n_a$$$ numbers, the second group contains $$$n_b$$$ numbers, the third group contains $$$n_c$$$ numbers. Let $$$s_a$$$ be the sum of the numbers in the first group, $$$s_b$$$ be the sum in the second group, and $$$s_c$$$ be the sum in the third group. Then $$$s_a, s_b, s_c$$$ are the sides of a triangle with positive area.Determine if this is possible. If this is possible, find one way to do so."
  },
  {
    "title": "Amanda the Amoeba",
    "url": "https://codeforces.com/problemset/problem/1949/J",
    "description": "This problem has an attachment. You can use it to simulate and visualize the movements of the amoeba.Amoeba Amanda lives inside a rectangular grid of square pixels. Her body occupies some of these pixels. Other pixels may be either free or blocked. Amanda moves across the grid using the so-called amoeboid movement. In each step of such a movement, her body first shrinks by one pixel (one pixel of the body is removed and becomes free), and then grows at a different place (one previously-free pixel is added to the body).To prevent structural damage, Amanda's body always occupies a connected region of pixels, which means that any pair of pixels forming the body can be connected by a sequence of adjacent pixels without ever leaving the body. Two pixels are considered adjacent if they share a common side (each pixel has at most 4 neighbours). The body remains connected even during the movement, including the moment after removing a pixel and before adding another one.Your task is to help Amanda find her way around. Given her initial position and desired final position, suggest a sequence of valid moves leading from the former to the latter.    Illustration of sample $$$1$$$: The filled shape is the initial position, the dotted region is the final position. "
  },
  {
    "title": "Disks",
    "url": "https://codeforces.com/problemset/problem/1949/I",
    "description": "You are given $$$n$$$ disks in the plane. The center of each disk has integer coordinates, and the radius of each disk is a positive integer. No two disks overlap in a region of positive area, but it is possible for disks to be tangent to each other.Your task is to determine whether it is possible to change the radii of the disks in such a way that:   Disks that were tangent to each other remain tangent to each other.  No two disks overlap in a region of positive area.  The sum of all radii strictly decreases.  The new radii are allowed to be arbitrary positive real numbers. The centers of the disks cannot be changed."
  },
  {
    "title": "Division Avoidance",
    "url": "https://codeforces.com/problemset/problem/1949/H",
    "description": "A newly discovered organism can be represented as a set of cells on an infinite grid. There is a coordinate system on the grid such that each cell has two integer coordinates $$$x$$$ and $$$y$$$. A cell with coordinates $$$x=a$$$ and $$$y=b$$$ will be denoted as $$$(a, b)$$$.Initially, the organism consists of a single cell $$$(0, 0)$$$. Then zero or more divisions can happen. In one division, a cell $$$(a, b)$$$ is removed and replaced by two cells $$$(a+1, b)$$$ and $$$(a, b+1)$$$.For example, after the first division, the organism always consists of two cells $$$(1, 0)$$$ and $$$(0, 1)$$$, and after the second division, it is either the three cells $$$(2, 0)$$$, $$$(1, 1)$$$ and $$$(0, 1)$$$, or the three cells $$$(1, 0)$$$, $$$(1, 1)$$$ and $$$(0, 2)$$$.A division of a cell $$$(a, b)$$$ can only happen if the cells $$$(a+1, b)$$$ and $$$(a, b+1)$$$ are not yet part of the organism. For example, the cell $$$(1, 0)$$$ cannot divide if the organism currently consists of the three cells $$$(1, 0)$$$, $$$(1, 1)$$$ and $$$(0, 2)$$$, since the cell $$$(1, 1)$$$ that would be one of the results of this division is already part of the organism.You are given a set of forbidden cells $$${(c_i, d_i)}$$$. Is it possible for the organism to contain none of those cells after zero or more divisions? "
  },
  {
    "title": "Scooter",
    "url": "https://codeforces.com/problemset/problem/1949/G",
    "description": "The Czech Technical University campus consists of $$$n$$$ buildings, indexed from $$$1$$$ to $$$n$$$. In each building, there can be a math class scheduled, or a computer science class, or neither (but not both). Additionally, in each building, there is at most one professor, and each professor is either an expert in mathematics or in computer science.As an intern at University Express Inc., your job is to quickly transport the professors to their classes. For this, you have been granted a brand new two-person scooter, able to accommodate yourself, plus at most one passenger.Initially, you are the only person on the scooter. When you arrive at a building, you may drop off or pick up professors to/from that building. However, in order to improve the efficiency of your task, you are allowed to drive to each of the $$$n$$$ buildings at most once, in the order of your choice (you can also decide where to start the itinerary). After the end of your itinerary, in each building where a math class is scheduled, there must be a professor expert in math, and in each building where a computer science class is scheduled, there must be a professor expert in computer science.Devise an itinerary that makes it possible to teach all classes."
  },
  {
    "title": "Dating",
    "url": "https://codeforces.com/problemset/problem/1949/F",
    "description": "You are the developer of a dating app which ignores gender completely. The app has $$$n$$$ users, indexed from $$$1$$$ to $$$n$$$. Each user's profile features a list of the activities they enjoy doing. There are $$$m$$$ possible activities, indexed from $$$1$$$ to $$$m$$$.A match between two users is good if they share at least one activity and, at the same time, both of them like at least one activity that the other user does not like.Find a good match if it exists."
  },
  {
    "title": "Damage per Second",
    "url": "https://codeforces.com/problemset/problem/1949/E",
    "description": "You just created a new character in your favourite role-playing game and now have to decide how to skill him.  The two skill attributes to be chosen are: damage per hit and hits per second. Damage per hit is the amount of damage you deal with a single hit, while hits per second is the number of hits you can make in one second. Initially, both skill attributes are set at $$$0$$$. You have $$$k$$$ skill points to distribute as you want; in other words, you can choose the values of the two skills so that they are positive integers with sum at most $$$k$$$. The tutorial of the game (the boring part you want to finish as soon as possible) consists of $$$n$$$ monsters to be killed one after the other. The $$$i$$$-th monster has $$$h_i$$$ health points, i.e., it dies after you have inflicted at least $$$h_i$$$ damage.How can you assign the two skill attributes to minimize the time necessary to kill all the $$$n$$$ monsters?"
  },
  {
    "title": "Funny or Scary?",
    "url": "https://codeforces.com/problemset/problem/1949/D",
    "description": "You are designing a new video game. It has $$$n$$$ scenarios, which the player may play in any order, but each scenario must be played exactly once. When a player switches from a scenario to another scenario, the game shows a specially crafted transition video to make it all feel part of one big story. This video is specific to a pair of scenarios, but not to their order, in other words, the video playing when switching from scenario $$$a$$$ to scenario $$$b$$$ is the same as the video playing when switching from scenario $$$b$$$ to scenario $$$a$$$. Therefore, you need to create $$$\\frac{n(n-1)}{2}$$$ different transition videos, one for each possible pair of different scenarios.Each transition video can be either funny or scary. It is boring to see too many funny videos or too many scary videos in a row. Therefore, your goal is to create the videos in such a way that no matter in which order does the player approach the scenarios, they will never see more than $$$\\lceil \\frac{3n}{4} \\rceil$$$ transition videos of the same type in a row.You have already come up with ideas for at most $$$\\lfloor \\frac{n}{2} \\rfloor$$$ of the transition videos, and therefore already know if those will be funny or scary. Now you need to choose funny or scary for all other transition videos in such a way that the above requirement is satisfied."
  },
  {
    "title": "Annual Ants' Gathering",
    "url": "https://codeforces.com/problemset/problem/1949/C",
    "description": "Deep within a forest lies an ancient tree, home to $$$n$$$ ants living in $$$n$$$ tiny houses, indexed from $$$1$$$ to $$$n$$$, connected by the branches of the tree.  Once a year, all the ants need to gather to watch the EUC. For this, all ants move along the $$$n-1$$$ branches of the tree they live on to meet at the home of one ant.However, this year the ants could not agree on where to meet and need your help to gather up. You can tell all the ants currently at house $$$u$$$ to move to house $$$v$$$ if there is a branch directly connecting those two houses. However, the ants ignore your command if there are fewer ants gathered in house $$$v$$$ than in house $$$u$$$, i.e., if it would be easier for the ants from house $$$v$$$ to move. This even holds true if no ant at all is currently in house $$$v$$$. You can give this kind of commands as many times as you want.Is it possible for you to gather all the ants in a single house?"
  },
  {
    "title": "Charming Meals",
    "url": "https://codeforces.com/problemset/problem/1949/B",
    "description": "The Czech cuisine features $$$n$$$ appetizers and $$$n$$$ main dishes. The $$$i$$$-th appetizer has spiciness $$$a_i$$$, and the $$$i$$$-th main dish has spiciness $$$b_i$$$.A typical Czech meal consists of exactly one appetizer and one main dish. You want to pair up the $$$n$$$ appetizers and $$$n$$$ main dishes into $$$n$$$ meals with each appetizer and each main dish being included in exactly one meal.Your meals shall surprise the diners, so you want the spiciness levels of the two parts of the same meal to be as different as possible. The charm of a meal is the difference (in absolute value) between the spiciness of the appetizer and the spiciness of the main dish. So, a meal consisting of an appetizer with spiciness $$$x$$$ and a main dish with spiciness $$$y$$$ has charm equal to $$$|x-y|$$$.You want to maximize the minimum charm of the resulting $$$n$$$ meals. What is the largest possible value of the minimum charm that you can achieve?"
  },
  {
    "title": "Grove",
    "url": "https://codeforces.com/problemset/problem/1949/A",
    "description": "You want to plant trees in a square lawn of size $$$n \\times n$$$ whose corners have Cartesian coordinates $$$(0, 0)$$$, $$$(n, 0)$$$, $$$(0, n)$$$, and $$$(n, n)$$$. Trees can only be planted at locations with integer coordinates. Every tree will grow roots within a disk of radius $$$r$$$ centered at the location where the tree was planted; such disks must be fully contained in the lawn (possibly touching the boundary of the lawn) and can only intersect each other on their boundaries.Find a configuration that maximizes the number of trees."
  },
  {
    "title": "MST with Matching",
    "url": "https://codeforces.com/problemset/problem/1948/G",
    "description": "You are given an undirected connected graph on $$$n$$$ vertices. Each edge of this graph has a weight; the weight of the edge connecting vertices $$$i$$$ and $$$j$$$ is $$$w_{i,j}$$$ (or $$$w_{i,j} = 0$$$ if there is no edge between $$$i$$$ and $$$j$$$). All weights are positive integers.You are also given a positive integer $$$c$$$.You have to build a spanning tree of this graph; i. e. choose exactly $$$(n-1)$$$ edges of this graph in such a way that every vertex can be reached from every other vertex by traversing some of the chosen edges. The cost of the spanning tree is the sum of two values:  the sum of weights of all chosen edges;  the maximum matching in the spanning tree (i. e. the maximum size of a set of edges such that they all belong to the chosen spanning tree, and no vertex has more than one incident edge in this set), multiplied by the given integer $$$c$$$. Find any spanning tree with the minimum cost. Since the graph is connected, there exists at least one spanning tree."
  },
  {
    "title": "Rare Coins",
    "url": "https://codeforces.com/problemset/problem/1948/F",
    "description": "There are $$$n$$$ bags numbered from $$$1$$$ to $$$n$$$, the $$$i$$$-th bag contains $$$a_i$$$ golden coins and $$$b_i$$$ silver coins.The value of a gold coin is $$$1$$$. The value of a silver coin is either $$$0$$$ or $$$1$$$, determined for each silver coin independently ($$$0$$$ with probability $$$\\frac{1}{2}$$$, $$$1$$$ with probability $$$\\frac{1}{2}$$$).You have to answer $$$q$$$ independent queries. Each query is the following:   $$$l$$$ $$$r$$$ — calculate the probability that the total value of coins in bags from $$$l$$$ to $$$r$$$ is strictly greater than the total value in all other bags. "
  },
  {
    "title": "Clique Partition",
    "url": "https://codeforces.com/problemset/problem/1948/E",
    "description": "You are given two integers, $$$n$$$ and $$$k$$$. There is a graph on $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$, which initially has no edges.You have to assign each vertex an integer; let $$$a_i$$$ be the integer on the vertex $$$i$$$. All $$$a_i$$$ should be distinct integers from $$$1$$$ to $$$n$$$.After assigning integers, for every pair of vertices $$$(i, j)$$$, you add an edge between them if $$$|i - j| + |a_i - a_j| \\le k$$$.Your goal is to create a graph which can be partitioned into the minimum possible (for the given values of $$$n$$$ and $$$k$$$) number of cliques. Each vertex of the graph should belong to exactly one clique. Recall that a clique is a set of vertices such that every pair of vertices in it are connected with an edge.Since BledDest hasn't really brushed his programming skills up, he can't solve the problem \"given a graph, partition it into the minimum number of cliques\". So we also ask you to print the partition itself."
  },
  {
    "title": "Tandem Repeats?",
    "url": "https://codeforces.com/problemset/problem/1948/D",
    "description": "You are given a string $$$s$$$, consisting of lowercase Latin letters and/or question marks.A tandem repeat is a string of an even length such that its first half is equal to its second half.A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.Your goal is to replace each question mark with some lowercase Latin letter in such a way that the length of the longest substring that is a tandem repeat is maximum possible."
  },
  {
    "title": "Arrow Path",
    "url": "https://codeforces.com/problemset/problem/1948/C",
    "description": "There is a grid, consisting of $$$2$$$ rows and $$$n$$$ columns. The rows are numbered from $$$1$$$ to $$$2$$$ from top to bottom. The columns are numbered from $$$1$$$ to $$$n$$$ from left to right. Each cell of the grid contains an arrow pointing either to the left or to the right. No arrow points outside the grid.There is a robot that starts in a cell $$$(1, 1)$$$. Every second, the following two actions happen one after another:   Firstly, the robot moves left, right, down or up (it can't try to go outside the grid, and can't skip a move);  then it moves along the arrow that is placed in the current cell (the cell it ends up after its move). Your task is to determine whether the robot can reach the cell $$$(2, n)$$$."
  },
  {
    "title": "Array Fix",
    "url": "https://codeforces.com/problemset/problem/1948/B",
    "description": "You are given an integer array $$$a$$$ of length $$$n$$$.You can perform the following operation any number of times (possibly zero): take any element of the array $$$a$$$, which is at least $$$10$$$, delete it, and instead insert the digits that element consisted of in the same position, in order they appear in that element.For example:  if we apply this operation to the $$$3$$$-rd element of the array $$$[12, 3, 45, 67]$$$, then the array becomes $$$[12, 3, 4, 5, 67]$$$.  if we apply this operation to the $$$2$$$-nd element of the array $$$[2, 10]$$$, then the array becomes $$$[2, 1, 0]$$$. Your task is to determine whether it is possible to make $$$a$$$ sorted in non-descending order using the aforementioned operation any number of times (possibly zero). In other words, you have to determine if it is possible to transform the array $$$a$$$ in such a way that $$$a_1 \\le a_2 \\le \\dots \\le a_k$$$, where $$$k$$$ is the current length of the array $$$a$$$."
  },
  {
    "title": "Special Characters",
    "url": "https://codeforces.com/problemset/problem/1948/A",
    "description": "You are given an integer $$$n$$$.Your task is to build a string of uppercase Latin letters. There must be exactly $$$n$$$ special characters in this string. Let's call a character special if it is equal to exactly one of its neighbors.For example, there are $$$6$$$ special characters in the AAABAACC string (at positions: $$$1$$$, $$$3$$$, $$$5$$$, $$$6$$$, $$$7$$$ and $$$8$$$).Print any suitable string or report that there is no such string."
  },
  {
    "title": "Nobody is needed",
    "url": "https://codeforces.com/problemset/problem/1946/F",
    "description": "Oleg received a permutation $$$a$$$ of length $$$n$$$ as a birthday present.Oleg's friend Nechipor asks Oleg $$$q$$$ questions, each question is characterized by two numbers $$$l$$$ and $$$r$$$, in response to the question Oleg must say the number of sets of indices $$$(t_1, t_2, \\ldots, t_k)$$$ of any length $$$k \\ge 1$$$ such that:   $$$l \\le t_i \\le r$$$ for each $$$i$$$ from $$$1$$$ to $$$k$$$.  $$$t_i < t_{i+1}$$$ for each $$$i$$$ from $$$1$$$ to $$$k-1$$$.  $$$a_{t_{i+1}}$$$ is divisible by $$$a_{t_i}$$$ for each $$$i$$$ from $$$1$$$ to $$$k-1$$$. Help Oleg and answer all of Nechipor's questions."
  },
  {
    "title": "Girl Permutation",
    "url": "https://codeforces.com/problemset/problem/1946/E",
    "description": "Some permutation of length $$$n$$$ is guessed.You are given the indices of its prefix maximums and suffix maximums.Recall that a permutation of length $$$k$$$ is an array of size $$$k$$$ such that each integer from $$$1$$$ to $$$k$$$ occurs exactly once.Prefix maximums are the elements that are the maximum on the prefix ending at that element. More formally, the element $$$a_i$$$ is a prefix maximum if $$$a_i > a_j$$$ for every $$$j < i$$$.Similarly, suffix maximums are defined, the element $$$a_i$$$ is a suffix maximum if $$$a_i > a_j$$$ for every $$$j > i$$$.You need to output the number of different permutations that could have been guessed.As this number can be very large, output the answer modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Birthday Gift",
    "url": "https://codeforces.com/problemset/problem/1946/D",
    "description": "Yarik's birthday is coming soon, and Mark decided to give him an array $$$a$$$ of length $$$n$$$.Mark knows that Yarik loves bitwise operations very much, and he also has a favorite number $$$x$$$, so Mark wants to find the maximum number $$$k$$$ such that it is possible to select pairs of numbers [$$$l_1, r_1$$$], [$$$l_2, r_2$$$], $$$\\ldots$$$ [$$$l_k, r_k$$$], such that:   $$$l_1 = 1$$$.  $$$r_k = n$$$.  $$$l_i \\le r_i$$$ for all $$$i$$$ from $$$1$$$ to $$$k$$$.  $$$r_i + 1 = l_{i + 1}$$$ for all $$$i$$$ from $$$1$$$ to $$$k - 1$$$.  $$$(a_{l_1} \\oplus a_{l_1 + 1} \\oplus \\ldots \\oplus a_{r_1}) | (a_{l_2} \\oplus a_{l_2 + 1} \\oplus \\ldots \\oplus a_{r_2}) | \\ldots | (a_{l_k} \\oplus a_{l_k + 1} \\oplus \\ldots \\oplus a_{r_k}) \\le x$$$, where $$$\\oplus$$$ denotes the operation of bitwise XOR, and $$$|$$$ denotes the operation of bitwise OR. If such $$$k$$$ does not exist, then output $$$-1$$$."
  },
  {
    "title": "Tree Cutting",
    "url": "https://codeforces.com/problemset/problem/1946/C",
    "description": "You are given a tree with $$$n$$$ vertices.Your task is to find the maximum number $$$x$$$ such that it is possible to remove exactly $$$k$$$ edges from this tree in such a way that the size of each remaining connected component$$$^{\\dagger}$$$ is at least $$$x$$$.$$$^{\\dagger}$$$ Two vertices $$$v$$$ and $$$u$$$ are in the same connected component if there exists a sequence of numbers $$$t_1, t_2, \\ldots, t_k$$$ of arbitrary length $$$k$$$, such that $$$t_1 = v$$$, $$$t_k = u$$$, and for each $$$i$$$ from $$$1$$$ to $$$k - 1$$$, vertices $$$t_i$$$ and $$$t_{i+1}$$$ are connected by an edge."
  },
  {
    "title": "Maximum Sum",
    "url": "https://codeforces.com/problemset/problem/1946/B",
    "description": "You have an array $$$a$$$ of $$$n$$$ integers.You perform exactly $$$k$$$ operations on it. In one operation, you select any contiguous subarray of the array $$$a$$$ (possibly empty) and insert the sum of this subarray anywhere in the array.Your task is to find the maximum possible sum of the array after $$$k$$$ such operations.As this number can be very large, output the answer modulo $$$10^9 + 7$$$.Reminder: the remainder of a number $$$x$$$ modulo $$$p$$$ is the smallest non-negative $$$y$$$ such that there exists an integer $$$q$$$ and $$$x = p \\cdot q + y$$$."
  },
  {
    "title": "Median of an Array",
    "url": "https://codeforces.com/problemset/problem/1946/A",
    "description": "You are given an array aa of nn integers.The median of an array q1,q2,…,qkq_1, q_2, \\ldots, q_k is the number p⌈k2⌉p_{\\lceil \\frac{k}{2} \\rceil}, where pp is the array qq sorted in non-decreasing order. For example, the median of the array [9,5,1,2,6][9, 5, 1, 2, 6] is 55, as in the sorted array [1,2,5,6,9][1, 2, 5, 6, 9], the number at index ⌈52⌉=3\\lceil \\frac{5}{2} \\rceil = 3 is 55, and the median of the array [9,2,8,3][9, 2, 8, 3] is 33, as in the sorted array [2,3,8,9][2, 3, 8, 9], the number at index ⌈42⌉=2\\lceil \\frac{4}{2} \\rceil = 2 is 33.You are allowed to choose an integer ii (1≤i≤n1 \\le i \\le n) and increase aia_i by 11 in one operation.Your task is to find the minimum number of operations required to increase the median of the array.Note that the array aa may not necessarily contain distinct numbers."
  },
  {
    "title": "GCD is Greater",
    "url": "https://codeforces.com/problemset/problem/1945/H",
    "description": "In the evenings during the hike, Kirill and Anton decided to take out an array of integers $$$a$$$ of length $$$n$$$ from their backpack and play a game with it. The rules are as follows: Kirill chooses from $$$2$$$ to $$$(n-2)$$$ numbers and encircles them in red. Anton encircles all the remaining numbers in blue. Kirill calculates the greatest common divisor (GCD) of all the red numbers. Anton calculates the bitwise AND of all the blue numbers and adds the number $$$x$$$ to the result. If the GCD of all the red numbers is strictly greater than the sum of the bitwise AND of all the blue numbers and the number $$$x$$$, then Kirill wins; otherwise, Anton wins.Help Kirill to beat Anton or tell if it's impossible."
  },
  {
    "title": "Cook and Porridge",
    "url": "https://codeforces.com/problemset/problem/1945/G",
    "description": "Finally, lunchtime!$$$n$$$ schoolchildren have lined up in a long queue at the cook's tent for porridge. The cook will be serving porridge for $$$D$$$ minutes. The schoolchild standing in the $$$i$$$-th position in the queue has a priority of $$$k_i$$$ and eats one portion of porridge in $$$s_i$$$ minutes.At the beginning of each minute of the break, the cook serves the first schoolchild in the queue one portion of porridge, after which the schoolchild goes to eat their portion. If the $$$i$$$-th schoolchild is served a portion at the beginning of the $$$x$$$-th minute, then they will return to the queue at the end of the $$$(x + s_i)$$$-th minute.When the $$$i$$$-th schoolchild returns to the queue, the schoolchildren at the end of the queue whose priority is strictly lower than that of the $$$i$$$-th schoolchild must let them pass. Thus, they will stand in the queue behind the last schoolchild whose priority is not lower than their own. That is, behind the last schoolchild $$$j$$$ with $$$k_j \\ge k_i$$$. If there is no such schoolchild in the queue, the $$$i$$$-th schoolchild will stand at the front of the queue.If several schoolchildren return at the same time, they will return to the queue in ascending order of their $$$s_i$$$.For example, if $$$n = 3$$$, $$$D = 3$$$, $$$k = [2, 3, 2]$$$, and $$$s = [2, 1, 3]$$$, the serving will occur as follows:  At the beginning of minute $$$1$$$, the students in the queue are $$$[1, 2, 3]$$$, and student $$$1$$$ is served porridge;  at the beginning of minute $$$2$$$, the students in the queue are $$$[2, 3]$$$, and student $$$2$$$ is served porridge;  at the beginning of minute $$$3$$$, the student in the queue is $$$[3]$$$, and student $$$3$$$ is served porridge;  at the end of minute $$$3$$$, student $$$2$$$ returns to the queue, and the queue becomes $$$[2]$$$;  at the end of minute $$$3$$$, student $$$1$$$ returns to the queue, and the queue becomes $$$[2, 1]$$$, as his priority is lower. Determine the minimum number of minutes after the start of the break that each schoolchild will receive porridge at least once, or report that this will not happen within $$$D$$$ minutes."
  },
  {
    "title": "Kirill and Mushrooms",
    "url": "https://codeforces.com/problemset/problem/1945/F",
    "description": "As soon as everyone in the camp fell asleep, Kirill sneaked out of the tent and went to the Wise Oak to gather mushrooms.It is known that there are $$$n$$$ mushrooms growing under the Oak, each of which has magic power $$$v_i$$$. Kirill really wants to make a magical elixir of maximum strength from the mushrooms.The strength of the elixir is equal to the product of the number of mushrooms in it and the minimum magic power among these mushrooms. To prepare the elixir, Kirill will sequentially pick one mushroom growing under the Oak. Kirill can gather mushrooms in any order.However, it's not that simple. The Wise Oak informed Kirill of a permutation of numbers $$$p$$$ from $$$1$$$ to $$$n$$$. If Kirill picks only $$$k$$$ mushrooms, then the magic power of all mushrooms with indices $$$p_1, p_2, \\dots, p_{k - 1}$$$ will become $$$0$$$. Kirill will not use mushrooms with zero magic power to prepare the elixir.Your task is to help Kirill gather mushrooms in such a way that he can brew the elixir of maximum possible strength. However, Kirill is a little scared to stay near the oak for too long, so out of all the suitable options for gathering mushrooms, he asks you to find the one with the minimum number of mushrooms.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ different integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears in the array twice) and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$, but $$$4$$$ appears in the array)."
  },
  {
    "title": "Binary Search",
    "url": "https://codeforces.com/problemset/problem/1945/E",
    "description": "Anton got bored during the hike and wanted to solve something. He asked Kirill if he had any new problems, and of course, Kirill had one.You are given a permutation pp of size nn, and a number xx that needs to be found. A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array), and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).You decided that you are a cool programmer, so you will use an advanced algorithm for the search — binary search. However, you forgot that for binary search, the array must be sorted.You did not give up and decided to apply this algorithm anyway, and in order to get the correct answer, you can perform the following operation no more than 22 times before running the algorithm: choose the indices ii, jj (1≤i,j≤n1\\le i, j \\le n) and swap the elements at positions ii and jj.After that, the binary search is performed. At the beginning of the algorithm, two variables l=1l = 1 and r=n+1r = n + 1 are declared. Then the following loop is executed:  If r−l=1r - l = 1, end the loop  m=⌊r+l2⌋m = \\lfloor \\frac{r + l}{2} \\rfloor  If pm≤xp_m \\le x, assign l=ml = m, otherwise r=mr = m. The goal is to rearrange the numbers in the permutation before the algorithm so that after the algorithm is executed, plp_l is equal to xx. It can be shown that 22 operations are always sufficient."
  },
  {
    "title": "Seraphim the Owl",
    "url": "https://codeforces.com/problemset/problem/1945/D",
    "description": "The guys lined up in a queue of $$$n$$$ people, starting with person number $$$i = 1$$$, to ask Serafim the Owl about the meaning of life. Unfortunately, Kirill was very busy writing the legend for this problem, so he arrived a little later and stood at the end of the line after the $$$n$$$-th person. Kirill is completely dissatisfied with this situation, so he decided to bribe some people ahead of him.For the $$$i$$$-th person in the queue, Kirill knows two values: $$$a_i$$$ and $$$b_i$$$. If at the moment Kirill is standing at position $$$i$$$, then he can choose any position $$$j$$$ such that $$$j < i$$$ and exchange places with the person at position $$$j$$$. In this case, Kirill will have to pay him $$$a_j$$$ coins. And for each $$$k$$$ such that $$$j < k < i$$$, Kirill will have to pay $$$b_k$$$ coins to the person at position $$$k$$$. Kirill can perform this action any number of times.Kirill is thrifty, so he wants to spend as few coins as possible, but he doesn't want to wait too long, so Kirill believes he should be among the first $$$m$$$ people in line.Help Kirill determine the minimum number of coins he will have to spend in order to not wait too long."
  },
  {
    "title": "Left and Right Houses",
    "url": "https://codeforces.com/problemset/problem/1945/C",
    "description": "In the village of Letovo, there are $$$n$$$ houses. The villagers decided to build a big road that will divide the village into left and right sides. Each resident wants to live on either the right or the left side of the street, which is described as a sequence $$$a_1, a_2, \\dots, a_n$$$, where $$$a_j = 0$$$ if the resident of the $$$j$$$-th house wants to live on the left side of the street; otherwise, $$$a_j = 1$$$.The road will pass between two houses. The houses to the left of it will be declared the left-side, and the houses to the right will be declared the right-side. More formally, let the road pass between houses $$$i$$$ and $$$i+1$$$. Then the houses at positions between $$$1$$$ and $$$i$$$ will be on the left side of the street, and at positions between $$$i+1$$$ and $$$n$$$ will be on the right side. The road also may pass before the first and after the last house; in this case, the entire village is declared to be either the right or left side, respectively.To make the design fair, it was decided to lay the road so that at least half of the residents on each side of the village are satisfied with the choice. That is, among $$$x$$$ residents on one side, at least $$$\\lceil\\frac{x}{2}\\rceil$$$ should want to live on that side, where $$$\\lceil x \\rceil$$$ denotes rounding up a real number $$$x$$$.    To the left of the road, there will be $$$i$$$ houses, among the corresponding $$$a_j$$$ there must be at least $$$\\lceil\\frac{i}{2}\\rceil$$$ zeros. To the right of the road, there will be $$$n-i$$$ houses, among the corresponding $$$a_j$$$ there must be at least $$$\\lceil\\frac{n-i}{2}\\rceil$$$ ones. Determine after which house $$$i$$$ the road should be laid in order to satisfy the described condition and be as close to the middle of the village as possible. Formally, among all suitable positions $$$i$$$, minimize $$$\\left|\\frac{n}{2} - i\\right|$$$.If there are multiple suitable positions $$$i$$$ with the minimum $$$\\left|\\frac{n}{2} - i\\right|$$$, output the smaller one."
  },
  {
    "title": "Fireworks",
    "url": "https://codeforces.com/problemset/problem/1945/B",
    "description": "One of the days of the hike coincided with a holiday, so in the evening at the camp, it was decided to arrange a festive fireworks display. For this purpose, the organizers of the hike bought two installations for launching fireworks and a huge number of shells for launching.Both installations are turned on simultaneously. The first installation launches fireworks every $$$a$$$ minutes (i.e., after $$$a, 2 \\cdot a, 3 \\cdot a, \\dots$$$ minutes after launch). The second installation launches fireworks every $$$b$$$ minutes (i.e., after $$$b, 2 \\cdot b, 3 \\cdot b, \\dots$$$ minutes after launch).Each firework is visible in the sky for $$$m + 1$$$ minutes after launch, i.e., if a firework was launched after $$$x$$$ minutes after the installations were turned on, it will be visible every minute from $$$x$$$ to $$$x + m$$$, inclusive. If one firework was launched $$$m$$$ minutes after another, both fireworks will be visible for one minute.What is the maximum number of fireworks that could be seen in the sky at the same time?"
  },
  {
    "title": "Setting up Camp",
    "url": "https://codeforces.com/problemset/problem/1945/A",
    "description": "The organizing committee plans to take the participants of the Olympiad on a hike after the tour. Currently, the number of tents needed to be taken is being calculated. It is known that each tent can accommodate up to $$$3$$$ people.Among the participants, there are $$$a$$$ introverts, $$$b$$$ extroverts, and $$$c$$$ universals:  Each introvert wants to live in a tent alone. Thus, a tent with an introvert must contain exactly one person — only the introvert himself.  Each extrovert wants to live in a tent with two others. Thus, the tent with an extrovert must contain exactly three people.  Each universal is fine with any option (living alone, with one other person, or with two others). The organizing committee respects the wishes of each participant very much, so they want to fulfill all of them.Tell us the minimum number of tents needed to be taken so that all participants can be accommodated according to their preferences. If it is impossible to accommodate the participants in a way that fulfills all the wishes, output $$$-1$$$."
  },
  {
    "title": "Equal XOR",
    "url": "https://codeforces.com/problemset/problem/1944/B",
    "description": "You are given an array aa of length 2n2n, consisting of each integer from 11 to nn exactly twice.You are also given an integer kk (1≤k≤⌊n2⌋1 \\leq k \\leq \\lfloor \\frac{n}{2} \\rfloor ).You need to find two arrays ll and rr each of length 2k\\mathbf{2k} such that:   ll is a subset†^\\dagger of [a1,a2,…an][a_1, a_2, \\ldots a_n]  rr is a subset of [an+1,an+2,…a2n][a_{n+1}, a_{n+2}, \\ldots a_{2n}]  bitwise XOR of elements of ll is equal to the bitwise XOR of elements of rr; in other words, l1⊕l2⊕…⊕l2k=r1⊕r2⊕…⊕r2kl_1 \\oplus l_2 \\oplus \\ldots \\oplus l_{2k} = r_1 \\oplus r_2 \\oplus \\ldots \\oplus r_{2k} It can be proved that at least one pair of ll and rr always exists. If there are multiple solutions, you may output any one of them.†^\\dagger A sequence xx is a subset of a sequence yy if xx can be obtained by deleting several (possibly none or all) elements of yy and rearranging the elements in any order. For example, [3,1,2,1][3,1,2,1], [1,2,3][1, 2, 3], [1,1][1, 1] and [3,2][3, 2] are subsets of [1,1,2,3][1, 1, 2, 3] but [4][4] and [2,2][2, 2] are not subsets of [1,1,2,3][1, 1, 2, 3]."
  },
  {
    "title": "Destroying Bridges",
    "url": "https://codeforces.com/problemset/problem/1944/A",
    "description": "There are $$$n$$$ islands, numbered $$$1, 2, \\ldots, n$$$. Initially, every pair of islands is connected by a bridge. Hence, there are a total of $$$\\frac{n (n - 1)}{2}$$$ bridges. Everule lives on island $$$1$$$ and enjoys visiting the other islands using bridges. Dominater has the power to destroy at most $$$k$$$ bridges to minimize the number of islands that Everule can reach using (possibly multiple) bridges.Find the minimum number of islands (including island $$$1$$$) that Everule can visit if Dominater destroys bridges optimally."
  },
  {
    "title": "Minimum Hamming Distance",
    "url": "https://codeforces.com/problemset/problem/1943/F",
    "description": "You are given a binary string$$$^\\dagger$$$ $$$s$$$ of length $$$n$$$.A binary string $$$p$$$ of the same length $$$n$$$ is called good if for every $$$i$$$ ($$$1 \\leq i \\leq n$$$), there exist indices $$$l$$$ and $$$r$$$ such that:   $$$1 \\leq l \\leq i \\leq r \\leq n$$$  $$$s_i$$$ is a mode$$$^\\ddagger$$$ of the string $$$p_lp_{l+1}\\ldots p_r$$$ You are given another binary string $$$t$$$ of length $$$n$$$. Find the minimum Hamming distance$$$^\\S$$$ between $$$t$$$ and any good string $$$g$$$.$$$^\\dagger$$$ A binary string is a string that only consists of characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$.$$$^\\ddagger$$$ Character $$$c$$$ is a mode of string $$$p$$$ of length $$$m$$$ if the number of occurrences of $$$c$$$ in $$$p$$$ is at least $$$\\lceil \\frac{m}{2} \\rceil$$$. For example, $$$\\mathtt{0}$$$ is a mode of $$$\\mathtt{010}$$$, $$$\\mathtt{1}$$$ is not a mode of $$$\\mathtt{010}$$$, and both $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$ are modes of $$$\\mathtt{011010}$$$.$$$^\\S$$$ The Hamming distance of strings $$$a$$$ and $$$b$$$ of length $$$m$$$ is the number of indices $$$i$$$ such that $$$1 \\leq i \\leq m$$$ and $$$a_i \\neq b_i$$$."
  },
  {
    "title": "MEX Game 2 (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1943/E2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on $$$t$$$, $$$m$$$ and the sum of $$$m$$$. You can make hacks only if both versions of the problem are solved.Alice and Bob play yet another game on an array $$$a$$$ of size $$$n$$$. Alice starts with an empty array $$$c$$$. Both players take turns playing, with Alice starting first.On Alice's turn, she picks one element from $$$a$$$, appends that element to $$$c$$$, and then deletes it from $$$a$$$.On Bob's turn, he picks at most $$$k$$$ elements from $$$a$$$, and then deletes it from $$$a$$$. The game ends when the array $$$a$$$ is empty. Alice's score is defined to be the MEX$$$^\\dagger$$$ of $$$c$$$. Alice wants to maximize her score while Bob wants to minimize it. Find Alice's final score if both players play optimally.The array will be given in compressed format. Instead of giving the elements present in the array, we will be giving their frequencies. Formally, you will be given $$$m$$$, the maximum element in the array, and then $$$m + 1$$$ integers $$$f_0, f_1, \\ldots, f_{m}$$$, where $$$f_i$$$ represents the number of times $$$i$$$ occurs in the array $$$a$$$.$$$^\\dagger$$$ The $$$\\operatorname{MEX}$$$ (minimum excludant) of an array of integers is defined as the smallest non-negative integer which does not occur in the array. For example:   The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not.  "
  },
  {
    "title": "MEX Game 2 (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1943/E1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$t$$$, $$$m$$$ and the sum of $$$m$$$. You can make hacks only if both versions of the problem are solved.Alice and Bob play yet another game on an array $$$a$$$ of size $$$n$$$. Alice starts with an empty array $$$c$$$. Both players take turns playing, with Alice starting first.On Alice's turn, she picks one element from $$$a$$$, appends that element to $$$c$$$, and then deletes it from $$$a$$$.On Bob's turn, he picks at most $$$k$$$ elements from $$$a$$$, and then deletes it from $$$a$$$. The game ends when the array $$$a$$$ is empty. Alice's score is defined to be the MEX$$$^\\dagger$$$ of $$$c$$$. Alice wants to maximize her score while Bob wants to minimize it. Find Alice's final score if both players play optimally.The array will be given in compressed format. Instead of giving the elements present in the array, we will be giving their frequencies. Formally, you will be given $$$m$$$, the maximum element in the array, and then $$$m + 1$$$ integers $$$f_0, f_1, \\ldots, f_m$$$, where $$$f_i$$$ represents the number of times $$$i$$$ occurs in the array $$$a$$$.$$$^\\dagger$$$ The $$$\\operatorname{MEX}$$$ (minimum excludant) of an array of integers is defined as the smallest non-negative integer which does not occur in the array. For example:   The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Counting Is Fun (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1943/D2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on $$$n$$$. You can make hacks only if both versions of the problem are solved.An array $$$b$$$ of $$$m$$$ non-negative integers is said to be good if all the elements of $$$b$$$ can be made equal to $$$0$$$ using the following operation some (possibly, zero) times:   Select two distinct indices $$$l$$$ and $$$r$$$ ($$$1 \\leq l \\color{red}{<} r \\leq m$$$) and subtract $$$1$$$ from all $$$b_i$$$ such that $$$l \\leq i \\leq r$$$. You are given two positive integers $$$n$$$, $$$k$$$ and a prime number $$$p$$$.Over all $$$(k+1)^n$$$ arrays of length $$$n$$$ such that $$$0 \\leq a_i \\leq k$$$ for all $$$1 \\leq i \\leq n$$$, count the number of good arrays.Since the number might be too large, you are only required to find it modulo $$$p$$$."
  },
  {
    "title": "Counting Is Fun (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1943/D1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$n$$$. You can make hacks only if both versions of the problem are solved.An array $$$b$$$ of $$$m$$$ non-negative integers is said to be good if all the elements of $$$b$$$ can be made equal to $$$0$$$ using the following operation some (possibly, zero) times:   Select two distinct indices $$$l$$$ and $$$r$$$ ($$$1 \\leq l \\color{red}{<} r \\leq m$$$) and subtract $$$1$$$ from all $$$b_i$$$ such that $$$l \\leq i \\leq r$$$. You are given two positive integers $$$n$$$, $$$k$$$ and a prime number $$$p$$$.Over all $$$(k+1)^n$$$ arrays of length $$$n$$$ such that $$$0 \\leq a_i \\leq k$$$ for all $$$1 \\leq i \\leq n$$$, count the number of good arrays.Since the number might be too large, you are only required to find it modulo $$$p$$$."
  },
  {
    "title": "Tree Compass",
    "url": "https://codeforces.com/problemset/problem/1943/C",
    "description": "You are given a tree with $$$n$$$ vertices numbered $$$1, 2, \\ldots, n$$$. Initially, all vertices are colored white.You can perform the following two-step operation:   Choose a vertex $$$v$$$ ($$$1 \\leq v \\leq n$$$) and a distance $$$d$$$ ($$$0 \\leq d \\leq n-1$$$).  For all vertices $$$u$$$ ($$$1 \\leq u \\leq n$$$) such that $$$\\text{dist}^\\dagger(u,v)=d$$$, color $$$u$$$ black. Construct a sequence of operations to color all the nodes in the tree black using the minimum possible number of operations. It can be proven that it is always possible to do so using at most $$$n$$$ operations.$$$^\\dagger$$$ $$$\\text{dist}(x, y)$$$ denotes the number of edges on the (unique) simple path between vertices $$$x$$$ and $$$y$$$ on the tree."
  },
  {
    "title": "Non-Palindromic Substring",
    "url": "https://codeforces.com/problemset/problem/1943/B",
    "description": "A string $$$t$$$ is said to be $$$k$$$-good if there exists at least one substring$$$^\\dagger$$$ of length $$$k$$$ which is not a palindrome$$$^\\ddagger$$$. Let $$$f(t)$$$ denote the sum of all values of $$$k$$$ such that the string $$$t$$$ is $$$k$$$-good.You are given a string $$$s$$$ of length $$$n$$$. You will have to answer $$$q$$$ of the following queries:  Given $$$l$$$ and $$$r$$$ ($$$l < r$$$), find the value of $$$f(s_ls_{l + 1}\\ldots s_r)$$$. $$$^\\dagger$$$ A substring of a string $$$z$$$ is a contiguous segment of characters from $$$z$$$. For example, \"$$$\\mathtt{defor}$$$\", \"$$$\\mathtt{code}$$$\" and \"$$$\\mathtt{o}$$$\" are all substrings of \"$$$\\mathtt{codeforces}$$$\" while \"$$$\\mathtt{codes}$$$\" and \"$$$\\mathtt{aaa}$$$\" are not.$$$^\\ddagger$$$ A palindrome is a string that reads the same backwards as forwards. For example, the strings \"$$$\\texttt{z}$$$\", \"$$$\\texttt{aa}$$$\" and \"$$$\\texttt{tacocat}$$$\" are palindromes while \"$$$\\texttt{codeforces}$$$\" and \"$$$\\texttt{ab}$$$\" are not."
  },
  {
    "title": "MEX Game 1",
    "url": "https://codeforces.com/problemset/problem/1943/A",
    "description": "Alice and Bob play yet another game on an array $$$a$$$ of size $$$n$$$. Alice starts with an empty array $$$c$$$. Both players take turns playing, with Alice starting first.On Alice's turn, she picks one element from $$$a$$$, appends that element to $$$c$$$, and then deletes it from $$$a$$$.On Bob's turn, he picks one element from $$$a$$$, and then deletes it from $$$a$$$. The game ends when the array $$$a$$$ is empty. Game's score is defined to be the MEX$$$^\\dagger$$$ of $$$c$$$. Alice wants to maximize the score while Bob wants to minimize it. Find game's final score if both players play optimally.$$$^\\dagger$$$ The $$$\\operatorname{MEX}$$$ (minimum excludant) of an array of integers is defined as the smallest non-negative integer which does not occur in the array. For example:   The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Farmer John's Favorite Intern",
    "url": "https://codeforces.com/problemset/problem/1942/H",
    "description": "Peaches...⠀Ruby just won an internship position at Farmer John's farm by winning a coding competition! As the newly recruited intern, Ruby is tasked with maintaining Farmer John's peach tree, a tree consisting of nn nodes rooted at node 11. Each node initially contains ai=0a_i = 0 peaches, and there are two types of events that can happen:   Growth event at some node xx: Ruby must choose either the parent of xx or any node in the subtree of xx and increase the amount of peaches it contains by one.  Harvest event at some node xx: Ruby must choose a single node that is in the subtree of xx and decrease the amount of peaches it contains by one. Note that this is not the same set of nodes as the growth event.  Note that the subtree of xx includes the node xx as well.Ruby is also given an array bb of length nn. The peach tree is deemed healthy if ai≥bia_i \\ge b_i for every node ii.Ruby is asked to perform qq operations of two types:   1 x v — Perform vv growth events on node xx. Ruby does not have to choose the same node to increase in every growth event.  2 x v — Perform vv harvest events on node xx. Ruby does not have to choose the same node to decrease in every harvest event. For every prefix of operations, Ruby asks you to find if she can perform these operations in some order such that the resulting peach tree (at the end of these operations) is healthy. Note that Ruby can't perform a harvest event that makes any aia_i negative.Every prefix is independent, meaning that for a given operation, Ruby may choose different nodes to perform events on for every prefix that contains that operation. "
  },
  {
    "title": "Bessie and Cards",
    "url": "https://codeforces.com/problemset/problem/1942/G",
    "description": "Second Dark Matter Battle - Pokemon Super Mystery Dungeon⠀Bessie has recently started playing a famous card game. In the game, there is only one deck of cards, consisting of aa \"draw 00\" cards, bb \"draw 11\" cards, cc \"draw 22\" cards, and 55 special cards. At the start of the game, all cards are in the randomly shuffled deck.Bessie starts the game by drawing the top 55 cards of the deck. She may then play \"draw xx\" cards from the hand to draw the next xx cards from the top of the deck. Note that every card can only be played once, special cards cannot be played, and if Bessie uses a \"draw 22\" card when there is only 11 card remaining in the deck, then she simply draws that remaining card. Bessie wins if she draws all 55 special cards. Since Bessie is not very good at math problems, she wants you to find the probability that she wins, given that the deck is shuffled randomly over all (a+b+c+5)!(a + b + c + 5)! possible orderings. It can be shown that this answer can always be expressed as a fraction pq\\frac{p}{q} where pp and qq are coprime integers. Output p⋅q−1p \\cdot q^{-1} modulo 998244353998\\,244\\,353."
  },
  {
    "title": "Farmer John's Favorite Function",
    "url": "https://codeforces.com/problemset/problem/1942/F",
    "description": "ΩΩPARTS - Camellia⠀Farmer John has an array $$$a$$$ of length $$$n$$$. He also has a function $$$f$$$ with the following recurrence:   $$$f(1) = \\sqrt{a_1}$$$;  For all $$$i > 1$$$, $$$f(i) = \\sqrt{f(i-1)+a_i}$$$. Note that $$$f(i)$$$ is not necessarily an integer.He plans to do $$$q$$$ updates to the array. Each update, he gives you two integers $$$k$$$ and $$$x$$$ and he wants you to set $$$a_k = x$$$. After each update, he wants to know $$$\\lfloor f(n) \\rfloor$$$, where $$$\\lfloor t \\rfloor$$$ denotes the value of $$$t$$$ rounded down to the nearest integer."
  },
  {
    "title": "Farm Game",
    "url": "https://codeforces.com/problemset/problem/1942/E",
    "description": "Lunatic Princess - Touhou⠀Farmer Nhoj has brought his cows over to Farmer John's farm to play a game! FJ's farm can be modeled by a number line with walls at points 00 and l+1l + 1. On the farm, there are 2n2n cows, with nn of the cows belonging to FJ and the other nn belonging to FN. They place each of their cows at a distinct point, and no two FJ's cows nor FN's cows are adjacent. Two cows are adjacent if there are no other cows between them. Formally, if a1,a2,…,ana_1, a_2, \\ldots, a_n represents the positions of FJ's cows and b1,b2,…,bnb_1, b_2, \\ldots, b_n represents the positions of FN's cows, then either 0<a1<b1<a2<b2<…<an<bn<l+10 < a_1 < b_1 < a_2 < b_2 < \\ldots < a_n < b_n < l + 1 or 0<b1<a1<b2<a2<…<bn<an<l+10 < b_1 < a_1 < b_2 < a_2 < \\ldots < b_n < a_n < l + 1.In one move, a farmer chooses a number kk (1≤k≤n)(1 \\leq k \\leq n) and a direction (left or right). Then, that farmer chooses kk of his cows and moves them one position towards the chosen direction. A farmer cannot move any of his cows onto the walls or onto another farmer's cow. If a farmer cannot move any cows, then that farmer loses. FJ starts the game, making the first turn.Given ll and nn, find the number of possible game configurations for Farmer John to win if both farmers play optimally. It may be the case that the game will continue indefinitely, in which no farmer wins. A configuration is different from another if there is any ii such that aia_i or bib_i is different. Output the answer modulo 998244353998\\,244\\,353."
  },
  {
    "title": "Learning to Paint",
    "url": "https://codeforces.com/problemset/problem/1942/D",
    "description": "Pristine Beat - Touhou⠀Elsie is learning how to paint. She has a canvas of $$$n$$$ cells numbered from $$$1$$$ to $$$n$$$ and can paint any (potentially empty) subset of cells.  Elsie has a 2D array $$$a$$$ which she will use to evaluate paintings. Let the maximal contiguous intervals of painted cells in a painting be $$$[l_1,r_1],[l_2,r_2],\\ldots,[l_x,r_x]$$$. The beauty of the painting is the sum of $$$a_{l_i,r_i}$$$ over all $$$1 \\le i \\le x$$$. In the image above, the maximal contiguous intervals of painted cells are $$$[2,4],[6,6],[8,9]$$$ and the beauty of the painting is $$$a_{2,4}+a_{6,6}+a_{8,9}$$$.There are $$$2^n$$$ ways to paint the strip. Help Elsie find the $$$k$$$ largest possible values of the beauty of a painting she can obtain, among all these ways. Note that these $$$k$$$ values do not necessarily have to be distinct. It is guaranteed that there are at least $$$k$$$ different ways to paint the canvas. "
  },
  {
    "title": "Bessie's Birthday Cake (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1942/C2",
    "description": "Proof Geometric Construction Can Solve All Love Affairs - manbo-p⠀This is the hard version of the problem. The only difference between the two versions is the constraint on $$$y$$$. In this version $$$0 \\leq y \\leq n - x$$$. You can make hacks only if both versions are solved.Bessie has received a birthday cake from her best friend Elsie, and it came in the form of a regular polygon with $$$n$$$ sides. The vertices of the cake are numbered from $$$1$$$ to $$$n$$$ clockwise. You and Bessie are going to choose some of those vertices to cut non-intersecting diagonals into the cake. In other words, the endpoints of the diagonals must be part of the chosen vertices.Bessie would only like to give out pieces of cake which result in a triangle to keep consistency. The size of the pieces doesn't matter, and the whole cake does not have to be separated into all triangles (other shapes are allowed in the cake, but those will not be counted). Bessie has already chosen $$$x$$$ of those vertices that can be used to form diagonals. She wants you to choose no more than $$$y$$$ other vertices such that the number of triangular pieces of cake she can give out is maximized.What is the maximum number of triangular pieces of cake Bessie can give out?"
  },
  {
    "title": "Bessie's Birthday Cake (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1942/C1",
    "description": "Proof Geometric Construction Can Solve All Love Affairs - manbo-p⠀This is the easy version of the problem. The only difference between the two versions is the constraint on $$$y$$$. In this version $$$y = 0$$$. You can make hacks only if both versions are solved.Bessie has received a birthday cake from her best friend Elsie, and it came in the form of a regular polygon with $$$n$$$ sides. The vertices of the cake are numbered from $$$1$$$ to $$$n$$$ clockwise. You and Bessie are going to choose some of those vertices to cut non-intersecting diagonals into the cake. In other words, the endpoints of the diagonals must be part of the chosen vertices.Bessie would only like to give out pieces of cake which result in a triangle to keep consistency. The size of the pieces doesn't matter, and the whole cake does not have to be separated into all triangles (other shapes are allowed in the cake, but those will not be counted). Bessie has already chosen $$$x$$$ of those vertices that can be used to form diagonals. She wants you to choose no more than $$$y$$$ other vertices such that the number of triangular pieces of cake she can give out is maximized.What is the maximum number of triangular pieces of cake Bessie can give out?"
  },
  {
    "title": "Bessie and MEX",
    "url": "https://codeforces.com/problemset/problem/1942/B",
    "description": "MOOO! - Doja Cat⠀Farmer John has a permutation $$$p_1, p_2, \\ldots, p_n$$$, where every integer from $$$0$$$ to $$$n-1$$$ occurs exactly once. He gives Bessie an array $$$a$$$ of length $$$n$$$ and challenges her to construct $$$p$$$ based on $$$a$$$. The array $$$a$$$ is constructed so that $$$a_i$$$ = $$$\\texttt{MEX}(p_1, p_2, \\ldots, p_i) - p_i$$$, where the $$$\\texttt{MEX}$$$ of an array is the minimum non-negative integer that does not appear in that array. For example, $$$\\texttt{MEX}(1, 2, 3) = 0$$$ and $$$\\texttt{MEX}(3, 1, 0) = 2$$$.Help Bessie construct any valid permutation $$$p$$$ that satisfies $$$a$$$. The input is given in such a way that at least one valid $$$p$$$ exists. If there are multiple possible $$$p$$$, it is enough to print one of them."
  },
  {
    "title": "Farmer John's Challenge",
    "url": "https://codeforces.com/problemset/problem/1942/A",
    "description": "Trade Winds - Patrick Deng⠀Let's call an array $$$a$$$ sorted if $$$a_1 \\leq a_2 \\leq \\ldots \\leq a_{n - 1} \\leq a_{n}$$$.You are given two of Farmer John's favorite integers, $$$n$$$ and $$$k$$$. He challenges you to find any array $$$a_1, a_2, \\ldots, a_{n}$$$ satisfying the following requirements:  $$$1 \\leq a_i \\leq 10^9$$$ for each $$$1 \\leq i \\leq n$$$;  Out of the $$$n$$$ total cyclic shifts of $$$a$$$, exactly $$$k$$$ of them are sorted.$$$^\\dagger$$$ If there is no such array $$$a$$$, output $$$-1$$$.$$$^\\dagger$$$The $$$x$$$-th ($$$1 \\leq x \\leq n$$$) cyclic shift of the array $$$a$$$ is $$$a_x, a_{x+1} \\ldots a_n, a_1, a_2 \\ldots a_{x - 1}$$$. If $$$c_{x, i}$$$ denotes the $$$i$$$'th element of the $$$x$$$'th cyclic shift of $$$a$$$, exactly $$$k$$$ such $$$x$$$ should satisfy $$$c_{x,1} \\leq c_{x,2} \\leq \\ldots \\leq c_{x, n - 1} \\leq c_{x, n}$$$.For example, the cyclic shifts for $$$a = [1, 2, 3, 3]$$$ are the following:  $$$x = 1$$$: $$$[1, 2, 3, 3]$$$ (sorted);  $$$x = 2$$$: $$$[2, 3, 3, 1]$$$ (not sorted);  $$$x = 3$$$: $$$[3, 3, 1, 2]$$$ (not sorted);  $$$x = 4$$$: $$$[3, 1, 2, 3]$$$ (not sorted). "
  },
  {
    "title": "Rudolf and Subway",
    "url": "https://codeforces.com/problemset/problem/1941/G",
    "description": "Building bridges did not help Bernard, and he continued to be late everywhere. Then Rudolf decided to teach him how to use the subway.Rudolf depicted the subway map as an undirected connected graph, without self-loops, where the vertices represent stations. There is at most one edge between any pair of vertices.Two vertices are connected by an edge if it is possible to travel directly between the corresponding stations, bypassing other stations. The subway in the city where Rudolf and Bernard live has a color notation. This means that any edge between stations has a specific color. Edges of a specific color together form a subway line. A subway line cannot contain unconnected edges and forms a connected subgraph of the given subway graph.An example of the subway map is shown in the figure.   Rudolf claims that the route will be optimal if it passes through the minimum number of subway lines.Help Bernard determine this minimum number for the given departure and destination stations."
  },
  {
    "title": "Rudolf and Imbalance",
    "url": "https://codeforces.com/problemset/problem/1941/F",
    "description": "Rudolf has prepared a set of $$$n$$$ problems with complexities $$$a_1 < a_2 < a_3 < \\dots < a_n$$$. He is not entirely satisfied with the balance, so he wants to add at most one problem to fix it.For this, Rudolf came up with $$$m$$$ models of problems and $$$k$$$ functions. The complexity of the $$$i$$$-th model is $$$d_i$$$, and the complexity of the $$$j$$$-th function is $$$f_j$$$. To create a problem, he selects values $$$i$$$ and $$$j$$$ ($$$1 \\le i \\le m$$$, $$$1 \\le j \\le k$$$) and by combining the $$$i$$$-th model with the $$$j$$$-th function, he obtains a new problem with complexity $$$d_i + f_j$$$ (a new element is inserted into the array $$$a$$$).To determine the imbalance of the set, Rudolf sorts the complexities of the problems in ascending order and finds the largest value of $$$a_i - a_{i - 1}$$$ ($$$i > 1$$$).What is the minimum value of imbalance that Rudolf can achieve by adding at most one problem, created according to the described rules?"
  },
  {
    "title": "Rudolf and k Bridges",
    "url": "https://codeforces.com/problemset/problem/1941/E",
    "description": "Bernard loves visiting Rudolf, but he is always running late. The problem is that Bernard has to cross the river on a ferry. Rudolf decided to help his friend solve this problem.The river is a grid of $$$n$$$ rows and $$$m$$$ columns. The intersection of the $$$i$$$-th row and the $$$j$$$-th column contains the number $$$a_{i,j}$$$ — the depth in the corresponding cell. All cells in the first and last columns correspond to the river banks, so the depth for them is $$$0$$$.  The river may look like this. Rudolf can choose the row $$$(i,1), (i,2), \\ldots, (i,m)$$$ and build a bridge over it. In each cell of the row, he can install a support for the bridge. The cost of installing a support in the cell $$$(i,j)$$$ is $$$a_{i,j}+1$$$. Supports must be installed so that the following conditions are met:  A support must be installed in cell $$$(i,1)$$$;  A support must be installed in cell $$$(i,m)$$$;  The distance between any pair of adjacent supports must be no more than $$$d$$$. The distance between supports $$$(i, j_1)$$$ and $$$(i, j_2)$$$ is $$$|j_1 - j_2| - 1$$$. Building just one bridge is boring. Therefore, Rudolf decided to build $$$k$$$ bridges on consecutive rows of the river, that is, to choose some $$$i$$$ ($$$1 \\le i \\le n - k + 1$$$) and independently build a bridge on each of the rows $$$i, i + 1, \\ldots, i + k - 1$$$. Help Rudolf minimize the total cost of installing supports."
  },
  {
    "title": "Rudolf and the Ball Game",
    "url": "https://codeforces.com/problemset/problem/1941/D",
    "description": "Rudolf and Bernard decided to play a game with their friends. nn people stand in a circle and start throwing a ball to each other. They are numbered from 11 to nn in the clockwise order.Let's call a transition a movement of the ball from one player to his neighbor. The transition can be made clockwise or counterclockwise.Let's call the clockwise (counterclockwise) distance from player y1y_1 to player y2y_2 the number of transitions clockwise (counterclockwise) that need to be made to move from player y1y_1 to player y2y_2. For example, if n=7n=7 then the clockwise distance from 22 to 55 is 33, and the counterclockwise distance from 22 to 55 is 44.Initially, the ball is with the player number xx (players are numbered clockwise). On the ii-th move the person with the ball throws it at a distance of rir_i (1≤ri≤n−11 \\le r_i \\le n - 1) clockwise or counterclockwise. For example, if there are 77 players, and the 22nd player, after receiving the ball, throws it a distance of 55, then the ball will be caught by either the 77th player (throwing clockwise) or the 44th player (throwing counterclockwise). An illustration of this example is shown below.  The game was interrupted after mm throws due to unexpected rain. When the rain stopped, the guys gathered again to continue. However, no one could remember who had the ball. As it turned out, Bernard remembered the distances for each of the throws and the direction for some of the throws (clockwise or counterclockwise).Rudolf asks you to help him and based on the information from Bernard, calculate the numbers of the players who could have the ball after mm throws."
  },
  {
    "title": "Rudolf and the Ugly String",
    "url": "https://codeforces.com/problemset/problem/1941/C",
    "description": "Rudolf has a string $$$s$$$ of length $$$n$$$. Rudolf considers the string $$$s$$$ to be ugly if it contains the substring$$$^\\dagger$$$ \"pie\" or the substring \"map\", otherwise the string $$$s$$$ will be considered beautiful.For example, \"ppiee\", \"mmap\", \"dfpiefghmap\" are ugly strings, while \"mathp\", \"ppiiee\" are beautiful strings.Rudolf wants to shorten the string $$$s$$$ by removing some characters to make it beautiful.The main character doesn't like to strain, so he asks you to make the string beautiful by removing the minimum number of characters. He can remove characters from any positions in the string (not just from the beginning or end of the string).$$$^\\dagger$$$ String $$$a$$$ is a substring of $$$b$$$ if there exists a consecutive segment of characters in string $$$b$$$ equal to $$$a$$$."
  },
  {
    "title": "Rudolf and 121",
    "url": "https://codeforces.com/problemset/problem/1941/B",
    "description": "Rudolf has an array $$$a$$$ of $$$n$$$ integers, the elements are numbered from $$$1$$$ to $$$n$$$.In one operation, he can choose an index $$$i$$$ ($$$2 \\le i \\le n - 1$$$) and assign:  $$$a_{i - 1} = a_{i - 1} - 1$$$  $$$a_i = a_i - 2$$$  $$$a_{i + 1} = a_{i + 1} - 1$$$ Rudolf can apply this operation any number of times. Any index $$$i$$$ can be used zero or more times.Can he make all the elements of the array equal to zero using this operation?"
  },
  {
    "title": "Rudolf and the Ticket",
    "url": "https://codeforces.com/problemset/problem/1941/A",
    "description": "Rudolf is going to visit Bernard, and he decided to take the metro to get to him. The ticket can be purchased at a machine that accepts exactly two coins, the sum of which does not exceed $$$k$$$.Rudolf has two pockets with coins. In the left pocket, there are $$$n$$$ coins with denominations $$$b_1, b_2, \\dots, b_n$$$. In the right pocket, there are $$$m$$$ coins with denominations $$$c_1, c_2, \\dots, c_m$$$. He wants to choose exactly one coin from the left pocket and exactly one coin from the right pocket (two coins in total).Help Rudolf determine how many ways there are to select indices $$$f$$$ and $$$s$$$ such that $$$b_f + c_s \\le k$$$."
  },
  {
    "title": "Binary Path",
    "url": "https://codeforces.com/problemset/problem/1937/B",
    "description": "You are given a $$$2 \\times n$$$ grid filled with zeros and ones. Let the number at the intersection of the $$$i$$$-th row and the $$$j$$$-th column be $$$a_{ij}$$$.There is a grasshopper at the top-left cell $$$(1, 1)$$$ that can only jump one cell right or downwards. It wants to reach the bottom-right cell $$$(2, n)$$$. Consider the binary string of length $$$n+1$$$ consisting of numbers written in cells of the path without changing their order.Your goal is to:   Find the lexicographically smallest$$$^\\dagger$$$ string you can attain by choosing any available path;  Find the number of paths that yield this lexicographically smallest string. $$$^\\dagger$$$ If two strings $$$s$$$ and $$$t$$$ have the same length, then $$$s$$$ is lexicographically smaller than $$$t$$$ if and only if in the first position where $$$s$$$ and $$$t$$$ differ, the string $$$s$$$ has a smaller element than the corresponding element in $$$t$$$."
  },
  {
    "title": "Shuffle Party",
    "url": "https://codeforces.com/problemset/problem/1937/A",
    "description": "You are given an array $$$a_1, a_2, \\ldots, a_n$$$. Initially, $$$a_i=i$$$ for each $$$1 \\le i \\le n$$$.The operation $$$\\texttt{swap}(k)$$$ for an integer $$$k \\ge 2$$$ is defined as follows:   Let $$$d$$$ be the largest divisor$$$^\\dagger$$$ of $$$k$$$ which is not equal to $$$k$$$ itself. Then swap the elements $$$a_d$$$ and $$$a_k$$$. Suppose you perform $$$\\texttt{swap}(i)$$$ for each $$$i=2,3,\\ldots, n$$$ in this exact order. Find the position of $$$1$$$ in the resulting array. In other words, find such $$$j$$$ that $$$a_j = 1$$$ after performing these operations.$$$^\\dagger$$$ An integer $$$x$$$ is a divisor of $$$y$$$ if there exists an integer $$$z$$$ such that $$$y = x \\cdot z$$$."
  },
  {
    "title": "Grand Finale: Circles",
    "url": "https://codeforces.com/problemset/problem/1936/F",
    "description": "You are given $$$n$$$ circles on the plane. The $$$i$$$-th of these circles is given by a tuple of integers $$$(x_i, y_i, r_i)$$$, where $$$(x_i, y_i)$$$ are the coordinates of its center, and $$$r_i$$$ is the radius of the circle.Please find a circle $$$C$$$ which meets the following conditions:  $$$C$$$ is contained inside all $$$n$$$ circles given in the input.  Among all circles $$$C$$$ that meet the first condition, the radius of the circle is maximum. Let the largest suitable circle have the radius of $$$a$$$.Your output $$$C$$$, described as $$$(x,y,r)$$$, will be accepted if it meets the following conditions:  For each $$$i$$$, $$$\\sqrt{(x_i-x)^2+(y_i-y)^2}+ r \\le r_i+\\max(a,1)\\cdot 10^{-7}$$$.  The absolute or relative error of $$$r$$$ does not exceed $$$10^{-7}$$$. Formally, your answer is accepted if and only if $$$\\frac{\\left|r - a\\right|}{\\max(1, a)} \\le 10^{-7}$$$. "
  },
  {
    "title": "Yet Yet Another Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1936/E",
    "description": "You are given a permutation $$$p$$$ of length $$$n$$$.Please count the number of permutations $$$q$$$ of length $$$n$$$ which satisfy the following: for each $$$1 \\le i < n$$$, $$$\\max(q_1,\\ldots,q_i) \\neq \\max(p_1,\\ldots,p_i)$$$.Since the answer may be large, output the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Bitwise Paradox",
    "url": "https://codeforces.com/problemset/problem/1936/D",
    "description": "You are given two arrays $$$a$$$ and $$$b$$$ of size $$$n$$$ along with a fixed integer $$$v$$$.An interval $$$[l, r]$$$ is called a good interval if $$$(b_l \\mid b_{l+1} \\mid \\ldots \\mid b_r) \\ge v$$$, where $$$|$$$ denotes the bitwise OR operation. The beauty of a good interval is defined as $$$\\max(a_l, a_{l+1}, \\ldots, a_r)$$$.You are given $$$q$$$ queries of two types:  \"1 i x\": assign $$$b_i := x$$$;  \"2 l r\": find the minimum beauty among all good intervals $$$[l_0,r_0]$$$ satisfying $$$l \\le l_0 \\le r_0 \\le r$$$. If there is no suitable good interval, output $$$-1$$$ instead. Please process all queries."
  },
  {
    "title": "Pokémon Arena",
    "url": "https://codeforces.com/problemset/problem/1936/C",
    "description": "You are at a dueling arena. You also possess $$$n$$$ Pokémons. Initially, only the $$$1$$$-st Pokémon is standing in the arena.Each Pokémon has $$$m$$$ attributes. The $$$j$$$-th attribute of the $$$i$$$-th Pokémon is $$$a_{i,j}$$$. Each Pokémon also has a cost to be hired: the $$$i$$$-th Pokémon's cost is $$$c_i$$$.You want to have the $$$n$$$-th Pokémon stand in the arena. To do that, you can perform the following two types of operations any number of times in any order:   Choose three integers $$$i$$$, $$$j$$$, $$$k$$$ ($$$1 \\le i \\le n$$$, $$$1 \\le j \\le m$$$, $$$k > 0$$$), increase $$$a_{i,j}$$$ by $$$k$$$ permanently. The cost of this operation is $$$k$$$.  Choose two integers $$$i$$$, $$$j$$$ ($$$1 \\le i \\le n$$$, $$$1 \\le j \\le m$$$) and hire the $$$i$$$-th Pokémon to duel with the current Pokémon in the arena based on the $$$j$$$-th attribute. The $$$i$$$-th Pokémon will win if $$$a_{i,j}$$$ is greater than or equal to the $$$j$$$-th attribute of the current Pokémon in the arena (otherwise, it will lose). After the duel, only the winner will stand in the arena. The cost of this operation is $$$c_i$$$. Find the minimum cost you need to pay to have the $$$n$$$-th Pokémon stand in the arena."
  },
  {
    "title": "Pinball",
    "url": "https://codeforces.com/problemset/problem/1936/B",
    "description": "There is a one-dimensional grid of length $$$n$$$. The $$$i$$$-th cell of the grid contains a character $$$s_i$$$, which is either '<' or '>'.When a pinball is placed on one of the cells, it moves according to the following rules:   If the pinball is on the $$$i$$$-th cell and $$$s_i$$$ is '<', the pinball moves one cell to the left in the next second. If $$$s_i$$$ is '>', it moves one cell to the right.  After the pinball has moved, the character $$$s_i$$$ is inverted (i. e. if $$$s_i$$$ used to be '<', it becomes '>', and vice versa).  The pinball stops moving when it leaves the grid: either from the left border or from the right one. You need to answer $$$n$$$ independent queries. In the $$$i$$$-th query, a pinball will be placed on the $$$i$$$-th cell. Note that we always place a pinball on the initial grid.For each query, calculate how many seconds it takes the pinball to leave the grid. It can be shown that the pinball will always leave the grid within a finite number of steps."
  },
  {
    "title": "Bitwise Operation Wizard",
    "url": "https://codeforces.com/problemset/problem/1936/A",
    "description": "This is an interactive problem.There is a secret sequence $$$p_0, p_1, \\ldots, p_{n-1}$$$, which is a permutation of $$$\\{0,1,\\ldots,n-1\\}$$$.You need to find any two indices $$$i$$$ and $$$j$$$ such that $$$p_i \\oplus p_j$$$ is maximized, where $$$\\oplus$$$ denotes the bitwise XOR operation.To do this, you can ask queries. Each query has the following form: you pick arbitrary indices $$$a$$$, $$$b$$$, $$$c$$$, and $$$d$$$ ($$$0 \\le a,b,c,d < n$$$). Next, the jury calculates $$$x = (p_a \\mid p_b)$$$ and $$$y = (p_c \\mid p_d)$$$, where $$$|$$$ denotes the bitwise OR operation. Finally, you receive the result of comparison between $$$x$$$ and $$$y$$$. In other words, you are told if $$$x < y$$$, $$$x > y$$$, or $$$x = y$$$.Please find any two indices $$$i$$$ and $$$j$$$ ($$$0 \\le i,j < n$$$) such that $$$p_i \\oplus p_j$$$ is maximum among all such pairs, using at most $$$3n$$$ queries. If there are multiple pairs of indices satisfying the condition, you may output any one of them."
  },
  {
    "title": "Andrey's Tree",
    "url": "https://codeforces.com/problemset/problem/1935/F",
    "description": "Master Andrey loves trees$$$^{\\dagger}$$$ very much, so he has a tree consisting of $$$n$$$ vertices.But it's not that simple. Master Timofey decided to steal one vertex from the tree. If Timofey stole vertex $$$v$$$ from the tree, then vertex $$$v$$$ and all edges with one end at vertex $$$v$$$ are removed from the tree, while the numbers of other vertices remain unchanged. To prevent Andrey from getting upset, Timofey decided to make the resulting graph a tree again. To do this, he can add edges between any vertices $$$a$$$ and $$$b$$$, but when adding such an edge, he must pay $$$|a - b|$$$ coins to the Master's Assistance Center.Note that the resulting tree does not contain vertex $$$v$$$.Timofey has not yet decided which vertex $$$v$$$ he will remove from the tree, so he wants to know for each vertex $$$1 \\leq v \\leq n$$$, the minimum number of coins needed to be spent to make the graph a tree again after removing vertex $$$v$$$, as well as which edges need to be added.$$$^{\\dagger}$$$A tree is an undirected connected graph without cycles."
  },
  {
    "title": "Distance Learning Courses in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/E",
    "description": "The New Year has arrived in the Master's Assistance Center, which means it's time to introduce a new feature!Now students are given distance learning courses, with a total of $$$n$$$ courses available. For the $$$i$$$-th distance learning course, a student can receive a grade ranging from $$$x_i$$$ to $$$y_i$$$.However, not all courses may be available to each student. Specifically, the $$$j$$$-th student is only given courses with numbers from $$$l_j$$$ to $$$r_j$$$, meaning the distance learning courses with numbers $$$l_j, l_j + 1, \\ldots, r_j$$$.The creators of the distance learning courses have decided to determine the final grade in a special way. Let the $$$j$$$-th student receive grades $$$c_{l_j}, c_{l_j + 1}, \\ldots, c_{r_j}$$$ for their distance learning courses. Then their final grade will be equal to $$$c_{l_j}$$$ $$$|$$$ $$$c_{l_j + 1}$$$ $$$|$$$ $$$\\ldots$$$ $$$|$$$ $$$c_{r_j}$$$, where $$$|$$$ denotes the bitwise OR operation.Since the chatbot for solving distance learning courses is broken, the students have asked for your help. For each of the $$$q$$$ students, tell them the maximum final grade they can achieve."
  },
  {
    "title": "Exam in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/D",
    "description": "The Master's Assistance Center has announced an entrance exam, which consists of the following.The candidate is given a set $$$s$$$ of size $$$n$$$ and some strange integer $$$c$$$. For this set, it is needed to calculate the number of pairs of integers $$$(x, y)$$$ such that $$$0 \\leq x \\leq y \\leq c$$$, $$$x + y$$$ is not contained in the set $$$s$$$, and also $$$y - x$$$ is not contained in the set $$$s$$$.Your friend wants to enter the Center. Help him pass the exam!"
  },
  {
    "title": "Messenger in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/C",
    "description": "In the new messenger for the students of the Master's Assistance Center, Keftemerum, an update is planned, in which developers want to optimize the set of messages shown to the user. There are a total of $$$n$$$ messages. Each message is characterized by two integers $$$a_i$$$ and $$$b_i$$$. The time spent reading the set of messages with numbers $$$p_1, p_2, \\ldots, p_k$$$ ($$$1 \\le p_i \\le n$$$, all $$$p_i$$$ are distinct) is calculated by the formula:$$$$$$\\Large \\sum_{i=1}^{k} a_{p_i} + \\sum_{i=1}^{k - 1} |b_{p_i} - b_{p_{i+1}}|$$$$$$Note that the time to read a set of messages consisting of one message with number $$$p_1$$$ is equal to $$$a_{p_1}$$$. Also, the time to read an empty set of messages is considered to be $$$0$$$.The user can determine the time $$$l$$$ that he is willing to spend in the messenger. The messenger must inform the user of the maximum possible size of the set of messages, the reading time of which does not exceed $$$l$$$. Note that the maximum size of the set of messages can be equal to $$$0$$$.The developers of the popular messenger failed to implement this function, so they asked you to solve this problem."
  },
  {
    "title": "Informatics in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/B",
    "description": "In the Master's Assistance Center, Nyam-Nyam was given a homework assignment in informatics.There is an array $$$a$$$ of length $$$n$$$, and you want to divide it into $$$k > 1$$$ subsegments$$$^{\\dagger}$$$ in such a way that the $$$\\operatorname{MEX} ^{\\ddagger}$$$ on each subsegment is equal to the same integer.Help Nyam-Nyam find any suitable division, or determine that it does not exist.$$$^{\\dagger}$$$A division of an array into $$$k$$$ subsegments is defined as $$$k$$$ pairs of integers $$$(l_1, r_1), (l_2, r_2), \\ldots, (l_k, r_k)$$$ such that $$$l_i \\le r_i$$$ and for each $$$1 \\le j \\le k - 1$$$, $$$l_{j + 1} = r_j + 1$$$, and also $$$l_1 = 1$$$ and $$$r_k = n$$$. These pairs represent the subsegments themselves.$$$^{\\ddagger}\\operatorname{MEX}$$$ of an array is the smallest non-negative integer that does not belong to the array.For example:   $$$\\operatorname{MEX}$$$ of the array $$$[2, 2, 1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  $$$\\operatorname{MEX}$$$ of the array $$$[3, 1, 0, 1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  $$$\\operatorname{MEX}$$$ of the array $$$[0, 3, 1, 2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Entertainment in MAC",
    "url": "https://codeforces.com/problemset/problem/1935/A",
    "description": "Congratulations, you have been accepted to the Master's Assistance Center! However, you were extremely bored in class and got tired of doing nothing, so you came up with a game for yourself.You are given a string $$$s$$$ and an even integer $$$n$$$. There are two types of operations that you can apply to it:  Add the reversed string $$$s$$$ to the end of the string $$$s$$$ (for example, if $$$s = $$$ cpm, then after applying the operation $$$s = $$$ cpmmpc).  Reverse the current string $$$s$$$ (for example, if $$$s = $$$ cpm, then after applying the operation $$$s = $$$ mpc). It is required to determine the lexicographically smallest$$$^{\\dagger}$$$ string that can be obtained after applying exactly $$$n$$$ operations. Note that you can apply operations of different types in any order, but you must apply exactly $$$n$$$ operations in total.$$$^{\\dagger}$$$A string $$$a$$$ is lexicographically smaller than a string $$$b$$$ if and only if one of the following holds:   $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$;  in the first position where $$$a$$$ and $$$b$$$ differ, the string $$$a$$$ has a letter that appears earlier in the alphabet than the corresponding letter in $$$b$$$. "
  },
  {
    "title": "Weird LCM Operations",
    "url": "https://codeforces.com/problemset/problem/1934/E",
    "description": "Given an integer $$$n$$$, you construct an array $$$a$$$ of $$$n$$$ integers, where $$$a_i = i$$$ for all integers $$$i$$$ in the range $$$[1, n]$$$. An operation on this array is defined as follows:  Select three distinct indices $$$i$$$, $$$j$$$, and $$$k$$$ from the array, and let $$$x = a_i$$$, $$$y = a_j$$$, and $$$z = a_k$$$.  Update the array as follows: $$$a_i = \\operatorname{lcm}(y, z)$$$, $$$a_j = \\operatorname{lcm}(x, z)$$$, and $$$a_k = \\operatorname{lcm}(x, y)$$$, where $$$\\operatorname{lcm}$$$ represents the least common multiple.  Your task is to provide a possible sequence of operations, containing at most $$$\\lfloor \\frac{n}{6} \\rfloor + 5$$$ operations such that after executing these operations, if you create a set containing the greatest common divisors (GCDs) of all subsequences with a size greater than $$$1$$$, then all numbers from $$$1$$$ to $$$n$$$ should be present in this set.After all the operations $$$a_i \\le 10^{18}$$$ should hold for all $$$1 \\le i \\le n$$$.We can show that an answer always exists."
  },
  {
    "title": "XOR Break — Game Version",
    "url": "https://codeforces.com/problemset/problem/1934/D2",
    "description": "This is an interactive problem.This is the game version of the problem. Note that the solution of this problem may or may not share ideas with the solution of the solo version. You can solve and get points for both versions independently.Alice and Bob are playing a game. The game starts with a positive integer $$$n$$$, with players taking turns. On each turn of the game, the following sequence of events takes place:  The player having the integer $$$p$$$ breaks it into two integers $$$p_{1}$$$ and $$$p_{2}$$$, where $$$0 \\lt p_{1} \\lt p$$$, $$$0 \\lt p_{2} \\lt p$$$ and $$$p_{1} \\oplus p_{2} = p$$$.  If no such $$$p_{1}$$$, $$$p_{2}$$$ exist, the player loses.  Otherwise, the opponent does either select the integer $$$p_{1}$$$ or $$$p_{2}$$$.  The game continues with the selected integer. The opponent will try to break it. As Alice, your goal is to win. You can execute a maximum of $$$63$$$ break operations. You have the choice to play first or second. The system will act for Bob.Here $$$\\oplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "XOR Break — Solo Version",
    "url": "https://codeforces.com/problemset/problem/1934/D1",
    "description": "This is the solo version of the problem. Note that the solution of this problem may or may not share ideas with the solution of the game version. You can solve and get points for both versions independently.You can make hacks only if both versions of the problem are solved.Given an integer variable $$$x$$$ with the initial value of $$$n$$$. A single break operation consists of the following steps:   Choose a value $$$y$$$ such that $$$0 \\lt y \\lt x$$$ and $$$0 \\lt (x \\oplus y) \\lt x$$$.  Update $$$x$$$ by either setting $$$x = y$$$ or setting $$$x = x \\oplus y$$$.  Determine whether it is possible to transform $$$x$$$ into $$$m$$$ using a maximum of $$$63$$$ break operations. If it is, provide the sequence of operations required to achieve $$$x = m$$$.You don't need to minimize the number of operations.Here $$$\\oplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "Find a Mine",
    "url": "https://codeforces.com/problemset/problem/1934/C",
    "description": "This is an interactive problem.You are given a grid with $$$n$$$ rows and $$$m$$$ columns. The coordinates $$$(x, y)$$$ represent the cell on the grid, where $$$x$$$ ($$$1 \\leq x \\leq n$$$) is the row number counting from the top and $$$y$$$ ($$$1 \\leq y \\leq m$$$) is the column number counting from the left. It is guaranteed that there are exactly $$$2$$$ mines in the grid at distinct cells, denoted as $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$. You are allowed to make no more than $$$4$$$ queries to the interactor, and after these queries, you need to provide the location of one of the mines.In each query, you can choose any grid cell $$$(x, y)$$$, and in return, you will receive the minimum Manhattan distance from both the mines to the chosen cell, i.e., you will receive the value $$$\\min(|x-x_1|+|y-y_1|, |x-x_2|+|y-y_2|)$$$.Your task is to determine the location of one of the mines after making the queries."
  },
  {
    "title": "Yet Another Coin Problem",
    "url": "https://codeforces.com/problemset/problem/1934/B",
    "description": "You have $$$5$$$ different types of coins, each with a value equal to one of the first $$$5$$$ triangular numbers: $$$1$$$, $$$3$$$, $$$6$$$, $$$10$$$, and $$$15$$$. These coin types are available in abundance. Your goal is to find the minimum number of these coins required such that their total value sums up to exactly $$$n$$$.We can show that the answer always exists."
  },
  {
    "title": "Too Min Too Max",
    "url": "https://codeforces.com/problemset/problem/1934/A",
    "description": "Given an array aa of nn elements, find the maximum value of the expression:|ai−aj|+|aj−ak|+|ak−al|+|al−ai||a_i - a_j| + |a_j - a_k| + |a_k - a_l| + |a_l - a_i|where ii, jj, kk, and ll are four distinct indices of the array aa, with 1≤i,j,k,l≤n1 \\le i, j, k, l \\le n.Here |x||x| denotes the absolute value of xx."
  },
  {
    "title": "Turtle Magic: Royal Turtle Shell Pattern",
    "url": "https://codeforces.com/problemset/problem/1933/G",
    "description": "Turtle Alice is currently designing a fortune cookie box, and she would like to incorporate the theory of LuoShu into it.The box can be seen as an $$$n \\times m$$$ grid ($$$n, m \\ge 5$$$), where the rows are numbered $$$1, 2, \\dots, n$$$ and columns are numbered $$$1, 2, \\dots, m$$$. Each cell can either be empty or have a single fortune cookie of one of the following shapes: circle or square. The cell at the intersection of the $$$a$$$-th row and the $$$b$$$-th column is denoted as $$$(a, b)$$$.Initially, the entire grid is empty. Then, Alice performs $$$q$$$ operations on the fortune cookie box. The $$$i$$$-th operation ($$$1 \\le i \\le q$$$) is as follows: specify a currently empty cell $$$(r_i,c_i)$$$ and a shape (circle or square), then put a fortune cookie of the specified shape on cell $$$(r_i,c_i)$$$. Note that after the $$$i$$$-th operation, the cell $$$(r_i,c_i)$$$ is no longer empty.Before all operations and after each of the $$$q$$$ operations, Alice wonders what the number of ways to place fortune cookies in all remaining empty cells is, such that the following condition is satisfied:No three consecutive cells (in horizontal, vertical, and both diagonal directions) contain cookies of the same shape. Formally:  There does not exist any $$$(i,j)$$$ satisfying $$$1 \\le i \\le n, 1 \\le j \\le m-2$$$, such that there are cookies of the same shape in cells $$$(i,j), (i,j+1), (i,j+2)$$$.  There does not exist any $$$(i,j)$$$ satisfying $$$1 \\le i \\le n-2, 1 \\le j \\le m$$$, such that there are cookies of the same shape in cells $$$(i,j), (i+1,j), (i+2,j)$$$.  There does not exist any $$$(i,j)$$$ satisfying $$$1 \\le i \\le n-2, 1 \\le j \\le m-2$$$, such that there are cookies of the same shape in cells $$$(i,j), (i+1,j+1), (i+2,j+2)$$$.  There does not exist any $$$(i,j)$$$ satisfying $$$1 \\le i \\le n-2, 1 \\le j \\le m-2$$$, such that there are cookies of the same shape in cells $$$(i,j+2), (i+1,j+1), (i+2,j)$$$. You should output all answers modulo $$$998\\,244\\,353$$$. Also note that it is possible that after some operations, the condition is already not satisfied with the already placed candies, in this case you should output $$$0$$$."
  },
  {
    "title": "Turtle Mission: Robot and the Earthquake",
    "url": "https://codeforces.com/problemset/problem/1933/F",
    "description": "The world is a grid with nn rows and mm columns. The rows are numbered 0,1,…,n−10, 1, \\ldots, n-1, while the columns are numbered 0,1,…,m−10, 1, \\ldots, m-1. In this world, the columns are cyclic (i.e. the top and the bottom cells in each column are adjacent). The cell on the ii-th row and the jj-th column (0≤i<n,0≤j<m0 \\le i < n, 0 \\le j < m) is denoted as (i,j)(i,j). At time 00, the cell (i,j)(i,j) (where 0≤i<n,0≤j<m0 \\le i < n, 0 \\le j < m) contains either a rock or nothing. The state of cell (i,j)(i,j) can be described using the integer ai,ja_{i,j}:   If ai,j=1a_{i,j} = 1, there is a rock at (i,j)(i,j).  If ai,j=0a_{i,j} = 0, there is nothing at (i,j)(i,j). As a result of aftershocks from the earthquake, the columns follow tectonic plate movements: each column moves cyclically upwards at a velocity of 11 cell per unit of time. Formally, for some 0≤i<n,0≤j<m0 \\le i < n, 0 \\le j < m, if (i,j)(i,j) contains a rock at the moment, it will move from (i,j)(i, j) to (i−1,j)(i - 1, j) (or to (n−1,j)(n - 1, j) if i=0i=0). The robot called RT is initially positioned at (0,0)(0,0). It has to go to (n−1,m−1)(n-1,m-1) to carry out an earthquake rescue operation (to the bottom rightmost cell). The earthquake doesn't change the position of the robot, they only change the position of rocks in the world.Let RT's current position be (x,y)(x,y) (0≤x<n,0≤y<m0 \\le x < n, 0 \\le y < m), it can perform the following operations:   Go one cell cyclically upwards, i.e. from (x,y)(x,y) to ((x+n−1)modn,y)((x+n-1) \\bmod n, y) using 11 unit of time.  Go one cell cyclically downwards, i.e. (x,y)(x,y) to ((x+1)modn,y)((x+1) \\bmod n, y) using 11 unit of time.  Go one cell to the right, i.e. (x,y)(x,y) to (x,y+1)(x, y+1) using 11 unit of time. (RT may perform this operation only if y<m−1y < m-1.) Note that RT cannot go left using the operations nor can he stay at a position.Unfortunately, RT will explode upon colliding with a rock. As such, when RT is at (x,y)(x,y) and there is a rock at ((x+1)modn,y)((x+1) \\bmod n, y) or ((x+2)modn,y)((x+2) \\bmod n, y), RT cannot move down or it will be hit by the rock.   Similarly, if y+1<my+1 < m and there is a rock at ((x+1)modn,y+1)((x+1) \\bmod n, y+1), RT cannot move right or it will be hit by the rock.  However, it is worth noting that if there is a rock at (xmodn,y+1)(x \\bmod n, y+1) and ((x+1)modn,y)((x+1) \\bmod n, y), RT can still move right safely.  Find the minimum amount of time RT needs to reach (n−1,m−1)(n-1,m-1) without colliding with any rocks. If it is impossible to do so, output −1-1."
  },
  {
    "title": "Turtle vs",
    "url": "https://codeforces.com/problemset/problem/1933/E",
    "description": "Isaac begins his training. There are $$$n$$$ running tracks available, and the $$$i$$$-th track ($$$1 \\le i \\le n$$$) consists of $$$a_i$$$ equal-length sections. Given an integer $$$u$$$ ($$$1 \\le u \\le 10^9$$$), finishing each section can increase Isaac's ability by a certain value, described as follows:   Finishing the $$$1$$$-st section increases Isaac's performance by $$$u$$$.  Finishing the $$$2$$$-nd section increases Isaac's performance by $$$u-1$$$.  Finishing the $$$3$$$-rd section increases Isaac's performance by $$$u-2$$$.  $$$\\ldots$$$  Finishing the $$$k$$$-th section ($$$k \\ge 1$$$) increases Isaac's performance by $$$u+1-k$$$. (The value $$$u+1-k$$$ can be negative, which means finishing an extra section decreases Isaac's performance.)  You are also given an integer $$$l$$$. You must choose an integer $$$r$$$ such that $$$l \\le r \\le n$$$ and Isaac will finish each section of each track $$$l, l + 1, \\dots, r$$$ (that is, a total of $$$\\sum_{i=l}^r a_i = a_l + a_{l+1} + \\ldots + a_r$$$ sections).Answer the following question: what is the optimal $$$r$$$ you can choose that the increase in Isaac's performance is maximum possible? If there are multiple $$$r$$$ that maximize the increase in Isaac's performance, output the smallest $$$r$$$.To increase the difficulty, you need to answer the question for $$$q$$$ different values of $$$l$$$ and $$$u$$$."
  },
  {
    "title": "Turtle Tenacity: Continual Mods",
    "url": "https://codeforces.com/problemset/problem/1933/D",
    "description": "Given an array $$$a_1, a_2, \\ldots, a_n$$$, determine whether it is possible to rearrange its elements into $$$b_1, b_2, \\ldots, b_n$$$, such that $$$b_1 \\bmod b_2 \\bmod \\ldots \\bmod b_n \\neq 0$$$.Here $$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$. Also, the modulo operations are calculated from left to right. That is, $$$x \\bmod y \\bmod z = (x \\bmod y) \\bmod z$$$. For example, $$$2024 \\bmod 1000 \\bmod 8 = (2024 \\bmod 1000) \\bmod 8 = 24 \\bmod 8 = 0$$$."
  },
  {
    "title": "Turtle Fingers: Count the Values of k",
    "url": "https://codeforces.com/problemset/problem/1933/C",
    "description": "You are given three positive integers $$$a$$$, $$$b$$$ and $$$l$$$ ($$$a,b,l>0$$$). It can be shown that there always exists a way to choose non-negative (i.e. $$$\\ge 0$$$) integers $$$k$$$, $$$x$$$, and $$$y$$$ such that $$$l = k \\cdot a^x \\cdot b^y$$$. Your task is to find the number of distinct possible values of $$$k$$$ across all such ways."
  },
  {
    "title": "Turtle Math: Fast Three Task",
    "url": "https://codeforces.com/problemset/problem/1933/B",
    "description": "You are given an array $$$a_1, a_2, \\ldots, a_n$$$.In one move, you can perform either of the following two operations:  Choose an element from the array and remove it from the array. As a result, the length of the array decreases by $$$1$$$; Choose an element from the array and increase its value by $$$1$$$. You can perform any number of moves. If the current array becomes empty, then no more moves can be made.Your task is to find the minimum number of moves required to make the sum of the elements of the array $$$a$$$ divisible by $$$3$$$. It is possible that you may need $$$0$$$ moves.Note that the sum of the elements of an empty array (an array of length $$$0$$$) is equal to $$$0$$$."
  },
  {
    "title": "Turtle Puzzle: Rearrange and Negate",
    "url": "https://codeforces.com/problemset/problem/1933/A",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers. You must perform the following two operations on the array (the first, then the second):  Arbitrarily rearrange the elements of the array or leave the order of its elements unchanged.  Choose at most one contiguous segment of elements and replace the signs of all elements in this segment with their opposites. Formally, you can choose a pair of indices $$$l, r$$$ such that $$$1 \\le l \\le r \\le n$$$ and assign $$$a_i = -a_i$$$ for all $$$l \\le i \\le r$$$ (negate elements). Note that you may choose not to select a pair of indices and leave all the signs of the elements unchanged. What is the maximum sum of the array elements after performing these two operations (the first, then the second)?"
  },
  {
    "title": "Moving Platforms",
    "url": "https://codeforces.com/problemset/problem/1932/G",
    "description": "There is a game where you need to move through a labyrinth. The labyrinth consists of $$$n$$$ platforms, connected by $$$m$$$ passages. Each platform is at some level $$$l_i$$$, an integer number from $$$0$$$ to $$$H - 1$$$. In a single step, if you are currently on platform $$$i$$$, you can stay on it, or move to another platform $$$j$$$. To move to platform $$$j$$$ they have to be connected by the passage, and their levels have to be the same, namely $$$l_i = l_j$$$.After each step, the levels of all platforms change. The new level of platform $$$i$$$ is calculated as $$$l'_i = (l_i + s_i) \\bmod H$$$, for all $$$i$$$. You start on platform $$$1$$$. Find the minimum number of steps you need to get to platform $$$n$$$."
  },
  {
    "title": "Feed Cats",
    "url": "https://codeforces.com/problemset/problem/1932/F",
    "description": "There is a fun game where you need to feed cats that come and go. The level of the game consists of $$$n$$$ steps. There are $$$m$$$ cats; the cat $$$i$$$ is present in steps from $$$l_i$$$ to $$$r_i$$$, inclusive. In each step, you can feed all the cats that are currently present or do nothing. If you feed the same cat more than once, it will overeat, and you will immediately lose the game. Your goal is to feed as many cats as possible without causing any cat to overeat. Find the maximum number of cats you can feed.Formally, you need to select several integer points from the segment from $$$1$$$ to $$$n$$$ in such a way that among given segments, none covers two or more of the selected points, and as many segments as possible cover one of the selected points."
  },
  {
    "title": "Final Countdown",
    "url": "https://codeforces.com/problemset/problem/1932/E",
    "description": "You are in a nuclear laboratory that is about to explode and destroy the Earth. You must save the Earth before the final countdown reaches zero. The countdown consists of $$$n$$$ ($$$1 \\le n \\le 4 \\cdot 10^5$$$) mechanical indicators, each showing one decimal digit. You noticed that when the countdown changes its state from $$$x$$$ to $$$x-1$$$, it doesn't happen in one move. Instead, each change of a single digit takes one second. So, for example, if the countdown shows 42, then it will change to 41 in one second, because only one digit is changed, but if the countdown shows 2300, then it will change to 2299 in three seconds, because the three last digits are changed.Find out how much time is left before the countdown reaches zero."
  },
  {
    "title": "Card Game",
    "url": "https://codeforces.com/problemset/problem/1932/D",
    "description": "Two players are playing an online card game. The game is played using a 32-card deck. Each card has a suit and a rank. There are four suits: clubs, diamonds, hearts, and spades. We will encode them with characters 'C', 'D', 'H', and 'S', respectively. And there are 8 ranks, in increasing order: '2', '3', '4', '5', '6', '7', '8', '9'.Each card is denoted by two letters: its rank and its suit. For example, the 8 of Hearts is denoted as 8H.At the beginning of the game, one suit is chosen as the trump suit.In each round, players make moves like this: the first player places one of his cards on the table, and the second player must beat this card with one of their cards. After that, both cards are moved to the discard pile.A card can beat another card if both cards have the same suit and the first card has a higher rank than the second. For example, 8S can beat 4S. Additionally, a trump card can beat any non-trump card, regardless of the rank of the cards, for example, if the trump suit is clubs ('C'), then 3C can beat 9D. Note that trump cards can be beaten only by the trump cards of higher rank.There were $$$n$$$ rounds played in the game, so the discard pile now contains $$$2n$$$ cards. You want to reconstruct the rounds played in the game, but the cards in the discard pile are shuffled. Find any possible sequence of $$$n$$$ rounds that might have been played in the game."
  },
  {
    "title": "LR-remainders",
    "url": "https://codeforces.com/problemset/problem/1932/C",
    "description": "You are given an array $$$a$$$ of length $$$n$$$, a positive integer $$$m$$$, and a string of commands of length $$$n$$$. Each command is either the character 'L' or the character 'R'.Process all $$$n$$$ commands in the order they are written in the string $$$s$$$. Processing a command is done as follows:  First, output the remainder of the product of all elements of the array $$$a$$$ when divided by $$$m$$$.  Then, if the command is 'L', remove the leftmost element from the array $$$a$$$, if the command is 'R', remove the rightmost element from the array $$$a$$$. Note that after each move, the length of the array $$$a$$$ decreases by $$$1$$$, and after processing all commands, it will be empty.Write a program that will process all commands in the order they are written in the string $$$s$$$ (from left to right)."
  },
  {
    "title": "Chaya Calendar",
    "url": "https://codeforces.com/problemset/problem/1932/B",
    "description": "The Chaya tribe believes that there are $$$n$$$ signs of the apocalypse. Over time, it has been found out that the $$$i$$$-th sign occurs every $$$a_i$$$ years (in years $$$a_i$$$, $$$2 \\cdot a_i$$$, $$$3 \\cdot a_i$$$, $$$\\dots$$$).According to the legends, for the apocalypse to happen, the signs must occur sequentially. That is, first they wait for the first sign to occur, then strictly after it, the second sign will occur, and so on. That is, if the $$$i$$$-th sign occurred in the year $$$x$$$, the tribe starts waiting for the occurrence of the $$$(i+1)$$$-th sign, starting from the year $$$x+1$$$.In which year will the $$$n$$$-th sign occur and the apocalypse will happen?"
  },
  {
    "title": "Thorns and Coins",
    "url": "https://codeforces.com/problemset/problem/1932/A",
    "description": "During your journey through computer universes, you stumbled upon a very interesting world. It is a path with $$$n$$$ consecutive cells, each of which can either be empty, contain thorns, or a coin. In one move, you can move one or two cells along the path, provided that the destination cell does not contain thorns (and belongs to the path). If you move to the cell with a coin, you pick it up.    Here, green arrows correspond to legal moves, and the red arrow corresponds to an illegal move. You want to collect as many coins as possible. Find the maximum number of coins you can collect in the discovered world if you start in the leftmost cell of the path."
  },
  {
    "title": "One-Dimensional Puzzle",
    "url": "https://codeforces.com/problemset/problem/1931/G",
    "description": "You have a one-dimensional puzzle, all the elements of which need to be put in one row, connecting with each other. All the puzzle elements are completely white and distinguishable from each other only if they have different shapes. Each element has straight borders at the top and bottom, and on the left and right it has connections, each of which can be a protrusion or a recess. You cannot rotate the elements.You can see that there are exactly $$$4$$$ types of elements. Two elements can be connected if the right connection of the left element is opposite to the left connection of the right element.  All possible types of elements. The puzzle contains $$$c_1, c_2, c_3, c_4$$$ elements of each type. The puzzle is considered complete if you have managed to combine all elements into one long chain. You want to know how many ways this can be done."
  },
  {
    "title": "Chat Screenshots",
    "url": "https://codeforces.com/problemset/problem/1931/F",
    "description": "There are $$$n$$$ people in the programming contest chat. Chat participants are ordered by activity, but each person sees himself at the top of the list.For example, there are $$$4$$$ participants in the chat, and their order is $$$[2, 3, 1, 4]$$$. Then   $$$1$$$-st user sees the order $$$[1, 2, 3, 4]$$$.  $$$2$$$-nd user sees the order $$$[2, 3, 1, 4]$$$.  $$$3$$$-rd user sees the order $$$[3, 2, 1, 4]$$$.  $$$4$$$-th user sees the order $$$[4, 2, 3, 1]$$$. $$$k$$$ people posted screenshots in the chat, which show the order of participants shown to this user. The screenshots were taken within a short period of time, and the order of participants has not changed. Your task is to determine whether there is a certain order that all screenshots correspond to."
  },
  {
    "title": "Anna and the Valentine's Day Gift",
    "url": "https://codeforces.com/problemset/problem/1931/E",
    "description": "Sasha gave Anna a list $$$a$$$ of $$$n$$$ integers for Valentine's Day. Anna doesn't need this list, so she suggests destroying it by playing a game.Players take turns. Sasha is a gentleman, so he gives Anna the right to make the first move. On her turn, Anna must choose an element $$$a_i$$$ from the list and reverse the sequence of its digits. For example, if Anna chose the element with a value of $$$42$$$, it would become $$$24$$$; if Anna chose the element with a value of $$$1580$$$, it would become $$$851$$$. Note that leading zeros are removed. After such a turn, the number of elements in the list does not change. On his turn, Sasha must extract two elements $$$a_i$$$ and $$$a_j$$$ ($$$i \\ne j$$$) from the list, concatenate them in any order and insert the result back into the list. For example, if Sasha chose the elements equal to $$$2007$$$ and $$$19$$$, he would remove these two elements from the list and add the integer $$$200719$$$ or $$$192007$$$. After such a turn, the number of elements in the list decreases by $$$1$$$.Players can't skip turns. The game ends when Sasha can't make a move, i.e. after Anna's move there is exactly one number left in the list. If this integer is not less than $$$10^m$$$ (i.e., $$$\\ge 10^m$$$), Sasha wins. Otherwise, Anna wins.It can be shown that the game will always end. Determine who will win if both players play optimally."
  },
  {
    "title": "Divisible Pairs",
    "url": "https://codeforces.com/problemset/problem/1931/D",
    "description": "Polycarp has two favorite integers $$$x$$$ and $$$y$$$ (they can be equal), and he has found an array $$$a$$$ of length $$$n$$$.Polycarp considers a pair of indices $$$\\langle i, j \\rangle$$$ ($$$1 \\le i < j \\le n$$$) beautiful if:   $$$a_i + a_j$$$ is divisible by $$$x$$$;  $$$a_i - a_j$$$ is divisible by $$$y$$$. For example, if $$$x=5$$$, $$$y=2$$$, $$$n=6$$$, $$$a=$$$[$$$1, 2, 7, 4, 9, 6$$$], then the only beautiful pairs are:   $$$\\langle 1, 5 \\rangle$$$: $$$a_1 + a_5 = 1 + 9 = 10$$$ ($$$10$$$ is divisible by $$$5$$$) and $$$a_1 - a_5 = 1 - 9 = -8$$$ ($$$-8$$$ is divisible by $$$2$$$);  $$$\\langle 4, 6 \\rangle$$$: $$$a_4 + a_6 = 4 + 6 = 10$$$ ($$$10$$$ is divisible by $$$5$$$) and $$$a_4 - a_6 = 4 - 6 = -2$$$ ($$$-2$$$ is divisible by $$$2$$$).  Find the number of beautiful pairs in the array $$$a$$$."
  },
  {
    "title": "Make Equal Again",
    "url": "https://codeforces.com/problemset/problem/1931/C",
    "description": "You have an array $$$a$$$ of $$$n$$$ integers. You can no more than once apply the following operation: select three integers $$$i$$$, $$$j$$$, $$$x$$$ ($$$1 \\le i \\le j \\le n$$$) and assign all elements of the array with indexes from $$$i$$$ to $$$j$$$ the value $$$x$$$. The price of this operation depends on the selected indices and is equal to $$$(j - i + 1)$$$ burles. For example, the array is equal to $$$[1, 2, 3, 4, 5, 1]$$$. If we choose $$$i = 2, j = 4, x = 8$$$, then after applying this operation, the array will be equal to $$$[1, 8, 8, 8, 5, 1]$$$.What is the least amount of burles you need to spend to make all the elements of the array equal?"
  },
  {
    "title": "Make Equal",
    "url": "https://codeforces.com/problemset/problem/1931/B",
    "description": "There are $$$n$$$ containers of water lined up, numbered from left to right from $$$1$$$ to $$$n$$$. Each container can hold any amount of water; initially, the $$$i$$$-th container contains $$$a_i$$$ units of water. The sum of $$$a_i$$$ is divisible by $$$n$$$.You can apply the following operation any (possibly zero) number of times: pour any amount of water from the $$$i$$$-th container to the $$$j$$$-th container, where $$$i$$$ must be less than $$$j$$$ (i.e. $$$i<j$$$). Any index can be chosen as $$$i$$$ or $$$j$$$ any number of times.Determine whether it is possible to make the amount of water in all containers the same using this operation."
  },
  {
    "title": "Recovering a Small String",
    "url": "https://codeforces.com/problemset/problem/1931/A",
    "description": "Nikita had a word consisting of exactly 33 lowercase Latin letters. The letters in the Latin alphabet are numbered from 11 to 2626, where the letter \"a\" has the index 11, and the letter \"z\" has the index 2626.He encoded this word as the sum of the positions of all the characters in the alphabet. For example, the word \"cat\" he would encode as the integer 3+1+20=243 + 1 + 20 = 24, because the letter \"c\" has the index 33 in the alphabet, the letter \"a\" has the index 11, and the letter \"t\" has the index 2020.However, this encoding turned out to be ambiguous! For example, when encoding the word \"ava\", the integer 1+22+1=241 + 22 + 1 = 24 is also obtained.Determine the lexicographically smallest word of 33 letters that could have been encoded.A string aa is lexicographically smaller than a string bb if and only if one of the following holds: aa is a prefix of bb, but a≠ba \\ne b; in the first position where aa and bb differ, the string aa has a letter that appears earlier in the alphabet than the corresponding letter in bb."
  },
  {
    "title": "Counting Is Fun",
    "url": "https://codeforces.com/problemset/problem/1930/I",
    "description": "You are given a binary$$$^\\dagger$$$ pattern $$$p$$$ of length $$$n$$$.A binary string $$$q$$$ of the same length $$$n$$$ is called good if for every $$$i$$$ ($$$1 \\leq i \\leq n$$$), there exist indices $$$l$$$ and $$$r$$$ such that:   $$$1 \\leq l \\leq i \\leq r \\leq n$$$, and  $$$p_i$$$ is a mode$$$^\\ddagger$$$ of the string $$$q_lq_{l+1}\\ldots q_r$$$. Count the number of good binary strings modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ A binary string is a string that only consists of characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$.$$$^\\ddagger$$$ Character $$$c$$$ is a mode of string $$$t$$$ of length $$$m$$$ if the number of occurrences of $$$c$$$ in $$$t$$$ is at least $$$\\lceil \\frac{m}{2} \\rceil$$$. For example, $$$\\mathtt{0}$$$ is a mode of $$$\\mathtt{010}$$$, $$$\\mathtt{1}$$$ is not a mode of $$$\\mathtt{010}$$$, and both $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$ are modes of $$$\\mathtt{011010}$$$."
  },
  {
    "title": "Interactive Mex Tree",
    "url": "https://codeforces.com/problemset/problem/1930/H",
    "description": "This is an interactive problem.Alice has a tree $$$T$$$ consisting of $$$n$$$ nodes, numbered from $$$1$$$ to $$$n$$$. Alice will show $$$T$$$ to Bob. After observing $$$T$$$, Bob needs to tell Alice two permutations $$$p_1$$$ and $$$p_2$$$ of $$$[1, 2, \\ldots, n]$$$.Then, Alice will play $$$q$$$ rounds of the following game.  Alice will create an array $$$a$$$ that is a permutation of $$$[0,1,\\ldots,n-1]$$$. The value of node $$$v$$$ will be $$$a_v$$$.  Alice will choose two nodes $$$u$$$ and $$$v$$$ ($$$1 \\leq u, v \\leq n$$$, $$$u \\neq v$$$) of $$$T$$$ and tell them to Bob. Bob will need to find the $$$\\operatorname{MEX}^\\dagger$$$ of the values on the unique simple path between nodes $$$u$$$ and $$$v$$$.  To find this value, Bob can ask Alice at most $$$5$$$ queries. In each query, Bob should give three integers $$$t$$$, $$$l$$$ and $$$r$$$ to Alice such that $$$t$$$ is either $$$1$$$ or $$$2$$$, and $$$1 \\leq l \\leq r \\leq n$$$. Alice will then tell Bob the value equal to $$$$$$\\min_{i=l}^{r} a[p_{t,i}].$$$$$$ Note that all rounds are independent of each other. In particular, the values of $$$a$$$, $$$u$$$ and $$$v$$$ can be different in different rounds.Bob is puzzled as he only knows the HLD solution, which requires $$$O(\\log(n))$$$ queries per round. So he needs your help to win the game. $$$^\\dagger$$$ The $$$\\operatorname{MEX}$$$ (minimum excludant) of a collection of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$c$$$."
  },
  {
    "title": "Prefix Max Set Counting",
    "url": "https://codeforces.com/problemset/problem/1930/G",
    "description": "Define a function $$$f$$$ such that for an array $$$b$$$, $$$f(b)$$$ returns the array of prefix maxima of $$$b$$$. In other words, $$$f(b)$$$ is an array containing only those elements $$$b_i$$$, for which $$$b_i=\\max(b_1,b_2,\\ldots,b_i)$$$, without changing their order. For example, $$$f([3,10,4,10,15,1])=[3,10,10,15]$$$.You are given a tree consisting of $$$n$$$ nodes rooted at $$$1$$$.A permutation$$$^\\dagger$$$ $$$p$$$ of is considered a pre-order of the tree if for all $$$i$$$ the following condition holds:   Let $$$k$$$ be the number of proper descendants$$$^\\ddagger$$$ of node $$$p_i$$$.  For all $$$x$$$ such that $$$i < x \\leq i+k$$$, $$$p_x$$$ is a proper descendant of node $$$p_i$$$. Find the number of distinct values of $$$f(a)$$$ over all possible pre-orders $$$a$$$. Since this value might be large, you only need to find it modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).$$$^\\ddagger$$$ Node $$$t$$$ is a proper descendant of node $$$s$$$ if $$$s \\neq t$$$ and $$$s$$$ is on the unique simple path from $$$t$$$ to $$$1$$$."
  },
  {
    "title": "Maximize the Difference",
    "url": "https://codeforces.com/problemset/problem/1930/F",
    "description": "For an array $$$b$$$ of $$$m$$$ non-negative integers, define $$$f(b)$$$ as the maximum value of $$$\\max\\limits_{i = 1}^{m} (b_i | x) - \\min\\limits_{i = 1}^{m} (b_i | x)$$$ over all possible non-negative integers $$$x$$$, where $$$|$$$ is bitwise OR operation.You are given integers $$$n$$$ and $$$q$$$. You start with an empty array $$$a$$$. Process the following $$$q$$$ queries:  $$$v$$$: append $$$v$$$ to the back of $$$a$$$ and then output $$$f(a)$$$. It is guaranteed that $$$0 \\leq v < n$$$. The queries are given in a modified way."
  },
  {
    "title": "2..3...4...",
    "url": "https://codeforces.com/problemset/problem/1930/E",
    "description": "Stack has an array $$$a$$$ of length $$$n$$$ such that $$$a_i = i$$$ for all $$$i$$$ ($$$1 \\leq i \\leq n$$$). He will select a positive integer $$$k$$$ ($$$1 \\leq k \\leq \\lfloor \\frac{n-1}{2} \\rfloor$$$) and do the following operation on $$$a$$$ any number (possibly $$$0$$$) of times.  Select a subsequence$$$^\\dagger$$$ $$$s$$$ of length $$$2 \\cdot k + 1$$$ from $$$a$$$. Now, he will delete the first $$$k$$$ elements of $$$s$$$ from $$$a$$$. To keep things perfectly balanced (as all things should be), he will also delete the last $$$k$$$ elements of $$$s$$$ from $$$a$$$. Stack wonders how many arrays $$$a$$$ can he end up with for each $$$k$$$ ($$$1 \\leq k \\leq \\lfloor \\frac{n-1}{2} \\rfloor$$$). As Stack is weak at counting problems, he needs your help. Since the number of arrays might be too large, please print it modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by deleting several (possibly, zero or all) elements. For example, $$$[1, 3]$$$, $$$[1, 2, 3]$$$ and $$$[2, 3]$$$ are subsequences of $$$[1, 2, 3]$$$. On the other hand, $$$[3, 1]$$$ and $$$[2, 1, 3]$$$ are not subsequences of $$$[1, 2, 3]$$$."
  },
  {
    "title": "Sum over all Substrings (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1930/D2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on tt and nn. You can make hacks only if both versions of the problem are solved.For a binary†^\\dagger pattern pp and a binary string qq, both of length mm, qq is called pp-good if for every ii (1≤i≤m1 \\leq i \\leq m), there exist indices ll and rr such that:   1≤l≤i≤r≤m1 \\leq l \\leq i \\leq r \\leq m, and  pip_i is a mode‡^\\ddagger of the string qlql+1…qrq_l q_{l+1} \\ldots q_{r}. For a pattern pp, let f(p)f(p) be the minimum possible number of 1\\mathtt{1}s in a pp-good binary string (of the same length as the pattern).You are given a binary string ss of size nn. Find n∑i=1n∑j=if(sisi+1…sj).\\sum_{i=1}^{n} \\sum_{j=i}^{n} f(s_i s_{i+1} \\ldots s_j). In other words, you need to sum the values of ff over all n(n+1)2\\frac{n(n+1)}{2} substrings of ss.†^\\dagger A binary pattern is a string that only consists of characters 0\\mathtt{0} and 1\\mathtt{1}.‡^\\ddagger Character cc is a mode of string tt of length mm if the number of occurrences of cc in tt is at least ⌈m2⌉\\lceil \\frac{m}{2} \\rceil. For example, 0\\mathtt{0} is a mode of 010\\mathtt{010}, 1\\mathtt{1} is not a mode of 010\\mathtt{010}, and both 0\\mathtt{0} and 1\\mathtt{1} are modes of 011010\\mathtt{011010}."
  },
  {
    "title": "Sum over all Substrings (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1930/D1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$t$$$ and $$$n$$$. You can make hacks only if both versions of the problem are solved.For a binary$$$^\\dagger$$$ pattern $$$p$$$ and a binary string $$$q$$$, both of length $$$m$$$, $$$q$$$ is called $$$p$$$-good if for every $$$i$$$ ($$$1 \\leq i \\leq m$$$), there exist indices $$$l$$$ and $$$r$$$ such that:   $$$1 \\leq l \\leq i \\leq r \\leq m$$$, and  $$$p_i$$$ is a mode$$$^\\ddagger$$$ of the string $$$q_l q_{l+1} \\ldots q_{r}$$$. For a pattern $$$p$$$, let $$$f(p)$$$ be the minimum possible number of $$$\\mathtt{1}$$$s in a $$$p$$$-good binary string (of the same length as the pattern).You are given a binary string $$$s$$$ of size $$$n$$$. Find $$$$$$\\sum_{i=1}^{n} \\sum_{j=i}^{n} f(s_i s_{i+1} \\ldots s_j).$$$$$$ In other words, you need to sum the values of $$$f$$$ over all $$$\\frac{n(n+1)}{2}$$$ substrings of $$$s$$$.$$$^\\dagger$$$ A binary pattern is a string that only consists of characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$.$$$^\\ddagger$$$ Character $$$c$$$ is a mode of string $$$t$$$ of length $$$m$$$ if the number of occurrences of $$$c$$$ in $$$t$$$ is at least $$$\\lceil \\frac{m}{2} \\rceil$$$. For example, $$$\\mathtt{0}$$$ is a mode of $$$\\mathtt{010}$$$, $$$\\mathtt{1}$$$ is not a mode of $$$\\mathtt{010}$$$, and both $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$ are modes of $$$\\mathtt{011010}$$$."
  },
  {
    "title": "Lexicographically Largest",
    "url": "https://codeforces.com/problemset/problem/1930/C",
    "description": "Stack has an array $$$a$$$ of length $$$n$$$. He also has an empty set $$$S$$$. Note that $$$S$$$ is not a multiset.He will do the following three-step operation exactly $$$n$$$ times:  Select an index $$$i$$$ such that $$$1 \\leq i \\leq |a|$$$.  Insert$$$^\\dagger$$$ $$$a_i + i$$$ into $$$S$$$.  Delete $$$a_i$$$ from $$$a$$$. Note that the indices of all elements to the right of $$$a_i$$$ will decrease by $$$1$$$. Note that after $$$n$$$ operations, $$$a$$$ will be empty.Stack will now construct a new array $$$b$$$ which is $$$S$$$ sorted in decreasing order. Formally, $$$b$$$ is an array of size $$$|S|$$$ where $$$b_i$$$ is the $$$i$$$-th largest element of $$$S$$$ for all $$$1 \\leq i \\leq |S|$$$.Find the lexicographically largest$$$^\\ddagger$$$ $$$b$$$ that Stack can make.$$$^\\dagger$$$ A set can only contain unique elements. Inserting an element that is already present in a set will not change the elements of the set.$$$^\\ddagger$$$ An array $$$p$$$ is lexicographically larger than a sequence $$$q$$$ if and only if one of the following holds:   $$$q$$$ is a prefix of $$$p$$$, but $$$p \\ne q$$$; or  in the first position where $$$p$$$ and $$$q$$$ differ, the array $$$p$$$ has a larger element than the corresponding element in $$$q$$$. Note that $$$[3,1,4,1,5]$$$ is lexicographically larger than $$$[3,1,3]$$$, $$$[\\,]$$$, and $$$[3,1,4,1]$$$ but not $$$[3,1,4,1,5,9]$$$, $$$[3,1,4,1,5]$$$, and $$$[4]$$$."
  },
  {
    "title": "Permutation Printing",
    "url": "https://codeforces.com/problemset/problem/1930/B",
    "description": "You are given a positive integer $$$n$$$.Find a permutation$$$^\\dagger$$$ $$$p$$$ of length $$$n$$$ such that there do not exist two distinct indices $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j < n$$$; $$$i \\neq j$$$) such that $$$p_i$$$ divides $$$p_j$$$ and $$$p_{i+1}$$$ divides $$$p_{j+1}$$$.Refer to the Notes section for some examples.Under the constraints of this problem, it can be proven that at least one $$$p$$$ exists.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Maximise The Score",
    "url": "https://codeforces.com/problemset/problem/1930/A",
    "description": "There are $$$2n$$$ positive integers written on a whiteboard. Being bored, you decided to play a one-player game with the numbers on the whiteboard.You start with a score of $$$0$$$. You will increase your score by performing the following move exactly $$$n$$$ times:   Choose two integers $$$x$$$ and $$$y$$$ that are written on the whiteboard.  Add $$$\\min(x,y)$$$ to your score.  Erase $$$x$$$ and $$$y$$$ from the whiteboard.  Note that after performing the move $$$n$$$ times, there will be no more integers written on the whiteboard.Find the maximum final score you can achieve if you optimally perform the $$$n$$$ moves."
  },
  {
    "title": "Sasha and the Wedding Binary Search Tree",
    "url": "https://codeforces.com/problemset/problem/1929/F",
    "description": "Having overcome all the difficulties and hardships, Sasha finally decided to marry his girlfriend. To do this, he needs to give her an engagement ring. However, his girlfriend does not like such romantic gestures, but she does like binary search trees$$$^{\\dagger}$$$. So Sasha decided to give her such a tree.After spending a lot of time on wedding websites for programmers, he found the perfect binary search tree with the root at vertex $$$1$$$. In this tree, the value at vertex $$$v$$$ is equal to $$$val_v$$$.But after some time, he forgot the values in some vertices. Trying to remember the found tree, Sasha wondered — how many binary search trees could he have found on the website, if it is known that the values in all vertices are integers in the segment $$$[1, C]$$$. Since this number can be very large, output it modulo $$$998\\,244\\,353$$$.$$$^{\\dagger}$$$A binary search tree is a rooted binary tree in which for any vertex $$$x$$$, the following property holds: the values of all vertices in the left subtree of vertex $$$x$$$ (if it exists) are less than or equal to the value at vertex $$$x$$$, and the values of all vertices in the right subtree of vertex $$$x$$$ (if it exists) are greater than or equal to the value at vertex $$$x$$$."
  },
  {
    "title": "Sasha and the Happy Tree Cutting",
    "url": "https://codeforces.com/problemset/problem/1929/E",
    "description": "Sasha was given a tree$$$^{\\dagger}$$$ with $$$n$$$ vertices as a prize for winning yet another competition. However, upon returning home after celebrating his victory, he noticed that some parts of the tree were missing. Sasha remembers that he colored some of the edges of this tree. He is certain that for any of the $$$k$$$ pairs of vertices $$$(a_1, b_1), \\ldots, (a_k, b_k)$$$, he colored at least one edge on the simple path$$$^{\\ddagger}$$$ between vertices $$$a_i$$$ and $$$b_i$$$.Sasha does not remember how many edges he exactly colored, so he asks you to tell him the minimum number of edges he could have colored to satisfy the above condition.$$$^{\\dagger}$$$A tree is an undirected connected graph without cycles.$$$^{\\ddagger}$$$A simple path is a path that passes through each vertex at most once."
  },
  {
    "title": "Sasha and a Walk in the City",
    "url": "https://codeforces.com/problemset/problem/1929/D",
    "description": "Sasha wants to take a walk with his girlfriend in the city. The city consists of $$$n$$$ intersections, numbered from $$$1$$$ to $$$n$$$. Some of them are connected by roads, and from any intersection, there is exactly one simple path$$$^{\\dagger}$$$ to any other intersection. In other words, the intersections and the roads between them form a tree.Some of the intersections are considered dangerous. Since it is unsafe to walk alone in the city, Sasha does not want to visit three or more dangerous intersections during the walk.Sasha calls a set of intersections good if the following condition is satisfied: If in the city only the intersections contained in this set are dangerous, then any simple path in the city contains no more than two dangerous intersections.However, Sasha does not know which intersections are dangerous, so he is interested in the number of different good sets of intersections in the city. Since this number can be very large, output it modulo $$$998\\,244\\,353$$$.$$$^{\\dagger}$$$A simple path is a path that passes through each intersection at most once."
  },
  {
    "title": "Sasha and the Casino",
    "url": "https://codeforces.com/problemset/problem/1929/C",
    "description": "Sasha decided to give his girlfriend the best handbag, but unfortunately for Sasha, it is very expensive. Therefore, Sasha wants to earn it. After looking at earning tips on the internet, he decided to go to the casino.Sasha knows that the casino operates under the following rules. If Sasha places a bet of $$$y$$$ coins (where $$$y$$$ is a positive integer), then in case of winning, he will receive $$$y \\cdot k$$$ coins (i.e., his number of coins will increase by $$$y \\cdot (k - 1)$$$). And in case of losing, he will lose the entire bet amount (i.e., his number of coins will decrease by $$$y$$$).Note that the bet amount must always be a positive ($$$> 0$$$) integer and cannot exceed Sasha's current number of coins.Sasha also knows that there is a promotion at the casino: he cannot lose more than $$$x$$$ times in a row.Initially, Sasha has $$$a$$$ coins. He wonders whether he can place bets such that he is guaranteed to win any number of coins. In other words, is it true that for any integer $$$n$$$, Sasha can make bets so that for any outcome that does not contradict the rules described above, at some moment of time he will have at least $$$n$$$ coins."
  },
  {
    "title": "Sasha and the Drawing",
    "url": "https://codeforces.com/problemset/problem/1929/B",
    "description": "Even in kindergarten, Sasha liked a girl. Therefore, he wanted to give her a drawing and attract her attention.As a drawing, he decided to draw a square grid of size $$$n \\times n$$$, in which some cells are colored. But coloring the cells is difficult, so he wants to color as few cells as possible. But at the same time, he wants at least $$$k$$$ diagonals to have at least one colored cell. Note that the square grid of size $$$n \\times n$$$ has a total of $$$4n - 2$$$ diagonals.Help little Sasha to make the girl fall in love with him and tell him the minimum number of cells he needs to color."
  },
  {
    "title": "Sasha and the Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1929/A",
    "description": "Sasha decided to give his girlfriend an array $$$a_1, a_2, \\ldots, a_n$$$. He found out that his girlfriend evaluates the beauty of the array as the sum of the values $$$(a_i - a_{i - 1})$$$ for all integers $$$i$$$ from $$$2$$$ to $$$n$$$.Help Sasha and tell him the maximum beauty of the array $$$a$$$ that he can obtain, if he can rearrange its elements in any way."
  },
  {
    "title": "Digital Patterns",
    "url": "https://codeforces.com/problemset/problem/1928/F",
    "description": "Anya is engaged in needlework. Today she decided to knit a scarf from semi-transparent threads. Each thread is characterized by a single integer — the transparency coefficient.The scarf is made according to the following scheme: horizontal threads with transparency coefficients $$$a_1, a_2, \\ldots, a_n$$$ and vertical threads with transparency coefficients $$$b_1, b_2, \\ldots, b_m$$$ are selected. Then they are interwoven as shown in the picture below, forming a piece of fabric of size $$$n \\times m$$$, consisting of exactly $$$nm$$$ nodes:     Example of a piece of fabric for $$$n = m = 4$$$. After the interweaving tightens and there are no gaps between the threads, each node formed by a horizontal thread with number $$$i$$$ and a vertical thread with number $$$j$$$ will turn into a cell, which we will denote as $$$(i, j)$$$. Cell $$$(i, j)$$$ will have a transparency coefficient of $$$a_i + b_j$$$.The interestingness of the resulting scarf will be the number of its sub-squares$$$^{\\dagger}$$$ in which there are no pairs of neighboring$$$^{\\dagger \\dagger}$$$ cells with the same transparency coefficients.Anya has not yet decided which threads to use for the scarf, so you will also be given $$$q$$$ queries to increase/decrease the coefficients for the threads on some ranges. After each query of which you need to output the interestingness of the resulting scarf.$$$^{\\dagger}$$$A sub-square of a piece of fabric is defined as the set of all its cells $$$(i, j)$$$, such that $$$x_0 \\le i \\le x_0 + d$$$ and $$$y_0 \\le j \\le y_0 + d$$$ for some integers $$$x_0$$$, $$$y_0$$$, and $$$d$$$ ($$$1 \\le x_0 \\le n - d$$$, $$$1 \\le y_0 \\le m - d$$$, $$$d \\ge 0$$$).$$$^{\\dagger \\dagger}$$$. Cells $$$(i_1, j_1)$$$ and $$$(i_2, j_2)$$$ are neighboring if and only if $$$|i_1 - i_2| + |j_1 - j_2| = 1$$$."
  },
  {
    "title": "Modular Sequence",
    "url": "https://codeforces.com/problemset/problem/1928/E",
    "description": "You are given two integers $$$x$$$ and $$$y$$$. A sequence $$$a$$$ of length $$$n$$$ is called modular if $$$a_1=x$$$, and for all $$$1 < i \\le n$$$ the value of $$$a_{i}$$$ is either $$$a_{i-1} + y$$$ or $$$a_{i-1} \\bmod y$$$. Here $$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$.Determine if there exists a modular sequence of length $$$n$$$ with the sum of its elements equal to $$$S$$$, and if it exists, find any such sequence."
  },
  {
    "title": "Lonely Mountain Dungeons",
    "url": "https://codeforces.com/problemset/problem/1928/D",
    "description": "Once, the people, elves, dwarves, and other inhabitants of Middle-earth gathered to reclaim the treasures stolen from them by Smaug. In the name of this great goal, they rallied around the powerful elf Timothy and began to plan the overthrow of the ruler of the Lonely Mountain.The army of Middle-earth inhabitants will consist of several squads. It is known that each pair of creatures of the same race, which are in different squads, adds $$$b$$$ units to the total strength of the army. But since it will be difficult for Timothy to lead an army consisting of a large number of squads, the total strength of an army consisting of $$$k$$$ squads is reduced by $$$(k - 1) \\cdot x$$$ units. Note that the army always consists of at least one squad.It is known that there are $$$n$$$ races in Middle-earth, and the number of creatures of the $$$i$$$-th race is equal to $$$c_i$$$. Help the inhabitants of Middle-earth determine the maximum strength of the army they can assemble."
  },
  {
    "title": "Physical Education Lesson",
    "url": "https://codeforces.com/problemset/problem/1928/C",
    "description": "In a well-known school, a physical education lesson took place. As usual, everyone was lined up and asked to settle in \"the first–$$$k$$$-th\" position.As is known, settling in \"the first–$$$k$$$-th\" position occurs as follows: the first $$$k$$$ people have numbers $$$1, 2, 3, \\ldots, k$$$, the next $$$k - 2$$$ people have numbers $$$k - 1, k - 2, \\ldots, 2$$$, the next $$$k$$$ people have numbers $$$1, 2, 3, \\ldots, k$$$, and so on. Thus, the settling repeats every $$$2k - 2$$$ positions. Examples of settling are given in the \"Note\" section.The boy Vasya constantly forgets everything. For example, he forgot the number $$$k$$$ described above. But he remembers the position he occupied in the line, as well as the number he received during the settling. Help Vasya understand how many natural numbers $$$k$$$ fit under the given constraints.Note that the settling exists if and only if $$$k > 1$$$. In particular, this means that the settling does not exist for $$$k = 1$$$."
  },
  {
    "title": "Equalize",
    "url": "https://codeforces.com/problemset/problem/1928/B",
    "description": "Vasya has two hobbies — adding permutations$$$^{\\dagger}$$$ to arrays and finding the most frequently occurring element. Recently, he found an array $$$a$$$ and decided to find out the maximum number of elements equal to the same number in the array $$$a$$$ that he can obtain after adding some permutation to the array $$$a$$$.More formally, Vasya must choose exactly one permutation $$$p_1, p_2, p_3, \\ldots, p_n$$$ of length $$$n$$$, and then change the elements of the array $$$a$$$ according to the rule $$$a_i := a_i + p_i$$$. After that, Vasya counts how many times each number occurs in the array $$$a$$$ and takes the maximum of these values. You need to determine the maximum value he can obtain.$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Rectangle Cutting",
    "url": "https://codeforces.com/problemset/problem/1928/A",
    "description": "Bob has a rectangle of size $$$a \\times b$$$. He tries to cut this rectangle into two rectangles with integer sides by making a cut parallel to one of the sides of the original rectangle. Then Bob tries to form some other rectangle from the two resulting rectangles, and he can rotate and move these two rectangles as he wishes.Note that if two rectangles differ only by a $$$90^{\\circ}$$$ rotation, they are considered the same. For example, the rectangles $$$6 \\times 4$$$ and $$$4 \\times 6$$$ are considered the same.Thus, from the $$$2 \\times 6$$$ rectangle, another rectangle can be formed, because it can be cut into two $$$2 \\times 3$$$ rectangles, and then these two rectangles can be used to form the $$$4 \\times 3$$$ rectangle, which is different from the $$$2 \\times 6$$$ rectangle.  However, from the $$$2 \\times 1$$$ rectangle, another rectangle cannot be formed, because it can only be cut into two rectangles of $$$1 \\times 1$$$, and from these, only the $$$1 \\times 2$$$ and $$$2 \\times 1$$$ rectangles can be formed, which are considered the same.  Help Bob determine if he can obtain some other rectangle, or if he is just wasting his time."
  },
  {
    "title": "Paint Charges",
    "url": "https://codeforces.com/problemset/problem/1927/G",
    "description": "A horizontal grid strip of $$$n$$$ cells is given. In the $$$i$$$-th cell, there is a paint charge of size $$$a_i$$$. This charge can be:  either used to the left — then all cells to the left at a distance less than $$$a_i$$$ (from $$$\\max(i - a_i + 1, 1)$$$ to $$$i$$$ inclusive) will be painted,  or used to the right — then all cells to the right at a distance less than $$$a_i$$$ (from $$$i$$$ to $$$\\min(i + a_i - 1, n)$$$ inclusive) will be painted,  or not used at all. Note that a charge can be used no more than once (that is, it cannot be used simultaneously to the left and to the right). It is allowed for a cell to be painted more than once.What is the minimum number of times a charge needs to be used to paint all the cells of the strip?"
  },
  {
    "title": "Microcycle",
    "url": "https://codeforces.com/problemset/problem/1927/F",
    "description": "Given an undirected weighted graph with $$$n$$$ vertices and $$$m$$$ edges. There is at most one edge between each pair of vertices in the graph, and the graph does not contain loops (edges from a vertex to itself). The graph is not necessarily connected.A cycle in the graph is called simple if it doesn't pass through the same vertex twice and doesn't contain the same edge twice.Find any simple cycle in this graph in which the weight of the lightest edge is minimal."
  },
  {
    "title": "Klever Permutation",
    "url": "https://codeforces.com/problemset/problem/1927/E",
    "description": "You are given two integers $$$n$$$ and $$$k$$$ ($$$k \\le n$$$), where $$$k$$$ is even.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation (as $$$2$$$ appears twice in the array) and $$$[0,1,2]$$$ is also not a permutation (as $$$n=3$$$, but $$$3$$$ is not present in the array).Your task is to construct a $$$k$$$-level permutation of length $$$n$$$.A permutation is called $$$k$$$-level if, among all the sums of continuous segments of length $$$k$$$ (of which there are exactly $$$n - k + 1$$$), any two sums differ by no more than $$$1$$$.More formally, to determine if the permutation $$$p$$$ is $$$k$$$-level, first construct an array $$$s$$$ of length $$$n - k + 1$$$, where $$$s_i=\\sum_{j=i}^{i+k-1} p_j$$$, i.e., the $$$i$$$-th element is equal to the sum of $$$p_i, p_{i+1}, \\dots, p_{i+k-1}$$$.A permutation is called $$$k$$$-level if $$$\\max(s) - \\min(s) \\le 1$$$.Find any $$$k$$$-level permutation of length $$$n$$$."
  },
  {
    "title": "Find the Different Ones!",
    "url": "https://codeforces.com/problemset/problem/1927/D",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers, and $$$q$$$ queries.Each query is represented by two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$). Your task is to find, for each query, two indices $$$i$$$ and $$$j$$$ (or determine that they do not exist) such that:  $$$l \\le i \\le r$$$;  $$$l \\le j \\le r$$$;  $$$a_i \\ne a_j$$$. In other words, for each query, you need to find a pair of different elements among $$$a_l, a_{l+1}, \\dots, a_r$$$, or report that such a pair does not exist."
  },
  {
    "title": "Choose the Different Ones!",
    "url": "https://codeforces.com/problemset/problem/1927/C",
    "description": "Given an array $$$a$$$ of $$$n$$$ integers, an array $$$b$$$ of $$$m$$$ integers, and an even number $$$k$$$.Your task is to determine whether it is possible to choose exactly $$$\\frac{k}{2}$$$ elements from both arrays in such a way that among the chosen elements, every integer from $$$1$$$ to $$$k$$$ is included.For example:  If $$$a=[2, 3, 8, 5, 6, 5]$$$, $$$b=[1, 3, 4, 10, 5]$$$, $$$k=6$$$, then it is possible to choose elements with values $$$2, 3, 6$$$ from array $$$a$$$ and elements with values $$$1, 4, 5$$$ from array $$$b$$$. In this case, all numbers from $$$1$$$ to $$$k=6$$$ will be included among the chosen elements. If $$$a=[2, 3, 4, 5, 6, 5]$$$, $$$b=[1, 3, 8, 10, 3]$$$, $$$k=6$$$, then it is not possible to choose elements in the required way. Note that you are not required to find a way to choose the elements — your program should only check whether it is possible to choose the elements in the required way."
  },
  {
    "title": "Following the String",
    "url": "https://codeforces.com/problemset/problem/1927/B",
    "description": "Polycarp lost the string $$$s$$$ of length $$$n$$$ consisting of lowercase Latin letters, but he still has its trace.The trace of the string $$$s$$$ is an array $$$a$$$ of $$$n$$$ integers, where $$$a_i$$$ is the number of such indices $$$j$$$ ($$$j < i$$$) that $$$s_i=s_j$$$. For example, the trace of the string abracadabra is the array [$$$0, 0, 0, 1, 0, 2, 0, 3, 1, 1, 4$$$].Given a trace of a string, find any string $$$s$$$ from which it could have been obtained. The string $$$s$$$ should consist only of lowercase Latin letters a-z."
  },
  {
    "title": "Make it White",
    "url": "https://codeforces.com/problemset/problem/1927/A",
    "description": "You have a horizontal strip of $$$n$$$ cells. Each cell is either white or black.You can choose a continuous segment of cells once and paint them all white. After this action, all the black cells in this segment will become white, and the white ones will remain white.What is the minimum length of the segment that needs to be painted white in order for all $$$n$$$ cells to become white?"
  },
  {
    "title": "Vlad and Trouble at MIT",
    "url": "https://codeforces.com/problemset/problem/1926/G",
    "description": "Vladislav has a son who really wanted to go to MIT. The college dormitory at MIT (Moldova Institute of Technology) can be represented as a tree with $$$n$$$ vertices, each vertex being a room with exactly one student. A tree is a connected undirected graph with $$$n$$$ vertices and $$$n-1$$$ edges.Tonight, there are three types of students:   students who want to party and play music (marked with $$$\\texttt{P}$$$),  students who wish to sleep and enjoy silence (marked with $$$\\texttt{S}$$$), and  students who don't care (marked with $$$\\texttt{C}$$$). Initially, all the edges are thin walls which allow music to pass through, so when a partying student puts music on, it will be heard in every room. However, we can place some thick walls on any edges — thick walls don't allow music to pass through them.The university wants to install some thick walls so that every partying student can play music, and no sleepy student can hear it.Because the university lost a lot of money in a naming rights lawsuit, they ask you to find the minimum number of thick walls they will need to use."
  },
  {
    "title": "Vlad and Avoiding X",
    "url": "https://codeforces.com/problemset/problem/1926/F",
    "description": "Vladislav has a grid of size $$$7 \\times 7$$$, where each cell is colored black or white. In one operation, he can choose any cell and change its color (black $$$\\leftrightarrow$$$ white).Find the minimum number of operations required to ensure that there are no black cells with four diagonal neighbors also being black. The left image shows that initially there are two black cells violating the condition. By flipping one cell, the grid will work. "
  },
  {
    "title": "Vlad and an Odd Ordering",
    "url": "https://codeforces.com/problemset/problem/1926/E",
    "description": "Vladislav has $$$n$$$ cards numbered $$$1, 2, \\dots, n$$$. He wants to lay them down in a row as follows:   First, he lays down all the odd-numbered cards from smallest to largest.  Next, he lays down all cards that are twice an odd number from smallest to largest (i.e. $$$2$$$ multiplied by an odd number).  Next, he lays down all cards that are $$$3$$$ times an odd number from smallest to largest (i.e. $$$3$$$ multiplied by an odd number).  Next, he lays down all cards that are $$$4$$$ times an odd number from smallest to largest (i.e. $$$4$$$ multiplied by an odd number).  And so on, until all cards are laid down.  What is the $$$k$$$-th card he lays down in this process? Once Vladislav puts a card down, he cannot use that card again."
  },
  {
    "title": "Vlad and Division",
    "url": "https://codeforces.com/problemset/problem/1926/D",
    "description": "Vladislav has $$$n$$$ non-negative integers, and he wants to divide all of them into several groups so that in any group, any pair of numbers does not have matching bit values among bits from $$$1$$$-st to $$$31$$$-st bit (i.e., considering the $$$31$$$ least significant bits of the binary representation).For an integer $$$k$$$, let $$$k_2(i)$$$ denote the $$$i$$$-th bit in its binary representation (from right to left, indexing from 1). For example, if $$$k=43$$$, since $$$43=101011_2$$$, then $$$43_2(1)=1$$$, $$$43_2(2)=1$$$, $$$43_2(3)=0$$$, $$$43_2(4)=1$$$, $$$43_2(5)=0$$$, $$$43_2(6)=1$$$, $$$43_2(7)=0$$$, $$$43_2(8)=0, \\dots, 43_2(31)=0$$$.Formally, for any two numbers $$$x$$$ and $$$y$$$ in the same group, the condition $$$x_2(i) \\neq y_2(i)$$$ must hold for all $$$1 \\leq i < 32$$$.What is the minimum number of groups Vlad needs to achieve his goal? Each number must fall into exactly one group."
  },
  {
    "title": "Vlad and a Sum of Sum of Digits",
    "url": "https://codeforces.com/problemset/problem/1926/C",
    "description": "Please note that the time limit for this problem is only 0.5 seconds per test.Vladislav wrote the integers from $$$1$$$ to $$$n$$$, inclusive, on the board. Then he replaced each integer with the sum of its digits.What is the sum of the numbers on the board now?For example, if $$$n=12$$$ then initially the numbers on the board are: $$$$$$1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.$$$$$$ Then after the replacement, the numbers become: $$$$$$1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3.$$$$$$ The sum of these numbers is $$$1+2+3+4+5+6+7+8+9+1+2+3=51$$$. Thus, for $$$n=12$$$ the answer is $$$51$$$."
  },
  {
    "title": "Vlad and Shapes",
    "url": "https://codeforces.com/problemset/problem/1926/B",
    "description": "Vladislav has a binary square grid of $$$n \\times n$$$ cells. A triangle or a square is drawn on the grid with symbols $$$\\texttt{1}$$$. As he is too busy being cool, he asks you to tell him which shape is drawn on the grid. A triangle is a shape consisting of $$$k$$$ ($$$k>1$$$) consecutive rows, where the $$$i$$$-th row has $$$2 \\cdot i-1$$$ consecutive characters $$$\\texttt{1}$$$, and the central 1s are located in one column. An upside down triangle is also considered a valid triangle (but not rotated by 90 degrees).    Two left pictures contain examples of triangles: $$$k=4$$$, $$$k=3$$$. The two right pictures don't contain triangles.  A square is a shape consisting of $$$k$$$ ($$$k>1$$$) consecutive rows, where the $$$i$$$-th row has $$$k$$$ consecutive characters $$$\\texttt{1}$$$, which are positioned at an equal distance from the left edge of the grid.    Examples of two squares: $$$k=2$$$, $$$k=4$$$. For the given grid, determine the type of shape that is drawn on it."
  },
  {
    "title": "Vlad and the Best of Five",
    "url": "https://codeforces.com/problemset/problem/1926/A",
    "description": "Vladislav has a string of length $$$5$$$, whose characters are each either $$$\\texttt{A}$$$ or $$$\\texttt{B}$$$.Which letter appears most frequently: $$$\\texttt{A}$$$ or $$$\\texttt{B}$$$?"
  },
  {
    "title": "Good Trip",
    "url": "https://codeforces.com/problemset/problem/1925/D",
    "description": "There are $$$n$$$ children in a class, $$$m$$$ pairs among them are friends. The $$$i$$$-th pair who are friends have a friendship value of $$$f_i$$$. The teacher has to go for $$$k$$$ excursions, and for each of the excursions she chooses a pair of children randomly, equiprobably and independently. If a pair of children who are friends is chosen, their friendship value increases by $$$1$$$ for all subsequent excursions (the teacher can choose a pair of children more than once). The friendship value of a pair who are not friends is considered $$$0$$$, and it does not change for subsequent excursions. Find the expected value of the sum of friendship values of all $$$k$$$ pairs chosen for the excursions (at the time of being chosen). It can be shown that this answer can always be expressed as a fraction $$$\\dfrac{p}{q}$$$ where $$$p$$$ and $$$q$$$ are coprime integers. Calculate $$$p\\cdot q^{-1} \\bmod (10^9+7)$$$."
  },
  {
    "title": "A Balanced Problemset?",
    "url": "https://codeforces.com/problemset/problem/1925/B",
    "description": "Jay managed to create a problem of difficulty $$$x$$$ and decided to make it the second problem for Codeforces Round #921. But Yash fears that this problem will make the contest highly unbalanced, and the coordinator will reject it. So, he decided to break it up into a problemset of $$$n$$$ sub-problems such that the difficulties of all the sub-problems are a positive integer and their sum is equal to $$$x$$$. The coordinator, Aleksey, defines the balance of a problemset as the GCD of the difficulties of all sub-problems in the problemset. Find the maximum balance that Yash can achieve if he chooses the difficulties of the sub-problems optimally."
  },
  {
    "title": "We Got Everything Covered!",
    "url": "https://codeforces.com/problemset/problem/1925/A",
    "description": "You are given two positive integers $$$n$$$ and $$$k$$$. Your task is to find a string $$$s$$$ such that all possible strings of length $$$n$$$ that can be formed using the first $$$k$$$ lowercase English alphabets occur as a subsequence of $$$s$$$. If there are multiple answers, print the one with the smallest length. If there are still multiple answers, you may print any of them.Note: A string $$$a$$$ is called a subsequence of another string $$$b$$$ if $$$a$$$ can be obtained by deleting some (possibly zero) characters from $$$b$$$ without changing the order of the remaining characters."
  },
  {
    "title": "Anti-Proxy Attendance",
    "url": "https://codeforces.com/problemset/problem/1924/F",
    "description": "This is an interactive problem!Mr. 1048576 is one of those faculty who hates wasting his time in taking class attendance. Instead of taking attendance the old-fashioned way, he decided to try out something new today.There are $$$n$$$ students in his class, having roll numbers $$$1$$$ to $$$n$$$. He knows that exactly $$$1$$$ student is absent today. In order to determine who is absent, he can ask some queries to the class. In each query, he can provide two integers $$$l$$$ and $$$r$$$ ($$$1\\leq l\\leq r\\leq n$$$) and all students whose roll numbers are between $$$l$$$ and $$$r$$$ (inclusive) will raise their hands. He then counts them to determine if the roll number of the absent student lies between these values.Things seemed fine until his teaching assistant noticed something — the students are dishonest! Some students whose roll numbers lie in the given range may not raise their hands, while some other students whose roll number does not lie in the given range may raise their hands. But the students don't want to raise much suspicion. So, only the following $$$4$$$ cases are possible for a particular query $$$(l,r)$$$ —   True Positive: $$$r-l+1$$$ students are present and $$$r-l+1$$$ students raised their hands.  True Negative: $$$r-l$$$ students are present and $$$r-l$$$ students raised their hands.  False Positive: $$$r-l$$$ students are present but $$$r-l+1$$$ students raised their hands.  False Negative: $$$r-l+1$$$ students are present but $$$r-l$$$ students raised their hands. In the first two cases, the students are said to be answering honestly, while in the last two cases, the students are said to be answering dishonestly. The students can mutually decide upon their strategy, not known to Mr. 1048576. Also, the students do not want to raise any suspicion and at the same time, want to create a lot of confusion. So, their strategy always meets the following two conditions —   The students will never answer honestly $$$3$$$ times in a row.  The students will never answer dishonestly $$$3$$$ times in a row. Mr. 1048576 is frustrated by this act of students. So, he is willing to mark at most $$$2$$$ students as absent (though he knows that only one is). The attendance is said to be successful if the student who is actually absent is among those two. Also, due to limited class time, he can only ask up to $$$\\lceil\\log_{1.116}{n}\\rceil-1$$$ queries (weird numbers but okay). Help him complete a successful attendance."
  },
  {
    "title": "Paper Cutting Again",
    "url": "https://codeforces.com/problemset/problem/1924/E",
    "description": "There is a rectangular sheet of paper with initial height $$$n$$$ and width $$$m$$$. Let the current height and width be $$$h$$$ and $$$w$$$ respectively. We introduce a $$$xy$$$-coordinate system so that the four corners of the sheet are $$$(0, 0), (w, 0), (0, h)$$$, and $$$(w, h)$$$. The sheet can then be cut along the lines $$$x = 1,2,\\ldots,w-1$$$ and the lines $$$y = 1,2,\\ldots,h-1$$$. In each step, the paper is cut randomly along any one of these $$$h+w-2$$$ lines. After each vertical and horizontal cut, the right and bottom piece of paper respectively are discarded.Find the expected number of steps required to make the area of the sheet of paper strictly less than $$$k$$$. It can be shown that this answer can always be expressed as a fraction $$$\\dfrac{p}{q}$$$ where $$$p$$$ and $$$q$$$ are coprime integers. Calculate $$$p\\cdot q^{-1} \\bmod (10^9+7)$$$."
  },
  {
    "title": "Balanced Subsequences",
    "url": "https://codeforces.com/problemset/problem/1924/D",
    "description": "A sequence of brackets is called balanced if one can turn it into a valid math expression by adding characters '+' and '1'. For example, sequences '(())()', '()', and '(()(()))' are balanced, while ')(', '(()', and '(()))(' are not.A subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements without changing the order of the remaining elements.You are given three integers $$$n$$$, $$$m$$$ and $$$k$$$. Find the number of sequences consisting of $$$n$$$ '(' and $$$m$$$ ')', such that the longest balanced subsequence is of length $$$2 \\cdot k$$$. Since the answer can be large calculate it modulo $$$1\\,000\\,000\\,007$$$ ($$$10^9 + 7$$$)."
  },
  {
    "title": "Fractal Origami",
    "url": "https://codeforces.com/problemset/problem/1924/C",
    "description": "You have a square piece of paper with a side length equal to $$$1$$$ unit. In one operation, you fold each corner of the square to the center of the paper, thus forming another square with a side length equal to $$$\\dfrac{1}{\\sqrt{2}}$$$ units. By taking this square as a new square, you do the operation again and repeat this process a total of $$$N$$$ times.     Performing operations for $$$N = 2$$$. After performing the set of operations, you open the paper with the same side up you started with and see some crease lines on it. Every crease line is one of two types: a mountain or a valley. A mountain is when the paper folds outward, and a valley is when the paper folds inward.You calculate the sum of the length of all mountain crease lines on the paper and call it $$$M$$$. Similarly, you calculate for valley crease lines and call it $$$V$$$. You want to find the value of $$$\\dfrac{M}{V}$$$.It can be proved that this value can be represented in the form of $$$A + B\\sqrt{2}$$$, where $$$A$$$ and $$$B$$$ are rational numbers. Let this $$$B$$$ be represented as an irreducible fraction $$$\\dfrac{p}{q}$$$, your task is to print $$$p*inv(q)$$$ modulo $$$999\\,999\\,893$$$ (note the unusual modulo), where $$$inv(q)$$$ is the modular inverse of $$$q$$$."
  },
  {
    "title": "Space Harbour",
    "url": "https://codeforces.com/problemset/problem/1924/B",
    "description": "There are $$$n$$$ points numbered $$$1$$$ to $$$n$$$ on a straight line. Initially, there are $$$m$$$ harbours. The $$$i$$$-th harbour is at point $$$X_i$$$ and has a value $$$V_i$$$. It is guaranteed that there are harbours at the points $$$1$$$ and $$$n$$$. There is exactly one ship on each of the $$$n$$$ points. The cost of moving a ship from its current location to the next harbour is the product of the value of the nearest harbour to its left and the distance from the nearest harbour to its right. Specifically, if a ship is already at a harbour, the cost of moving it to the next harbour is $$$0$$$. Additionally, there are $$$q$$$ queries, each of which is either of the following $$$2$$$ types:  $$$1$$$ $$$x$$$ $$$v$$$ — Add a harbour at point $$$x$$$ with value $$$v$$$. It is guaranteed that before adding the harbour, there is no harbour at point $$$x$$$.  $$$2$$$ $$$l$$$ $$$r$$$ — Print the sum of the cost of moving all ships at points from $$$l$$$ to $$$r$$$ to their next harbours. Note that you just need to calculate the cost of moving the ships but not actually move them. "
  },
  {
    "title": "Did We Get Everything Covered?",
    "url": "https://codeforces.com/problemset/problem/1924/A",
    "description": "You are given two integers $$$n$$$ and $$$k$$$ along with a string $$$s$$$.Your task is to check whether all possible strings of length $$$n$$$ that can be formed using the first $$$k$$$ lowercase English alphabets occur as a subsequence of $$$s$$$. If the answer is NO, you also need to print a string of length $$$n$$$ that can be formed using the first $$$k$$$ lowercase English alphabets which does not occur as a subsequence of $$$s$$$.If there are multiple answers, you may print any of them.Note: A string $$$a$$$ is called a subsequence of another string $$$b$$$ if $$$a$$$ can be obtained by deleting some (possibly zero) characters from $$$b$$$ without changing the order of the remaining characters."
  },
  {
    "title": "Shrink-Reverse",
    "url": "https://codeforces.com/problemset/problem/1923/F",
    "description": "You are given a binary string $$$s$$$ of length $$$n$$$ (a string consisting of $$$n$$$ characters, and each character is either 0 or 1).Let's look at $$$s$$$ as at a binary representation of some integer, and name that integer as the value of string $$$s$$$. For example, the value of 000 is $$$0$$$, the value of 01101 is $$$13$$$, \"100000\" is $$$32$$$ and so on.You can perform at most $$$k$$$ operations on $$$s$$$. Each operation should have one of the two following types:   SWAP: choose two indices $$$i < j$$$ in $$$s$$$ and swap $$$s_i$$$ with $$$s_j$$$;  SHRINK-REVERSE: delete all leading zeroes from $$$s$$$ and reverse $$$s$$$.  For example, after you perform SHRINK-REVERSE on 000101100, you'll get 001101.What is the minimum value of $$$s$$$ you can achieve by performing at most $$$k$$$ operations on $$$s$$$?"
  },
  {
    "title": "Count Paths",
    "url": "https://codeforces.com/problemset/problem/1923/E",
    "description": "You are given a tree, consisting of $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. Every vertex is colored in some color, denoted by an integer from $$$1$$$ to $$$n$$$.A simple path of the tree is called beautiful if:   it consists of at least $$$2$$$ vertices;  the first and the last vertices of the path have the same color;  no other vertex on the path has the same color as the first vertex. Count the number of the beautiful simple paths of the tree. Note that paths are considered undirected (i. e. the path from $$$x$$$ to $$$y$$$ is the same as the path from $$$y$$$ to $$$x$$$)."
  },
  {
    "title": "Slimes",
    "url": "https://codeforces.com/problemset/problem/1923/D",
    "description": "There are $$$n$$$ slimes placed in a line. The slimes are numbered from $$$1$$$ to $$$n$$$ in order from left to right. The size of the $$$i$$$-th slime is $$$a_i$$$.Every second, the following happens: exactly one slime eats one of its neighbors and increases its size by the eaten neighbor's size. A slime can eat its neighbor only if it is strictly bigger than this neighbor. If there is no slime which is strictly bigger than one of its neighbors, the process ends.For example, suppose $$$n = 5$$$, $$$a = [2, 2, 3, 1, 4]$$$. The process can go as follows:  first, the $$$3$$$-rd slime eats the $$$2$$$-nd slime. The size of the $$$3$$$-rd slime becomes $$$5$$$, the $$$2$$$-nd slime is eaten.  then, the $$$3$$$-rd slime eats the $$$1$$$-st slime (they are neighbors since the $$$2$$$-nd slime is already eaten). The size of the $$$3$$$-rd slime becomes $$$7$$$, the $$$1$$$-st slime is eaten.  then, the $$$5$$$-th slime eats the $$$4$$$-th slime. The size of the $$$5$$$-th slime becomes $$$5$$$, the $$$4$$$-th slime is eaten.  then, the $$$3$$$-rd slime eats the $$$5$$$-th slime (they are neighbors since the $$$4$$$-th slime is already eaten). The size of the $$$3$$$-rd slime becomes $$$12$$$, the $$$5$$$-th slime is eaten. For each slime, calculate the minimum number of seconds it takes for this slime to be eaten by another slime (among all possible ways the process can go), or report that it is impossible."
  },
  {
    "title": "Find B",
    "url": "https://codeforces.com/problemset/problem/1923/C",
    "description": "An array $$$a$$$ of length $$$m$$$ is considered good if there exists an integer array $$$b$$$ of length $$$m$$$ such that the following conditions hold:    $$$\\sum\\limits_{i=1}^{m} a_i = \\sum\\limits_{i=1}^{m} b_i$$$;   $$$a_i \\neq b_i$$$ for every index $$$i$$$ from $$$1$$$ to $$$m$$$;   $$$b_i > 0$$$ for every index $$$i$$$ from $$$1$$$ to $$$m$$$. You are given an array $$$c$$$ of length $$$n$$$. Each element of this array is greater than $$$0$$$.You have to answer $$$q$$$ queries. During the $$$i$$$-th query, you have to determine whether the subarray $$$c_{l_{i}}, c_{l_{i}+1}, \\dots, c_{r_{i}}$$$ is good."
  },
  {
    "title": "Monsters Attack!",
    "url": "https://codeforces.com/problemset/problem/1923/B",
    "description": "You are playing a computer game. The current level of this game can be modeled as a straight line. Your character is in point $$$0$$$ of this line. There are $$$n$$$ monsters trying to kill your character; the $$$i$$$-th monster has health equal to $$$a_i$$$ and is initially in the point $$$x_i$$$.Every second, the following happens:  first, you fire up to $$$k$$$ bullets at monsters. Each bullet targets exactly one monster and decreases its health by $$$1$$$. For each bullet, you choose its target arbitrary (for example, you can fire all bullets at one monster, fire all bullets at different monsters, or choose any other combination). Any monster can be targeted by a bullet, regardless of its position and any other factors;  then, all alive monsters with health $$$0$$$ or less die;  then, all alive monsters move $$$1$$$ point closer to you (monsters to the left of you increase their coordinates by $$$1$$$, monsters to the right of you decrease their coordinates by $$$1$$$). If any monster reaches your character (moves to the point $$$0$$$), you lose. Can you survive and kill all $$$n$$$ monsters without letting any of them reach your character?"
  },
  {
    "title": "Moving Chips",
    "url": "https://codeforces.com/problemset/problem/1923/A",
    "description": "There is a ribbon divided into $$$n$$$ cells, numbered from $$$1$$$ to $$$n$$$ from left to right. Each cell either contains a chip or is free.You can perform the following operation any number of times (possibly zero): choose a chip and move it to the closest free cell to the left. You can choose any chip that you want, provided that there is at least one free cell to the left of it. When you move the chip, the cell where it was before the operation becomes free.Your goal is to move the chips in such a way that they form a single block, without any free cells between them. What is the minimum number of operations you have to perform?"
  },
  {
    "title": "Replace on Segment",
    "url": "https://codeforces.com/problemset/problem/1922/F",
    "description": "You are given an array $$$a_1, a_2, \\dots, a_n$$$, where each element is an integer from $$$1$$$ to $$$x$$$.You can perform the following operation with it any number of times:  choose three integers $$$l$$$, $$$r$$$ and $$$k$$$ such that $$$1 \\le l \\le r \\le n$$$, $$$1 \\le k \\le x$$$ and each element $$$a_i$$$ such that $$$l \\le i \\le r$$$ is different from $$$k$$$. Then, for each $$$i \\in [l, r]$$$, replace $$$a_i$$$ with $$$k$$$. In other words, you choose a subsegment of the array and an integer from $$$1$$$ to $$$x$$$ which does not appear in that subsegment, and replace every element in the subsegment with that chosen integer.Your goal is to make all elements in the array equal. What is the minimum number of operations that you have to perform?"
  },
  {
    "title": "Increasing Subsequences",
    "url": "https://codeforces.com/problemset/problem/1922/E",
    "description": "Let's recall that an increasing subsequence of the array $$$a$$$ is a sequence that can be obtained from it by removing some elements without changing the order of the remaining elements, and the remaining elements are strictly increasing (i. e $$$a_{b_1} < a_{b_2} < \\dots < a_{b_k}$$$ and $$$b_1 < b_2 < \\dots < b_k$$$). Note that an empty subsequence is also increasing.You are given a positive integer $$$X$$$. Your task is to find an array of integers of length at most $$$200$$$, such that it has exactly $$$X$$$ increasing subsequences, or report that there is no such array. If there are several answers, you can print any of them.If two subsequences consist of the same elements, but correspond to different positions in the array, they are considered different (for example, the array $$$[2, 2]$$$ has two different subsequences equal to $$$[2]$$$)."
  },
  {
    "title": "Berserk Monsters",
    "url": "https://codeforces.com/problemset/problem/1922/D",
    "description": "Monocarp is playing a computer game (yet again). Guess what is he doing? That's right, killing monsters.There are $$$n$$$ monsters in a row, numbered from $$$1$$$ to $$$n$$$. The $$$i$$$-th monster has two parameters: attack value equal to $$$a_i$$$ and defense value equal to $$$d_i$$$. In order to kill these monsters, Monocarp put a berserk spell on them, so they're attacking each other instead of Monocarp's character.The fight consists of $$$n$$$ rounds. Every round, the following happens:  first, every alive monster $$$i$$$ deals $$$a_i$$$ damage to the closest alive monster to the left (if it exists) and the closest alive monster to the right (if it exists);  then, every alive monster $$$j$$$ which received more than $$$d_j$$$ damage during this round dies. I. e. the $$$j$$$-th monster dies if and only if its defense value $$$d_j$$$ is strictly less than the total damage it received this round. For each round, calculate the number of monsters that will die during that round."
  },
  {
    "title": "Closest Cities",
    "url": "https://codeforces.com/problemset/problem/1922/C",
    "description": "There are $$$n$$$ cities located on the number line, the $$$i$$$-th city is in the point $$$a_i$$$. The coordinates of the cities are given in ascending order, so $$$a_1 < a_2 < \\dots < a_n$$$.The distance between two cities $$$x$$$ and $$$y$$$ is equal to $$$|a_x - a_y|$$$.For each city $$$i$$$, let's define the closest city $$$j$$$ as the city such that the distance between $$$i$$$ and $$$j$$$ is not greater than the distance between $$$i$$$ and each other city $$$k$$$. For example, if the cities are located in points $$$[0, 8, 12, 15, 20]$$$, then:  the closest city to the city $$$1$$$ is the city $$$2$$$;  the closest city to the city $$$2$$$ is the city $$$3$$$;  the closest city to the city $$$3$$$ is the city $$$4$$$;  the closest city to the city $$$4$$$ is the city $$$3$$$;  the closest city to the city $$$5$$$ is the city $$$4$$$. The cities are located in such a way that for every city, the closest city is unique. For example, it is impossible for the cities to be situated in points $$$[1, 2, 3]$$$, since this would mean that the city $$$2$$$ has two closest cities ($$$1$$$ and $$$3$$$, both having distance $$$1$$$).You can travel between cities. Suppose you are currently in the city $$$x$$$. Then you can perform one of the following actions:  travel to any other city $$$y$$$, paying $$$|a_x - a_y|$$$ coins;  travel to the city which is the closest to $$$x$$$, paying $$$1$$$ coin. You are given $$$m$$$ queries. In each query, you will be given two cities, and you have to calculate the minimum number of coins you have to spend to travel from one city to the other city."
  },
  {
    "title": "Forming Triangles",
    "url": "https://codeforces.com/problemset/problem/1922/B",
    "description": "You have $$$n$$$ sticks, numbered from $$$1$$$ to $$$n$$$. The length of the $$$i$$$-th stick is $$$2^{a_i}$$$.You want to choose exactly $$$3$$$ sticks out of the given $$$n$$$ sticks, and form a non-degenerate triangle out of them, using the sticks as the sides of the triangle. A triangle is called non-degenerate if its area is strictly greater than $$$0$$$.You have to calculate the number of ways to choose exactly $$$3$$$ sticks so that a triangle can be formed out of them. Note that the order of choosing sticks does not matter (for example, choosing the $$$1$$$-st, $$$2$$$-nd and $$$4$$$-th stick is the same as choosing the $$$2$$$-nd, $$$4$$$-th and $$$1$$$-st stick). "
  },
  {
    "title": "Tricky Template",
    "url": "https://codeforces.com/problemset/problem/1922/A",
    "description": "You are given an integer $$$n$$$ and three strings $$$a, b, c$$$, each consisting of $$$n$$$ lowercase Latin letters.Let a template be a string $$$t$$$ consisting of $$$n$$$ lowercase and/or uppercase Latin letters. The string $$$s$$$ matches the template $$$t$$$ if the following conditions hold for all $$$i$$$ from $$$1$$$ to $$$n$$$:   if the $$$i$$$-th letter of the template is lowercase, then $$$s_i$$$ must be the same as $$$t_i$$$;  if the $$$i$$$-th letter of the template is uppercase, then $$$s_i$$$ must be different from the lowercase version of $$$t_i$$$. For example, if there is a letter 'A' in the template, you cannot use the letter 'a' in the corresponding position of the string. Accordingly, the string doesn't match the template if the condition doesn't hold for at least one $$$i$$$.Determine whether there exists a template $$$t$$$ such that the strings $$$a$$$ and $$$b$$$ match it, while the string $$$c$$$ does not."
  },
  {
    "title": "Mischievous Shooter",
    "url": "https://codeforces.com/problemset/problem/1921/G",
    "description": "Once the mischievous and wayward shooter named Shel found himself on a rectangular field of size $$$n \\times m$$$, divided into unit squares. Each cell either contains a target or not.Shel only had a lucky shotgun with him, with which he can shoot in one of the four directions: right-down, left-down, left-up, or right-up. When fired, the shotgun hits all targets in the chosen direction, the Manhattan distance to which does not exceed a fixed constant $$$k$$$. The Manhattan distance between two points $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ is equal to $$$|x_1 - x_2| + |y_1 - y_2|$$$.    Possible hit areas for $$$k = 3$$$. Shel's goal is to hit as many targets as possible. Please help him find this value."
  },
  {
    "title": "Sum of Progression",
    "url": "https://codeforces.com/problemset/problem/1921/F",
    "description": "You are given an array $$$a$$$ of $$$n$$$ numbers. There are also $$$q$$$ queries of the form $$$s, d, k$$$.For each query $$$q$$$, find the sum of elements $$$a_s + a_{s+d} \\cdot 2 + \\dots + a_{s + d \\cdot (k - 1)} \\cdot k$$$. In other words, for each query, it is necessary to find the sum of $$$k$$$ elements of the array with indices starting from the $$$s$$$-th, taking steps of size $$$d$$$, multiplying it by the serial number of the element in the resulting sequence."
  },
  {
    "title": "Eat the Chip",
    "url": "https://codeforces.com/problemset/problem/1921/E",
    "description": "Alice and Bob are playing a game on a checkered board. The board has $$$h$$$ rows, numbered from top to bottom, and $$$w$$$ columns, numbered from left to right. Both players have a chip each. Initially, Alice's chip is located at the cell with coordinates $$$(x_a, y_a)$$$ (row $$$x_a$$$, column $$$y_a$$$), and Bob's chip is located at $$$(x_b, y_b)$$$. It is guaranteed that the initial positions of the chips do not coincide. Players take turns making moves, with Alice starting.On her turn, Alice can move her chip one cell down or one cell down-right or down-left (diagonally). Bob, on the other hand, moves his chip one cell up, up-right, or up-left. It is not allowed to make moves that go beyond the board boundaries.More formally, if at the beginning of Alice's turn she is in the cell with coordinates $$$(x_a, y_a)$$$, then she can move her chip to one of the cells $$$(x_a + 1, y_a)$$$, $$$(x_a + 1, y_a - 1)$$$, or $$$(x_a + 1, y_a + 1)$$$. Bob, on his turn, from the cell $$$(x_b, y_b)$$$ can move to $$$(x_b - 1, y_b)$$$, $$$(x_b - 1, y_b - 1)$$$, or $$$(x_b - 1, y_b + 1)$$$. The new chip coordinates $$$(x', y')$$$ must satisfy the conditions $$$1 \\le x' \\le h$$$ and $$$1 \\le y' \\le w$$$.   Example game state. Alice plays with the white chip, Bob with the black one. Arrows indicate possible moves. A player immediately wins if they place their chip in a cell occupied by the other player's chip. If either player cannot make a move (Alice—if she is in the last row, i.e. $$$x_a = h$$$, Bob—if he is in the first row, i.e. $$$x_b = 1$$$), the game immediately ends in a draw.What will be the outcome of the game if both opponents play optimally?"
  },
  {
    "title": "Very Different Array",
    "url": "https://codeforces.com/problemset/problem/1921/D",
    "description": "Petya has an array $$$a_i$$$ of $$$n$$$ integers. His brother Vasya became envious and decided to make his own array of $$$n$$$ integers.To do this, he found $$$m$$$ integers $$$b_i$$$ ($$$m\\ge n$$$), and now he wants to choose some $$$n$$$ integers of them and arrange them in a certain order to obtain an array $$$c_i$$$ of length $$$n$$$.To avoid being similar to his brother, Vasya wants to make his array as different as possible from Petya's array. Specifically, he wants the total difference $$$D = \\sum_{i=1}^{n} |a_i - c_i|$$$ to be as large as possible.Help Vasya find the maximum difference $$$D$$$ he can obtain."
  },
  {
    "title": "Sending Messages",
    "url": "https://codeforces.com/problemset/problem/1921/C",
    "description": "Stepan is a very busy person. Today he needs to send $$$n$$$ messages at moments $$$m_1, m_2, \\dots m_n$$$ ($$$m_i < m_{i + 1}$$$). Unfortunately, by the moment $$$0$$$, his phone only has $$$f$$$ units of charge left. At the moment $$$0$$$, the phone is turned on.The phone loses $$$a$$$ units of charge for each unit of time it is on. Also, at any moment, Stepan can turn off the phone and turn it on later. This action consumes $$$b$$$ units of energy each time. Consider turning on and off to be instantaneous, so you can turn it on at moment $$$x$$$ and send a message at the same moment, and vice versa, send a message at moment $$$x$$$ and turn off the phone at the same moment.If at any point the charge level drops to $$$0$$$ (becomes $$$\\le 0$$$), it is impossible to send a message at that moment.Since all messages are very important to Stepan, he wants to know if he can send all the messages without the possibility of charging the phone."
  },
  {
    "title": "Arranging Cats",
    "url": "https://codeforces.com/problemset/problem/1921/B",
    "description": "In order to test the hypothesis about the cats, the scientists must arrange the cats in the boxes in a specific way. Of course, they would like to test the hypothesis and publish a sensational article as quickly as possible, because they are too engrossed in the next hypothesis about the phone's battery charge.Scientists have $$$n$$$ boxes in which cats may or may not sit. Let the current state of the boxes be denoted by the sequence $$$b_1, \\dots, b_n$$$: $$$b_i = 1$$$ if there is a cat in box number $$$i$$$, and $$$b_i = 0$$$ otherwise. Fortunately, the unlimited production of cats has already been established, so in one day, the scientists can perform one of the following operations:  Take a new cat and place it in a box (for some $$$i$$$ such that $$$b_i = 0$$$, assign $$$b_i = 1$$$).  Remove a cat from a box and send it into retirement (for some $$$i$$$ such that $$$b_i = 1$$$, assign $$$b_i = 0$$$).  Move a cat from one box to another (for some $$$i, j$$$ such that $$$b_i = 1, b_j = 0$$$, assign $$$b_i = 0, b_j = 1$$$). It has also been found that some boxes were immediately filled with cats. Therefore, the scientists know the initial position of the cats in the boxes $$$s_1, \\dots, s_n$$$ and the desired position $$$f_1, \\dots, f_n$$$.Due to the large amount of paperwork, the scientists do not have time to solve this problem. Help them for the sake of science and indicate the minimum number of days required to test the hypothesis."
  },
  {
    "title": "Square",
    "url": "https://codeforces.com/problemset/problem/1921/A",
    "description": "A square of positive (strictly greater than $$$0$$$) area is located on the coordinate plane, with sides parallel to the coordinate axes. You are given the coordinates of its corners, in random order. Your task is to find the area of the square."
  },
  {
    "title": "Smooth Sailing (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1920/F1",
    "description": "The only difference between the two versions of this problem is the constraint on $$$q$$$. You can make hacks only if both versions of the problem are solved.Thomas is sailing around an island surrounded by the ocean. The ocean and island can be represented by a grid with $$$n$$$ rows and $$$m$$$ columns. The rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The position of a cell at row $$$r$$$ and column $$$c$$$ can be represented as $$$(r, c)$$$. Below is an example of a valid grid.  Example of a valid grid There are three types of cells: island, ocean and underwater volcano. Cells representing the island are marked with a '#', cells representing the ocean are marked with a '.', and cells representing an underwater volcano are marked with a 'v'. It is guaranteed that there is at least one island cell and at least one underwater volcano cell. It is also guaranteed that the set of all island cells forms a single connected component$$$^{\\dagger}$$$ and the set of all ocean cells and underwater volcano cells forms a single connected component. Additionally, it is guaranteed that there are no island cells at the edge of the grid (that is, at row $$$1$$$, at row $$$n$$$, at column $$$1$$$, and at column $$$m$$$).Define a round trip starting from cell $$$(x, y)$$$ as a path Thomas takes which satisfies the following conditions:  The path starts and ends at $$$(x, y)$$$.  If Thomas is at cell $$$(i, j)$$$, he can go to cells $$$(i+1, j)$$$, $$$(i-1, j)$$$, $$$(i, j-1)$$$, and $$$(i, j+1)$$$ as long as the destination cell is an ocean cell or an underwater volcano cell and is still inside the grid. Note that it is allowed for Thomas to visit the same cell multiple times in the same round trip.  The path must go around the island and fully encircle it. Some path $$$p$$$ fully encircles the island if it is impossible to go from an island cell to a cell on the grid border by only traveling to adjacent on a side or diagonal cells without visiting a cell on path $$$p$$$. In the image below, the path starting from $$$(2, 2)$$$, going to $$$(1, 3)$$$, and going back to $$$(2, 2)$$$ the other way does not fully encircle the island and is not considered a round trip.   Example of a path that does not fully encircle the island The safety of a round trip is the minimum Manhattan distance$$$^{\\ddagger}$$$ from a cell on the round trip to an underwater volcano (note that the presence of island cells does not impact this distance).You have $$$q$$$ queries. A query can be represented as $$$(x, y)$$$ and for every query, you want to find the maximum safety of a round trip starting from $$$(x, y)$$$. It is guaranteed that $$$(x, y)$$$ is an ocean cell or an underwater volcano cell.$$$^{\\dagger}$$$A set of cells forms a single connected component if from any cell of this set it is possible to reach any other cell of this set by moving only through the cells of this set, each time going to a cell with a common side.$$$^{\\ddagger}$$$Manhattan distance between cells $$$(r_1, c_1)$$$ and $$$(r_2, c_2)$$$ is equal to $$$|r_1 - r_2| + |c_1 - c_2|$$$."
  },
  {
    "title": "Counting Binary Strings",
    "url": "https://codeforces.com/problemset/problem/1920/E",
    "description": "Patrick calls a substring$$$^\\dagger$$$ of a binary string$$$^\\ddagger$$$ good if this substring contains exactly one 1. Help Patrick count the number of binary strings $$$s$$$ such that $$$s$$$ contains exactly $$$n$$$ good substrings and has no good substring of length strictly greater than $$$k$$$. Note that substrings are differentiated by their location in the string, so if $$$s =$$$ 1010 you should count both occurrences of 10.$$$^\\dagger$$$ A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.$$$^\\ddagger$$$ A binary string is a string that only contains the characters 0 and 1."
  },
  {
    "title": "Array Repetition",
    "url": "https://codeforces.com/problemset/problem/1920/D",
    "description": "Jayden has an array $$$a$$$ which is initially empty. There are $$$n$$$ operations of two types he must perform in the given order.  Jayden appends an integer $$$x$$$ ($$$1 \\leq x \\leq n$$$) to the end of array $$$a$$$.  Jayden appends $$$x$$$ copies of array $$$a$$$ to the end of array $$$a$$$. In other words, array $$$a$$$ becomes $$$[a,\\underbrace{a,\\ldots,a}_{x}]$$$. It is guaranteed that he has done at least one operation of the first type before this. Jayden has $$$q$$$ queries. For each query, you must tell him the $$$k$$$-th element of array $$$a$$$. The elements of the array are numbered from $$$1$$$."
  },
  {
    "title": "Partitioning the Array",
    "url": "https://codeforces.com/problemset/problem/1920/C",
    "description": "Allen has an array $$$a_1, a_2,\\ldots,a_n$$$. For every positive integer $$$k$$$ that is a divisor of $$$n$$$, Allen does the following:  He partitions the array into $$$\\frac{n}{k}$$$ disjoint subarrays of length $$$k$$$. In other words, he partitions the array into the following subarrays: $$$$$$[a_1,a_2,\\ldots,a_k],[a_{k+1}, a_{k+2},\\ldots,a_{2k}],\\ldots,[a_{n-k+1},a_{n-k+2},\\ldots,a_{n}]$$$$$$  Allen earns one point if there exists some positive integer $$$m$$$ ($$$m \\geq 2$$$) such that if he replaces every element in the array with its remainder when divided by $$$m$$$, then all subarrays will be identical. Help Allen find the number of points he will earn."
  },
  {
    "title": "Summation Game",
    "url": "https://codeforces.com/problemset/problem/1920/B",
    "description": "Alice and Bob are playing a game. They have an array $$$a_1, a_2,\\ldots,a_n$$$. The game consists of two steps:  First, Alice will remove at most $$$k$$$ elements from the array.  Second, Bob will multiply at most $$$x$$$ elements of the array by $$$-1$$$. Alice wants to maximize the sum of elements of the array while Bob wants to minimize it. Find the sum of elements of the array after the game if both players play optimally."
  },
  {
    "title": "Satisfying Constraints",
    "url": "https://codeforces.com/problemset/problem/1920/A",
    "description": "Alex is solving a problem. He has $$$n$$$ constraints on what the integer $$$k$$$ can be. There are three types of constraints:  $$$k$$$ must be greater than or equal to some integer $$$x$$$;  $$$k$$$ must be less than or equal to some integer $$$x$$$;  $$$k$$$ must be not equal to some integer $$$x$$$. Help Alex find the number of integers $$$k$$$ that satisfy all $$$n$$$ constraints. It is guaranteed that the answer is finite (there exists at least one constraint of type $$$1$$$ and at least one constraint of type $$$2$$$). Also, it is guaranteed that no two constraints are the exact same."
  },
  {
    "title": "Tree Diameter",
    "url": "https://codeforces.com/problemset/problem/1919/H",
    "description": "There is a hidden tree with $$$n$$$ vertices. The $$$n-1$$$ edges of the tree are numbered from $$$1$$$ to $$$n-1$$$. You can ask the following queries of two types:  Give the grader an array $$$a$$$ with $$$n - 1$$$ positive integers. For each edge from $$$1$$$ to $$$n - 1$$$, the weight of edge $$$i$$$ is set to $$$a_i$$$. Then, the grader will return the length of the diameter$$$^\\dagger$$$.  Give the grader two indices $$$1 \\le a, b \\le n - 1$$$. The grader will return the number of edges between edges $$$a$$$ and $$$b$$$. In other words, if edge $$$a$$$ connects $$$u_a$$$ and $$$v_a$$$ while edge $$$b$$$ connects $$$u_b$$$ and $$$v_b$$$, the grader will return $$$\\min(\\text{dist}(u_a, u_b), \\text{dist}(v_a, u_b), \\text{dist}(u_a, v_b), \\text{dist}(v_a, v_b))$$$, where $$$\\text{dist}(u, v)$$$ represents the number of edges on the path between vertices $$$u$$$ and $$$v$$$. Find any tree isomorphic$$$^\\ddagger$$$ to the hidden tree after at most $$$n$$$ queries of type 1 and $$$n$$$ queries of type 2 in any order.$$$^\\dagger$$$ The distance between two vertices is the sum of the weights on the unique simple path that connects them. The diameter is the largest of all those distances.$$$^\\ddagger$$$ Two trees, consisting of $$$n$$$ vertices each, are called isomorphic if there exists a permutation $$$p$$$ containing integers from $$$1$$$ to $$$n$$$ such that edge ($$$u$$$, $$$v$$$) is present in the first tree if and only if the edge ($$$p_u$$$, $$$p_v$$$) is present in the second tree."
  },
  {
    "title": "Tree LGM",
    "url": "https://codeforces.com/problemset/problem/1919/G",
    "description": "In TreeWorld, there is a popular two-player game played on a tree with $$$n$$$ vertices labelled from $$$1$$$ to $$$n$$$. In this game, the tournament leaders first choose a vertex to be the root of the tree and choose another vertex (possibly the same vertex as the root) to place a coin on. Then, each player will take turns moving the coin to any child$$$^\\dagger$$$ of the vertex that the coin is currently on. The first player who is unable to make a move loses.Alice wants to be a tree LGM, so she spends a lot of time studying the game. She wrote down an $$$n$$$ by $$$n$$$ matrix $$$s$$$, where $$$s_{i,j} = \\mathtt{1}$$$ if the first player can win with the root of the tree chosen to be vertex $$$i$$$, and the coin was initially placed on vertex $$$j$$$. Otherwise, $$$s_{i, j} = \\mathtt{0}$$$. Alice is a perfectionist, so she assumes that both players play perfectly in the game.However, she accidentally knocked her head on the way to the tournament and forgot what the tree looked like. Determine whether there exists a tree that satisfies the winning and losing states represented by matrix $$$s$$$, and if it exists, construct a valid tree.$$$^\\dagger$$$ A vertex $$$c$$$ is a child of vertex $$$u$$$ if there is an edge between $$$c$$$ and $$$u$$$, and $$$c$$$ does not lie on the unique simple path from the root to vertex $$$u$$$."
  },
  {
    "title": "Wine Factory (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1919/F2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on $$$c_i$$$ and $$$z$$$. You can make hacks only if both versions of the problem are solved.There are three arrays $$$a$$$, $$$b$$$ and $$$c$$$. $$$a$$$ and $$$b$$$ have length $$$n$$$ and $$$c$$$ has length $$$n-1$$$. Let $$$W(a,b,c)$$$ denote the liters of wine created from the following process.Create $$$n$$$ water towers. The $$$i$$$-th water tower initially has $$$a_i$$$ liters of water and has a wizard with power $$$b_i$$$ in front of it. Furthermore, for each $$$1 \\le i \\le n - 1$$$, there is a valve connecting water tower $$$i$$$ to $$$i + 1$$$ with capacity $$$c_i$$$.For each $$$i$$$ from $$$1$$$ to $$$n$$$ in this order, the following happens:   The wizard in front of water tower $$$i$$$ removes at most $$$b_i$$$ liters of water from the tower and turns the removed water into wine.  If $$$i \\neq n$$$, at most $$$c_i$$$ liters of the remaining water left in water tower $$$i$$$ flows through the valve into water tower $$$i + 1$$$. There are $$$q$$$ updates. In each update, you will be given integers $$$p$$$, $$$x$$$, $$$y$$$ and $$$z$$$ and you will update $$$a_p := x$$$, $$$b_p := y$$$ and $$$c_p := z$$$. After each update, find the value of $$$W(a,b,c)$$$. Note that previous updates to arrays $$$a$$$, $$$b$$$ and $$$c$$$ persist throughout future updates."
  },
  {
    "title": "Wine Factory (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1919/F1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$c_i$$$ and $$$z$$$. You can make hacks only if both versions of the problem are solved.There are three arrays $$$a$$$, $$$b$$$ and $$$c$$$. $$$a$$$ and $$$b$$$ have length $$$n$$$ and $$$c$$$ has length $$$n-1$$$. Let $$$W(a,b,c)$$$ denote the liters of wine created from the following process.Create $$$n$$$ water towers. The $$$i$$$-th water tower initially has $$$a_i$$$ liters of water and has a wizard with power $$$b_i$$$ in front of it. Furthermore, for each $$$1 \\le i \\le n - 1$$$, there is a valve connecting water tower $$$i$$$ to $$$i + 1$$$ with capacity $$$c_i$$$.For each $$$i$$$ from $$$1$$$ to $$$n$$$ in this order, the following happens:   The wizard in front of water tower $$$i$$$ removes at most $$$b_i$$$ liters of water from the tower and turns the removed water into wine.  If $$$i \\neq n$$$, at most $$$c_i$$$ liters of the remaining water left in water tower $$$i$$$ flows through the valve into water tower $$$i + 1$$$. There are $$$q$$$ updates. In each update, you will be given integers $$$p$$$, $$$x$$$, $$$y$$$ and $$$z$$$ and you will update $$$a_p := x$$$, $$$b_p := y$$$ and $$$c_p := z$$$. After each update, find the value of $$$W(a,b,c)$$$. Note that previous updates to arrays $$$a$$$, $$$b$$$ and $$$c$$$ persist throughout future updates."
  },
  {
    "title": "Counting Prefixes",
    "url": "https://codeforces.com/problemset/problem/1919/E",
    "description": "There is a hidden array $$$a$$$ of size $$$n$$$ consisting of only $$$1$$$ and $$$-1$$$. Let $$$p$$$ be the prefix sums of array $$$a$$$. More formally, $$$p$$$ is an array of length $$$n$$$ defined as $$$p_i = a_1 + a_2 + \\ldots + a_i$$$. Afterwards, array $$$p$$$ is sorted in non-decreasing order. For example, if $$$a = [1, -1, -1, 1, 1]$$$, then $$$p = [1, 0, -1, 0, 1]$$$ before sorting and $$$p = [-1, 0, 0, 1, 1]$$$ after sorting.You are given the prefix sum array $$$p$$$ after sorting, but you do not know what array $$$a$$$ is. Your task is to count the number of initial arrays $$$a$$$ such that the above process results in the given sorted prefix sum array $$$p$$$. As this number can be large, you are only required to find it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "01 Tree",
    "url": "https://codeforces.com/problemset/problem/1919/D",
    "description": "There is an edge-weighted complete binary tree with $$$n$$$ leaves. A complete binary tree is defined as a tree where every non-leaf vertex has exactly 2 children. For each non-leaf vertex, we label one of its children as the left child and the other as the right child.The binary tree has a very strange property. For every non-leaf vertex, one of the edges to its children has weight $$$0$$$ while the other edge has weight $$$1$$$. Note that the edge with weight $$$0$$$ can be connected to either its left or right child.You forgot what the tree looks like, but luckily, you still remember some information about the leaves in the form of an array $$$a$$$ of size $$$n$$$. For each $$$i$$$ from $$$1$$$ to $$$n$$$, $$$a_i$$$ represents the distance$$$^\\dagger$$$ from the root to the $$$i$$$-th leaf in dfs order$$$^\\ddagger$$$. Determine whether there exists a complete binary tree which satisfies array $$$a$$$. Note that you do not need to reconstruct the tree.$$$^\\dagger$$$ The distance from vertex $$$u$$$ to vertex $$$v$$$ is defined as the sum of weights of the edges on the path from vertex $$$u$$$ to vertex $$$v$$$.$$$^\\ddagger$$$ The dfs order of the leaves is found by calling the following $$$\\texttt{dfs}$$$ function on the root of the binary tree. dfs_order = []function dfs(v):    if v is leaf:        append v to the back of dfs_order    else:        dfs(left child of v)        dfs(right child of v)dfs(root)"
  },
  {
    "title": "Grouping Increases",
    "url": "https://codeforces.com/problemset/problem/1919/C",
    "description": "You are given an array $$$a$$$ of size $$$n$$$. You will do the following process to calculate your penalty:   Split array $$$a$$$ into two (possibly empty) subsequences$$$^\\dagger$$$ $$$s$$$ and $$$t$$$ such that every element of $$$a$$$ is either in $$$s$$$ or $$$t^\\ddagger$$$.  For an array $$$b$$$ of size $$$m$$$, define the penalty $$$p(b)$$$ of an array $$$b$$$ as the number of indices $$$i$$$ between $$$1$$$ and $$$m - 1$$$ where $$$b_i < b_{i + 1}$$$.  The total penalty you will receive is $$$p(s) + p(t)$$$. If you perform the above process optimally, find the minimum possible penalty you will receive.$$$^\\dagger$$$ A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements.$$$^\\ddagger$$$ Some valid ways to split array $$$a=[3,1,4,1,5]$$$ into $$$(s,t)$$$ are $$$([3,4,1,5],[1])$$$, $$$([1,1],[3,4,5])$$$ and $$$([\\,],[3,1,4,1,5])$$$ while some invalid ways to split $$$a$$$ are $$$([3,4,5],[1])$$$, $$$([3,1,4,1],[1,5])$$$ and $$$([1,3,4],[5,1])$$$."
  },
  {
    "title": "Plus-Minus Split",
    "url": "https://codeforces.com/problemset/problem/1919/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$ consisting of characters \"+\" and \"-\". $$$s$$$ represents an array $$$a$$$ of length $$$n$$$ defined by $$$a_i=1$$$ if $$$s_i=$$$ \"+\" and $$$a_i=-1$$$ if $$$s_i=$$$ \"-\".You will do the following process to calculate your penalty:   Split $$$a$$$ into non-empty arrays $$$b_1,b_2,\\ldots,b_k$$$ such that $$$b_1+b_2+\\ldots+b_k=a^\\dagger$$$, where $$$+$$$ denotes array concatenation.  The penalty of a single array is the absolute value of its sum multiplied by its length. In other words, for some array $$$c$$$ of length $$$m$$$, its penalty is calculated as $$$p(c)=|c_1+c_2+\\ldots+c_m| \\cdot m$$$.  The total penalty that you will receive is $$$p(b_1)+p(b_2)+\\ldots+p(b_k)$$$. If you perform the above process optimally, find the minimum possible penalty you will receive.$$$^\\dagger$$$ Some valid ways to split $$$a=[3,1,4,1,5]$$$ into $$$(b_1,b_2,\\ldots,b_k)$$$ are $$$([3],[1],[4],[1],[5])$$$, $$$([3,1],[4,1,5])$$$ and $$$([3,1,4,1,5])$$$ while some invalid ways to split $$$a$$$ are $$$([3,1],[1,5])$$$, $$$([3],[\\,],[1,4],[1,5])$$$ and $$$([3,4],[5,1,1])$$$."
  },
  {
    "title": "Wallet Exchange",
    "url": "https://codeforces.com/problemset/problem/1919/A",
    "description": "Alice and Bob are bored, so they decide to play a game with their wallets. Alice has $$$a$$$ coins in her wallet, while Bob has $$$b$$$ coins in his wallet.Both players take turns playing, with Alice making the first move. In each turn, the player will perform the following steps in order:  Choose to exchange wallets with their opponent, or to keep their current wallets.  Remove $$$1$$$ coin from the player's current wallet. The current wallet cannot have $$$0$$$ coins before performing this step. The player who cannot make a valid move on their turn loses. If both Alice and Bob play optimally, determine who will win the game."
  },
  {
    "title": "Permutation of Given",
    "url": "https://codeforces.com/problemset/problem/1918/G",
    "description": "You were given only one number, $$$n$$$. It didn't seem interesting to you, so you wondered if it's possible to come up with an array of length $$$n$$$ consisting of non-zero integers, such that if each element of the array is replaced by the sum of its neighbors (the elements on the ends are replaced by their only neighbors), you obtain a permutation of the numbers in the original array."
  },
  {
    "title": "Caterpillar on a Tree",
    "url": "https://codeforces.com/problemset/problem/1918/F",
    "description": "The caterpillar decided to visit every node of the tree. Initially, it is sitting at the root.The tree is represented as a rooted tree with the root at the node $$$1$$$. Each crawl to a neighboring node takes $$$1$$$ minute for the caterpillar. And there is a trampoline under the tree. If the caterpillar detaches from the tree and falls onto the trampoline, it will end up at the root of the tree in $$$0$$$ seconds. But the trampoline is old and can withstand no more than $$$k$$$ caterpillar's falls.What is the minimum time the caterpillar can take to visit all the nodes of the tree?More formally, we need to find the minimum time required to visit all the nodes of the tree, if the caterpillar starts at the root (node $$$1$$$) and moves using two methods.   Crawl along an edge to one of the neighboring nodes: takes $$$1$$$ minute.   Teleport to the root: takes no time,  no new nodes become visited. The second method (teleportation) can be used at most $$$k$$$ times. The caterpillar can finish the journey at any node."
  },
  {
    "title": "ace5 and Task Order",
    "url": "https://codeforces.com/problemset/problem/1918/E",
    "description": "This is an interactive problem!In the new round, there were $$$n$$$ tasks with difficulties from $$$1$$$ to $$$n$$$. The coordinator, who decided to have the first round with tasks in unsorted order of difficulty, rearranged the tasks, resulting in a permutation of difficulties from $$$1$$$ to $$$n$$$. After that, the coordinator challenged ace5 to guess the permutation in the following way.Initially, the coordinator chooses a number $$$x$$$ from $$$1$$$ to $$$n$$$.ace5 can make queries of the form: $$$?\\ i$$$. The answer will be:   $$$>$$$, if $$$a_i > x$$$, after which $$$x$$$ increases by $$$1$$$.  $$$<$$$, if $$$a_i < x$$$, after which $$$x$$$ decreases by $$$1$$$.  $$$=$$$, if $$$a_i = x$$$, after which $$$x$$$ remains unchanged. The task for ace5 is to guess the permutation in no more than $$$40n$$$ queries. Since ace5 is too busy writing the announcement, he has entrusted this task to you."
  },
  {
    "title": "Blocking Elements",
    "url": "https://codeforces.com/problemset/problem/1918/D",
    "description": "You are given an array of numbers $$$a_1, a_2, \\ldots, a_n$$$. Your task is to block some elements of the array in order to minimize its cost. Suppose you block the elements with indices $$$1 \\leq b_1 < b_2 < \\ldots < b_m \\leq n$$$. Then the cost of the array is calculated as the maximum of:   the sum of the blocked elements, i.e., $$$a_{b_1} + a_{b_2} + \\ldots + a_{b_m}$$$.  the maximum sum of the segments into which the array is divided when the blocked elements are removed. That is, the maximum sum of the following ($$$m + 1$$$) subarrays: [$$$1, b_1 − 1$$$], [$$$b_1 + 1, b_2 − 1$$$], [$$$\\ldots$$$], [$$$b_{m−1} + 1, b_m - 1$$$], [$$$b_m + 1, n$$$] (the sum of numbers in a subarray of the form [$$$x,x − 1$$$] is considered to be $$$0$$$). For example, if $$$n = 6$$$, the original array is [$$$1, 4, 5, 3, 3, 2$$$], and you block the elements at positions $$$2$$$ and $$$5$$$, then the cost of the array will be the maximum of the sum of the blocked elements ($$$4 + 3 = 7$$$) and the sums of the subarrays ($$$1$$$, $$$5 + 3 = 8$$$, $$$2$$$), which is $$$\\max(7,1,8,2) = 8$$$. You need to output the minimum cost of the array after blocking."
  },
  {
    "title": "XOR-distance",
    "url": "https://codeforces.com/problemset/problem/1918/C",
    "description": "You are given integers $$$a$$$, $$$b$$$, $$$r$$$. Find the smallest value of $$$|({a \\oplus x}) - ({b \\oplus x})|$$$ among all $$$0 \\leq x \\leq r$$$.$$$\\oplus$$$ is the operation of bitwise XOR, and $$$|y|$$$ is absolute value of $$$y$$$."
  },
  {
    "title": "Minimize Inversions",
    "url": "https://codeforces.com/problemset/problem/1918/B",
    "description": "You are given two permutations $$$a$$$ and $$$b$$$ of length $$$n$$$. A permutation is an array of $$$n$$$ elements from $$$1$$$ to $$$n$$$ where all elements are distinct. For example, an array [$$$2,1,3$$$] is a permutation, but [$$$0,1$$$] and [$$$1,3,1$$$] aren't.You can (as many times as you want) choose two indices $$$i$$$ and $$$j$$$, then swap $$$a_i$$$ with $$$a_j$$$ and $$$b_i$$$ with $$$b_j$$$ simultaneously. You hate inversions, so you want to minimize the total number of inversions in both permutations.An inversion in a permutation $$$p$$$ is a pair of indices $$$(i, j)$$$ such that $$$i < j$$$ and $$$p_i > p_j$$$. For example, if $$$p=[3,1,4,2,5]$$$ then there are $$$3$$$ inversions in it (the pairs of indices are $$$(1,2)$$$, $$$(1,4)$$$ and $$$(3,4)$$$)."
  },
  {
    "title": "Brick Wall",
    "url": "https://codeforces.com/problemset/problem/1918/A",
    "description": "A brick is a strip of size $$$1 \\times k$$$, placed horizontally or vertically, where $$$k$$$ can be an arbitrary number that is at least $$$2$$$ ($$$k \\ge 2$$$).A brick wall of size $$$n \\times m$$$ is such a way to place several bricks inside a rectangle $$$n \\times m$$$, that all bricks lie either horizontally or vertically in the cells, do not cross the border of the rectangle, and that each cell of the $$$n \\times m$$$ rectangle belongs to exactly one brick. Here $$$n$$$ is the height of the rectangle $$$n \\times m$$$ and $$$m$$$ is the width. Note that there can be bricks with different values of k in the same brick wall.The wall stability is the difference between the number of horizontal bricks and the number of vertical bricks. Note that if you used $$$0$$$ horizontal bricks and $$$2$$$ vertical ones, then the stability will be $$$-2$$$, not $$$2$$$.What is the maximal possible stability of a wall of size $$$n \\times m$$$?It is guaranteed that under restrictions in the statement at least one $$$n \\times m$$$ wall exists."
  },
  {
    "title": "Construct Tree",
    "url": "https://codeforces.com/problemset/problem/1917/F",
    "description": "You are given an array of integers $$$l_1, l_2, \\dots, l_n$$$ and an integer $$$d$$$. Is it possible to construct a tree satisfying the following three conditions?  The tree contains $$$n + 1$$$ nodes.  The length of the $$$i$$$-th edge is equal to $$$l_i$$$.  The (weighted) diameter of the tree is equal to $$$d$$$. "
  },
  {
    "title": "Construct Matrix",
    "url": "https://codeforces.com/problemset/problem/1917/E",
    "description": "You are given an even integer $$$n$$$ and an integer $$$k$$$. Your task is to construct a matrix of size $$$n \\times n$$$ consisting of numbers $$$0$$$ and $$$1$$$ in such a way that the following conditions are true, or report that it is impossible:  the sum of all the numbers in the matrix is exactly $$$k$$$;  the bitwise $$$\\texttt{XOR}$$$ of all the numbers in the row $$$i$$$ is the same for each $$$i$$$;  the bitwise $$$\\texttt{XOR}$$$ of all the numbers in the column $$$j$$$ is the same for each $$$j$$$. "
  },
  {
    "title": "Yet Another Inversions Problem",
    "url": "https://codeforces.com/problemset/problem/1917/D",
    "description": "You are given a permutation $$$p_0, p_1, \\ldots, p_{n-1}$$$ of odd integers from $$$1$$$ to $$$2n-1$$$ and a permutation $$$q_0, q_1, \\ldots, q_{k-1}$$$ of integers from $$$0$$$ to $$$k-1$$$.An array $$$a_0, a_1, \\ldots, a_{nk-1}$$$ of length $$$nk$$$ is defined as follows: $$$a_{i \\cdot k+j}=p_i \\cdot 2^{q_j}$$$ for all $$$0 \\le i < n$$$ and all $$$0 \\le j < k$$$ For example, if $$$p = [3, 5, 1]$$$ and $$$q = [0, 1]$$$, then $$$a = [3, 6, 5, 10, 1, 2]$$$.Note that all arrays in the statement are zero-indexed. Note that each element of the array $$$a$$$ is uniquely determined.Find the number of inversions in the array $$$a$$$. Since this number can be very large, you should find only its remainder modulo $$$998\\,244\\,353$$$.An inversion in array $$$a$$$ is a pair $$$(i, j)$$$ ($$$0 \\le i < j < nk$$$) such that $$$a_i > a_j$$$."
  },
  {
    "title": "Watering an Array",
    "url": "https://codeforces.com/problemset/problem/1917/C",
    "description": "You have an array of integers $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$. On the $$$i$$$-th of the next $$$d$$$ days you are going to do exactly one of the following two actions:  Add $$$1$$$ to each of the first $$$b_i$$$ elements of the array $$$a$$$ (i.e., set $$$a_j := a_j + 1$$$ for each $$$1 \\le j \\le b_i$$$).  Count the elements which are equal to their position (i.e., the $$$a_j = j$$$). Denote the number of such elements as $$$c$$$. Then, you add $$$c$$$ to your score, and reset the entire array $$$a$$$ to a $$$0$$$-array of length $$$n$$$ (i.e., set $$$[a_1, a_2, \\ldots, a_n] := [0, 0, \\ldots, 0]$$$). Your score is equal to $$$0$$$ in the beginning. Note that on each day you should perform exactly one of the actions above: you cannot skip a day or perform both actions on the same day.What is the maximum score you can achieve at the end?Since $$$d$$$ can be quite large, the sequence $$$b$$$ is given to you in the compressed format:   You are given a sequence of integers $$$v_1, v_2, \\ldots, v_k$$$. The sequence $$$b$$$ is a concatenation of infinitely many copies of $$$v$$$: $$$b = [v_1, v_2, \\ldots, v_k, v_1, v_2, \\ldots, v_k, \\ldots]$$$. "
  },
  {
    "title": "Erase First or Second Letter",
    "url": "https://codeforces.com/problemset/problem/1917/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$. Let's define two operations you can apply on the string:  remove the first character of the string;  remove the second character of the string. Your task is to find the number of distinct non-empty strings that can be generated by applying the given operations on the initial string any number of times (possibly zero), in any order."
  },
  {
    "title": "Least Product",
    "url": "https://codeforces.com/problemset/problem/1917/A",
    "description": "You are given an array of integers $$$a_1, a_2, \\dots, a_n$$$. You can perform the following operation any number of times (possibly zero):  Choose any element $$$a_i$$$ from the array and change its value to any integer between $$$0$$$ and $$$a_i$$$ (inclusive). More formally, if $$$a_i < 0$$$, replace $$$a_i$$$ with any integer in $$$[a_i, 0]$$$, otherwise replace $$$a_i$$$ with any integer in $$$[0, a_i]$$$. Let $$$r$$$ be the minimum possible product of all the $$$a_i$$$ after performing the operation any number of times.Find the minimum number of operations required to make the product equal to $$$r$$$. Also, print one such shortest sequence of operations. If there are multiple answers, you can print any of them."
  },
  {
    "title": "Matrix Rank (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1916/H2",
    "description": "This is the hard version of the problem. The only differences between the two versions of this problem are the constraints on $$$k$$$. You can make hacks only if all versions of the problem are solved.You are given integers $$$n$$$, $$$p$$$ and $$$k$$$. $$$p$$$ is guaranteed to be a prime number. For each $$$r$$$ from $$$0$$$ to $$$k$$$, find the number of $$$n \\times n$$$ matrices $$$A$$$ of the field$$$^\\dagger$$$ of integers modulo $$$p$$$ such that the rank$$$^\\ddagger$$$ of $$$A$$$ is exactly $$$r$$$. Since these values are big, you are only required to output them modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ https://en.wikipedia.org/wiki/Field_(mathematics)$$$^\\ddagger$$$ https://en.wikipedia.org/wiki/Rank_(linear_algebra)"
  },
  {
    "title": "Matrix Rank (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1916/H1",
    "description": "This is the easy version of the problem. The only differences between the two versions of this problem are the constraints on $$$k$$$. You can make hacks only if all versions of the problem are solved.You are given integers $$$n$$$, $$$p$$$ and $$$k$$$. $$$p$$$ is guaranteed to be a prime number. For each $$$r$$$ from $$$0$$$ to $$$k$$$, find the number of $$$n \\times n$$$ matrices $$$A$$$ of the field$$$^\\dagger$$$ of integers modulo $$$p$$$ such that the rank$$$^\\ddagger$$$ of $$$A$$$ is exactly $$$r$$$. Since these values are big, you are only required to output them modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ https://en.wikipedia.org/wiki/Field_(mathematics)$$$^\\ddagger$$$ https://en.wikipedia.org/wiki/Rank_(linear_algebra)"
  },
  {
    "title": "Optimizations From Chelsu",
    "url": "https://codeforces.com/problemset/problem/1916/G",
    "description": "You are given a tree with $$$n$$$ vertices, whose vertices are numbered from $$$1$$$ to $$$n$$$. Each edge is labeled with some integer $$$w_i$$$.Define $$$len(u, v)$$$ as the number of edges in the simple path between vertices $$$u$$$ and $$$v$$$, and $$$gcd(u, v)$$$ as the Greatest Common Divisor of all numbers written on the edges of the simple path between vertices $$$u$$$ and $$$v$$$. For example, $$$len(u, u) = 0$$$ and $$$gcd(u, u) = 0$$$ for any $$$1 \\leq u \\leq n$$$.You need to find the maximum value of $$$len(u, v) \\cdot gcd(u, v)$$$ over all pairs of vertices in the tree."
  },
  {
    "title": "Group Division",
    "url": "https://codeforces.com/problemset/problem/1916/F",
    "description": "In the $$$31$$$st lyceum, there were two groups of olympiad participants: computer science and mathematics. The number of computer scientists was $$$n_1$$$, and the number of mathematicians was $$$n_2$$$. It is not known for certain who belonged to which group, but it is known that there were friendly connections between some pairs of people (these connections could exist between a pair of people from the same group or from different groups).The connections were so strong that even if one person is removed along with all their friendly connections, any pair of people still remains acquainted either directly or through mutual friends.$$$^{\\dagger}$$$ More formally, two people $$$(x, y)$$$ are acquainted in the following case: there are people $$$a_1, a_2, \\ldots,a_n$$$ ($$$1 \\le a_i \\le n_1 + n_2$$$) such that the following conditions are simultaneously met:$$$\\bullet$$$ Person $$$x$$$ is directly acquainted with $$$a_1$$$.$$$\\bullet$$$ Person $$$a_n$$$ is directly acquainted with $$$y$$$.$$$\\bullet$$$ Person $$$a_i$$$ is directly acquainted with $$$a_{i + 1}$$$ for any ($$$1 \\le i \\le n - 1$$$).The teachers were dissatisfied with the fact that computer scientists were friends with mathematicians and vice versa, so they decided to divide the students into two groups in such a way that the following two conditions are met:$$$\\bullet$$$ There were $$$n_1$$$ people in the computer science group, and $$$n_2$$$ people in the mathematics group.$$$\\bullet$$$ Any pair of computer scientists should be acquainted (acquaintance involving mutual friends, who must be from the same group as the people in the pair, is allowed), the same should be true for mathematicians.Help them solve this problem and find out who belongs to which group."
  },
  {
    "title": "Happy Life in University",
    "url": "https://codeforces.com/problemset/problem/1916/E",
    "description": "Egor and his friend Arseniy are finishing school this year and will soon enter university. And since they are very responsible guys, they have started preparing for admission already.First of all, they decided to take care of where they will live for the long four years of study, and after visiting the university's website, they found out that the university dormitory can be represented as a root tree with $$$n$$$ vertices with the root at vertex $$$1$$$. In the tree, each vertex represents a recreation with some type of activity $$$a_i$$$. The friends need to choose $$$2$$$ recreations (not necessarily different) in which they will settle. The guys are convinced that the more the value of the following function $$$f(u, v) = diff(u, lca(u, v)) \\cdot diff(v, lca(u, v))$$$, the more fun their life will be. Help Egor and Arseniy and find the maximum value of $$$f(u, v)$$$ among all pairs of recreations!$$$^{\\dagger} diff(u, v)$$$ — the number of different activities listed on the simple path from vertex $$$u$$$ to vertex $$$v$$$.$$$^{\\dagger} lca(u, v)$$$ — a vertex $$$p$$$ such that it is at the maximum distance from the root and is a parent of both vertex $$$u$$$ and vertex $$$v$$$."
  },
  {
    "title": "Mathematical Problem",
    "url": "https://codeforces.com/problemset/problem/1916/D",
    "description": "The mathematicians of the 31st lyceum were given the following task:You are given an odd number $$$n$$$, and you need to find $$$n$$$ different numbers that are squares of integers. But it's not that simple. Each number should have a length of $$$n$$$ (and should not have leading zeros), and the multiset of digits of all the numbers should be the same. For example, for $$$\\mathtt{234}$$$ and $$$\\mathtt{432}$$$, and $$$\\mathtt{11223}$$$ and $$$\\mathtt{32211}$$$, the multisets of digits are the same, but for $$$\\mathtt{123}$$$ and $$$\\mathtt{112233}$$$, they are not.The mathematicians couldn't solve this problem. Can you?"
  },
  {
    "title": "Training Before the Olympiad",
    "url": "https://codeforces.com/problemset/problem/1916/C",
    "description": "Masha and Olya have an important team olympiad coming up soon. In honor of this, Masha, for warm-up, suggested playing a game with Olya:There is an array $$$a$$$ of size $$$n$$$. Masha goes first, and the players take turns. Each move is described by the following sequence of actions:$$$\\bullet$$$ If the size of the array is $$$1$$$, the game ends.$$$\\bullet$$$ The player who is currently playing chooses two different indices $$$i$$$, $$$j$$$ ($$$1 \\le i, j \\le |a|$$$), and performs the following operation — removes $$$a_i$$$ and $$$a_j$$$ from the array and adds to the array a number equal to $$$\\lfloor \\frac{a_i + a_j}{2} \\rfloor \\cdot 2$$$. In other words, first divides the sum of the numbers $$$a_i$$$, $$$a_j$$$ by $$$2$$$ rounding down, and then multiplies the result by $$$2$$$.Masha aims to maximize the final number, while Olya aims to minimize it.Masha and Olya decided to play on each non-empty prefix of the initial array $$$a$$$, and asked for your help.For each $$$k = 1, 2, \\ldots, n$$$, answer the following question. Let only the first $$$k$$$ elements of the array $$$a$$$ be present in the game, with indices $$$1, 2, \\ldots, k$$$ respectively. What number will remain at the end with optimal play by both players?"
  },
  {
    "title": "Two Divisors",
    "url": "https://codeforces.com/problemset/problem/1916/B",
    "description": "A certain number $$$1 \\le x \\le 10^9$$$ is chosen. You are given two integers $$$a$$$ and $$$b$$$, which are the two largest divisors of the number $$$x$$$. At the same time, the condition $$$1 \\le a < b < x$$$ is satisfied.For the given numbers $$$a$$$, $$$b$$$, you need to find the value of $$$x$$$.$$$^{\\dagger}$$$ The number $$$y$$$ is a divisor of the number $$$x$$$ if there is an integer $$$k$$$ such that $$$x = y \\cdot k$$$."
  },
  {
    "title": "2023",
    "url": "https://codeforces.com/problemset/problem/1916/A",
    "description": "In a sequence $$$a$$$, whose product was equal to $$$2023$$$, $$$k$$$ numbers were removed, leaving a sequence $$$b$$$ of length $$$n$$$. Given the resulting sequence $$$b$$$, find any suitable sequence $$$a$$$ and output which $$$k$$$ elements were removed from it, or state that such a sequence could not have existed.Notice that you are not guaranteed that such array exists."
  },
  {
    "title": "Bicycles",
    "url": "https://codeforces.com/problemset/problem/1915/G",
    "description": "All of Slavic's friends are planning to travel from the place where they live to a party using their bikes. And they all have a bike except Slavic. There are $$$n$$$ cities through which they can travel. They all live in the city $$$1$$$ and want to go to the party located in the city $$$n$$$. The map of cities can be seen as an undirected graph with $$$n$$$ nodes and $$$m$$$ edges. Edge $$$i$$$ connects cities $$$u_i$$$ and $$$v_i$$$ and has a length of $$$w_i$$$.Slavic doesn't have a bike, but what he has is money. Every city has exactly one bike for sale. The bike in the $$$i$$$-th city has a slowness factor of $$$s_{i}$$$. Once Slavic buys a bike, he can use it whenever to travel from the city he is currently in to any neighboring city, by taking $$$w_i \\cdot s_j$$$ time, considering he is traversing edge $$$i$$$ using a bike $$$j$$$ he owns.Slavic can buy as many bikes as he wants as money isn't a problem for him. Since Slavic hates traveling by bike, he wants to get from his place to the party in the shortest amount of time possible. And, since his informatics skills are quite rusty, he asks you for help.What's the shortest amount of time required for Slavic to travel from city $$$1$$$ to city $$$n$$$? Slavic can't travel without a bike. It is guaranteed that it is possible for Slavic to travel from city $$$1$$$ to any other city."
  },
  {
    "title": "Greetings",
    "url": "https://codeforces.com/problemset/problem/1915/F",
    "description": "There are $$$n$$$ people on the number line; the $$$i$$$-th person is at point $$$a_i$$$ and wants to go to point $$$b_i$$$. For each person, $$$a_i < b_i$$$, and the starting and ending points of all people are distinct. (That is, all of the $$$2n$$$ numbers $$$a_1, a_2, \\dots, a_n, b_1, b_2, \\dots, b_n$$$ are distinct.) All the people will start moving simultaneously at a speed of $$$1$$$ unit per second until they reach their final point $$$b_i$$$. When two people meet at the same point, they will greet each other once. How many greetings will there be?Note that a person can still greet other people even if they have reached their final point."
  },
  {
    "title": "Romantic Glasses",
    "url": "https://codeforces.com/problemset/problem/1915/E",
    "description": "Iulia has $$$n$$$ glasses arranged in a line. The $$$i$$$-th glass has $$$a_i$$$ units of juice in it. Iulia drinks only from odd-numbered glasses, while her date drinks only from even-numbered glasses.To impress her date, Iulia wants to find a contiguous subarray of these glasses such that both Iulia and her date will have the same amount of juice in total if only the glasses in this subarray are considered. Please help her to do that.More formally, find out if there exists two indices $$$l$$$, $$$r$$$ such that $$$1 \\leq l \\leq r \\leq n$$$, and $$$a_l + a_{l + 2} + a_{l + 4} + \\dots + a_{r} = a_{l + 1} + a_{l + 3} + \\dots + a_{r-1}$$$ if $$$l$$$ and $$$r$$$ have the same parity and $$$a_l + a_{l + 2} + a_{l + 4} + \\dots + a_{r - 1} = a_{l + 1} + a_{l + 3} + \\dots + a_{r}$$$ otherwise."
  },
  {
    "title": "Unnatural Language Processing",
    "url": "https://codeforces.com/problemset/problem/1915/D",
    "description": "Lura was bored and decided to make a simple language using the five letters $$$\\texttt{a}$$$, $$$\\texttt{b}$$$, $$$\\texttt{c}$$$, $$$\\texttt{d}$$$, $$$\\texttt{e}$$$. There are two types of letters:   vowels — the letters $$$\\texttt{a}$$$ and $$$\\texttt{e}$$$. They are represented by $$$\\textsf{V}$$$.  consonants — the letters $$$\\texttt{b}$$$, $$$\\texttt{c}$$$, and $$$\\texttt{d}$$$. They are represented by $$$\\textsf{C}$$$.  There are two types of syllables in the language: $$$\\textsf{CV}$$$ (consonant followed by vowel) or $$$\\textsf{CVC}$$$ (vowel with consonant before and after). For example, $$$\\texttt{ba}$$$, $$$\\texttt{ced}$$$, $$$\\texttt{bab}$$$ are syllables, but $$$\\texttt{aa}$$$, $$$\\texttt{eda}$$$, $$$\\texttt{baba}$$$ are not.A word in the language is a sequence of syllables. Lura has written a word in the language, but she doesn't know how to split it into syllables. Help her break the word into syllables.For example, given the word $$$\\texttt{bacedbab}$$$, it would be split into syllables as $$$\\texttt{ba.ced.bab}$$$ (the dot $$$\\texttt{.}$$$ represents a syllable boundary)."
  },
  {
    "title": "Can I Square?",
    "url": "https://codeforces.com/problemset/problem/1915/C",
    "description": "Calin has $$$n$$$ buckets, the $$$i$$$-th of which contains $$$a_i$$$ wooden squares of side length $$$1$$$.Can Calin build a square using all the given squares?"
  },
  {
    "title": "Not Quite Latin Square",
    "url": "https://codeforces.com/problemset/problem/1915/B",
    "description": "A Latin square is a $$$3 \\times 3$$$ grid made up of the letters $$$\\texttt{A}$$$, $$$\\texttt{B}$$$, and $$$\\texttt{C}$$$ such that:   in each row, the letters $$$\\texttt{A}$$$, $$$\\texttt{B}$$$, and $$$\\texttt{C}$$$ each appear once, and  in each column, the letters $$$\\texttt{A}$$$, $$$\\texttt{B}$$$, and $$$\\texttt{C}$$$ each appear once.  For example, one possible Latin square is shown below. $$$$$$\\begin{bmatrix} \\texttt{A} & \\texttt{B} & \\texttt{C} \\\\ \\texttt{C} & \\texttt{A} & \\texttt{B} \\\\ \\texttt{B} & \\texttt{C} & \\texttt{A} \\\\ \\end{bmatrix}$$$$$$You are given a Latin square, but one of the letters was replaced with a question mark $$$\\texttt{?}$$$. Find the letter that was replaced."
  },
  {
    "title": "Odd One Out",
    "url": "https://codeforces.com/problemset/problem/1915/A",
    "description": "You are given three digits $$$a$$$, $$$b$$$, $$$c$$$. Two of them are equal, but the third one is different from the other two. Find the value that occurs exactly once."
  },
  {
    "title": "Light Bulbs (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1914/G2",
    "description": "The easy and hard versions of this problem differ only in the constraints on $$$n$$$. In the hard version, the sum of values of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$. Furthermore, there are no additional constraints on the value of $$$n$$$ in a single test case.There are $$$2n$$$ light bulbs arranged in a row. Each light bulb has a color from $$$1$$$ to $$$n$$$ (exactly two light bulbs for each color).Initially, all light bulbs are turned off. You choose a set of light bulbs $$$S$$$ that you initially turn on. After that, you can perform the following operations in any order any number of times:  choose two light bulbs $$$i$$$ and $$$j$$$ of the same color, exactly one of which is on, and turn on the second one;  choose three light bulbs $$$i, j, k$$$, such that both light bulbs $$$i$$$ and $$$k$$$ are on and have the same color, and the light bulb $$$j$$$ is between them ($$$i < j < k$$$), and turn on the light bulb $$$j$$$. You want to choose a set of light bulbs $$$S$$$ that you initially turn on in such a way that by performing the described operations, you can ensure that all light bulbs are turned on.Calculate two numbers:  the minimum size of the set $$$S$$$ that you initially turn on;  the number of sets $$$S$$$ of minimum size (taken modulo $$$998244353$$$). "
  },
  {
    "title": "Light Bulbs (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1914/G1",
    "description": "The easy and hard versions of this problem differ only in the constraints on $$$n$$$. In the easy version, the sum of values of $$$n^2$$$ over all test cases does not exceed $$$10^6$$$. Furthermore, $$$n$$$ does not exceed $$$1000$$$ in each test case.There are $$$2n$$$ light bulbs arranged in a row. Each light bulb has a color from $$$1$$$ to $$$n$$$ (exactly two light bulbs for each color).Initially, all light bulbs are turned off. You choose a set of light bulbs $$$S$$$ that you initially turn on. After that, you can perform the following operations in any order any number of times:  choose two light bulbs $$$i$$$ and $$$j$$$ of the same color, exactly one of which is on, and turn on the second one;  choose three light bulbs $$$i, j, k$$$, such that both light bulbs $$$i$$$ and $$$k$$$ are on and have the same color, and the light bulb $$$j$$$ is between them ($$$i < j < k$$$), and turn on the light bulb $$$j$$$. You want to choose a set of light bulbs $$$S$$$ that you initially turn on in such a way that by performing the described operations, you can ensure that all light bulbs are turned on.Calculate two numbers:  the minimum size of the set $$$S$$$ that you initially turn on;  the number of sets $$$S$$$ of minimum size (taken modulo $$$998244353$$$). "
  },
  {
    "title": "Programming Competition",
    "url": "https://codeforces.com/problemset/problem/1914/F",
    "description": "BerSoft is the biggest IT corporation in Berland. There are $$$n$$$ employees at BerSoft company, numbered from $$$1$$$ to $$$n$$$. The first employee is the head of the company, and he does not have any superiors. Every other employee $$$i$$$ has exactly one direct superior $$$p_i$$$.Employee $$$x$$$ is considered to be a superior (direct or indirect) of employee $$$y$$$ if one of the following conditions holds:   employee $$$x$$$ is the direct superior of employee $$$y$$$;  employee $$$x$$$ is a superior of the direct superior of employee $$$y$$$. The structure of BerSoft is organized in such a way that the head of the company is superior of every employee.A programming competition is going to be held soon. Two-person teams should be created for this purpose. However, if one employee in a team is the superior of another, they are uncomfortable together. So, teams of two people should be created so that no one is the superior of the other. Note that no employee can participate in more than one team.Your task is to calculate the maximum possible number of teams according to the aforementioned rules."
  },
  {
    "title": "Game with Marbles (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1914/E2",
    "description": "The easy and hard versions of this problem differ only in the constraints on the number of test cases and $$$n$$$. In the hard version, the number of test cases does not exceed $$$10^4$$$, and the sum of values of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$. Furthermore, there are no additional constraints on $$$n$$$ in a single test case.Recently, Alice and Bob were given marbles of $$$n$$$ different colors by their parents. Alice has received $$$a_1$$$ marbles of color $$$1$$$, $$$a_2$$$ marbles of color $$$2$$$,..., $$$a_n$$$ marbles of color $$$n$$$. Bob has received $$$b_1$$$ marbles of color $$$1$$$, $$$b_2$$$ marbles of color $$$2$$$, ..., $$$b_n$$$ marbles of color $$$n$$$. All $$$a_i$$$ and $$$b_i$$$ are between $$$1$$$ and $$$10^9$$$.After some discussion, Alice and Bob came up with the following game: players take turns, starting with Alice. On their turn, a player chooses a color $$$i$$$ such that both players have at least one marble of that color. The player then discards one marble of color $$$i$$$, and their opponent discards all marbles of color $$$i$$$. The game ends when there is no color $$$i$$$ such that both players have at least one marble of that color.The score in the game is the difference between the number of remaining marbles that Alice has and the number of remaining marbles that Bob has at the end of the game. In other words, the score in the game is equal to $$$(A-B)$$$, where $$$A$$$ is the number of marbles Alice has and $$$B$$$ is the number of marbles Bob has at the end of the game. Alice wants to maximize the score, while Bob wants to minimize it.Calculate the score at the end of the game if both players play optimally."
  },
  {
    "title": "Game with Marbles (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1914/E1",
    "description": "The easy and hard versions of this problem differ only in the constraints on the number of test cases and $$$n$$$. In the easy version, the number of test cases does not exceed $$$10^3$$$, and $$$n$$$ does not exceed $$$6$$$.Recently, Alice and Bob were given marbles of $$$n$$$ different colors by their parents. Alice has received $$$a_1$$$ marbles of color $$$1$$$, $$$a_2$$$ marbles of color $$$2$$$,..., $$$a_n$$$ marbles of color $$$n$$$. Bob has received $$$b_1$$$ marbles of color $$$1$$$, $$$b_2$$$ marbles of color $$$2$$$, ..., $$$b_n$$$ marbles of color $$$n$$$. All $$$a_i$$$ and $$$b_i$$$ are between $$$1$$$ and $$$10^9$$$.After some discussion, Alice and Bob came up with the following game: players take turns, starting with Alice. On their turn, a player chooses a color $$$i$$$ such that both players have at least one marble of that color. The player then discards one marble of color $$$i$$$, and their opponent discards all marbles of color $$$i$$$. The game ends when there is no color $$$i$$$ such that both players have at least one marble of that color.The score in the game is the difference between the number of remaining marbles that Alice has and the number of remaining marbles that Bob has at the end of the game. In other words, the score in the game is equal to $$$(A-B)$$$, where $$$A$$$ is the number of marbles Alice has and $$$B$$$ is the number of marbles Bob has at the end of the game. Alice wants to maximize the score, while Bob wants to minimize it.Calculate the score at the end of the game if both players play optimally."
  },
  {
    "title": "Three Activities",
    "url": "https://codeforces.com/problemset/problem/1914/D",
    "description": "Winter holidays are coming up. They are going to last for $$$n$$$ days.During the holidays, Monocarp wants to try all of these activities exactly once with his friends:   go skiing;  watch a movie in a cinema;  play board games. Monocarp knows that, on the $$$i$$$-th day, exactly $$$a_i$$$ friends will join him for skiing, $$$b_i$$$ friends will join him for a movie and $$$c_i$$$ friends will join him for board games.Monocarp also knows that he can't try more than one activity in a single day.Thus, he asks you to help him choose three distinct days $$$x, y, z$$$ in such a way that the total number of friends to join him for the activities ($$$a_x + b_y + c_z$$$) is maximized."
  },
  {
    "title": "Quests",
    "url": "https://codeforces.com/problemset/problem/1914/C",
    "description": "Monocarp is playing a computer game. In order to level up his character, he can complete quests. There are $$$n$$$ quests in the game, numbered from $$$1$$$ to $$$n$$$.Monocarp can complete quests according to the following rules:   the $$$1$$$-st quest is always available for completion;  the $$$i$$$-th quest is available for completion if all quests $$$j < i$$$ have been completed at least once. Note that Monocarp can complete the same quest multiple times.For each completion, the character gets some amount of experience points:   for the first completion of the $$$i$$$-th quest, he gets $$$a_i$$$ experience points;  for each subsequent completion of the $$$i$$$-th quest, he gets $$$b_i$$$ experience points. Monocarp is a very busy person, so he has free time to complete no more than $$$k$$$ quests. Your task is to calculate the maximum possible total experience Monocarp can get if he can complete no more than $$$k$$$ quests."
  },
  {
    "title": "Preparing for the Contest",
    "url": "https://codeforces.com/problemset/problem/1914/B",
    "description": "Monocarp is practicing for a big contest. He plans to solve $$$n$$$ problems to make sure he's prepared. Each of these problems has a difficulty level: the first problem has a difficulty level of $$$1$$$, the second problem has a difficulty level of $$$2$$$, and so on, until the last ($$$n$$$-th) problem, which has a difficulty level of $$$n$$$.Monocarp will choose some order in which he is going to solve all $$$n$$$ problems. Whenever he solves a problem which is more difficult than the last problem he solved, he gets excited because he feels like he's progressing. He doesn't get excited when he solves the first problem in his chosen order.For example, if Monocarp solves the problems in the order $$$[3, \\underline{5}, 4, 1, \\underline{6}, 2]$$$, he gets excited twice (the corresponding problems are underlined).Monocarp wants to get excited exactly $$$k$$$ times during his practicing session. Help him to choose the order in which he has to solve the problems!"
  },
  {
    "title": "Problemsolving Log",
    "url": "https://codeforces.com/problemset/problem/1914/A",
    "description": "Monocarp is participating in a programming contest, which features $$$26$$$ problems, named from 'A' to 'Z'. The problems are sorted by difficulty. Moreover, it's known that Monocarp can solve problem 'A' in $$$1$$$ minute, problem 'B' in $$$2$$$ minutes, ..., problem 'Z' in $$$26$$$ minutes.After the contest, you discovered his contest log — a string, consisting of uppercase Latin letters, such that the $$$i$$$-th letter tells which problem Monocarp was solving during the $$$i$$$-th minute of the contest. If Monocarp had spent enough time in total on a problem to solve it, he solved it. Note that Monocarp could have been thinking about a problem after solving it.Given Monocarp's contest log, calculate the number of problems he solved during the contest."
  },
  {
    "title": "Palindromic Problem",
    "url": "https://codeforces.com/problemset/problem/1913/F",
    "description": "You are given a string $$$s$$$ of length $$$n$$$, consisting of lowercase Latin letters.You are allowed to replace at most one character in the string with an arbitrary lowercase Latin letter.Print the lexicographically minimal string that can be obtained from the original string and contains the maximum number of palindromes as substrings. Note that if a palindrome appears more than once as a substring, it is counted the same number of times it appears.The string $$$a$$$ is lexicographically smaller than the string $$$b$$$ if and only if one of the following holds:   $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$;  in the first position where $$$a$$$ and $$$b$$$ are different, the string $$$a$$$ contains a letter that appears earlier in the alphabet than the corresponding letter in $$$b$$$. "
  },
  {
    "title": "Matrix Problem",
    "url": "https://codeforces.com/problemset/problem/1913/E",
    "description": "You are given a matrix $$$a$$$, consisting of $$$n$$$ rows by $$$m$$$ columns. Each element of the matrix is equal to $$$0$$$ or $$$1$$$.You can perform the following operation any number of times (possibly zero): choose an element of the matrix and replace it with either $$$0$$$ or $$$1$$$.You are also given two arrays $$$A$$$ and $$$B$$$ (of length $$$n$$$ and $$$m$$$ respectively). After you perform the operations, the matrix should satisfy the following conditions:  the number of ones in the $$$i$$$-th row of the matrix should be exactly $$$A_i$$$ for every $$$i \\in [1, n]$$$.  the number of ones in the $$$j$$$-th column of the matrix should be exactly $$$B_j$$$ for every $$$j \\in [1, m]$$$. Calculate the minimum number of operations you have to perform."
  },
  {
    "title": "Array Collapse",
    "url": "https://codeforces.com/problemset/problem/1913/D",
    "description": "You are given an array $$$[p_1, p_2, \\dots, p_n]$$$, where all elements are distinct.You can perform several (possibly zero) operations with it. In one operation, you can choose a contiguous subsegment of $$$p$$$ and remove all elements from that subsegment, except for the minimum element on that subsegment. For example, if $$$p = [3, 1, 4, 7, 5, 2, 6]$$$ and you choose the subsegment from the $$$3$$$-rd element to the $$$6$$$-th element, the resulting array is $$$[3, 1, 2, 6]$$$.An array $$$a$$$ is called reachable if it can be obtained from $$$p$$$ using several (maybe zero) aforementioned operations. Calculate the number of reachable arrays, and print it modulo $$$998244353$$$."
  },
  {
    "title": "Game with Multiset",
    "url": "https://codeforces.com/problemset/problem/1913/C",
    "description": "In this problem, you are initially given an empty multiset. You have to process two types of queries:  ADD $$$x$$$ — add an element equal to $$$2^{x}$$$ to the multiset;  GET $$$w$$$ — say whether it is possible to take the sum of some subset of the current multiset and get a value equal to $$$w$$$. "
  },
  {
    "title": "Swap and Delete",
    "url": "https://codeforces.com/problemset/problem/1913/B",
    "description": "You are given a binary string $$$s$$$ (a string consisting only of 0-s and 1-s).You can perform two types of operations on $$$s$$$:   delete one character from $$$s$$$. This operation costs $$$1$$$ coin;  swap any pair of characters in $$$s$$$. This operation is free (costs $$$0$$$ coins). You can perform these operations any number of times and in any order.Let's name a string you've got after performing operations above as $$$t$$$. The string $$$t$$$ is good if for each $$$i$$$ from $$$1$$$ to $$$|t|$$$ $$$t_i \\neq s_i$$$ ($$$|t|$$$ is the length of the string $$$t$$$). The empty string is always good. Note that you are comparing the resulting string $$$t$$$ with the initial string $$$s$$$.What is the minimum total cost to make the string $$$t$$$ good?"
  },
  {
    "title": "Rating Increase",
    "url": "https://codeforces.com/problemset/problem/1913/A",
    "description": "Monocarp is a great solver of adhoc problems. Recently, he participated in an Educational Codeforces Round, and gained rating!Monocarp knew that, before the round, his rating was $$$a$$$. After the round, it increased to $$$b$$$ ($$$b > a$$$). He wrote both values one after another to not forget them.However, he wrote them so close to each other, that he can't tell now where the first value ends and the second value starts.Please, help him find some values $$$a$$$ and $$$b$$$ such that:   neither of them has a leading zero;  both of them are strictly greater than $$$0$$$;  $$$b > a$$$;  they produce the given value $$$ab$$$ when written one after another. If there are multiple answers, you can print any of them."
  },
  {
    "title": "LOL Lovers",
    "url": "https://codeforces.com/problemset/problem/1912/L",
    "description": "There are $$$n$$$ food items lying in a row on a long table. Each of these items is either a loaf of bread (denoted as a capital Latin letter 'L' with ASCII code 76) or an onion (denoted as a capital Latin letter 'O' with ASCII code 79). There is at least one loaf of bread and at least one onion on the table.You and your friend want to divide the food on the table: you will take a prefix of this row (several leftmost items), and the friend will take the rest. However, there are several restrictions:   Each person should have at least one item.  The number of your loaves should differ from the number of your friend's loaves.  The number of your onions should differ from the number of your friend's onions.  Find any correct division and print the number of items you take or report that there is no answer."
  },
  {
    "title": "Kim's Quest",
    "url": "https://codeforces.com/problemset/problem/1912/K",
    "description": "In the long-forgotten halls of Kombinatoria's ancient academy, a gifted mathematician named Kim is faced with an unusual challenge. They found an old sequence of integers, which is believed to be a cryptic message from the legendary Kombinatoria's Oracle, and Kim wants to decipher its hidden meaning.Kim's mission is to find specific patterns within the sequence, known as Harmonious Subsequences. These are extraordinary subsequences where the sum of every three consecutive numbers is even, and each subsequence must be at least three numbers in length. Given a sequence aia_i (1≤i≤n1 \\le i \\le n) of length nn, its subsequence of length mm is equal to ab1,ab2,…,abma_{b_1}, a_{b_2}, \\ldots, a_{b_m} and is uniquely defined by a set of mm indices bjb_j, such that 1≤b1<b2<…<bm≤n1 \\le b_1 < b_2 < \\ldots < b_m \\le n. Subsequences given by different sets of indices bjb_j are considered different.There's a twist in Kim's quest: the number of these Harmonious Subsequences could be overwhelming. To report the findings effectively, Kim must calculate the total number of these subsequences, presenting the answer as a remainder after dividing by the number 998244353998\\,244\\,353."
  },
  {
    "title": "Hypercatapult Commute",
    "url": "https://codeforces.com/problemset/problem/1912/H",
    "description": "A revolutionary new transport system is currently operating in Byteland. This system requires neither roads nor sophisticated mechanisms, only giant catapults. The system works as follows. There are $$$n$$$ cities in Byteland. In every city there is a catapult, right in the city center. People who want to travel are put in a special capsule, and a catapult throws this capsule to the center of some other city. Every catapult is powerful enough to throw the capsule to any other city, with any number of passengers inside the capsule. The only problem is that it takes a long time to charge the catapult, so it is only possible to use it once a day.The passenger may need to use the catapults multiple times. For example, if the passenger wants to travel from city A to city B, they can first use one catapult to move from A to C, and then transfer to another catapult to move from C to B.Today there are $$$m$$$ passengers. Passenger $$$i$$$ wants to travel from city $$$a_i$$$ to city $$$b_i$$$. Your task is to find the way to deliver all the passengers to their destinations in a single day, using the minimal possible number of catapults, or say that it is impossible."
  },
  {
    "title": "Fugitive Frenzy",
    "url": "https://codeforces.com/problemset/problem/1912/F",
    "description": "The city of F. can be represented as a tree. A famous fugitive is hiding in it, and today a faithful police officer decided to catch him at all costs. The police officer is stronger than the fugitive, but the fugitive is much faster than the former. That is why the pursuit proceeds as follows. At the moment $$$t = 0$$$ the police officer appears at the vertex with number $$$s$$$, and the fugitive spawns at any other vertex of his choice. After that, they take turns, starting with the police officer.  During the police officer's move, she selects any vertex adjacent to the one where she is currently located and moves there. The police officer spends one minute moving. Also, the police officer may decide to stand still instead, in which case she waits one minute at the vertex at which she started her move. If at the end of the turn the police officer ends up at the same vertex as the fugitive, she instantly catches him and the chase ends.  The fugitive's move is as follows. Let him be at vertex $$$b$$$, and the police officer at vertex $$$p$$$. Then the fugitive chooses any vertex $$$b' \\ne p$$$ such that the path between the vertices $$$b$$$ and $$$b'$$$ does not contain vertex $$$p$$$ and instantly moves there. In particular, he can always choose $$$b' = b$$$ to stay where he is. The fugitive's move takes no time. Note that the fugitive managed to attach a radio bug to the police officer's badge a week ago, so the fugitive knows the location of the police officer at every moment (in particular, he knows the number $$$s$$$). On the contrary, the police officer knows nothing about the fugitive's movements and will only be able to detect him at the very moment she catches him.The police officer aims to catch the fugitive as fast as possible, and the fugitive aims to be caught as late as possible. Since the chase can be thought of as a game with incomplete information, participants can use mixed (probabilistic) strategies — thus, the police officer acts to minimize the expected duration of the chase, and the fugitive — to maximize it.Find the mathematical expectation of the duration of the chase with optimal actions of the police officer and the fugitive. It can be proven that it is always finite. In particular, with optimal strategies, the probability that the chase continues indefinitely is equal to zero."
  },
  {
    "title": "Evaluate It and Back Again",
    "url": "https://codeforces.com/problemset/problem/1912/E",
    "description": "Aidan and Nadia are long-time friends with a shared passion for mathematics. Each of them has a favorite number: Aidan's favorite number is pp, and Nadia's is qq. To commemorate their friendship, their friends want to make a present: a plaque with an arithmetic expression whose value is equal to their favorite numbers. At first glance, it sounds impossible, but the answer is simple: Aidan reads left-to-right, while Nadia reads right-to-left, so the same expression can have different values for them.For example, if 2023-12-13 is written on the plaque, then Aidan would calculate the result as 2023−12−13=19982023-12-13 = 1998, and Nadia would calculate it as 31−21−3202=−319231-21-3202=-3192.Find an arithmetic expression that, when read left-to-right, evaluates to pp, and, when read right-to-left, evaluates to qq. Its length must be at most 10001000 characters. It's guaranteed that such an expression exists for all valid inputs."
  },
  {
    "title": "Divisibility Test",
    "url": "https://codeforces.com/problemset/problem/1912/D",
    "description": "Daisy has recently learned divisibility rules for integers and she is fascinated by them. One of the tests she learned is a divisibility test by 3. You can find a sum of all digits of a decimal number and check if the resulting sum is divisible by 3. Moreover, the resulting sum of digits is congruent modulo 3 to the original number — the remainder modulo 3 is preserved. For example, $$$75 \\equiv 7 + 5 \\pmod 3$$$. Daisy is specifically interested in such remainder preserving divisibility tests.There are more examples like that that she learned for decimal integers (integers base 10):  To test divisibility modulo 11, find an alternating sum of digits. Counting digits from the last (least significant) digit, add digits on odd positions (the last, 3rd to the last, etc) and subtract digits on even positions (2nd to the last, 4th to the last, etc) to get the sum that is congruent modulo 11 to the original number. For example, $$$123 \\equiv 1 - 2 + 3 \\pmod {11}$$$.  To test divisibility modulo 4, keep the last two digits. Their value is congruent modulo 4 to the original number. For example, $$$876543 \\equiv 43 \\pmod 4$$$.  To test divisibility modulo 7, find an alternating sum of groups of three digits. For example, $$$4389328 \\equiv 4 - 389 + 328 \\pmod 7$$$. Similar tests can be found in other bases. For example, to test divisibility modulo 5 for octal numbers (base 8), find an alternating sum of groups of two digits. For example, $$$1234_8 \\equiv -12_8 + 34_8 \\pmod 5$$$.Daisy wants to find such rules for a given base $$$b$$$. She is interested in three kinds of divisibility rules:  Kind 1 — take the last $$$k$$$ digits of an integer in base $$$b$$$.  Kind 2 — take a sum of groups of $$$k$$$ digits of an integer in base $$$b$$$.  Kind 3 — take an alternating sum of groups of $$$k$$$ digits of an integer in base $$$b$$$. It is not always possible to find such a divisibility rule. For example, in base 10 there is no such test for divisibility modulo 6, even though different approaches to testing divisibility by 6 exist.Given base $$$b$$$ and modulo $$$n$$$, Daisy wants to know the smallest group size $$$k$$$ for which such a divisibility test exits."
  },
  {
    "title": "Blueprint for Seating",
    "url": "https://codeforces.com/problemset/problem/1912/B",
    "description": "An aircraft manufacturing company wants to optimize their products for passenger airlines. The company's latest research shows that most of the delays happen because of slow boarding.Most of the medium-sized aircraft are designed with 3-3 seat layout, meaning each row has 6 seats: 3 seats on the left side, a single aisle, and 3 seats on the right side. At each of the left and right sides there is a window seat, a middle seat, and an aisle seat. A passenger that boards an aircraft assigned to an aisle seat takes significantly less time than a passenger assigned to a window seat even when there is no one else in the aircraft.The company decided to compute an inconvenience of a layout as the total sum of distances from each of the seats of a single row to the closest aisle. The distance from a seat to an aisle is the number of seats between them. For a 3-3 layout, a window seat has a distance of 2, a middle seat — 1, and an aisle seat — 0. The inconvenience of a 3-3 layout is (2+1+0)+(0+1+2)=6(2+1+0)+(0+1+2)=6. The inconvenience of a 3-5-3 layout is (2+1+0)+(0+1+2+1+0)+(0+1+2)=10(2+1+0)+(0+1+2+1+0)+(0+1+2)=10.Formally, a layout is a sequence of positive integers a1,a2,…,ak+1a_1, a_2, \\ldots, a_{k+1} — group ii having aia_i seats, with kk aisles between groups, the ii-th aisle being between groups ii and i+1i+1. This means that in a layout each aisle must always be between two seats, so no aisle can be next to a window, and no two aisles can be next to each other.The company decided to design a layout with a row of nn seats, kk aisles and having the minimum inconvenience possible. Help them find the minimum inconvenience among all layouts of nn seats and kk aisles, and count the number of such layouts modulo 998244353998\\,244\\,353."
  },
  {
    "title": "Accumulator Apex",
    "url": "https://codeforces.com/problemset/problem/1912/A",
    "description": "Allyn is playing a new strategy game called \"Accumulator Apex\". In this game, Allyn is given the initial value of an integer $$$x$$$, referred to as the accumulator, and $$$k$$$ lists of integers. Allyn can make multiple turns. On each turn, Allyn can withdraw the leftmost element from any non-empty list and add it to the accumulator $$$x$$$ if the resulting $$$x$$$ is non-negative. Allyn can end the game at any moment. The goal of the game is to get the largest possible value of the accumulator $$$x$$$. Please help Allyn find the largest possible value of the accumulator $$$x$$$ they can get in this game."
  },
  {
    "title": "Two Colors",
    "url": "https://codeforces.com/problemset/problem/1910/J",
    "description": "You are given a tree consisting of $$$n$$$ vertices. Some vertices of the tree are red, all other vertices are blue.Each edge of the tree has a positive weight. Let's define $$$d(x, y)$$$ as the distance between the vertices $$$x$$$ and $$$y$$$, i. e. the sum of weights of edges belonging to the simple path between $$$x$$$ and $$$y$$$.For each vertex, you have to choose an integer $$$v_i$$$. These integers should meet the following constraint: for every blue vertex $$$b$$$ and every red vertex $$$r$$$, $$$d(b, r) \\ge v_b + v_r$$$. You have to maximize the value of $$$\\sum \\limits_{i=1}^{n} v_i$$$.Note that the values of $$$v_i$$$ are not necessarily positive."
  },
  {
    "title": "Inverse Problem",
    "url": "https://codeforces.com/problemset/problem/1910/I",
    "description": "Consider the following problem.You are given a string $$$s$$$, consisting of $$$n$$$ lowercase Latin letters, and an integer $$$k$$$ ($$$n$$$ is not divisible by $$$k$$$). Each letter is one of the first $$$c$$$ letters of the alphabet.You apply the following operation until the length of the string is less than $$$k$$$: choose a contiguous substring of the string of length exactly $$$k$$$, remove it from the string and glue the resulting parts together without changing the order.Let the resulting string of length smaller than $$$k$$$ be $$$t$$$. What is lexicographically smallest string $$$t$$$ that can obtained?You are asked the inverse of this problem. Given two integers $$$n$$$ and $$$k$$$ ($$$n$$$ is not divisible by $$$k$$$) and a string $$$t$$$, consisting of ($$$n \\bmod k$$$) lowercase Latin letters, count the number of strings $$$s$$$ that produce $$$t$$$ as the lexicographically smallest solution.Print that number modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Sum of Digits of Sums",
    "url": "https://codeforces.com/problemset/problem/1910/H",
    "description": "You are given an array $$$[a_1, a_2, \\dots, a_n]$$$, consisting of positive integers.For every $$$i$$$ from $$$1$$$ to $$$n$$$, calculate $$$\\sum \\limits_{j=1}^{n} F(a_i + a_j)$$$, where $$$F(x)$$$ is the sum of digits of $$$x$$$."
  },
  {
    "title": "Pool Records",
    "url": "https://codeforces.com/problemset/problem/1910/G",
    "description": "Alice and Bob are swimming in the pool under the guidance of their instructor Monocarp.The pool can be represented as a segment on the OX-axis from $$$0$$$ to $$$50$$$. Both Alice and Bob started at moment $$$0$$$ at point $$$0$$$ with positive real speeds $$$v_A$$$ and $$$v_B$$$ correspondingly.Both Alice and Bob swim from $$$0$$$ to point $$$50$$$, then instantly turn back and swim from $$$50$$$ to $$$0$$$. At $$$0$$$ they turn back again and swim to $$$50$$$ and so on.Monocarp logged all valuable info about Alice and Bob, including moments of time when they met at the same point (Alice and Bob swim on parallel lanes, so they don't bother each other). Let's name that moments of time as sequence $$$t_1, t_2, \\dots, t_n$$$.Due to some incident, Monocarp lost almost all data he recorded, and all he has now is array $$$t$$$. Monocarp remembers that Alice and Bob had distinct positive real swimming speeds $$$v_A$$$ and $$$v_B$$$ ($$$v_A > 0$$$; $$$v_B > 0$$$; $$$v_A \\neq v_B$$$) and that sequence $$$t$$$ contains the first $$$n$$$ meeting moments.But looking at sequence $$$t$$$ he noticed that all $$$t_i$$$ are integer values, and now he doubts is sequence $$$t$$$ valid or there are some errors in it. Help Monocarp to check array $$$t$$$!"
  },
  {
    "title": "Build Railway Stations",
    "url": "https://codeforces.com/problemset/problem/1910/F",
    "description": "Monocarp is playing a computer game where he's controlling an empire. An empire consists of $$$n$$$ cities, connected by $$$n - 1$$$ roads. The cities are numbered from $$$1$$$ to $$$n$$$. It's possible to reach every city from every other one using the roads.Traversing every road takes $$$2$$$ hours. However, that can be improved. Monocarp can build railway stations in no more than $$$k$$$ cities. After they are built, all existing roads that connect two cities with railway stations get converted to railroads and become $$$1$$$ hour to traverse.Let $$$f(x, y)$$$ be the total time it takes to traverse the roads on the shortest path between cities $$$x$$$ and $$$y$$$.Monocarp wants to build at most $$$k$$$ railway stations in such a way that the following value is minimized: $$$\\sum \\limits_{v=1}^{n} \\sum \\limits_{u=1}^{v-1} f(v, u)$$$ (the total time it takes to travel from every city to every other one). What the smallest value he can achieve?"
  },
  {
    "title": "Maximum Sum Subarrays",
    "url": "https://codeforces.com/problemset/problem/1910/E",
    "description": "You are given two integer arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$.You can perform the following operation any number of times (possibly zero): swap $$$a_i$$$ and $$$b_i$$$.Let $$$f(c)$$$ be the maximum sum of a contiguous subarray of the array $$$c$$$ (including the empty subsegment, which sum is $$$0$$$).Your task is to calculate the maximum possible value of $$$f(a) + f(b)$$$, using the aforementioned operation any number of times."
  },
  {
    "title": "Remove and Add",
    "url": "https://codeforces.com/problemset/problem/1910/D",
    "description": "You are given an array $$$a_1, a_2, \\dots, a_n$$$, consisting of $$$n$$$ integers.You goal is to make is strictly increasing. To achieve that, you perform each of the following operations exactly once:   first, remove any element;  second, select any number of elements (possibly, none or all $$$n-1$$$) and add $$$1$$$ to them. Note that you are not allowed to rearrange the elements of the array.For the resulting array $$$a'$$$, $$$a'_1 < a'_2 < \\dots < a'_{n-1}$$$ should hold. Determine if it's possible to achieve that."
  },
  {
    "title": "Poisonous Swamp",
    "url": "https://codeforces.com/problemset/problem/1910/C",
    "description": "The first location in the brand new critically acclaimed fantasy action RPG \"Ancient Staff\" is a poisonous swamp. The swamp has some lily pads growing in it. It can be represented as a $$$2 \\times n$$$ grid ($$$2$$$ rows and $$$n$$$ columns), where each cell is either empty or has a lily pad in it.There are exactly $$$n$$$ lily pads in a swamp — one in each column. A frog is sitting on top of every lily pad. In one move, every frog must jump to an adjacent by a side cell.After the move, no frog can be outside the grid and no two frogs can share the same lily pad. Two frogs from adjacent cells can't jump towards each other (i.e. swap cells).If a frog jumps to a lily pad, it survives. Otherwise, it falls into a poisonous swamp and gets devoured by an eldritch creature living on its bottom.You can choose the direction each frogs jumps at. Determine the maximum number of frogs that can survive after one move."
  },
  {
    "title": "Security Guard",
    "url": "https://codeforces.com/problemset/problem/1910/B",
    "description": "Monocarp is a security guard in Berland State University. Every day, he tracks how many people and at what time enter and leave the university. He writes this information down as follows:   when someone enters the university, Monocarp writes a plus sign '+';  when someone leaves the university, Monocarp writes a minus sign '-'. At the beginning of the current day, there are no people at the university, except for Monocarp. During the day, Monocarp wrote out a sequence $$$s$$$. The characters in $$$s$$$ are listed in the order Monocarp wrote them.Suddenly, Monocarp's boss decided to check his work. Unfortunately, Monocarp is a bit careless. So, the sequence $$$s$$$ that he wrote might be impossible. For example, the sequence \"+--\" can't happen, since it represents a scenario when one person enters the university and two leave.Before his boss starts checking the sequence, Monocarp has the time to swap at most one pair of characters in it. Can he do it in such a way that the resulting sequence is plausible? Note that if the given sequence is already plausible, Monocarp doesn't have to swap anything."
  },
  {
    "title": "Username",
    "url": "https://codeforces.com/problemset/problem/1910/A",
    "description": "On the official website of Berland, each account has two parameters: username and ID.Username is a string consisting of lowercase Latin letters and/or digits, which contains at least one letter. For example, user0, 1fox1, zzzz are correct usernames, but 1337 and User22 are not. The ID of the account for a given username is generated as follows: a positive integer without leading zeroes is appended to the end of the username. For example, the ID user0125 can be generated by the following usernames: user012, user01, user0; but neither by user nor us.You are given a string $$$s$$$ — a valid ID. Your task is to determine any valid username that can generate the given ID. If there are several correct usernames, you can print any of them."
  },
  {
    "title": "Short Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1909/I",
    "description": "Xomu - Last Dance⠀You are given an integer $$$n$$$.For each $$$(m, k)$$$ such that $$$3 \\leq m \\leq n+1$$$ and $$$0 \\leq k \\leq n-1$$$, count the permutations of $$$[1, 2, ..., n]$$$ such that $$$p_i + p_{i+1} \\geq m$$$ for exactly $$$k$$$ indices $$$i$$$, modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Parallel Swaps Sort",
    "url": "https://codeforces.com/problemset/problem/1909/H",
    "description": "Dubmood - Keygen 8⠀You are given a permutation $$$p_1, p_2, \\dots, p_n$$$ of $$$[1, 2, \\dots, n]$$$. You can perform the following operation some (possibly $$$0$$$) times:  choose a subarray $$$[l, r]$$$ of even length;  swap $$$a_l$$$, $$$a_{l+1}$$$;  swap $$$a_{l+2}$$$, $$$a_{l+3}$$$ (if $$$l+3 \\leq r$$$);  $$$\\dots$$$  swap $$$a_{r-1}$$$, $$$a_r$$$. Sort the permutation in at most $$$10^6$$$ operations. You do not need to minimize the number of operations."
  },
  {
    "title": "Pumping Lemma",
    "url": "https://codeforces.com/problemset/problem/1909/G",
    "description": "Tanchiky & Siromaru - Crystal Gravity⠀You are given two strings ss, tt of length nn, mm, respectively. Both strings consist of lowercase letters of the English alphabet.Count the triples (x,y,z)(x, y, z) of strings such that the following conditions are true:  s=x+y+zs = x+y+z (the symbol ++ represents the concatenation);  t=x+y+⋯+y⏟k times+zt = x+\\underbrace{ y+\\dots+y }_{k \\text{ times}} + z for some integer kk. "
  },
  {
    "title": "Small Permutation Problem (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1909/F2",
    "description": "Andy Tunstall - MiniBoss⠀In the easy version, the $$$a_i$$$ are in the range $$$[0, n]$$$; in the hard version, the $$$a_i$$$ are in the range $$$[-1, n]$$$ and the definition of good permutation is slightly different. You can make hacks only if all versions of the problem are solved.You are given an integer $$$n$$$ and an array $$$a_1, a_2, \\dots, a_n$$$ of integers in the range $$$[-1, n]$$$.A permutation $$$p_1, p_2, \\dots, p_n$$$ of $$$[1, 2, \\dots, n]$$$ is good if, for each $$$i$$$, the following condition is true:   if $$$a_i \\neq -1$$$, the number of values $$$\\leq i$$$ in $$$[p_1, p_2, \\dots, p_i]$$$ is exactly $$$a_i$$$. Count the good permutations of $$$[1, 2, \\dots, n]$$$, modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Small Permutation Problem (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1909/F1",
    "description": "Andy Tunstall - MiniBoss⠀In the easy version, the $$$a_i$$$ are in the range $$$[0, n]$$$; in the hard version, the $$$a_i$$$ are in the range $$$[-1, n]$$$ and the definition of good permutation is slightly different. You can make hacks only if all versions of the problem are solved.You are given an integer $$$n$$$ and an array $$$a_1, a_2 \\dots, a_n$$$ of integers in the range $$$[0, n]$$$.A permutation $$$p_1, p_2, \\dots, p_n$$$ of $$$[1, 2, \\dots, n]$$$ is good if, for each $$$i$$$, the following condition is true:   the number of values $$$\\leq i$$$ in $$$[p_1, p_2, \\dots, p_i]$$$ is exactly $$$a_i$$$. Count the good permutations of $$$[1, 2, \\dots, n]$$$, modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Multiple Lamps",
    "url": "https://codeforces.com/problemset/problem/1909/E",
    "description": "Kid2Will - Fire Aura⠀You have $$$n$$$ lamps, numbered from $$$1$$$ to $$$n$$$. Initially, all the lamps are turned off.You also have $$$n$$$ buttons. The $$$i$$$-th button toggles all the lamps whose index is a multiple of $$$i$$$. When a lamp is toggled, if it was off it turns on, and if it was on it turns off.You have to press some buttons according to the following rules.  You have to press at least one button.  You cannot press the same button multiple times.  You are given $$$m$$$ pairs $$$(u_i, v_i)$$$. If you press the button $$$u_i$$$, you also have to press the button $$$v_i$$$ (at any moment, not necessarily after pressing the button $$$u_i$$$). Note that, if you press the button $$$v_i$$$, you don't need to press the button $$$u_i$$$. You don't want to waste too much electricity. Find a way to press buttons such that at the end at most $$$\\lfloor n/5 \\rfloor$$$ lamps are on, or print $$$-1$$$ if it is impossible."
  },
  {
    "title": "Split Plus K",
    "url": "https://codeforces.com/problemset/problem/1909/D",
    "description": "eliteLAQ - Desert Ruins⠀There are $$$n$$$ positive integers $$$a_1, a_2, \\dots, a_n$$$ on a blackboard. You are also given a positive integer $$$k$$$. You can perform the following operation some (possibly $$$0$$$) times:  choose a number $$$x$$$ on the blackboard;  erase one occurrence of $$$x$$$;  write two positive integers $$$y$$$, $$$z$$$ such that $$$y+z = x+k$$$ on the blackboard. Is it possible to make all the numbers on the blackboard equal? If yes, what is the minimum number of operations you need?"
  },
  {
    "title": "Heavy Intervals",
    "url": "https://codeforces.com/problemset/problem/1909/C",
    "description": "Shiki - Pure Ruby⠀You have $$$n$$$ intervals $$$[l_1, r_1], [l_2, r_2], \\dots, [l_n, r_n]$$$, such that $$$l_i < r_i$$$ for each $$$i$$$, and all the endpoints of the intervals are distinct.The $$$i$$$-th interval has weight $$$c_i$$$ per unit length. Therefore, the weight of the $$$i$$$-th interval is $$$c_i \\cdot (r_i - l_i)$$$.You don't like large weights, so you want to make the sum of weights of the intervals as small as possible. It turns out you can perform all the following three operations:  rearrange the elements in the array $$$l$$$ in any order;  rearrange the elements in the array $$$r$$$ in any order;  rearrange the elements in the array $$$c$$$ in any order. However, after performing all of the operations, the intervals must still be valid (i.e., for each $$$i$$$, $$$l_i < r_i$$$ must hold).What's the minimum possible sum of weights of the intervals after performing the operations?"
  },
  {
    "title": "Make Almost Equal With Mod",
    "url": "https://codeforces.com/problemset/problem/1909/B",
    "description": "xi - Solar Storm⠀You are given an array $$$a_1, a_2, \\dots, a_n$$$ of distinct positive integers. You have to do the following operation exactly once:  choose a positive integer $$$k$$$;  for each $$$i$$$ from $$$1$$$ to $$$n$$$, replace $$$a_i$$$ with $$$a_i \\text{ mod } k^\\dagger$$$. Find a value of $$$k$$$ such that $$$1 \\leq k \\leq 10^{18}$$$ and the array $$$a_1, a_2, \\dots, a_n$$$ contains exactly $$$2$$$ distinct values at the end of the operation. It can be shown that, under the constraints of the problem, at least one such $$$k$$$ always exists. If there are multiple solutions, you can print any of them.$$$^\\dagger$$$ $$$a \\text{ mod } b$$$ denotes the remainder after dividing $$$a$$$ by $$$b$$$. For example:   $$$7 \\text{ mod } 3=1$$$ since $$$7 = 3 \\cdot 2 + 1$$$  $$$15 \\text{ mod } 4=3$$$ since $$$15 = 4 \\cdot 3 + 3$$$  $$$21 \\text{ mod } 1=0$$$ since $$$21 = 21 \\cdot 1 + 0$$$ "
  },
  {
    "title": "Distinct Buttons",
    "url": "https://codeforces.com/problemset/problem/1909/A",
    "description": "Deemo - Entrance⠀You are located at the point $$$(0, 0)$$$ of an infinite Cartesian plane. You have a controller with $$$4$$$ buttons which can perform one of the following operations:  $$$\\texttt{U}$$$: move from $$$(x, y)$$$ to $$$(x, y+1)$$$;  $$$\\texttt{R}$$$: move from $$$(x, y)$$$ to $$$(x+1, y)$$$;  $$$\\texttt{D}$$$: move from $$$(x, y)$$$ to $$$(x, y-1)$$$;  $$$\\texttt{L}$$$: move from $$$(x, y)$$$ to $$$(x-1, y)$$$. Unfortunately, the controller is broken. If you press all the $$$4$$$ buttons (in any order), the controller stops working. It means that, during the whole trip, you can only press at most $$$3$$$ distinct buttons (any number of times, in any order).There are $$$n$$$ special points in the plane, with integer coordinates $$$(x_i, y_i)$$$.Can you visit all the special points (in any order) without breaking the controller?"
  },
  {
    "title": "Lights",
    "url": "https://codeforces.com/problemset/problem/1907/G",
    "description": "In the end of the day, Anna needs to turn off the lights in the office. There are $$$n$$$ lights and $$$n$$$ light switches, but their operation scheme is really strange. The switch $$$i$$$ changes the state of light $$$i$$$, but it also changes the state of some other light $$$a_i$$$ (change the state means that if the light was on, it goes off and vice versa).Help Anna to turn all the lights off using minimal number of switches, or say it is impossible."
  },
  {
    "title": "Shift and Reverse",
    "url": "https://codeforces.com/problemset/problem/1907/F",
    "description": "Given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. You can make two types of operations with this array:   Shift: move the last element of array to the first place, and shift all other elements to the right, so you get the array $$$a_n, a_1, a_2, \\ldots, a_{n-1}$$$.  Reverse: reverse the whole array, so you get the array $$$a_n, a_{n-1}, \\ldots, a_1$$$. Your task is to sort the array in non-decreasing order using the minimal number of operations, or say that it is impossible."
  },
  {
    "title": "Good Triples",
    "url": "https://codeforces.com/problemset/problem/1907/E",
    "description": "Given a non-negative integer number $$$n$$$ ($$$n \\ge 0$$$). Let's say a triple of non-negative integers $$$(a, b, c)$$$ is good if $$$a + b + c = n$$$, and $$$digsum(a) + digsum(b) + digsum(c) = digsum(n)$$$, where $$$digsum(x)$$$ is the sum of digits of number $$$x$$$.For example, if $$$n = 26$$$, then the pair $$$(4, 12, 10)$$$ is good, because $$$4 + 12 + 10 = 26$$$, and $$$(4) + (1 + 2) + (1 + 0) = (2 + 6)$$$.Your task is to find the number of good triples for the given number $$$n$$$. The order of the numbers in a triple matters. For example, the triples $$$(4, 12, 10)$$$ and $$$(10, 12, 4)$$$ are two different triples."
  },
  {
    "title": "Jumping Through Segments",
    "url": "https://codeforces.com/problemset/problem/1907/D",
    "description": "Polycarp is designing a level for a game. The level consists of $$$n$$$ segments on the number line, where the $$$i$$$-th segment starts at the point with coordinate $$$l_i$$$ and ends at the point with coordinate $$$r_i$$$.The player starts the level at the point with coordinate $$$0$$$. In one move, they can move to any point that is within a distance of no more than $$$k$$$. After their $$$i$$$-th move, the player must land within the $$$i$$$-th segment, that is, at a coordinate $$$x$$$ such that $$$l_i \\le x \\le r_i$$$. This means:  After the first move, they must be inside the first segment (from $$$l_1$$$ to $$$r_1$$$);  After the second move, they must be inside the second segment (from $$$l_2$$$ to $$$r_2$$$);  ...  After the $$$n$$$-th move, they must be inside the $$$n$$$-th segment (from $$$l_n$$$ to $$$r_n$$$). The level is considered completed if the player reaches the $$$n$$$-th segment, following the rules described above. After some thought, Polycarp realized that it is impossible to complete the level with some values of $$$k$$$.Polycarp does not want the level to be too easy, so he asks you to determine the minimum integer $$$k$$$ with which it is possible to complete the level."
  },
  {
    "title": "Removal of Unattractive Pairs",
    "url": "https://codeforces.com/problemset/problem/1907/C",
    "description": "Vlad found a string $$$s$$$ consisting of $$$n$$$ lowercase Latin letters, and he wants to make it as short as possible.To do this, he can remove any pair of adjacent characters from $$$s$$$ any number of times, provided they are different. For example, if $$$s$$$=racoon, then by removing one pair of characters he can obtain the strings coon, roon, raon, and raco, but he cannot obtain racn (because the removed letters were the same) or rcon (because the removed letters were not adjacent).What is the minimum length Vlad can achieve by applying any number of deletions?"
  },
  {
    "title": "YetnotherrokenKeoard",
    "url": "https://codeforces.com/problemset/problem/1907/B",
    "description": "Polycarp has a problem — his laptop keyboard is broken.Now, when he presses the 'b' key, it acts like an unusual backspace: it deletes the last (rightmost) lowercase letter in the typed string. If there are no lowercase letters in the typed string, then the press is completely ignored.Similarly, when he presses the 'B' key, it deletes the last (rightmost) uppercase letter in the typed string. If there are no uppercase letters in the typed string, then the press is completely ignored.In both cases, the letters 'b' and 'B' are not added to the typed string when these keys are pressed.Consider an example where the sequence of key presses was \"ARaBbbitBaby\". In this case, the typed string will change as follows: \"\" $$$\\xrightarrow{\\texttt{A}}$$$ \"A\" $$$\\xrightarrow{\\texttt{R}}$$$ \"AR\" $$$\\xrightarrow{\\texttt{a}}$$$ \"ARa\" $$$\\xrightarrow{\\texttt{B}}$$$ \"Aa\" $$$\\xrightarrow{\\texttt{b}}$$$ \"A\" $$$\\xrightarrow{\\texttt{b}}$$$ \"A\" $$$\\xrightarrow{\\texttt{i}}$$$ \"Ai\" $$$\\xrightarrow{\\texttt{t}}$$$ \"Ait\" $$$\\xrightarrow{\\texttt{B}}$$$ \"it\" $$$\\xrightarrow{\\texttt{a}}$$$ \"ita\" $$$\\xrightarrow{\\texttt{b}}$$$ \"it\" $$$\\xrightarrow{\\texttt{y}}$$$ \"ity\".Given a sequence of pressed keys, output the typed string after processing all key presses."
  },
  {
    "title": "Rook",
    "url": "https://codeforces.com/problemset/problem/1907/A",
    "description": "As you probably know, chess is a game that is played on a board with 64 squares arranged in an $$$8\\times 8$$$ grid. Columns of this board are labeled with letters from a to h, and rows are labeled with digits from 1 to 8. Each square is described by the row and column it belongs to.  The rook is a piece in the game of chess. During its turn, it may move any non-zero number of squares horizontally or vertically. Your task is to find all possible moves for a rook on an empty chessboard."
  },
  {
    "title": "Triangle Construction",
    "url": "https://codeforces.com/problemset/problem/1906/M",
    "description": "You are given a regular $$$N$$$-sided polygon. Label one arbitrary side as side $$$1$$$, then label the next sides in clockwise order as side $$$2$$$, $$$3$$$, $$$\\dots$$$, $$$N$$$. There are $$$A_i$$$ special points on side $$$i$$$. These points are positioned such that side $$$i$$$ is divided into $$$A_i + 1$$$ segments with equal length.For instance, suppose that you have a regular $$$4$$$-sided polygon, i.e., a square. The following illustration shows how the special points are located within each side when $$$A = [3, 1, 4, 6]$$$. The uppermost side is labelled as side $$$1$$$.  You want to create as many non-degenerate triangles as possible while satisfying the following requirements. Each triangle consists of $$$3$$$ distinct special points (not necessarily from different sides) as its corners. Each special point can only become the corner of at most $$$1$$$ triangle. All triangles must not intersect with each other.Determine the maximum number of non-degenerate triangles that you can create.A triangle is non-degenerate if it has a positive area."
  },
  {
    "title": "Palindromic Parentheses",
    "url": "https://codeforces.com/problemset/problem/1906/L",
    "description": "Construct a parentheses sequence consisting of $$$N$$$ characters such that it is balanced and the length of its longest palindromic subsequence (LPS) is exactly $$$K$$$. Determine whether such a construction is possible. If there are several possible sequences, construct any of them.A parentheses sequence consists of only character ( and ). A parentheses sequence is balanced if each character ( has a corresponding character ) and the pairs of parentheses are properly nested. For example, (), (()), (())(), and ((())()) are balanced. However, )(, ((), and ()) are not balanced.A sequence is palindromic if it reads the same backwards as forwards. For example, ((, ), ())(, and (()(( are palindromic. However, (), )(, and (()) are not palindromic.A subsequence can be derived from another sequence by removing zero or more characters without changing the order of the remaining characters. For example, (, ))), ())(, and (())() are subsequence of (())(). However, )(( and ((())) are not subsequence of (())().The longest palindromic subsequence (LPS) of a sequence is a subsequence with the maximum number of characters, derived from that sequence and it is palindromic. For example, the LPS of sequence (())() is ())(, which can be obtained by removing the second and sixth characters. Therefore, the length of the LPS of (())() is $$$4$$$."
  },
  {
    "title": "Deck-Building Game",
    "url": "https://codeforces.com/problemset/problem/1906/K",
    "description": "You are playing a deck-building game with your friend. There are $$$N$$$ cards, numbered from $$$1$$$ to $$$N$$$. Card $$$i$$$ has the value of $$$A_i$$$.You want to build two decks; one for you and one for your friend. A card cannot be inside both decks, and it is allowed to not use all $$$N$$$ cards. It is also allowed for a deck to be empty, i.e. does not contain any cards.The power of a deck is represented as the bitwise XOR of the value of the cards in the deck. The power of an empty deck is $$$0$$$.The game is balanced if both decks have the same power.Determine the number of ways to build two decks such that the game is balanced. Two ways are considered different if one of the decks contains at least one different card. Since the answer can be very large, calculate the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Count BFS Graph",
    "url": "https://codeforces.com/problemset/problem/1906/J",
    "description": "You are currently researching a graph traversal algorithm called the Breadth First Search (BFS). Suppose you have an input graph of $$$N$$$ nodes (numbered from $$$1$$$ to $$$N$$$). The graph is represented by an adjacency matrix $$$M$$$, for which node $$$u$$$ can traverse to node $$$v$$$ if $$$M_{u, v}$$$ is $$$1$$$, otherwise it is $$$0$$$. Your algorithm will output the order the nodes are visited in the BFS. The pseudocode of the algorithm is presented as follows.    BFS(M[1..N][1..N]):        let A be an empty array        let Q be an empty queue        append 1 to A        push 1 to Q        while Q is not empty:            pop the front element of Q into u            for v = 1 to N:                if M[u][v] == 1 and v is not in A:                    append v to A                    push v to Q        return ADuring your research, you are interested in the following problem. Given an array $$$A$$$ such that $$$A$$$ is a permutation of $$$1$$$ to $$$N$$$ and $$$A_1 = 1$$$. How many simple undirected graph with $$$N$$$ nodes and adjacency matrix $$$M$$$ such that $$$\\text{BFS}(M) = A$$$? Since the answer can be very large, calculate the answer modulo $$$998\\,244\\,353$$$.A simple graph has no self-loop ($$$M_{i, i} = 0$$$ for $$$1 \\leq i \\leq N$$$) and there is at most one edge that connects a pair of nodes. In an undirected graph, if node $$$u$$$ is adjacent to node $$$v$$$, then node $$$v$$$ is also adjacent to node $$$u$$$; formally, $$$M_{u, v} = M_{v, u}$$$ for $$$1 \\leq u < v \\leq N$$$.Two graphs are considered different if there is an edge that exists in one graph but not the other. In other words, two graphs are considered different if their adjacency matrices are different."
  },
  {
    "title": "Contingency Plan 2",
    "url": "https://codeforces.com/problemset/problem/1906/I",
    "description": "You are working as a manager in The ICPC Company. In the company building, there are $$$N$$$ computers (numbered from $$$1$$$ to $$$N$$$). There are $$$N - 1$$$ cables, numbered from $$$1$$$ to $$$N - 1$$$, that connect all the computers into a single network. Cable $$$i$$$ connects computer $$$U_i$$$ and $$$V_i$$$. Each cable can be set into emergency mode, where cable $$$i$$$ only transfers data from computer $$$U_i$$$ to computer $$$V_i$$$, but not the other way around. During a disaster, it is mandatory for all cables to be in emergency mode.Through your research, you discover a new way to determine the vulnerability of a network. You want to add zero or more new cables to the current network such that it is not vulnerable during a disaster. Your network is not vulnerable if and only if there is exactly one permutation of $$$1$$$ to $$$N$$$ such that $$$u$$$ appears before $$$v$$$ in the permutation for all cables that connect computer $$$u$$$ and $$$v$$$. In other words, it should have exactly one topological order.The following illustration shows examples of not vulnerable networks and vulnerable networks.  For the not vulnerable networks, the only permutation that satisfies the requirement for the networks on the left and on the right are $$$[1, 2, 3]$$$ and $$$[3, 1, 2]$$$, respectively. Meanwhile, for the vulnerable networks, there are $$$2$$$ permutations that satisfy the requirement for the network on the left: $$$[1, 2, 3]$$$ and $$$[3, 1, 2]$$$; while there is no permutation that satisfies the requirement for the network on the right.You are interested in the minimum number of new cables that should be added to the current network such that it is not vulnerable during a disaster. Furthermore, you want to know, which pairs of computers should be connected by using the minimum number of cables. If there are several ways to connect, you can connect in any way of your choice. Under the given constraints, it can be proven that there exists a way to make the network not vulnerable."
  },
  {
    "title": "Twin Friends",
    "url": "https://codeforces.com/problemset/problem/1906/H",
    "description": "You meet two new friends who are twins. The name of the elder twin is $$$A$$$, which consists of $$$N$$$ characters. While the name of the younger twin is $$$B$$$, which consists of $$$M$$$ characters. It is known that $$$N \\leq M$$$.You want to call each of them with a nickname. For the elder twin, you want to pick any permutation of $$$A$$$ as the nickname. For the younger twin, you want to remove exactly $$$M - N$$$ characters from any permutation of $$$B$$$. Denote the nicknames of the elder twin and the younger twin as $$$A'$$$ and $$$B'$$$, respectively.You want the nicknames to satisfy the following requirement. For each $$$i$$$ that satisfies $$$1 \\leq i \\leq N$$$, $$$B'_i$$$ must be equal to either $$$A'_i$$$ or the next letter that follows alphabetically after $$$A'_i$$$ (if such a next letter exists).Determine the number of different pairs of nicknames $$$(A', B')$$$ that satisfy the requirement. Two pairs of nicknames are considered different if at least one of the nicknames are different. As the result might be large, find the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Grid Game 2",
    "url": "https://codeforces.com/problemset/problem/1906/G",
    "description": "You are playing \"Grid Game 2\" with your friend. There is a grid with $$$10^9$$$ rows (numbered from $$$1$$$ to $$$10^9$$$) and $$$10^9$$$ columns (numbered from $$$1$$$ to $$$10^9$$$). The cell at row $$$r$$$ and column $$$c$$$ is denoted as $$$(r, c)$$$.Each cell can have a colour of either black or white. Initially, there are exactly $$$N$$$ black cells (numbered from $$$1$$$ to $$$N$$$). Black cell $$$i$$$ is located at $$$(R_i, C_i)$$$. The rest of the cells are white.You and your friend will alternately take turn playing on this grid, and you are playing in the first turn. In one turn, a player will choose a black cell $$$(r, c)$$$, then toggle cells $$$(r - x, c - y)$$$ for all $$$0 \\leq x, y < \\min(r, c)$$$. If a cell is toggled, then the cell becomes black if it was a white cell, and the cell becomes white if it was a black cell.For example, the following illustration shows how the grid changes after a player chooses a black cell $$$(5, 4)$$$ in their turn.  A player who is unable to play on their turn, i.e. no remaining black cells, loses the game, and the opposing player wins the game. If you and your friend are playing optimally, determine who will win the game."
  },
  {
    "title": "Maximize The Value",
    "url": "https://codeforces.com/problemset/problem/1906/F",
    "description": "You are given a one-based array consisting of $$$N$$$ integers: $$$A_1, A_2, \\cdots, A_N$$$. Initially, the value of each element is set to $$$0$$$.There are $$$M$$$ operations (numbered from $$$1$$$ to $$$M$$$). Operation $$$i$$$ is represented by $$$\\langle L_i, R_i, X_i \\rangle$$$. If operation $$$i$$$ is executed, all elements $$$A_j$$$ for $$$L_i \\leq j \\leq R_i$$$ will be increased by $$$X_i$$$.You have to answer $$$Q$$$ independent queries. Each query is represented by $$$\\langle K, S, T \\rangle$$$ which represents the following task. Choose a range $$$[l, r]$$$ satisfying $$$S \\leq l \\leq r \\leq T$$$, and execute operations $$$l, l + 1, \\dots, r$$$. The answer to the query is the maximum value of $$$A_K$$$ after the operations are executed among all possible choices of $$$l$$$ and $$$r$$$."
  },
  {
    "title": "Merge Not Sort",
    "url": "https://codeforces.com/problemset/problem/1906/E",
    "description": "You are currently researching the Merge Sort algorithm. Merge Sort is a sorting algorithm that is based on the principle of Divide and Conquer. It works by dividing an array into two subarrays of equal length, sorting each subarrays, then merging the sorted subarrays back together to form the final sorted array.You are particularly interested in the merging routine. Common merge implementation will combine two subarrays by iteratively comparing their first elements, and move the smaller one to a new merged array. More precisely, the merge algorithm can be presented by the following pseudocode.    Merge(A[1..N], B[1..N]):        C = []        i = 1        j = 1        while i <= N AND j <= N:            if A[i] < B[j]:                append A[i] to C                i = i + 1            else:                append B[j] to C                j = j + 1         while i <= N:            append A[i] to C            i = i + 1         while j <= N:            append B[j] to C            j = j + 1         return CDuring your research, you are keen to understand the behaviour of the merge algorithm when arrays $$$A$$$ and $$$B$$$ are not necessarily sorted. For example, if $$$A = [3, 1, 6]$$$ and $$$B = [4, 5, 2]$$$, then $$$\\text{Merge}(A, B) = [3, 1, 4, 5, 2, 6]$$$.To further increase the understanding of the merge algorithm, you decided to work on the following problem. You are given an array $$$C$$$ of length $$$2 \\cdot N$$$ such that it is a permutation of $$$1$$$ to $$$2 \\cdot N$$$. Construct any two arrays $$$A$$$ and $$$B$$$ of the same length $$$N$$$, such that $$$\\text{Merge}(A, B) = C$$$, or determine if it is impossible to do so."
  },
  {
    "title": "Spaceship Exploration",
    "url": "https://codeforces.com/problemset/problem/1906/D",
    "description": "In The ICPC Galaxy, there exists a zone filled with asteroids that is unsafe to enter. The map of the galaxy is represented in a 2D Cartesian coordinate system. The zone is in the shape of an $$$N$$$-sided convex polygon. Each corner is numbered from $$$1$$$ to $$$N$$$; corner $$$i$$$ is located at $$$(X_i, Y_i)$$$. At any moment, you should not be inside this polygon; however, it is safe to touch the side of the polygon.There are $$$Q$$$ scenarios (numbered from $$$1$$$ to $$$Q$$$). In scenario $$$j$$$, you want to go from a starting point at $$$(A_j, B_j)$$$ to an ending point at $$$(C_j, D_j)$$$. You will be riding on a special spaceship that can only travel in a straight line. First, you set the direction of the spaceship, then the spaceship will start traveling in that direction. During the travel, you are only allowed to change direction at most once. Changing direction means you stop the spaceship, set a new direction, and then start traveling again in the new direction.For each scenario, determine the minimum distance required to travel without being inside of the zone at any moment, or report if it is impossible to reach the ending point."
  },
  {
    "title": "Cursed Game",
    "url": "https://codeforces.com/problemset/problem/1906/C",
    "description": "You found an antique box in your warehouse and decided to open it. The moment you open the box, it traps you into a cursed game where you are playing against a demon. The game consists of $$$333$$$ rounds and you have to win all rounds in order to escape. The demon also gives you $$$999$$$ coins that you can use throughout all rounds.Note that in this problem, denote cell $$$(r, c)$$$ of a grid as the cell in row $$$r$$$ and column $$$c$$$ of the grid.Before the start of each round, the demon will prepare a secret paper, which can be represented as a grid with $$$3$$$ rows and $$$3$$$ columns, both numbered from $$$1$$$ to $$$3$$$. The demon will secretly put a hole in one or more cells, and you are not aware which cells have a hole in it. Then, the round starts with the demon giving you an odd integer $$$N$$$ ($$$3 \\leq N \\leq 33$$$).Within each round, you can ask the demon several queries, each costing you one coin. For each query, you are allowed to give the demon your paper, which can be represented as a grid with $$$N$$$ rows and $$$N$$$ columns, both numbered from $$$1$$$ to $$$N$$$. Each cell is coloured either black or white by you.For each of your query, the demon will calculate a binary result grid with $$$N - 2$$$ rows and $$$N - 2$$$ columns, both numbered from $$$1$$$ to $$$N - 2$$$. The value on cell $$$(r, c)$$$ of the result grid is filled as follows.  The demon will put the secret paper on top of your paper such that the cell $$$(r + i - 1, c + j - 1)$$$ of your paper aligns with the cell $$$(i, j)$$$ of the secret paper, for $$$1 \\leq i, j \\leq 3$$$.  The demon can only see the colour of the cell in your paper if the corresponding cell in the secret paper has a hole in it.  The value on cell $$$(r, c)$$$ of the result grid is $$$1$$$ if there is an odd number of black cells that it can see through the holes, or $$$0$$$ otherwise. You win the round if the result grid consists of only the values $$$1$$$. Otherwise, the demon will give you the result grid as a feedback, and the round continues.If you have spent all the coins and still did not win all the rounds, then you will be trapped forever. Escape the cursed game!"
  },
  {
    "title": "Button Pressing",
    "url": "https://codeforces.com/problemset/problem/1906/B",
    "description": "You are given $$$N$$$ buttons (numbered from $$$1$$$ to $$$N$$$) and $$$N$$$ lamps (numbered from $$$1$$$ to $$$N$$$). Each lamp can either be on or off. Initially, lamp $$$i$$$ is on if $$$A_i = 1$$$, and off if $$$A_i = 0$$$.Button $$$i$$$ is connected to lamp $$$i - 1$$$ (if $$$i > 1$$$) and lamp $$$i + 1$$$ (if $$$i < N$$$). In one move, you can press a button $$$i$$$ only if lamp $$$i$$$ is on. When a button is pressed, the state of the lamps connected to this button is toggled. Formally, the lamps will be on if it was off previously, and the lamps will be off if it was on previously. Note that lamp $$$i$$$ is not connected to button $$$i$$$, thus, the state of lamp $$$i$$$ does not change if button $$$i$$$ is pressed.After zero or more moves, you want lamp $$$i$$$ to be on if $$$B_i = 1$$$, and off if $$$B_i = 0$$$. Determine if it is possible to achieve this task."
  },
  {
    "title": "Easy As ABC",
    "url": "https://codeforces.com/problemset/problem/1906/A",
    "description": "You are playing a word puzzle. The puzzle starts with a $$$3$$$ by $$$3$$$ grid, where each cell contains either the letter A, B, or C.The goal of this puzzle is to find the lexicographically smallest possible word of length $$$3$$$. The word can be formed by choosing three different cells where the cell containing the first letter is adjacent to the cell containing the second letter, and the cell containing the second letter is adjacent to the cell containing the third letter.Two cells are adjacent to each other if they share a border or a corner, as shown in the following illustration. Formally, if $$$(r, c)$$$ denotes the cell in the $$$r$$$-th row and $$$c$$$-th column, then cell $$$(r, c)$$$ is adjacent to cell $$$(r, c + 1)$$$, $$$(r - 1, c + 1)$$$, $$$(r - 1, c)$$$, $$$(r - 1, c - 1)$$$, $$$(r, c - 1)$$$, $$$(r + 1, c - 1)$$$, $$$(r + 1, c)$$$, and $$$(r + 1, c + 1)$$$.  Determine the lexicographically smallest possible word of length $$$3$$$ that you can find within the grid.A string $$$s$$$ of length $$$n$$$ is lexicographically smaller than string $$$t$$$ of the same length if there exists an integer $$$1 \\leq i \\leq n$$$ such that $$$s_j = t_j$$$ for all $$$1 \\leq j < i$$$, and $$$s_i < t_i$$$ in alphabetical order. The following illustration shows some examples on some grids and their the lexicographically smallest possible word of length $$$3$$$ that you can find within the grids.  "
  },
  {
    "title": "Field Should Not Be Empty",
    "url": "https://codeforces.com/problemset/problem/1905/F",
    "description": "You are given a permutation$$$^{\\dagger}$$$ $$$p$$$ of length $$$n$$$.We call index $$$x$$$ good if for all $$$y < x$$$ it holds that $$$p_y < p_x$$$ and for all $$$y > x$$$ it holds that $$$p_y > p_x$$$. We call $$$f(p)$$$ the number of good indices in $$$p$$$. You can perform the following operation: pick $$$2$$$ distinct indices $$$i$$$ and $$$j$$$ and swap elements $$$p_i$$$ and $$$p_j$$$. Find the maximum value of $$$f(p)$$$ after applying the aforementioned operation exactly once.$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "One-X",
    "url": "https://codeforces.com/problemset/problem/1905/E",
    "description": "In this sad world full of imperfections, ugly segment trees exist.A segment tree is a tree where each node represents a segment and has its number. A segment tree for an array of $$$n$$$ elements can be built in a recursive manner. Let's say function $$$\\operatorname{build}(v,l,r)$$$ builds the segment tree rooted in the node with number $$$v$$$ and it corresponds to the segment $$$[l,r]$$$.Now let's define $$$\\operatorname{build}(v,l,r)$$$:   If $$$l=r$$$, this node $$$v$$$ is a leaf so we stop adding more edges  Else, we add the edges $$$(v, 2v)$$$ and $$$(v, 2v+1)$$$. Let $$$m=\\lfloor \\frac{l+r}{2} \\rfloor$$$. Then we call $$$\\operatorname{build}(2v,l,m)$$$ and $$$\\operatorname{build}(2v+1,m+1,r)$$$. So, the whole tree is built by calling $$$\\operatorname{build}(1,1,n)$$$.Now Ibti will construct a segment tree for an array with $$$n$$$ elements. He wants to find the sum of $$$\\operatorname{lca}^\\dagger(S)$$$, where $$$S$$$ is a non-empty subset of leaves. Notice that there are exactly $$$2^n - 1$$$ possible subsets. Since this sum can be very large, output it modulo $$$998\\,244\\,353$$$.$$$^\\dagger\\operatorname{lca}(S)$$$ is the number of the least common ancestor for the nodes that are in $$$S$$$."
  },
  {
    "title": "Cyclic MEX",
    "url": "https://codeforces.com/problemset/problem/1905/D",
    "description": "For an array $$$a$$$, define its cost as $$$\\sum_{i=1}^{n} \\operatorname{mex} ^\\dagger ([a_1,a_2,\\ldots,a_i])$$$.You are given a permutation$$$^\\ddagger$$$ $$$p$$$ of the set $$$\\{0,1,2,\\ldots,n-1\\}$$$. Find the maximum cost across all cyclic shifts of $$$p$$$.$$$^\\dagger\\operatorname{mex}([b_1,b_2,\\ldots,b_m])$$$ is the smallest non-negative integer $$$x$$$ such that $$$x$$$ does not occur among $$$b_1,b_2,\\ldots,b_m$$$.$$$^\\ddagger$$$A permutation of the set $$$\\{0,1,2,...,n-1\\}$$$ is an array consisting of $$$n$$$ distinct integers from $$$0$$$ to $$$n-1$$$ in arbitrary order. For example, $$$[1,2,0,4,3]$$$ is a permutation, but $$$[0,1,1]$$$ is not a permutation ($$$1$$$ appears twice in the array), and $$$[0,2,3]$$$ is also not a permutation ($$$n=3$$$ but there is $$$3$$$ in the array)."
  },
  {
    "title": "Largest Subsequence",
    "url": "https://codeforces.com/problemset/problem/1905/C",
    "description": "Given is a string $$$s$$$ of length $$$n$$$. In one operation you can select the lexicographically largest$$$^\\dagger$$$ subsequence of string $$$s$$$ and cyclic shift it to the right$$$^\\ddagger$$$. Your task is to calculate the minimum number of operations it would take for $$$s$$$ to become sorted, or report that it never reaches a sorted state.$$$^\\dagger$$$A string $$$a$$$ is lexicographically smaller than a string $$$b$$$ if and only if one of the following holds: $$$a$$$ is a prefix of $$$b$$$, but $$$a \\ne b$$$; In the first position where $$$a$$$ and $$$b$$$ differ, the string $$$a$$$ has a letter that appears earlier in the alphabet than the corresponding letter in $$$b$$$.$$$^\\ddagger$$$By cyclic shifting the string $$$t_1t_2\\ldots t_m$$$ to the right, we get the string $$$t_mt_1\\ldots t_{m-1}$$$."
  },
  {
    "title": "Begginer's Zelda",
    "url": "https://codeforces.com/problemset/problem/1905/B",
    "description": "You are given a tree$$$^{\\dagger}$$$. In one zelda-operation you can do follows: Choose two vertices of the tree $$$u$$$ and $$$v$$$; Compress all the vertices on the path from $$$u$$$ to $$$v$$$ into one vertex. In other words, all the vertices on path from $$$u$$$ to $$$v$$$ will be erased from the tree, a new vertex $$$w$$$ will be created. Then every vertex $$$s$$$ that had an edge to some vertex on the path from $$$u$$$ to $$$v$$$ will have an edge to the vertex $$$w$$$.    Illustration of a zelda-operation performed for vertices $$$1$$$ and $$$5$$$. Determine the minimum number of zelda-operations required for the tree to have only one vertex.$$$^{\\dagger}$$$A tree is a connected acyclic undirected graph."
  },
  {
    "title": "Constructive Problems",
    "url": "https://codeforces.com/problemset/problem/1905/A",
    "description": "Gridlandia has been hit by flooding and now has to reconstruct all of it's cities. Gridlandia can be described by an $$$n \\times m$$$ matrix.Initially, all of its cities are in economic collapse. The government can choose to rebuild certain cities. Additionally, any collapsed city which has at least one vertically neighboring rebuilt city and at least one horizontally neighboring rebuilt city can ask for aid from them and become rebuilt without help from the government. More formally, collapsed city positioned in $$$(i, j)$$$ can become rebuilt if both of the following conditions are satisfied:  At least one of cities with positions $$$(i + 1, j)$$$ and $$$(i - 1, j)$$$ is rebuilt;  At least one of cities with positions $$$(i, j + 1)$$$ and $$$(i, j - 1)$$$ is rebuilt. If the city is located on the border of the matrix and has only one horizontally or vertically neighbouring city, then we consider only that city.   Illustration of two possible ways cities can be rebuilt by adjacent aid. White cells are collapsed cities, yellow cells are initially rebuilt cities (either by the government or adjacent aid), and orange cells are rebuilt cities after adjacent aid. The government wants to know the minimum number of cities it has to rebuild such that after some time all the cities can be rebuild."
  },
  {
    "title": "Beautiful Tree",
    "url": "https://codeforces.com/problemset/problem/1904/F",
    "description": "Lunchbox has a tree of size $$$n$$$ rooted at node $$$1$$$. Each node is then assigned a value. Lunchbox considers the tree to be beautiful if each value is distinct and ranges from $$$1$$$ to $$$n$$$. In addition, a beautiful tree must also satisfy $$$m$$$ requirements of $$$2$$$ types:  \"1 a b c\" — The node with the smallest value on the path between nodes $$$a$$$ and $$$b$$$ must be located at $$$c$$$.  \"2 a b c\" — The node with the largest value on the path between nodes $$$a$$$ and $$$b$$$ must be located at $$$c$$$. Now, you must assign values to each node such that the resulting tree is beautiful. If it is impossible to do so, output $$$-1$$$."
  },
  {
    "title": "Tree Queries",
    "url": "https://codeforces.com/problemset/problem/1904/E",
    "description": "Those who don't work don't eat. Get the things you want with your own power. But believe, the earnest and serious people are the ones who have the last laugh... But even then, I won't give you a present.—Santa, Hayate no Gotoku!Since Hayate didn't get any Christmas presents from Santa, he is instead left solving a tree query problem.Hayate has a tree with $$$n$$$ nodes.Hayate now wants you to answer $$$q$$$ queries. Each query consists of a node $$$x$$$ and $$$k$$$ other additional nodes $$$a_1,a_2,\\ldots,a_k$$$. These $$$k+1$$$ nodes are guaranteed to be all distinct.For each query, you must find the length of the longest simple path starting at node $$$x^\\dagger$$$ after removing nodes $$$a_1,a_2,\\ldots,a_k$$$ along with all edges connected to at least one of nodes $$$a_1,a_2,\\ldots,a_k$$$.$$$^\\dagger$$$ A simple path of length $$$k$$$ starting at node $$$x$$$ is a sequence of distinct nodes $$$x=u_0,u_1,\\ldots,u_k$$$ such that there exists a edge between nodes $$$u_{i-1}$$$ and $$$u_i$$$ for all $$$1 \\leq i \\leq k$$$."
  },
  {
    "title": "Set To Max (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1904/D2",
    "description": "This is the hard version of the problem. The only differences between the two versions of this problem are the constraints on $$$n$$$ and the time limit. You can make hacks only if all versions of the problem are solved.You are given two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$.You can perform the following operation some (possibly zero) times:   choose $$$l$$$ and $$$r$$$ such that $$$1 \\leq l \\leq r \\leq n$$$.  let $$$x=\\max(a_l,a_{l+1},\\ldots,a_r)$$$.  for all $$$l \\leq i \\leq r$$$, set $$$a_i := x$$$. Determine if you can make array $$$a$$$ equal to array $$$b$$$."
  },
  {
    "title": "Set To Max (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1904/D1",
    "description": "This is the easy version of the problem. The only differences between the two versions of this problem are the constraints on $$$n$$$ and the time limit. You can make hacks only if all versions of the problem are solved.You are given two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$.You can perform the following operation some (possibly zero) times:   choose $$$l$$$ and $$$r$$$ such that $$$1 \\leq l \\leq r \\leq n$$$.  let $$$x=\\max(a_l,a_{l+1},\\ldots,a_r)$$$.  for all $$$l \\leq i \\leq r$$$, set $$$a_i := x$$$. Determine if you can make array $$$a$$$ equal to array $$$b$$$."
  },
  {
    "title": "Array Game",
    "url": "https://codeforces.com/problemset/problem/1904/C",
    "description": "You are given an array $$$a$$$ of $$$n$$$ positive integers. In one operation, you must pick some $$$(i, j)$$$ such that $$$1\\leq i < j\\leq |a|$$$ and append $$$|a_i - a_j|$$$ to the end of the $$$a$$$ (i.e. increase $$$n$$$ by $$$1$$$ and set $$$a_n$$$ to $$$|a_i - a_j|$$$). Your task is to minimize and print the minimum value of $$$a$$$ after performing $$$k$$$ operations."
  },
  {
    "title": "Collecting Game",
    "url": "https://codeforces.com/problemset/problem/1904/B",
    "description": "You are given an array $$$a$$$ of $$$n$$$ positive integers and a score. If your score is greater than or equal to $$$a_i$$$, then you can increase your score by $$$a_i$$$ and remove $$$a_i$$$ from the array. For each index $$$i$$$, output the maximum number of additional array elements that you can remove if you remove $$$a_i$$$ and then set your score to $$$a_i$$$. Note that the removal of $$$a_i$$$ should not be counted in the answer."
  },
  {
    "title": "Forked!",
    "url": "https://codeforces.com/problemset/problem/1904/A",
    "description": "Lunchbox is done with playing chess! His queen and king just got forked again!In chess, a fork is when a knight attacks two pieces of higher value, commonly the king and the queen. Lunchbox knows that knights can be tricky, and in the version of chess that he is playing, knights are even trickier: instead of moving $$$1$$$ tile in one direction and $$$2$$$ tiles in the other, knights in Lunchbox's modified game move $$$a$$$ tiles in one direction and $$$b$$$ tiles in the other.Lunchbox is playing chess on an infinite chessboard which contains all cells $$$(x,y)$$$ where $$$x$$$ and $$$y$$$ are (possibly negative) integers. Lunchbox's king and queen are placed on cells $$$(x_K,y_K)$$$ and $$$(x_Q,y_Q)$$$ respectively. Find the number of positions such that if a knight was placed on that cell, it would attack both the king and queen."
  },
  {
    "title": "Babysitting",
    "url": "https://codeforces.com/problemset/problem/1903/F",
    "description": "Theofanis wants to play video games, however he should also take care of his sister. Since Theofanis is a CS major, he found a way to do both. He will install some cameras in his house in order to make sure his sister is okay.His house is an undirected graph with $$$n$$$ nodes and $$$m$$$ edges. His sister likes to play at the edges of the graph, so he has to install a camera to at least one endpoint of every edge of the graph. Theofanis wants to find a vertex cover that maximizes the minimum difference between indices of the chosen nodes.More formally, let $$$a_1, a_2, \\ldots, a_k$$$ be a vertex cover of the graph. Let the minimum difference between indices of the chosen nodes be the minimum $$$\\lvert a_i - a_j \\rvert$$$ (where $$$i \\neq j$$$) out of the nodes that you chose. If $$$k = 1$$$ then we assume that the minimum difference between indices of the chosen nodes is $$$n$$$. Can you find the maximum possible minimum difference between indices of the chosen nodes over all vertex covers?"
  },
  {
    "title": "Geo Game",
    "url": "https://codeforces.com/problemset/problem/1903/E",
    "description": "This is an interactive problem.Theofanis and his sister are playing the following game. They have $$$n$$$ points in a 2D plane and a starting point $$$(s_x,s_y)$$$. Each player (starting from the first player) chooses one of the $$$n$$$ points that wasn't chosen before and adds to the sum (which is initially $$$0$$$) the square of the Euclidean distance from the previous point (which is either the starting point or it was chosen by the other person) to the new point (that the current player selected).The game ends after exactly $$$n$$$ moves (after all the points are chosen). The first player wins if the sum is even in the end. Otherwise, the second player wins.Theofanis is a very competitive person and he hates losing. Thus, he wants to choose whether he should play first or second. Can you show him, which player to choose, and how he should play to beat his sister?"
  },
  {
    "title": "Maximum And Queries (hard version)",
    "url": "https://codeforces.com/problemset/problem/1903/D2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on $$$n$$$ and $$$q$$$, the memory and time limits. You can make hacks only if all versions of the problem are solved.Theofanis really likes to play with the bits of numbers. He has an array $$$a$$$ of size $$$n$$$ and an integer $$$k$$$. He can make at most $$$k$$$ operations in the array. In each operation, he picks a single element and increases it by $$$1$$$.He found the maximum bitwise AND that array $$$a$$$ can have after at most $$$k$$$ operations.Theofanis has put a lot of work into finding this value and was very happy with his result. Unfortunately, Adaś, being the evil person that he is, decided to bully him by repeatedly changing the value of $$$k$$$.Help Theofanis by calculating the maximum possible bitwise AND for $$$q$$$ different values of $$$k$$$. Note that queries are independent."
  },
  {
    "title": "Maximum And Queries (easy version)",
    "url": "https://codeforces.com/problemset/problem/1903/D1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$n$$$ and $$$q$$$, the memory and time limits. You can make hacks only if all versions of the problem are solved.Theofanis really likes to play with the bits of numbers. He has an array $$$a$$$ of size $$$n$$$ and an integer $$$k$$$. He can make at most $$$k$$$ operations in the array. In each operation, he picks a single element and increases it by $$$1$$$.He found the maximum bitwise AND that array $$$a$$$ can have after at most $$$k$$$ operations.Theofanis has put a lot of work into finding this value and was very happy with his result. Unfortunately, Adaś, being the evil person that he is, decided to bully him by repeatedly changing the value of $$$k$$$.Help Theofanis by calculating the maximum possible bitwise AND for $$$q$$$ different values of $$$k$$$. Note that queries are independent."
  },
  {
    "title": "Theofanis' Nightmare",
    "url": "https://codeforces.com/problemset/problem/1903/C",
    "description": "Theofanis easily gets obsessed with problems before going to sleep and often has nightmares about them. To deal with his obsession he visited his doctor, Dr. Emix.In his latest nightmare, he has an array $$$a$$$ of size $$$n$$$ and wants to divide it into non-empty subarrays$$$^{\\dagger}$$$ such that every element is in exactly one of the subarrays.For example, the array $$$[1,-3,7,-6,2,5]$$$ can be divided to $$$[1] [-3,7] [-6,2] [5]$$$. The Cypriot value of such division is equal to $$$\\Sigma_{i=1}^{k} i \\cdot \\mathrm{sum}_i$$$ where $$$k$$$ is the number of subarrays that we divided the array into and $$$\\mathrm{sum}_i$$$ is the sum of the $$$i$$$-th subarray.The Cypriot value of this division of the array $$$[1] [-3,7] [-6,2] [5] = 1 \\cdot 1 + 2 \\cdot (-3 + 7) + 3 \\cdot (-6 + 2) + 4 \\cdot 5 = 17$$$. Theofanis is wondering what is the maximum Cypriot value of any division of the array.$$$^{\\dagger}$$$ An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. In particular, an array is a subarray of itself."
  },
  {
    "title": "StORage room",
    "url": "https://codeforces.com/problemset/problem/1903/B",
    "description": "In Cyprus, the weather is pretty hot. Thus, Theofanis saw this as an opportunity to create an ice cream company. He keeps the ice cream safe from other ice cream producers by locking it inside big storage rooms. However, he forgot the password. Luckily, the lock has a special feature for forgetful people! It gives you a table $$$M$$$ with $$$n$$$ rows and $$$n$$$ columns of non-negative integers, and to open the lock, you need to find an array $$$a$$$ of $$$n$$$ elements such that:  $$$0 \\le a_i < 2^{30}$$$, and  $$$M_{i,j} = a_i | a_j$$$ for all $$$i \\neq j$$$, where $$$|$$$ denotes the bitwise OR operation. The lock has a bug, and sometimes it gives tables without any solutions. In that case, the ice cream will remain frozen for the rest of eternity.Can you find an array to open the lock? "
  },
  {
    "title": "Halloumi Boxes",
    "url": "https://codeforces.com/problemset/problem/1903/A",
    "description": "Theofanis is busy after his last contest, as now, he has to deliver many halloumis all over the world. He stored them inside $$$n$$$ boxes and each of which has some number $$$a_i$$$ written on it. He wants to sort them in non-decreasing order based on their number, however, his machine works in a strange way. It can only reverse any subarray$$$^{\\dagger}$$$ of boxes with length at most $$$k$$$.Find if it's possible to sort the boxes using any number of reverses.$$$^{\\dagger}$$$ Reversing a subarray means choosing two indices $$$i$$$ and $$$j$$$ (where $$$1 \\le i \\le j \\le n$$$) and changing the array $$$a_1, a_2, \\ldots, a_n$$$ to $$$a_1, a_2, \\ldots, a_{i-1}, \\; a_j, a_{j-1}, \\ldots, a_i, \\; a_{j+1}, \\ldots, a_{n-1}, a_n$$$. The length of the subarray is then $$$j - i + 1$$$."
  },
  {
    "title": "Trees and XOR Queries Again",
    "url": "https://codeforces.com/problemset/problem/1902/F",
    "description": "You are given a tree consisting of $$$n$$$ vertices. There is an integer written on each vertex; the $$$i$$$-th vertex has integer $$$a_i$$$ written on it.You have to process $$$q$$$ queries. The $$$i$$$-th query consists of three integers $$$x_i$$$, $$$y_i$$$ and $$$k_i$$$. For this query, you have to answer if it is possible to choose a set of vertices $$$v_1, v_2, \\dots, v_m$$$ (possibly empty) such that:  every vertex $$$v_j$$$ is on the simple path between $$$x_i$$$ and $$$y_i$$$ (endpoints can be used as well);  $$$a_{v_1} \\oplus a_{v_2} \\oplus \\dots \\oplus a_{v_m} = k_i$$$, where $$$\\oplus$$$ denotes the bitwise XOR operator. "
  },
  {
    "title": "Collapsing Strings",
    "url": "https://codeforces.com/problemset/problem/1902/E",
    "description": "You are given $$$n$$$ strings $$$s_1, s_2, \\dots, s_n$$$, consisting of lowercase Latin letters. Let $$$|x|$$$ be the length of string $$$x$$$.Let a collapse $$$C(a, b)$$$ of two strings $$$a$$$ and $$$b$$$ be the following operation:   if $$$a$$$ is empty, $$$C(a, b) = b$$$;  if $$$b$$$ is empty, $$$C(a, b) = a$$$;  if the last letter of $$$a$$$ is equal to the first letter of $$$b$$$, then $$$C(a, b) = C(a_{1,|a|-1}, b_{2,|b|})$$$, where $$$s_{l,r}$$$ is the substring of $$$s$$$ from the $$$l$$$-th letter to the $$$r$$$-th one;  otherwise, $$$C(a, b) = a + b$$$, i. e. the concatenation of two strings. Calculate $$$\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^n |C(s_i, s_j)|$$$."
  },
  {
    "title": "Robot Queries",
    "url": "https://codeforces.com/problemset/problem/1902/D",
    "description": "There is an infinite $$$2$$$-dimensional grid. Initially, a robot stands in the point $$$(0, 0)$$$. The robot can execute four commands:  U — move from point $$$(x, y)$$$ to $$$(x, y + 1)$$$;  D — move from point $$$(x, y)$$$ to $$$(x, y - 1)$$$;  L — move from point $$$(x, y)$$$ to $$$(x - 1, y)$$$;  R — move from point $$$(x, y)$$$ to $$$(x + 1, y)$$$. You are given a sequence of commands $$$s$$$ of length $$$n$$$. Your task is to answer $$$q$$$ independent queries: given four integers $$$x$$$, $$$y$$$, $$$l$$$ and $$$r$$$; determine whether the robot visits the point $$$(x, y)$$$, while executing a sequence $$$s$$$, but the substring from $$$l$$$ to $$$r$$$ is reversed (i. e. the robot performs commands in order $$$s_1 s_2 s_3 \\dots s_{l-1} s_r s_{r-1} s_{r-2} \\dots s_l s_{r+1} s_{r+2} \\dots s_n$$$)."
  },
  {
    "title": "Insert and Equalize",
    "url": "https://codeforces.com/problemset/problem/1902/C",
    "description": "You are given an integer array $$$a_1, a_2, \\dots, a_n$$$, all its elements are distinct.First, you are asked to insert one more integer $$$a_{n+1}$$$ into this array. $$$a_{n+1}$$$ should not be equal to any of $$$a_1, a_2, \\dots, a_n$$$.Then, you will have to make all elements of the array equal. At the start, you choose a positive integer $$$x$$$ ($$$x > 0$$$). In one operation, you add $$$x$$$ to exactly one element of the array. Note that $$$x$$$ is the same for all operations.What's the smallest number of operations it can take you to make all elements equal, after you choose $$$a_{n+1}$$$ and $$$x$$$?"
  },
  {
    "title": "Getting Points",
    "url": "https://codeforces.com/problemset/problem/1902/B",
    "description": "Monocarp is a student at Berland State University. Due to recent changes in the Berland education system, Monocarp has to study only one subject — programming.The academic term consists of $$$n$$$ days, and in order not to get expelled, Monocarp has to earn at least $$$P$$$ points during those $$$n$$$ days. There are two ways to earn points — completing practical tasks and attending lessons. For each practical task Monocarp fulfills, he earns $$$t$$$ points, and for each lesson he attends, he earns $$$l$$$ points.Practical tasks are unlocked \"each week\" as the term goes on: the first task is unlocked on day $$$1$$$ (and can be completed on any day from $$$1$$$ to $$$n$$$), the second task is unlocked on day $$$8$$$ (and can be completed on any day from $$$8$$$ to $$$n$$$), the third task is unlocked on day $$$15$$$, and so on.Every day from $$$1$$$ to $$$n$$$, there is a lesson which can be attended by Monocarp. And every day, Monocarp chooses whether to study or to rest the whole day. When Monocarp decides to study, he attends a lesson and can complete no more than $$$2$$$ tasks, which are already unlocked and not completed yet. If Monocarp rests the whole day, he skips a lesson and ignores tasks.Monocarp wants to have as many days off as possible, i. e. he wants to maximize the number of days he rests. Help him calculate the maximum number of days he can rest!"
  },
  {
    "title": "Binary Imbalance",
    "url": "https://codeforces.com/problemset/problem/1902/A",
    "description": "You are given a string $$$s$$$, consisting only of characters '0' and/or '1'.In one operation, you choose a position $$$i$$$ from $$$1$$$ to $$$|s| - 1$$$, where $$$|s|$$$ is the current length of string $$$s$$$. Then you insert a character between the $$$i$$$-th and the $$$(i+1)$$$-st characters of $$$s$$$. If $$$s_i = s_{i+1}$$$, you insert '1'. If $$$s_i \\neq s_{i+1}$$$, you insert '0'.Is it possible to make the number of zeroes in the string strictly greater than the number of ones, using any number of operations (possibly, none)?"
  },
  {
    "title": "Landscaping",
    "url": "https://codeforces.com/problemset/problem/1901/F",
    "description": "You are appointed to a very important task: you are in charge of flattening one specific road.The road can be represented as a polygonal line starting at $$$(0, 0)$$$, ending at $$$(n - 1, 0)$$$ and consisting of $$$n$$$ vertices (including starting and ending points). The coordinates of the $$$i$$$-th vertex of the polyline are $$$(i, a_i)$$$.\"Flattening\" road is equivalent to choosing some line segment from $$$(0, y_0)$$$ to $$$(n - 1, y_1)$$$ such that all points of the polyline are below the chosen segment (or on the same height). Values $$$y_0$$$ and $$$y_1$$$ may be real.You can imagine that the road has some dips and pits, and you start pouring pavement onto it until you make the road flat. Points $$$0$$$ and $$$n - 1$$$ have infinitely high walls, so pavement doesn't fall out of segment $$$[0, n - 1]$$$.  The cost of flattening the road is equal to the area between the chosen segment and the polyline. You want to minimize the cost, that's why the flattened road is not necessary horizontal.But there is a problem: your data may be too old, so you sent a person to measure new heights. The person goes from $$$0$$$ to $$$n - 1$$$ and sends you new heights $$$b_i$$$ of each vertex $$$i$$$ of the polyline.Since measuring new heights may take a while, and you don't know when you'll be asked, calculate the minimum cost (and corresponding $$$y_0$$$ and $$$y_1$$$) to flatten the road after each new height $$$b_i$$$ you get."
  },
  {
    "title": "Compressed Tree",
    "url": "https://codeforces.com/problemset/problem/1901/E",
    "description": "You are given a tree consisting of $$$n$$$ vertices. A number is written on each vertex; the number on vertex $$$i$$$ is equal to $$$a_i$$$.You can perform the following operation any number of times (possibly zero):   choose a vertex which has at most $$$1$$$ incident edge and remove this vertex from the tree. Note that you can delete all vertices.After all operations are done, you're compressing the tree. The compression process is done as follows. While there is a vertex having exactly $$$2$$$ incident edges in the tree, perform the following operation:   delete this vertex, connect its neighbors with an edge. It can be shown that if there are multiple ways to choose a vertex to delete during the compression process, the resulting tree is still the same.Your task is to calculate the maximum possible sum of numbers written on vertices after applying the aforementioned operation any number of times, and then compressing the tree."
  },
  {
    "title": "Yet Another Monster Fight",
    "url": "https://codeforces.com/problemset/problem/1901/D",
    "description": "Vasya is a sorcerer that fights monsters. Again. There are $$$n$$$ monsters standing in a row, the amount of health points of the $$$i$$$-th monster is $$$a_i$$$.Vasya is a very powerful sorcerer who knows many overpowered spells. In this fight, he decided to use a chain lightning spell to defeat all the monsters. Let's see how this spell works.Firstly, Vasya chooses an index $$$i$$$ of some monster ($$$1 \\le i \\le n$$$) and the initial power of the spell $$$x$$$. Then the spell hits monsters exactly $$$n$$$ times, one hit per monster. The first target of the spell is always the monster $$$i$$$. For every target except for the first one, the chain lightning will choose a random monster who was not hit by the spell and is adjacent to one of the monsters that already was hit. So, each monster will be hit exactly once. The first monster hit by the spell receives $$$x$$$ damage, the second monster receives $$$(x-1)$$$ damage, the third receives $$$(x-2)$$$ damage, and so on.Vasya wants to show how powerful he is, so he wants to kill all the monsters with a single chain lightning spell. The monster is considered dead if the damage he received is not less than the amount of its health points. On the other hand, Vasya wants to show he doesn't care that much, so he wants to choose the minimum initial power of the spell $$$x$$$ such that it kills all monsters, no matter which monster (among those who can get hit) gets hit on each step.Of course, Vasya is a sorcerer, but the amount of calculations required to determine the optimal spell setup is way above his possibilities, so you have to help him find the minimum spell power required to kill all the monsters.Note that Vasya chooses the initial target and the power of the spell, other things should be considered random and Vasya wants to kill all the monsters even in the worst possible scenario."
  },
  {
    "title": "Add, Divide and Floor",
    "url": "https://codeforces.com/problemset/problem/1901/C",
    "description": "You are given an integer array $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$). In one operation, you can choose an integer $$$x$$$ ($$$0 \\le x \\le 10^{18}$$$) and replace $$$a_i$$$ with $$$\\lfloor \\frac{a_i + x}{2} \\rfloor$$$ ($$$\\lfloor y \\rfloor$$$ denotes rounding $$$y$$$ down to the nearest integer) for all $$$i$$$ from $$$1$$$ to $$$n$$$. Pay attention to the fact that all elements of the array are affected on each operation. Print the smallest number of operations required to make all elements of the array equal.If the number of operations is less than or equal to $$$n$$$, then print the chosen $$$x$$$ for each operation. If there are multiple answers, print any of them."
  },
  {
    "title": "Chip and Ribbon",
    "url": "https://codeforces.com/problemset/problem/1901/B",
    "description": "There is a ribbon divided into $$$n$$$ cells, numbered from $$$1$$$ to $$$n$$$ from left to right. Initially, an integer $$$0$$$ is written in each cell.Monocarp plays a game with a chip. The game consists of several turns. During the first turn, Monocarp places the chip in the $$$1$$$-st cell of the ribbon. During each turn except for the first turn, Monocarp does exactly one of the two following actions:  move the chip to the next cell (i. e. if the chip is in the cell $$$i$$$, it is moved to the cell $$$i+1$$$). This action is impossible if the chip is in the last cell;  choose any cell $$$x$$$ and teleport the chip into that cell. It is possible to choose the cell where the chip is currently located. At the end of each turn, the integer written in the cell with the chip is increased by $$$1$$$.Monocarp's goal is to make some turns so that the $$$1$$$-st cell contains the integer $$$c_1$$$, the $$$2$$$-nd cell contains the integer $$$c_2$$$, ..., the $$$n$$$-th cell contains the integer $$$c_n$$$. He wants to teleport the chip as few times as possible.Help Monocarp calculate the minimum number of times he has to teleport the chip. "
  },
  {
    "title": "Line Trip",
    "url": "https://codeforces.com/problemset/problem/1901/A",
    "description": "There is a road, which can be represented as a number line. You are located in the point $$$0$$$ of the number line, and you want to travel from the point $$$0$$$ to the point $$$x$$$, and back to the point $$$0$$$.You travel by car, which spends $$$1$$$ liter of gasoline per $$$1$$$ unit of distance travelled. When you start at the point $$$0$$$, your car is fully fueled (its gas tank contains the maximum possible amount of fuel).There are $$$n$$$ gas stations, located in points $$$a_1, a_2, \\dots, a_n$$$. When you arrive at a gas station, you fully refuel your car. Note that you can refuel only at gas stations, and there are no gas stations in points $$$0$$$ and $$$x$$$.You have to calculate the minimum possible volume of the gas tank in your car (in liters) that will allow you to travel from the point $$$0$$$ to the point $$$x$$$ and back to the point $$$0$$$."
  },
  {
    "title": "Local Deletions",
    "url": "https://codeforces.com/problemset/problem/1900/F",
    "description": "For an array $$$b_1, b_2, \\ldots, b_m$$$, for some $$$i$$$ ($$$1 < i < m$$$), element $$$b_i$$$ is said to be a local minimum if $$$b_i < b_{i-1}$$$ and $$$b_i < b_{i+1}$$$. Element $$$b_1$$$ is said to be a local minimum if $$$b_1 < b_2$$$. Element $$$b_m$$$ is said to be a local minimum if $$$b_m < b_{m-1}$$$.For an array $$$b_1, b_2, \\ldots, b_m$$$, for some $$$i$$$ ($$$1 < i < m$$$), element $$$b_i$$$ is said to be a local maximum if $$$b_i > b_{i-1}$$$ and $$$b_i > b_{i+1}$$$. Element $$$b_1$$$ is said to be a local maximum if $$$b_1 > b_2$$$. Element $$$b_m$$$ is said to be a local maximum if $$$b_m > b_{m-1}$$$.Let $$$x$$$ be an array of distinct elements. We define two operations on it:  $$$1$$$ — delete all elements from $$$x$$$ that are not local minima.  $$$2$$$ — delete all elements from $$$x$$$ that are not local maxima. Define $$$f(x)$$$ as follows. Repeat operations $$$1, 2, 1, 2, \\ldots$$$ in that order until you get only one element left in the array. Return that element.For example, take an array $$$[1,3,2]$$$. We will first do type $$$1$$$ operation and get $$$[1, 2]$$$. Then we will perform type $$$2$$$ operation and get $$$[2]$$$. Therefore, $$$f([1,3,2]) = 2$$$.You are given a permutation$$$^\\dagger$$$ $$$a$$$ of size $$$n$$$ and $$$q$$$ queries. Each query consists of two integers $$$l$$$ and $$$r$$$ such that $$$1 \\le l \\le r \\le n$$$. The query asks you to compute $$$f([a_l, a_{l+1}, \\ldots, a_r])$$$. $$$^\\dagger$$$ A permutation of length $$$n$$$ is an array of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$, but there is $$$4$$$ in the array)."
  },
  {
    "title": "Transitive Graph",
    "url": "https://codeforces.com/problemset/problem/1900/E",
    "description": "You are given a directed graph $$$G$$$ with $$$n$$$ vertices and $$$m$$$ edges between them.Initially, graph $$$H$$$ is the same as graph $$$G$$$. Then you decided to perform the following actions:   If there exists a triple of vertices $$$a$$$, $$$b$$$, $$$c$$$ of $$$H$$$, such that there is an edge from $$$a$$$ to $$$b$$$ and an edge from $$$b$$$ to $$$c$$$, but there is no edge from $$$a$$$ to $$$c$$$, add an edge from $$$a$$$ to $$$c$$$.  Repeat the previous step as long as there are such triples. Note that the number of edges in $$$H$$$ can be up to $$$n^2$$$ after performing the actions.You also wrote some values on vertices of graph $$$H$$$. More precisely, vertex $$$i$$$ has the value of $$$a_i$$$ written on it.Consider a simple path consisting of $$$k$$$ distinct vertices with indexes $$$v_1, v_2, \\ldots, v_k$$$. The length of such a path is $$$k$$$. The value of that path is defined as $$$\\sum_{i = 1}^k a_{v_i}$$$.A simple path is considered the longest if there is no other simple path in the graph with greater length.Among all the longest simple paths in $$$H$$$, find the one with the smallest value."
  },
  {
    "title": "Small GCD",
    "url": "https://codeforces.com/problemset/problem/1900/D",
    "description": "Let $$$a$$$, $$$b$$$, and $$$c$$$ be integers. We define function $$$f(a, b, c)$$$ as follows:Order the numbers $$$a$$$, $$$b$$$, $$$c$$$ in such a way that $$$a \\le b \\le c$$$. Then return $$$\\gcd(a, b)$$$, where $$$\\gcd(a, b)$$$ denotes the greatest common divisor (GCD) of integers $$$a$$$ and $$$b$$$.So basically, we take the $$$\\gcd$$$ of the $$$2$$$ smaller values and ignore the biggest one. You are given an array $$$a$$$ of $$$n$$$ elements. Compute the sum of $$$f(a_i, a_j, a_k)$$$ for each $$$i$$$, $$$j$$$, $$$k$$$, such that $$$1 \\le i < j < k \\le n$$$. More formally, compute $$$$$$\\sum_{i = 1}^n \\sum_{j = i+1}^n \\sum_{k =j +1}^n f(a_i, a_j, a_k).$$$$$$ "
  },
  {
    "title": "Anji's Binary Tree",
    "url": "https://codeforces.com/problemset/problem/1900/C",
    "description": "Keksic keeps getting left on seen by Anji. Through a mutual friend, he's figured out that Anji really likes binary trees and decided to solve her problem in order to get her attention.Anji has given Keksic a binary tree with $$$n$$$ vertices. Vertex $$$1$$$ is the root and does not have a parent. All other vertices have exactly one parent. Each vertex can have up to $$$2$$$ children, a left child, and a right child. For each vertex, Anji tells Keksic index of both its left and its right child or tells him that they do not exist. Additionally, each of the vertices has a letter $$$s_i$$$ on it, which is either 'U', 'L' or 'R'.Keksic begins his journey on the root, and in each move he does the following:   If the letter on his current vertex is 'U', he moves to its parent. If it doesn't exist, he does nothing.  If the letter on his current vertex is 'L', he moves to its left child. If it doesn't exist, he does nothing.  If the letter on his current vertex is 'R', he moves to its right child. If it doesn't exist, he does nothing.  Before his journey, he can perform the following operations: choose any node, and replace the letter written on it with another one. You are interested in the minimal number of operations he needs to do before his journey, such that when he starts his journey, he will reach a leaf at some point. A leaf is a vertex that has no children. It does not matter which leaf he reaches. Note that it does not matter whether he will stay in the leaf, he just needs to move to it. Additionally, note that it does not matter how many times he needs to move before reaching a leaf.Help Keksic solve Anji's tree so that he can win her heart, and make her come to Čačak."
  },
  {
    "title": "Laura and Operations",
    "url": "https://codeforces.com/problemset/problem/1900/B",
    "description": "Laura is a girl who does not like combinatorics. Nemanja will try to convince her otherwise.Nemanja wrote some digits on the board. All of them are either $$$1$$$, $$$2$$$, or $$$3$$$. The number of digits $$$1$$$ is $$$a$$$. The number of digits $$$2$$$ is $$$b$$$ and the number of digits $$$3$$$ is $$$c$$$. He told Laura that in one operation she can do the following:  Select two different digits and erase them from the board. After that, write the digit ($$$1$$$, $$$2$$$, or $$$3$$$) different from both erased digits. For example, let the digits be $$$1$$$, $$$1$$$, $$$1$$$, $$$2$$$, $$$3$$$, $$$3$$$. She can choose digits $$$1$$$ and $$$3$$$ and erase them. Then the board will look like this $$$1$$$, $$$1$$$, $$$2$$$, $$$3$$$. After that, she has to write another digit $$$2$$$, so at the end of the operation, the board will look like $$$1$$$, $$$1$$$, $$$2$$$, $$$3$$$, $$$2$$$.Nemanja asked her whether it was possible for only digits of one type to remain written on the board after some operations. If so, which digits can they be?Laura was unable to solve this problem and asked you for help. As an award for helping her, she will convince Nemanja to give you some points."
  },
  {
    "title": "Cover in Water",
    "url": "https://codeforces.com/problemset/problem/1900/A",
    "description": "Filip has a row of cells, some of which are blocked, and some are empty. He wants all empty cells to have water in them. He has two actions at his disposal:  $$$1$$$ — place water in an empty cell.  $$$2$$$ — remove water from a cell and place it in any other empty cell. If at some moment cell $$$i$$$ ($$$2 \\le i \\le n-1$$$) is empty and both cells $$$i-1$$$ and $$$i+1$$$ contains water, then it becomes filled with water.Find the minimum number of times he needs to perform action $$$1$$$ in order to fill all empty cells with water. Note that you don't need to minimize the use of action $$$2$$$. Note that blocked cells neither contain water nor can Filip place water in them."
  },
  {
    "title": "Unusual Entertainment",
    "url": "https://codeforces.com/problemset/problem/1899/G",
    "description": "A tree is a connected graph without cycles.A permutation is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[5, 1, 3, 2, 4]$$$ is a permutation, but $$$[2, 1, 1]$$$ is not a permutation (as $$$1$$$ appears twice in the array) and $$$[1, 3, 2, 5]$$$ is also not a permutation (as $$$n = 4$$$, but $$$5$$$ is present in the array).After a failed shoot in the BrMeast video, Alex fell into depression. Even his birthday did not make him happy. However, after receiving a gift from Timofey, Alex's mood suddenly improved. Now he spent days playing with the gifted constructor. Recently, he came up with an unusual entertainment.Alex builds a tree from his constructor, consisting of $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$, with the root at vertex $$$1$$$. Then he writes down each integer from $$$1$$$ to $$$n$$$ in some order, obtaining a permutation $$$p$$$. After that, Alex comes up with $$$q$$$ triples of integers $$$l, r, x$$$. For each triple, he tries to determine if there is at least one descendant of vertex $$$x$$$ among the vertices $$$p_l, p_{l+1}, \\ldots, p_r$$$.A vertex $$$u$$$ is a descendant of vertex $$$v$$$ if and only if $$$\\mathrm{dist}(1, v) + \\mathrm{dist}(v, u) = \\mathrm{dist}(1, u)$$$, where $$$\\mathrm{dist}(a, b)$$$ is the distance between vertices $$$a$$$ and $$$b$$$. In other words, vertex $$$v$$$ must be on the path from the root to vertex $$$u$$$.Alex told Zakhar about this entertainment. Now Alex tells his friend $$$q$$$ triples as described above, hoping that Zakhar can check for the presence of a descendant. Zakhar is very sleepy, so he turned to you for help. Help Zakhar answer all of Alex's questions and finally go to sleep."
  },
  {
    "title": "Alex's whims",
    "url": "https://codeforces.com/problemset/problem/1899/F",
    "description": "Tree is a connected graph without cycles. It can be shown that any tree of $$$n$$$ vertices has exactly $$$n - 1$$$ edges.Leaf is a vertex in the tree with exactly one edge connected to it.Distance between two vertices $$$u$$$ and $$$v$$$ in a tree is the minimum number of edges that must be passed to come from vertex $$$u$$$ to vertex $$$v$$$.Alex's birthday is coming up, and Timofey would like to gift him a tree of $$$n$$$ vertices. However, Alex is a very moody boy. Every day for $$$q$$$ days, he will choose an integer, denoted by the integer chosen on the $$$i$$$-th day by $$$d_i$$$. If on the $$$i$$$-th day there are not two leaves in the tree at a distance exactly $$$d_i$$$, Alex will be disappointed.Timofey decides to gift Alex a designer so that he can change his tree as he wants. Timofey knows that Alex is also lazy (a disaster, not a human being), so at the beginning of every day, he can perform no more than one operation of the following kind: Choose vertices $$$u$$$, $$$v_1$$$, and $$$v_2$$$ such that there is an edge between $$$u$$$ and $$$v_1$$$ and no edge between $$$u$$$ and $$$v_2$$$. Then remove the edge between $$$u$$$ and $$$v_1$$$ and add an edge between $$$u$$$ and $$$v_2$$$. This operation cannot be performed if the graph is no longer a tree after it.Somehow Timofey managed to find out all the $$$d_i$$$. After that, he had another brilliant idea — just in case, make an instruction manual for the set, one that Alex wouldn't be disappointed.Timofey is not as lazy as Alex, but when he saw the integer $$$n$$$, he quickly lost the desire to develop the instruction and the original tree, so he assigned this task to you. It can be shown that a tree and a sequence of operations satisfying the described conditions always exist.Here is an example of an operation where vertices were selected: $$$u$$$ — $$$6$$$, $$$v_1$$$ — $$$1$$$, $$$v_2$$$ — $$$4$$$."
  },
  {
    "title": "Queue Sort",
    "url": "https://codeforces.com/problemset/problem/1899/E",
    "description": "Vlad found an array $$$a$$$ of $$$n$$$ integers and decided to sort it in non-decreasing order.To do this, Vlad can apply the following operation any number of times:  Extract the first element of the array and insert it at the end;  Swap that element with the previous one until it becomes the first or until it becomes strictly greater than the previous one. Note that both actions are part of the operation, and for one operation, you must apply both actions.For example, if you apply the operation to the array [$$$4, 3, 1, 2, 6, 4$$$], it will change as follows: [$$$\\color{red}{4}, 3, 1, 2, 6, 4$$$]; [$$$3, 1, 2, 6, 4, \\color{red}{4}$$$]; [$$$3, 1, 2, 6, \\color{red}{4}, 4$$$]; [$$$3, 1, 2, \\color{red}{4}, 6, 4$$$].Vlad doesn't have time to perform all the operations, so he asks you to determine the minimum number of operations required to sort the array or report that it is impossible."
  },
  {
    "title": "Yarik and Musical Notes",
    "url": "https://codeforces.com/problemset/problem/1899/D",
    "description": "Yarik is a big fan of many kinds of music. But Yarik loves not only listening to music but also writing it. He likes electronic music most of all, so he has created his own system of music notes, which, in his opinion, is best for it.Since Yarik also likes informatics, in his system notes are denoted by integers of $$$2^k$$$, where $$$k \\ge 1$$$ — a positive integer. But, as you know, you can't use just notes to write music, so Yarik uses combinations of two notes. The combination of two notes $$$(a, b)$$$, where $$$a = 2^k$$$ and $$$b = 2^l$$$, he denotes by the integer $$$a^b$$$.For example, if $$$a = 8 = 2^3$$$, $$$b = 4 = 2^2$$$, then the combination $$$(a, b)$$$ is denoted by the integer $$$a^b = 8^4 = 4096$$$. Note that different combinations can have the same notation, e.g., the combination $$$(64, 2)$$$ is also denoted by the integer $$$4096 = 64^2$$$.Yarik has already chosen $$$n$$$ notes that he wants to use in his new melody. However, since their integers can be very large, he has written them down as an array $$$a$$$ of length $$$n$$$, then the note $$$i$$$ is $$$b_i = 2^{a_i}$$$. The integers in array $$$a$$$ can be repeated.The melody will consist of several combinations of two notes. Yarik was wondering how many pairs of notes $$$b_i, b_j$$$ $$$(i < j)$$$ exist such that the combination $$$(b_i, b_j)$$$ is equal to the combination $$$(b_j, b_i)$$$. In other words, he wants to count the number of pairs $$$(i, j)$$$ $$$(i < j)$$$ such that $$$b_i^{b_j} = b_j^{b_i}$$$. Help him find the number of such pairs."
  },
  {
    "title": "Yarik and Array",
    "url": "https://codeforces.com/problemset/problem/1899/C",
    "description": "A subarray is a continuous part of array.Yarik recently found an array $$$a$$$ of $$$n$$$ elements and became very interested in finding the maximum sum of a non empty subarray. However, Yarik doesn't like consecutive integers with the same parity, so the subarray he chooses must have alternating parities for adjacent elements.For example, $$$[1, 2, 3]$$$ is acceptable, but $$$[1, 2, 4]$$$ is not, as $$$2$$$ and $$$4$$$ are both even and adjacent.You need to help Yarik by finding the maximum sum of such a subarray."
  },
  {
    "title": "250 Thousand Tons of TNT",
    "url": "https://codeforces.com/problemset/problem/1899/B",
    "description": "Alex is participating in the filming of another video of BrMeast, and BrMeast asked Alex to prepare 250 thousand tons of TNT, but Alex didn't hear him well, so he prepared $$$n$$$ boxes and arranged them in a row waiting for trucks. The $$$i$$$-th box from the left weighs $$$a_i$$$ tons.All trucks that Alex is going to use hold the same number of boxes, denoted by $$$k$$$. Loading happens the following way:  The first $$$k$$$ boxes goes to the first truck,  The second $$$k$$$ boxes goes to the second truck,  $$$\\dotsb$$$  The last $$$k$$$ boxes goes to the $$$\\frac{n}{k}$$$-th truck. Upon loading is completed, each truck must have exactly $$$k$$$ boxes. In other words, if at some point it is not possible to load exactly $$$k$$$ boxes into the truck, then the loading option with that $$$k$$$ is not possible.Alex hates justice, so he wants the maximum absolute difference between the total weights of two trucks to be as great as possible. If there is only one truck, this value is $$$0$$$.Alex has quite a lot of connections, so for every $$$1 \\leq k \\leq n$$$, he can find a company such that each of its trucks can hold exactly $$$k$$$ boxes. Print the maximum absolute difference between the total weights of any two trucks."
  },
  {
    "title": "Game with Integers",
    "url": "https://codeforces.com/problemset/problem/1899/A",
    "description": "Vanya and Vova are playing a game. Players are given an integer $$$n$$$. On their turn, the player can add $$$1$$$ to the current integer or subtract $$$1$$$. The players take turns; Vanya starts. If after Vanya's move the integer is divisible by $$$3$$$, then he wins. If $$$10$$$ moves have passed and Vanya has not won, then Vova wins.Write a program that, based on the integer $$$n$$$, determines who will win if both players play optimally."
  },
  {
    "title": "Vova Escapes the Matrix",
    "url": "https://codeforces.com/problemset/problem/1898/F",
    "description": "Following a world tour, Vova got himself trapped inside an $$$n \\times m$$$ matrix. Rows of this matrix are numbered by integers from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered by integers from $$$1$$$ to $$$m$$$ from left to right. The cell $$$(i, j)$$$ is the cell on the intersection of row $$$i$$$ and column $$$j$$$ for $$$1 \\leq i \\leq n$$$ and $$$1 \\leq j \\leq m$$$.Some cells of this matrix are blocked by obstacles, while all other cells are empty. Vova occupies one of the empty cells. It is guaranteed that cells $$$(1, 1)$$$, $$$(1, m)$$$, $$$(n, 1)$$$, $$$(n, m)$$$ (that is, corners of the matrix) are blocked.Vova can move from one empty cell to another empty cell if they share a side. Vova can escape the matrix from any empty cell on the boundary of the matrix; these cells are called exits.Vova defines the type of the matrix based on the number of exits he can use to escape the matrix:   The $$$1$$$-st type: matrices with no exits he can use to escape.  The $$$2$$$-nd type: matrices with exactly one exit he can use to escape.  The $$$3$$$-rd type: matrices with multiple (two or more) exits he can use to escape. Before Vova starts moving, Misha can create more obstacles to block more cells. However, he cannot change the type of the matrix. What is the maximum number of cells Misha can block, so that the type of the matrix remains the same? Misha cannot block the cell Vova is currently standing on."
  },
  {
    "title": "Sofia and Strings",
    "url": "https://codeforces.com/problemset/problem/1898/E",
    "description": "Sofia has a string $$$s$$$ of length $$$n$$$, consisting only of lowercase English letters. She can perform operations of the following types with this string.  Select an index $$$1 \\le i \\le |s|$$$ and remove the character $$$s_i$$$ from the string.  Select a pair of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le |s|$$$) and sort the substring $$$s_{l} s_{l+1} \\ldots s_r$$$ in alphabetical order.  Here, $$$|s|$$$ denotes the current length of $$$s$$$. In particular, $$$|s| = n$$$ before the first operation. For example, if $$$s = \\mathtt{sofia}$$$, then performing the operation of the first type with $$$i=4$$$ results in $$$s$$$ becoming $$$\\mathtt{sofa}$$$, and performing the operation of the second type with $$$(l, r) = (2, 4)$$$ after that results in $$$s$$$ becoming $$$\\mathtt{safo}$$$.Sofia wants to obtain the string $$$t$$$ of length $$$m$$$ after performing zero or more operations on string $$$s$$$ as described above. Please determine whether it is possible or not."
  },
  {
    "title": "Absolute Beauty",
    "url": "https://codeforces.com/problemset/problem/1898/D",
    "description": "Kirill has two integer arrays $$$a_1,a_2,\\ldots,a_n$$$ and $$$b_1,b_2,\\ldots,b_n$$$ of length $$$n$$$. He defines the absolute beauty of the array $$$b$$$ as $$$$$$\\sum_{i=1}^{n} |a_i - b_i|.$$$$$$ Here, $$$|x|$$$ denotes the absolute value of $$$x$$$.Kirill can perform the following operation at most once:   select two indices $$$i$$$ and $$$j$$$ ($$$1 \\leq i < j \\leq n$$$) and swap the values of $$$b_i$$$ and $$$b_j$$$. Help him find the maximum possible absolute beauty of the array $$$b$$$ after performing at most one swap."
  },
  {
    "title": "Colorful Grid",
    "url": "https://codeforces.com/problemset/problem/1898/C",
    "description": "Elena has a grid formed by $$$n$$$ horizontal lines and $$$m$$$ vertical lines. The horizontal lines are numbered by integers from $$$1$$$ to $$$n$$$ from top to bottom. The vertical lines are numbered by integers from $$$1$$$ to $$$m$$$ from left to right. For each $$$x$$$ and $$$y$$$ ($$$1 \\leq x \\leq n$$$, $$$1 \\leq y \\leq m$$$), the notation $$$(x, y)$$$ denotes the point at the intersection of the $$$x$$$-th horizontal line and $$$y$$$-th vertical line.Two points $$$(x_1,y_1)$$$ and $$$(x_2,y_2)$$$ are adjacent if and only if $$$|x_1-x_2| + |y_1-y_2| = 1$$$.    The grid formed by $$$n=4$$$ horizontal lines and $$$m=5$$$ vertical lines. Elena calls a sequence of points $$$p_1, p_2, \\ldots, p_g$$$ of length $$$g$$$ a walk if and only if all the following conditions hold:   The first point $$$p_1$$$ in this sequence is $$$(1, 1)$$$.  The last point $$$p_g$$$ in this sequence is $$$(n, m)$$$.  For each $$$1 \\le i < g$$$, the points $$$p_i$$$ and $$$p_{i+1}$$$ are adjacent. Note that the walk may contain the same point more than once. In particular, it may contain point $$$(1, 1)$$$ or $$$(n, m)$$$ multiple times.There are $$$n(m-1)+(n-1)m$$$ segments connecting the adjacent points in Elena's grid. Elena wants to color each of these segments in blue or red color so that there exists a walk $$$p_1, p_2, \\ldots, p_{k+1}$$$ of length $$$k+1$$$ such that   out of $$$k$$$ segments connecting two consecutive points in this walk, no two consecutive segments have the same color (in other words, for each $$$1 \\le i < k$$$, the color of the segment between points $$$p_i$$$ and $$$p_{i+1}$$$ differs from the color of the segment between points $$$p_{i+1}$$$ and $$$p_{i+2}$$$). Please find any such coloring or report that there is no such coloring."
  },
  {
    "title": "Milena and Admirer",
    "url": "https://codeforces.com/problemset/problem/1898/B",
    "description": "Milena has received an array of integers $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$ from a secret admirer. She thinks that making it non-decreasing should help her identify the secret admirer.She can use the following operation to make this array non-decreasing:  Select an element $$$a_i$$$ of array $$$a$$$ and an integer $$$x$$$ such that $$$1 \\le x < a_i$$$. Then, replace $$$a_i$$$ by two elements $$$x$$$ and $$$a_i - x$$$ in array $$$a$$$. New elements ($$$x$$$ and $$$a_i - x$$$) are placed in the array $$$a$$$ in this order instead of $$$a_i$$$.More formally, let $$$a_1, a_2, \\ldots, a_i, \\ldots, a_k$$$ be an array $$$a$$$ before the operation. After the operation, it becomes equal to $$$a_1, a_2, \\ldots, a_{i-1}, x, a_i - x, a_{i+1}, \\ldots, a_k$$$. Note that the length of $$$a$$$ increases by $$$1$$$ on each operation. Milena can perform this operation multiple times (possibly zero). She wants you to determine the minimum number of times she should perform this operation to make array $$$a$$$ non-decreasing.An array $$$x_1, x_2, \\ldots, x_k$$$ of length $$$k$$$ is called non-decreasing if $$$x_i \\le x_{i+1}$$$ for all $$$1 \\le i < k$$$."
  },
  {
    "title": "Milica and String",
    "url": "https://codeforces.com/problemset/problem/1898/A",
    "description": "Milica has a string $$$s$$$ of length $$$n$$$, consisting only of characters A and B. She wants to modify $$$s$$$ so it contains exactly $$$k$$$ instances of B. In one operation, she can do the following:  Select an integer $$$i$$$ ($$$1 \\leq i \\leq n$$$) and a character $$$c$$$ ($$$c$$$ is equal to either A or B).  Then, replace each of the first $$$i$$$ characters of string $$$s$$$ (that is, characters $$$s_1, s_2, \\ldots, s_i$$$) with $$$c$$$. Milica does not want to perform too many operations in order not to waste too much time on them.She asks you to find the minimum number of operations required to modify $$$s$$$ so it contains exactly $$$k$$$ instances of B. She also wants you to find these operations (that is, integer $$$i$$$ and character $$$c$$$ selected in each operation)."
  },
  {
    "title": "Cyclic Hamming (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1896/H2",
    "description": "This is the hard version of the problem. The only difference between the two versions is the constraint on $$$k$$$. You can make hacks only if all versions of the problem are solved.In this statement, all strings are $$$0$$$-indexed.For two strings $$$a$$$, $$$b$$$ of the same length $$$p$$$, we define the following definitions:  The hamming distance between $$$a$$$ and $$$b$$$, denoted as $$$h(a, b)$$$, is defined as the number of positions $$$i$$$ such that $$$0 \\le i < p$$$ and $$$a_i \\ne b_i$$$.  $$$b$$$ is a cyclic shift of $$$a$$$ if there exists some $$$0 \\leq k < p$$$ such that $$$b_{(i+k) \\bmod p} = a_i$$$ for all $$$0 \\le i < p$$$. Here $$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$. You are given two binary strings $$$s$$$ and $$$t$$$ of length $$$2^{k+1}$$$ each. Both strings may contain missing characters (denoted by the character '?'). Your task is to count the number of ways to replace the missing characters in both strings with the characters '0' or '1' such that:   Each string $$$s$$$ and $$$t$$$ contains exactly $$$2^k$$$ occurrences of each character '0' and '1'  $$$h(s, c) \\ge 2^k$$$ for all strings $$$c$$$ that is a cyclic shift of $$$t$$$. As the result can be very large, you should print the value modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Cyclic Hamming (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1896/H1",
    "description": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$k$$$. You can make hacks only if all versions of the problem are solved.In this statement, all strings are $$$0$$$-indexed.For two strings $$$a$$$, $$$b$$$ of the same length $$$p$$$, we define the following definitions:  The hamming distance between $$$a$$$ and $$$b$$$, denoted as $$$h(a, b)$$$, is defined as the number of positions $$$i$$$ such that $$$0 \\le i < p$$$ and $$$a_i \\ne b_i$$$.  $$$b$$$ is a cyclic shift of $$$a$$$ if there exists some $$$0 \\leq k < p$$$ such that $$$b_{(i+k) \\bmod p} = a_i$$$ for all $$$0 \\le i < p$$$. Here $$$x \\bmod y$$$ denotes the remainder from dividing $$$x$$$ by $$$y$$$. You are given two binary strings $$$s$$$ and $$$t$$$ of length $$$2^{k+1}$$$ each. Both strings may contain missing characters (denoted by the character '?'). Your task is to count the number of ways to replace the missing characters in both strings with the characters '0' or '1' such that:   Each string $$$s$$$ and $$$t$$$ contains exactly $$$2^k$$$ occurrences of each character '0' and '1'  $$$h(s, c) \\ge 2^k$$$ for all strings $$$c$$$ that is a cyclic shift of $$$t$$$. As the result can be very large, you should print the value modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Pepe Racing",
    "url": "https://codeforces.com/problemset/problem/1896/G",
    "description": "This is an interactive problem.There are $$$n^2$$$ pepes labeled $$$1, 2, \\ldots, n^2$$$ with pairwise distinct speeds. You would like to set up some races to find out the relative speed of these pepes.In one race, you can choose exactly $$$n$$$ distinct pepes and make them race against each other. After each race, you will only know the fastest pepe of these $$$n$$$ pepes.Can you order the $$$n^2-n+1$$$ fastest pepes in at most $$$2n^2 - 2n + 1$$$ races? Note that the slowest $$$n - 1$$$ pepes are indistinguishable from each other.Note that the interactor is adaptive. That is, the relative speeds of the pepes are not fixed in the beginning and may depend on your queries. But it is guaranteed that at any moment there is at least one initial configuration of pepes such that all the answers to the queries are consistent."
  },
  {
    "title": "Bracket Xoring",
    "url": "https://codeforces.com/problemset/problem/1896/F",
    "description": "You are given a binary string $$$s$$$ of length $$$2n$$$ where each element is $$$\\mathtt{0}$$$ or $$$\\mathtt{1}$$$. You can do the following operation: Choose a balanced bracket sequence$$$^\\dagger$$$ $$$b$$$ of length $$$2n$$$.  For every index $$$i$$$ from $$$1$$$ to $$$2n$$$ in order, where $$$b_i$$$ is an open bracket, let $$$p_i$$$ denote the minimum index such that $$$b[i,p_i]$$$ is a balanced bracket sequence. Then, we perform a range toggle operation$$$^\\ddagger$$$ from $$$i$$$ to $$$p_i$$$ on $$$s$$$. Note that since a balanced bracket sequence of length $$$2n$$$ will have $$$n$$$ open brackets, we will do $$$n$$$ range toggle operations on $$$s$$$. Your task is to find a sequence of no more than $$$10$$$ operations that changes all elements of $$$s$$$ to $$$\\mathtt{0}$$$, or determine that it is impossible to do so. Note that you do not have to minimize the number of operations.Under the given constraints, it can be proven that if it is possible to change all elements of $$$s$$$ to $$$\\mathtt{0}$$$, there exists a way that requires no more than $$$10$$$ operations.$$$^\\dagger$$$ A sequence of brackets is called balanced if one can turn it into a valid math expression by adding characters $$$+$$$ and $$$1$$$. For example, sequences \"(())()\", \"()\", and \"(()(()))\" are balanced, while \")(\", \"(()\", and \"(()))(\" are not.$$$^\\ddagger$$$ If we perform a range toggle operation from $$$l$$$ to $$$r$$$ on a binary string $$$s$$$, then we toggle all values of $$$s_i$$$ such that $$$l \\leq i \\leq r$$$. If $$$s_i$$$ is toggled, we will set $$$s_i := \\mathtt{0}$$$ if $$$s_i = \\mathtt{1}$$$ or vice versa. For example, if $$$s=\\mathtt{1000101}$$$ and we perform a range toggle operation from $$$3$$$ to $$$5$$$, $$$s$$$ will be changed to $$$s=\\mathtt{1011001}$$$."
  },
  {
    "title": "Permutation Sorting",
    "url": "https://codeforces.com/problemset/problem/1896/E",
    "description": "You are given a permutation$$$^\\dagger$$$ $$$a$$$ of size $$$n$$$. We call an index $$$i$$$ good if $$$a_i=i$$$ is satisfied. After each second, we rotate all indices that are not good to the right by one position. Formally,  Let $$$s_1,s_2,\\ldots,s_k$$$ be the indices of $$$a$$$ that are not good in increasing order. That is, $$$s_j < s_{j+1}$$$ and if index $$$i$$$ is not good, then there exists $$$j$$$ such that $$$s_j=i$$$.  For each $$$i$$$ from $$$1$$$ to $$$k$$$, we assign $$$a_{s_{(i \\% k+1)}} := a_{s_i}$$$ all at once. For each $$$i$$$ from $$$1$$$ to $$$n$$$, find the first time that index $$$i$$$ becomes good. $$$^\\dagger$$$ A permutation is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array) and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Ones and Twos",
    "url": "https://codeforces.com/problemset/problem/1896/D",
    "description": "You are given a $$$1$$$-indexed array $$$a$$$ of length $$$n$$$ where each element is $$$1$$$ or $$$2$$$.Process $$$q$$$ queries of the following two types:   \"1 s\": check if there exists a subarray$$$^{\\dagger}$$$ of $$$a$$$ whose sum equals to $$$s$$$.  \"2 i v\": change $$$a_i$$$ to $$$v$$$. $$$^{\\dagger}$$$ An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. In particular, an array is a subarray of itself."
  },
  {
    "title": "Matching Arrays",
    "url": "https://codeforces.com/problemset/problem/1896/C",
    "description": "You are given two arrays $$$a$$$ and $$$b$$$ of size $$$n$$$. The beauty of the arrays $$$a$$$ and $$$b$$$ is the number of indices $$$i$$$ such that $$$a_i > b_i$$$.You are also given an integer $$$x$$$. Determine whether it is possible to rearrange the elements of $$$b$$$ such that the beauty of the arrays becomes $$$x$$$. If it is possible, output one valid rearrangement of $$$b$$$."
  },
  {
    "title": "AB Flipping",
    "url": "https://codeforces.com/problemset/problem/1896/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$ consisting of characters $$$\\texttt{A}$$$ and $$$\\texttt{B}$$$. You are allowed to do the following operation:  Choose an index $$$1 \\le i \\le n - 1$$$ such that $$$s_i = \\texttt{A}$$$ and $$$s_{i + 1} = \\texttt{B}$$$. Then, swap $$$s_i$$$ and $$$s_{i+1}$$$. You are only allowed to do the operation at most once for each index $$$1 \\le i \\le n - 1$$$. However, you can do it in any order you want. Find the maximum number of operations that you can carry out. "
  },
  {
    "title": "Jagged Swaps",
    "url": "https://codeforces.com/problemset/problem/1896/A",
    "description": "You are given a permutation$$$^\\dagger$$$ $$$a$$$ of size $$$n$$$. You can do the following operation   Select an index $$$i$$$ from $$$2$$$ to $$$n - 1$$$ such that $$$a_{i - 1} < a_i$$$ and $$$a_i > a_{i+1}$$$. Swap $$$a_i$$$ and $$$a_{i+1}$$$. Determine whether it is possible to sort the permutation after a finite number of operations.$$$^\\dagger$$$ A permutation is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array) and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Two Characters, Two Colors",
    "url": "https://codeforces.com/problemset/problem/1895/G",
    "description": "You are given a string consisting of characters 0 and/or 1. You have to paint every character of this string into one of two colors, red or blue.If you paint the $$$i$$$-th character red, you get $$$r_i$$$ coins. If you paint it blue, you get $$$b_i$$$ coins.After coloring the string, you remove every blue character from it, and count the number of inversions in the resulting string (i. e. the number of pairs of characters such that the left character in the pair is 1, and the right character in the pair is 0). For each inversion, you have to pay $$$1$$$ coin.What is the maximum number of coins you can earn?"
  },
  {
    "title": "Fancy Arrays",
    "url": "https://codeforces.com/problemset/problem/1895/F",
    "description": "Let's call an array $$$a$$$ of $$$n$$$ non-negative integers fancy if the following conditions hold:   at least one from the numbers $$$x$$$, $$$x + 1$$$, ..., $$$x+k-1$$$ appears in the array;  consecutive elements of the array differ by at most $$$k$$$ (i.e. $$$|a_i-a_{i-1}| \\le k$$$ for each $$$i \\in [2, n]$$$). You are given $$$n$$$, $$$x$$$ and $$$k$$$. Your task is to calculate the number of fancy arrays of length $$$n$$$. Since the answer can be large, print it modulo $$$10^9+7$$$."
  },
  {
    "title": "Infinite Card Game",
    "url": "https://codeforces.com/problemset/problem/1895/E",
    "description": "Monocarp and Bicarp are playing a card game. Each card has two parameters: an attack value and a defence value. A card $$$s$$$ beats another card $$$t$$$ if the attack of $$$s$$$ is strictly greater than the defence of $$$t$$$.Monocarp has $$$n$$$ cards, the $$$i$$$-th of them has an attack value of $$$\\mathit{ax}_i$$$ and a defence value of $$$\\mathit{ay}_i$$$. Bicarp has $$$m$$$ cards, the $$$j$$$-th of them has an attack value of $$$\\mathit{bx}_j$$$ and a defence value of $$$\\mathit{by}_j$$$.On the first move, Monocarp chooses one of his cards and plays it. Bicarp has to respond with his own card that beats that card. After that, Monocarp has to respond with a card that beats Bicarp's card. After that, it's Bicarp's turn, and so forth.After a card is beaten, it returns to the hand of the player who played it. It implies that each player always has the same set of cards to play as at the start of the game. The game ends when the current player has no cards that beat the card which their opponent just played, and the current player loses.If the game lasts for $$$100^{500}$$$ moves, it's declared a draw.Both Monocarp and Bicarp play optimally. That is, if a player has a winning strategy regardless of his opponent's moves, he plays for a win. Otherwise, if he has a drawing strategy, he plays for a draw.You are asked to calculate three values:   the number of Monocarp's starting moves that result in a win for Monocarp;  the number of Monocarp's starting moves that result in a draw;  the number of Monocarp's starting moves that result in a win for Bicarp. "
  },
  {
    "title": "XOR Construction",
    "url": "https://codeforces.com/problemset/problem/1895/D",
    "description": "You are given $$$n-1$$$ integers $$$a_1, a_2, \\dots, a_{n-1}$$$.Your task is to construct an array $$$b_1, b_2, \\dots, b_n$$$ such that:  every integer from $$$0$$$ to $$$n-1$$$ appears in $$$b$$$ exactly once;  for every $$$i$$$ from $$$1$$$ to $$$n-1$$$, $$$b_i \\oplus b_{i+1} = a_i$$$ (where $$$\\oplus$$$ denotes the bitwise XOR operator). "
  },
  {
    "title": "Torn Lucky Ticket",
    "url": "https://codeforces.com/problemset/problem/1895/C",
    "description": "A ticket is a non-empty string of digits from $$$1$$$ to $$$9$$$.A lucky ticket is such a ticket that:   it has an even length;  the sum of digits in the first half is equal to the sum of digits in the second half. You are given $$$n$$$ ticket pieces $$$s_1, s_2, \\dots, s_n$$$. How many pairs $$$(i, j)$$$ (for $$$1 \\le i, j \\le n$$$) are there such that $$$s_i + s_j$$$ is a lucky ticket? Note that it's possible that $$$i=j$$$.Here, the + operator denotes the concatenation of the two strings. For example, if $$$s_i$$$ is 13, and $$$s_j$$$ is 37, then $$$s_i + s_j$$$ is 1337."
  },
  {
    "title": "Points and Minimum Distance",
    "url": "https://codeforces.com/problemset/problem/1895/B",
    "description": "You are given a sequence of integers $$$a$$$ of length $$$2n$$$. You have to split these $$$2n$$$ integers into $$$n$$$ pairs; each pair will represent the coordinates of a point on a plane. Each number from the sequence $$$a$$$ should become the $$$x$$$ or $$$y$$$ coordinate of exactly one point. Note that some points can be equal.After the points are formed, you have to choose a path $$$s$$$ that starts from one of these points, ends at one of these points, and visits all $$$n$$$ points at least once.The length of path $$$s$$$ is the sum of distances between all adjacent points on the path. In this problem, the distance between two points $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ is defined as $$$|x_1-x_2| + |y_1-y_2|$$$.Your task is to form $$$n$$$ points and choose a path $$$s$$$ in such a way that the length of path $$$s$$$ is minimized."
  },
  {
    "title": "Treasure Chest",
    "url": "https://codeforces.com/problemset/problem/1895/A",
    "description": "Monocarp has found a treasure map. The map represents the treasure location as an OX axis. Monocarp is at $$$0$$$, the treasure chest is at $$$x$$$, the key to the chest is at $$$y$$$.Obviously, Monocarp wants to open the chest. He can perform the following actions:   go $$$1$$$ to the left or $$$1$$$ to the right (spending $$$1$$$ second);  pick the key or the chest up if he is in the same point as that object (spending $$$0$$$ seconds);  put the chest down in his current point (spending $$$0$$$ seconds);  open the chest if he's in the same point as the chest and has picked the key up (spending $$$0$$$ seconds). Monocarp can carry the chest, but the chest is pretty heavy. He knows that he can carry it for at most $$$k$$$ seconds in total (putting it down and picking it back up doesn't reset his stamina).What's the smallest time required for Monocarp to open the chest?"
  },
  {
    "title": "Two Out of Three",
    "url": "https://codeforces.com/problemset/problem/1894/B",
    "description": "You are given an array $$$a_1, a_2, \\ldots, a_n$$$. You need to find an array $$$b_1, b_2, \\ldots, b_n$$$ consisting of numbers $$$1$$$, $$$2$$$, $$$3$$$ such that exactly two out of the following three conditions are satisfied: There exist indices $$$1 \\leq i, j \\leq n$$$ such that $$$a_i = a_j$$$, $$$b_i = 1$$$, $$$b_j = 2$$$. There exist indices $$$1 \\leq i, j \\leq n$$$ such that $$$a_i = a_j$$$, $$$b_i = 1$$$, $$$b_j = 3$$$. There exist indices $$$1 \\leq i, j \\leq n$$$ such that $$$a_i = a_j$$$, $$$b_i = 2$$$, $$$b_j = 3$$$.If such an array does not exist, you should report it."
  },
  {
    "title": "Secret Sport",
    "url": "https://codeforces.com/problemset/problem/1894/A",
    "description": "Let's consider a game in which two players, A and B, participate. This game is characterized by two positive integers, $$$X$$$ and $$$Y$$$.The game consists of sets, and each set consists of plays. In each play, exactly one of the players, either A or B, wins. A set ends exactly when one of the players reaches $$$X$$$ wins in the plays of that set. This player is declared the winner of the set. The players play sets until one of them reaches $$$Y$$$ wins in the sets. After that, the game ends, and this player is declared the winner of the entire game.You have just watched a game but didn't notice who was declared the winner. You remember that during the game, $$$n$$$ plays were played, and you know which player won each play. However, you do not know the values of $$$X$$$ and $$$Y$$$. Based on the available information, determine who won the entire game — A or B. If there is not enough information to determine the winner, you should also report it."
  },
  {
    "title": "Cacti Symphony",
    "url": "https://codeforces.com/problemset/problem/1893/E",
    "description": "You are given an undirected connected graph in which any two distinct simple cycles do not have common vertices. Since the graph can be very large, it is given to you in a compressed form: for each edge, you are also given a number $$$d$$$, which indicates that there are $$$d$$$ additional vertices on this edge.You need to assign a weight to each vertex and each edge of the graph — an integer from $$$1$$$ to $$$3$$$.An edge of the graph is called good if the bitwise XOR of the weights of its adjacent vertices is not equal to $$$0$$$ and not equal to the weight of that edge.Similarly, a vertex of the graph is called good if the bitwise XOR of the weights of its adjacent edges is not equal to $$$0$$$ and not equal to the weight of that vertex.You need to determine how many ways there are to assign weights to the vertices and edges of the graph so that all vertices and edges are good. Since the answer can be quite large, you need to calculate the remainder of the answer divided by $$$998\\,244\\,353$$$."
  },
  {
    "title": "Colorful Constructive",
    "url": "https://codeforces.com/problemset/problem/1893/D",
    "description": "You have $$$n$$$ colored cubes, the $$$i$$$-th cube has color $$$a_i$$$.You need to distribute all the cubes on shelves. There are a total of $$$m$$$ shelves, the $$$i$$$-th shelf can hold $$$s_i$$$ cubes. Also, $$$s_1 + s_2 + \\ldots + s_m = n$$$.Suppose on a shelf of size $$$k$$$ there are cubes of colors $$$c_1, c_2, \\ldots, c_k$$$, in this order. Then we define the colorfulness of the shelf as the minimum distance between two different cubes of the same color on the shelf. If all the cubes on the shelf have different colors, then the colorfulness is considered to be equal to the size of the shelf, that is, the number $$$k$$$.More formally, the colorfulness of $$$c_1, c_2, \\ldots, c_k$$$ is defined as follows: If all the colors $$$c_1, c_2, \\ldots, c_k$$$ are different, the colorfulness is considered to be $$$k$$$. Otherwise, the colorfulness is considered to be the smallest integer $$$x \\geq 1$$$ such that there exists an index $$$i$$$ $$$(1 \\le i \\le k - x)$$$ such that $$$c_i = c_{i+x}$$$.For each shelf, you are given the minimum required colorfulness, that is, you are given numbers $$$d_1, d_2, \\ldots, d_m$$$, which mean that shelf $$$i$$$ must have a colorfulness $$$\\geq d_i$$$ for all $$$i$$$.Distribute the available cubes among the shelves to ensure the required colorfulness, or report that it is impossible."
  },
  {
    "title": "Freedom of Choice",
    "url": "https://codeforces.com/problemset/problem/1893/C",
    "description": "Let's define the anti-beauty of a multiset {b1,b2,…,blen}\\{b_1, b_2, \\ldots, b_{len}\\} as the number of occurrences of the number lenlen in the multiset.You are given mm multisets, where the ii-th multiset contains nin_i distinct elements, specifically: ci,1c_{i, 1} copies of the number ai,1a_{i,1}, ci,2c_{i, 2} copies of the number ai,2,…,ci,nia_{i,2}, \\ldots, c_{i, n_i} copies of the number ai,nia_{i, n_i}. It is guaranteed that ai,1<ai,2<…<ai,nia_{i, 1} < a_{i, 2} < \\ldots < a_{i, n_i}. You are also given numbers l1,l2,…,lml_1, l_2, \\ldots, l_m and r1,r2,…,rmr_1, r_2, \\ldots, r_m such that 1≤li≤ri≤ci,1+…+ci,ni1 \\le l_i \\le r_i \\le c_{i, 1} + \\ldots + c_{i, n_i}.Let's create a multiset XX, initially empty. Then, for each ii from 11 to mm, you must perform the following action exactly once: Choose some viv_i such that li≤vi≤ril_i \\le v_i \\le r_i Choose any viv_i numbers from the ii-th multiset and add them to the multiset XX.You need to choose v1,…,vmv_1, \\ldots, v_m and the added numbers in such a way that the resulting multiset XX has the minimum possible anti-beauty."
  },
  {
    "title": "Neutral Tonality",
    "url": "https://codeforces.com/problemset/problem/1893/B",
    "description": "You are given an array $$$a$$$ consisting of $$$n$$$ integers, as well as an array $$$b$$$ consisting of $$$m$$$ integers.Let $$$\\text{LIS}(c)$$$ denote the length of the longest increasing subsequence of array $$$c$$$. For example, $$$\\text{LIS}([2, \\underline{1}, 1, \\underline{3}])$$$ = $$$2$$$, $$$\\text{LIS}([\\underline{1}, \\underline{7}, \\underline{9}])$$$ = $$$3$$$, $$$\\text{LIS}([3, \\underline{1}, \\underline{2}, \\underline{4}])$$$ = $$$3$$$.You need to insert the numbers $$$b_1, b_2, \\ldots, b_m$$$ into the array $$$a$$$, at any positions, in any order. Let the resulting array be $$$c_1, c_2, \\ldots, c_{n+m}$$$. You need to choose the positions for insertion in order to minimize $$$\\text{LIS}(c)$$$.Formally, you need to find an array $$$c_1, c_2, \\ldots, c_{n+m}$$$ that simultaneously satisfies the following conditions: The array $$$a_1, a_2, \\ldots, a_n$$$ is a subsequence of the array $$$c_1, c_2, \\ldots, c_{n+m}$$$. The array $$$c_1, c_2, \\ldots, c_{n+m}$$$ consists of the numbers $$$a_1, a_2, \\ldots, a_n, b_1, b_2, \\ldots, b_m$$$, possibly rearranged. The value of $$$\\text{LIS}(c)$$$ is the minimum possible among all suitable arrays $$$c$$$."
  },
  {
    "title": "Anonymous Informant",
    "url": "https://codeforces.com/problemset/problem/1893/A",
    "description": "You are given an array $$$b_1, b_2, \\ldots, b_n$$$.An anonymous informant has told you that the array $$$b$$$ was obtained as follows: initially, there existed an array $$$a_1, a_2, \\ldots, a_n$$$, after which the following two-component operation was performed $$$k$$$ times: A fixed point$$$^{\\dagger}$$$ $$$x$$$ of the array $$$a$$$ was chosen. Then, the array $$$a$$$ was cyclically shifted to the left$$$^{\\ddagger}$$$ exactly $$$x$$$ times.As a result of $$$k$$$ such operations, the array $$$b_1, b_2, \\ldots, b_n$$$ was obtained. You want to check if the words of the anonymous informant can be true or if they are guaranteed to be false.$$$^{\\dagger}$$$A number $$$x$$$ is called a fixed point of the array $$$a_1, a_2, \\ldots, a_n$$$ if $$$1 \\leq x \\leq n$$$ and $$$a_x = x$$$.$$$^{\\ddagger}$$$A cyclic left shift of the array $$$a_1, a_2, \\ldots, a_n$$$ is the array $$$a_2, \\ldots, a_n, a_1$$$."
  },
  {
    "title": "A Growing Tree",
    "url": "https://codeforces.com/problemset/problem/1891/F",
    "description": "You are given a rooted tree with the root at vertex $$$1$$$, initially consisting of a single vertex. Each vertex has a numerical value, initially set to $$$0$$$. There are also $$$q$$$ queries of two types:   The first type: add a child vertex with the number $$$sz + 1$$$ to vertex $$$v$$$, where $$$sz$$$ is the current size of the tree. The numerical value of the new vertex will be $$$0$$$.  The second type: add $$$x$$$ to the numerical values of all vertices in the subtree of vertex $$$v$$$. After all queries, output the numerical value of all of the vertices in the final tree."
  },
  {
    "title": "Brukhovich and Exams",
    "url": "https://codeforces.com/problemset/problem/1891/E",
    "description": "The boy Smilo is learning algorithms with a teacher named Brukhovich.Over the course of the year, Brukhovich will administer $$$n$$$ exams. For each exam, its difficulty $$$a_i$$$ is known, which is a non-negative integer.Smilo doesn't like when the greatest common divisor of the difficulties of two consecutive exams is equal to $$$1$$$. Therefore, he considers the sadness of the academic year to be the number of such pairs of exams. More formally, the sadness is the number of indices $$$i$$$ ($$$1 \\leq i \\leq n - 1$$$) such that $$$gcd(a_i, a_{i+1}) = 1$$$, where $$$gcd(x, y)$$$ is the greatest common divisor of integers $$$x$$$ and $$$y$$$.Brukhovich wants to minimize the sadness of the year of Smilo. To do this, he can set the difficulty of any exam to $$$0$$$. However, Brukhovich doesn't want to make his students' lives too easy. Therefore, he will perform this action no more than $$$k$$$ times.Help Smilo determine the minimum sadness that Brukhovich can achieve if he performs no more than $$$k$$$ operations.As a reminder, the greatest common divisor (GCD) of two non-negative integers $$$x$$$ and $$$y$$$ is the maximum integer that is a divisor of both $$$x$$$ and $$$y$$$ and is denoted as $$$gcd(x, y)$$$. In particular, $$$gcd(x, 0) = gcd(0, x) = x$$$ for any non-negative integer $$$x$$$."
  },
  {
    "title": "Suspicious logarithms",
    "url": "https://codeforces.com/problemset/problem/1891/D",
    "description": "Let $$$f$$$($$$x$$$) be the floor of the binary logarithm of $$$x$$$. In other words, $$$f$$$($$$x$$$) is largest non-negative integer $$$y$$$, such that $$$2^y$$$ does not exceed $$$x$$$.Let $$$g$$$($$$x$$$) be the floor of the logarithm of $$$x$$$ with base $$$f$$$($$$x$$$). In other words, $$$g$$$($$$x$$$) is the largest non-negative integer $$$z$$$, such that $$${f(x)}^{z}$$$ does not exceed $$$x$$$.You are given $$$q$$$ queries. The $$$i$$$-th query consists of two integers $$$l_i$$$ and $$$r_i$$$. The answer to the query is the sum of $$$g$$$($$$k$$$) across all integers $$$k$$$, such that $$$l_i \\leq k \\leq r_i$$$. Since the answers might be large, print them modulo $$${10^9 + 7}$$$."
  },
  {
    "title": "Smilo and Monsters",
    "url": "https://codeforces.com/problemset/problem/1891/C",
    "description": "A boy called Smilo is playing a new game! In the game, there are $$$n$$$ hordes of monsters, and the $$$i$$$-th horde contains $$$a_i$$$ monsters. The goal of the game is to destroy all the monsters. To do this, you have two types of attacks and a combo counter $$$x$$$, initially set to $$$0$$$:  The first type: you choose a number $$$i$$$ from $$$1$$$ to $$$n$$$, such that there is at least one monster left in the horde with the number $$$i$$$. Then, you kill one monster from horde number $$$i$$$, and the combo counter $$$x$$$ increases by $$$1$$$.  The second type: you choose a number $$$i$$$ from $$$1$$$ to $$$n$$$, such that there are at least $$$x$$$ monsters left in the horde with number $$$i$$$. Then, you use an ultimate attack and kill $$$x$$$ monsters from the horde with number $$$i$$$. After that, $$$x$$$ is reset to zero.Your task is to destroy all of the monsters, meaning that there should be no monsters left in any of the hordes. Smilo wants to win as quickly as possible, so he wants to the minimum number of attacks required to win the game. "
  },
  {
    "title": "Deja Vu",
    "url": "https://codeforces.com/problemset/problem/1891/B",
    "description": "You are given an array $$$a$$$ of length $$$n$$$, consisting of positive integers, and an array $$$x$$$ of length $$$q$$$, also consisting of positive integers.There are $$$q$$$ modification. On the $$$i$$$-th modification ($$$1 \\leq i \\leq q$$$), for each $$$j$$$ ($$$1 \\leq j \\leq n$$$), such that $$$a_j$$$ is divisible by $$$2^{x_i}$$$, you add $$$2^{x_i-1}$$$ to $$$a_j$$$. Note that $$$x_i$$$ ($$$1 \\leq x_i \\leq 30$$$) is a positive integer not exceeding 30.After all modification queries, you need to output the final array."
  },
  {
    "title": "Sorting with Twos",
    "url": "https://codeforces.com/problemset/problem/1891/A",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. In one operation, you do the following:   Choose a non-negative integer $$$m$$$, such that $$$2^m \\leq n$$$.  Subtract $$$1$$$ from $$$a_i$$$ for all integers $$$i$$$, such that $$$1 \\leq i \\leq 2^m$$$. Can you sort the array in non-decreasing order by performing some number (possibly zero) of operations?An array is considered non-decreasing if $$$a_i \\leq a_{i + 1}$$$ for all integers $$$i$$$ such that $$$1 \\leq i \\leq n - 1$$$."
  },
  {
    "title": "Qingshan Loves Strings",
    "url": "https://codeforces.com/problemset/problem/1890/B",
    "description": "Qingshan has a string $$$s$$$, while Daniel has a string $$$t$$$. Both strings only contain $$$\\texttt{0}$$$ and $$$\\texttt{1}$$$.A string $$$a$$$ of length $$$k$$$ is good if and only if  $$$a_i \\ne a_{i+1}$$$ for all $$$i=1,2,\\ldots,k-1$$$. For example, $$$\\texttt{1}$$$, $$$\\texttt{101}$$$, $$$\\texttt{0101}$$$ are good, while $$$\\texttt{11}$$$, $$$\\texttt{1001}$$$, $$$\\texttt{001100}$$$ are not good.Qingshan wants to make $$$s$$$ good. To do this, she can do the following operation any number of times (possibly, zero):  insert $$$t$$$ to any position of $$$s$$$ (getting a new $$$s$$$). Please tell Qingshan if it is possible to make $$$s$$$ good."
  },
  {
    "title": "Doremy's Paint 3",
    "url": "https://codeforces.com/problemset/problem/1890/A",
    "description": "An array $$$b_1, b_2, \\ldots, b_n$$$ of positive integers is good if all the sums of two adjacent elements are equal to the same value. More formally, the array is good if there exists a $$$k$$$ such that $$$b_1 + b_2 = b_2 + b_3 = \\ldots = b_{n-1} + b_n = k$$$.Doremy has an array $$$a$$$ of length $$$n$$$. Now Doremy can permute its elements (change their order) however she wants. Determine if she can make the array good."
  },
  {
    "title": "Doremy's Average Tree",
    "url": "https://codeforces.com/problemset/problem/1889/F",
    "description": "Doremy has a rooted tree of size $$$n$$$ whose root is vertex $$$r$$$. Initially there is a number $$$w_i$$$ written on vertex $$$i$$$. Doremy can use her power to perform this operation at most $$$k$$$ times:  Choose a vertex $$$x$$$ ($$$1 \\leq x \\leq n$$$).  Let $$$s = \\frac{1}{|T|}\\sum_{i \\in T} w_i$$$ where $$$T$$$ is the set of all vertices in $$$x$$$'s subtree.  For all $$$i \\in T$$$, assign $$$w_i := s$$$. Doremy wants to know what is the lexicographically smallest$$$^\\dagger$$$ array $$$w$$$ after performing all the operations. Can you help her?If there are multiple answers, you may output any one.$$$^\\dagger$$$ For arrays $$$a$$$ and $$$b$$$ both of length $$$n$$$, $$$a$$$ is lexicographically smaller than $$$b$$$ if and only if there exist an index $$$i$$$ ($$$1 \\leq i \\le n$$$) such that $$$a_i < b_i$$$ and for all indices $$$j$$$ such that $$$j<i$$$, $$$a_j=b_j$$$ is satisfied."
  },
  {
    "title": "Doremy's Swapping Trees",
    "url": "https://codeforces.com/problemset/problem/1889/E",
    "description": "Consider two undirected graphs $$$G_1$$$ and $$$G_2$$$. Every node in $$$G_1$$$ and in $$$G_2$$$ has a label. Doremy calls $$$G_1$$$ and $$$G_2$$$ similar if and only if:  The labels in $$$G_1$$$ are distinct, and the labels in $$$G_2$$$ are distinct.  The set $$$S$$$ of labels in $$$G_1$$$ coincides with the set of labels in $$$G_2$$$.  For every pair of two distinct labels $$$u$$$ and $$$v$$$ in $$$S$$$, the corresponding nodes are in the same connected component in $$$G_1$$$ if and only if they are in the same connected component in $$$G_2$$$. Now Doremy gives you two trees $$$T_1$$$ and $$$T_2$$$ with $$$n$$$ nodes, labeled from $$$1$$$ to $$$n$$$. You can do the following operation any number of times:  Choose an edge set $$$E_1$$$ from $$$T_1$$$ and an edge set $$$E_2$$$ from $$$T_2$$$, such that $$$\\overline{E_1}$$$ and $$$\\overline{E_2}$$$ are similar. Here $$$\\overline{E}$$$ represents the graph which is given by only reserving the edge set $$$E$$$ from $$$T$$$ (i.e., the edge-induced subgraph). In other words, $$$\\overline{E}$$$ is obtained from $$$T$$$ by removing all edges not included in $$$E$$$ and further removing all isolated vertices.  Swap the edge set $$$E_1$$$ in $$$T_1$$$ with the edge set $$$E_2$$$ in $$$T_2$$$. Now Doremy is wondering how many distinct $$$T_1$$$ you can get after any number of operations. Can you help her find the answer? Output the answer modulo $$$10^9+7$$$."
  },
  {
    "title": "Game of Stacks",
    "url": "https://codeforces.com/problemset/problem/1889/D",
    "description": "You have $$$n$$$ stacks $$$r_1,r_2,\\ldots,r_n$$$. Each stack contains some positive integers ranging from $$$1$$$ to $$$n$$$.Define the following functions:function init(pos):    stacks := an array that contains n stacks r[1], r[2], ..., r[n]    return get(stacks, pos)function get(stacks, pos):    if stacks[pos] is empty:        return pos    else:        new_pos := the top element of stacks[pos]        pop the top element of stacks[pos]        return get(stacks, new_pos)You want to know the values returned by $$$\\texttt{init(1)}, \\texttt{init(2)}, \\ldots, \\texttt{init(n)}$$$.Note that, during these calls, the stacks $$$r_1,r_2,\\ldots,r_n$$$ don't change, so the calls $$$\\texttt{init(1)}, \\texttt{init(2)}, \\ldots, \\texttt{init(n)}$$$ are independent."
  },
  {
    "title": "Doremy's Drying Plan (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1889/C2",
    "description": "The only differences between the two versions of this problem are the constraint on $$$k$$$, the time limit and the memory limit. You can make hacks only if all versions of the problem are solved.Doremy lives in a rainy country consisting of $$$n$$$ cities numbered from $$$1$$$ to $$$n$$$.The weather broadcast predicted the distribution of rain in the next $$$m$$$ days. In the $$$i$$$-th day, it will rain in the cities in the interval $$$[l_i, r_i]$$$. A city is called dry if it will never rain in that city in the next $$$m$$$ days.It turns out that Doremy has a special power. She can choose $$$k$$$ days, and during these days it will not rain. Doremy wants to calculate the maximum number of dry cities after using the special power."
  },
  {
    "title": "Doremy's Drying Plan (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1889/C1",
    "description": "The only differences between the two versions of this problem are the constraint on $$$k$$$, the time limit and the memory limit. You can make hacks only if all versions of the problem are solved.Doremy lives in a rainy country consisting of $$$n$$$ cities numbered from $$$1$$$ to $$$n$$$.The weather broadcast predicted the distribution of rain in the next $$$m$$$ days. In the $$$i$$$-th day, it will rain in the cities in the interval $$$[l_i, r_i]$$$. A city is called dry if it will never rain in that city in the next $$$m$$$ days.It turns out that Doremy has a special power. She can choose $$$k$$$ days (in the easy version, $$$k = 2$$$), and during these days it will not rain. Doremy wants to calculate the maximum number of dry cities after using the special power."
  },
  {
    "title": "Doremy's Connecting Plan",
    "url": "https://codeforces.com/problemset/problem/1889/B",
    "description": "Doremy lives in a country consisting of $$$n$$$ cities numbered from $$$1$$$ to $$$n$$$, with $$$a_i$$$ people living in the $$$i$$$-th city. It can be modeled as an undirected graph with $$$n$$$ nodes.Initially, there are no edges in the graph. Now Doremy wants to make the graph connected. To do this, she can add an edge between $$$i$$$ and $$$j$$$ if $$$$$$ \\sum_{k \\in S} a_k \\ge i\\cdot j \\cdot c, $$$$$$where $$$S$$$ is the set of all the nodes that are currently in the same connected component of either $$$i$$$ or $$$j$$$, and $$$c$$$ is a given constant.Can Doremy make the graph connected?Two nodes $$$(i, j)$$$ are in the same connected component if there exists a path from $$$i$$$ to $$$j$$$. A graph is connected if all its nodes are in the same connected component."
  },
  {
    "title": "Qingshan Loves Strings 2",
    "url": "https://codeforces.com/problemset/problem/1889/A",
    "description": "Qingshan has a string ss which only contains 0\\texttt{0} and 1\\texttt{1}.A string aa of length kk is good if and only if  ai≠ak−i+1a_i \\ne a_{k-i+1} for all i=1,2,…,ki=1,2,\\ldots,k. For Div. 2 contestants, note that this condition is different from the condition in problem B.For example, 10\\texttt{10}, 1010\\texttt{1010}, 111000\\texttt{111000} are good, while 11\\texttt{11}, 101\\texttt{101}, 001\\texttt{001}, 001100\\texttt{001100} are not good.Qingshan wants to make ss good. To do this, she can do the following operation at most 300300 times (possibly, zero):   insert 01\\texttt{01} to any position of ss (getting a new ss). Please tell Qingshan if it is possible to make ss good. If it is possible, print a sequence of operations that makes ss good."
  },
  {
    "title": "Minimum Segments",
    "url": "https://codeforces.com/problemset/problem/1887/F",
    "description": "You had a sequence $$$a_1, a_2, \\ldots, a_n$$$ consisting of integers from $$$1$$$ to $$$n$$$, not necessarily distinct. For some unknown reason, you decided to calculate the following characteristic of the sequence:   Let $$$r_i$$$ ($$$1 \\le i \\le n$$$) be the smallest $$$j \\ge i$$$ such that on the subsegment $$$a_i, a_{i+1}, \\ldots, a_j$$$ all distinct numbers from the sequence $$$a$$$ appear. More formally, for any $$$k \\in [1, n]$$$, there exists $$$l \\in [i, j]$$$ such that $$$a_k = a_l$$$. If such $$$j$$$ does not exist, $$$r_i$$$ is considered to be equal to $$$n+1$$$.  The characteristic of the sequence $$$a$$$ is defined as the sequence $$$r_1, r_2, \\ldots, r_n$$$.  Unfortunately, the sequence $$$a$$$ got lost, but you still have its characteristic $$$r$$$. You want to reconstruct any sequence $$$a$$$ that matches the characteristic, or determine that there is an error in the characteristic and such a sequence does not exist."
  },
  {
    "title": "Good Colorings",
    "url": "https://codeforces.com/problemset/problem/1887/E",
    "description": "Alice suggested Bob to play a game. Bob didn't like this idea, but he couldn't refuse Alice, so he asked you to write a program that would play instead of him.The game starts with Alice taking out a grid sheet of size $$$n \\times n$$$, the cells of which are initially not colored. After that she colors some $$$2n$$$ cells with colors $$$1,2,\\ldots, 2n$$$, respectively, and informs Bob about these cells.In one move, Bob can point to a cell that has not been colored yet and ask Alice to color that cell. Alice colors that cell with one of the $$$2n$$$ colors of her choice, informing Bob of the chosen color. Bob can make no more than $$$10$$$ moves, after which he needs to find a good set of four cells.A set of four cells is considered good if the following conditions are met:  All the cells in the set are colored;  No two cells in the set are colored with the same color;  The centers of the cells form a rectangle with sides parallel to the grid lines. "
  },
  {
    "title": "Split",
    "url": "https://codeforces.com/problemset/problem/1887/D",
    "description": "Let's call an array $$$b_1, b_2, \\ldots, b_m$$$ ($$$m \\ge 2$$$) good if it can be split into two parts such that all elements in the left part are strictly smaller than all elements in the right part. In other words, there must exist an index $$$1 \\le i < m$$$ such that every element from $$$b_1, \\ldots, b_i$$$ is strictly smaller than every element from $$$b_{i+1}, \\ldots, b_m$$$.Given an array $$$a_1, a_2, \\ldots a_n$$$ consisting of distinct integers from $$$1$$$ to $$$n$$$. There are $$$q$$$ queries. Each query consists of two numbers $$$l$$$ and $$$r$$$. For each query, determine whether the array $$$a_l, a_{l+1}, \\ldots, a_r$$$ is good."
  },
  {
    "title": "Minimum Array",
    "url": "https://codeforces.com/problemset/problem/1887/C",
    "description": "Given an array $$$a$$$ of length $$$n$$$ consisting of integers. Then the following operation is sequentially applied to it $$$q$$$ times: Choose indices $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$) and an integer $$$x$$$; Add $$$x$$$ to all elements of the array $$$a$$$ in the segment $$$[l, r]$$$. More formally, assign $$$a_i := a_i + x$$$ for all $$$l \\le i \\le r$$$.Let $$$b_j$$$ be the array $$$a$$$ obtained after applying the first $$$j$$$ operations ($$$0 \\le j \\le q$$$). Note that $$$b_0$$$ is the array $$$a$$$ before applying any operations.You need to find the lexicographically minimum$$$^{\\dagger}$$$ array among all arrays $$$b_j$$$.$$$^{\\dagger}$$$An array $$$x$$$ is lexicographically smaller than array $$$y$$$ if there is an index $$$i$$$ such that $$$x_i < y_i$$$, and $$$x_j = y_j$$$ for all $$$j < i$$$. In other words, for the first index $$$i$$$ where the arrays differ, $$$x_i < y_i$$$."
  },
  {
    "title": "Time Travel",
    "url": "https://codeforces.com/problemset/problem/1887/B",
    "description": "Berland is a country with ancient history, where roads were built and destroyed for centuries. It is known that there always were $$$n$$$ cities in Berland. You also have records of $$$t$$$ key moments in the history of the country, numbered from $$$1$$$ to $$$t$$$. Each record contains a list of bidirectional roads between some pairs of cities, which could be used for travel in Berland at a specific moment in time.You have discovered a time machine that transports you between key moments. Unfortunately, you cannot choose what point in time to end up at, but you know the order consisting of $$$k$$$ moments in time $$$a_{i}$$$, in which the machine will transport you. Since there is little time between the travels, when you find yourself in the next key moment in time (including after the last time travel), you can travel on at most one existing road at that moment, coming out from the city you were in before time travel.Currently, you are in city $$$1$$$, and the time machine has already transported you to moment $$$a_{1}$$$. You want to reach city $$$n$$$ as quickly as possible. Determine the minimum number of time travels, including the first one, that you need to make in order to reach city $$$n$$$."
  },
  {
    "title": "Diamond Theft",
    "url": "https://codeforces.com/problemset/problem/1886/F",
    "description": "Monocarp is the most famous thief in Berland. This time, he decided to steal two diamonds. Unfortunately for Monocarp, there are $$$n$$$ cameras monitoring the diamonds. Each camera has two parameters, $$$t_i$$$ and $$$s_i$$$. The first parameter determines whether the camera is monitoring the first diamond only ($$$t_i=1$$$), the second diamond only ($$$t_i=2$$$), or both diamonds ($$$t_i=3$$$). The second parameter determines the number of seconds the camera will be disabled after it is hacked.Every second, Monocarp can perform one of the following three actions:   do nothing;  choose a camera and hack it; if Monocarp hacks the $$$i$$$-th camera, it will be disabled for the next $$$s_i$$$ seconds (if the current second is the $$$T$$$-th one, the camera will be disabled from the $$$(T+1)$$$-th to the $$$(T+s_i)$$$-th second, inclusive);  steal a diamond if all cameras monitoring it are currently disabled. Monocarp cannot steal the second diamond if he hasn't stolen the first diamond yet. Note that Monocarp can hack a camera multiple times, even if it is currently disabled.Your task is to determine the minimum time it will take Monocarp to steal both diamonds, beginning with the first diamond, or report that it is impossible."
  },
  {
    "title": "I Wanna be the Team Leader",
    "url": "https://codeforces.com/problemset/problem/1886/E",
    "description": "Monocarp is a team leader in a massive IT company.There are $$$m$$$ projects his team of programmers has to complete, numbered from $$$1$$$ to $$$m$$$. The $$$i$$$-th project has a difficulty level $$$b_i$$$.There are $$$n$$$ programmers in the team, numbered from $$$1$$$ to $$$n$$$. The $$$j$$$-th programmer has a stress tolerance level $$$a_j$$$.Monocarp wants to assign the programmers to the projects in such a way that:   each programmer is assigned to no more than one project;  each project has at least one programmer assigned to it;  let $$$k$$$ programmers be assigned to the $$$i$$$-th project; then all the assigned programmers have to have a stress tolerance level greater than or equal to $$$\\frac{b_i}{k}$$$. Help Monocarp to find a valid assignment. If there are multiple answers, print any of them."
  },
  {
    "title": "Monocarp and the Set",
    "url": "https://codeforces.com/problemset/problem/1886/D",
    "description": "Monocarp has $$$n$$$ numbers $$$1, 2, \\dots, n$$$ and a set (initially empty). He adds his numbers to this set $$$n$$$ times in some order. During each step, he adds a new number (which has not been present in the set before). In other words, the sequence of added numbers is a permutation of length $$$n$$$.Every time Monocarp adds an element into the set except for the first time, he writes out a character:  if the element Monocarp is trying to insert becomes the maximum element in the set, Monocarp writes out the character >;  if the element Monocarp is trying to insert becomes the minimum element in the set, Monocarp writes out the character <;  if none of the above, Monocarp writes out the character ?. You are given a string $$$s$$$ of $$$n-1$$$ characters, which represents the characters written out by Monocarp (in the order he wrote them out). You have to process $$$m$$$ queries to the string. Each query has the following format:  $$$i$$$ $$$c$$$ — replace $$$s_i$$$ with the character $$$c$$$. Both before processing the queries and after each query, you have to calculate the number of different ways to order the integers $$$1, 2, 3, \\dots, n$$$ such that, if Monocarp inserts the integers into the set in that order, he gets the string $$$s$$$. Since the answers might be large, print them modulo $$$998244353$$$."
  },
  {
    "title": "Decreasing String",
    "url": "https://codeforces.com/problemset/problem/1886/C",
    "description": "Recall that string $$$a$$$ is lexicographically smaller than string $$$b$$$ if $$$a$$$ is a prefix of $$$b$$$ (and $$$a \\ne b$$$), or there exists an index $$$i$$$ ($$$1 \\le i \\le \\min(|a|, |b|)$$$) such that $$$a_i < b_i$$$, and for any index $$$j$$$ ($$$1 \\le j < i$$$) $$$a_j = b_j$$$.Consider a sequence of strings $$$s_1, s_2, \\dots, s_n$$$, each consisting of lowercase Latin letters. String $$$s_1$$$ is given explicitly, and all other strings are generated according to the following rule: to obtain the string $$$s_i$$$, a character is removed from string $$$s_{i-1}$$$ in such a way that string $$$s_i$$$ is lexicographically minimal.For example, if $$$s_1 = \\mathrm{dacb}$$$, then string $$$s_2 = \\mathrm{acb}$$$, string $$$s_3 = \\mathrm{ab}$$$, string $$$s_4 = \\mathrm{a}$$$.After that, we obtain the string $$$S = s_1 + s_2 + \\dots + s_n$$$ ($$$S$$$ is the concatenation of all strings $$$s_1, s_2, \\dots, s_n$$$).You need to output the character in position $$$pos$$$ of the string $$$S$$$ (i. e. the character $$$S_{pos}$$$)."
  },
  {
    "title": "Fear of the Dark",
    "url": "https://codeforces.com/problemset/problem/1886/B",
    "description": "Monocarp tries to get home from work. He is currently at the point $$$O = (0, 0)$$$ of a two-dimensional plane; his house is at the point $$$P = (P_x, P_y)$$$.Unfortunately, it is late in the evening, so it is very dark. Monocarp is afraid of the darkness. He would like to go home along a path illuminated by something.Thankfully, there are two lanterns, located in the points $$$A = (A_x, A_y)$$$ and $$$B = (B_x, B_y)$$$. You can choose any non-negative number $$$w$$$ and set the power of both lanterns to $$$w$$$. If a lantern's power is set to $$$w$$$, it illuminates a circle of radius $$$w$$$ centered at the lantern location (including the borders of the circle).You have to choose the minimum non-negative value $$$w$$$ for the power of the lanterns in such a way that there is a path from the point $$$O$$$ to the point $$$P$$$ which is completely illuminated. You may assume that the lanterns don't interfere with Monocarp's movement.   The picture for the first two test cases "
  },
  {
    "title": "Sum of Three",
    "url": "https://codeforces.com/problemset/problem/1886/A",
    "description": "Monocarp has an integer $$$n$$$.He wants to represent his number as a sum of three distinct positive integers $$$x$$$, $$$y$$$, and $$$z$$$. Additionally, Monocarp wants none of the numbers $$$x$$$, $$$y$$$, and $$$z$$$ to be divisible by $$$3$$$.Your task is to help Monocarp to find any valid triplet of distinct positive integers $$$x$$$, $$$y$$$, and $$$z$$$, or report that such a triplet does not exist."
  },
  {
    "title": "Deterministic Scheduling for Extended Reality over 5G and Beyond",
    "url": "https://codeforces.com/problemset/problem/1885/A",
    "description": "Background Extended reality (XR) service is a promising application for future communications. In wireless communications, XR data are transmitted over radio between base stations and mobile terminals. A region is usually divided into multiple cells, each of which is equipped with a base station to serve users. One base station usually serves multiple users, and multiple base stations may serve one user at the same time.TaskThe task of this competition is to design a scheduling algorithm for XR service. By properly allocating radio resources, we want to maximize the number of XR data frames that are successfully transmitted. A diagram is provided below for illustration: The transmission of a data frame is failed when it cannot be completely transmitted during the permitted transmission time window.      Therefore, the objective of this task can be modeled as: $$$$$$ \\mathcal{P}: \\max \\sum_j f_j \\tag{1} $$$$$$ $$$$$$ f_j=\\left\\{\\begin{array}{c} 1, g_j \\geq T B S_j \\\\ 0, g_j< T B S_j \\end{array}\\right. \\tag{2} $$$$$$ Here, $$$f_j$$$ represents the transmission result of the $$$j$$$-th frame: when the actual transmitted bits $$$g_j$$$ (computed via (5)) is not less than the size of the frame, i.e., $$$TBS_j$$$ (transport block size), the frame would be successfully transmitted so that $$$f_j=1$$$. Otherwise, $$$f_j=0$$$.To achieve better user experience, scheduling algorithm should be proposed to efficiently assign the limited radio resources:   Time domain resource, which is divided into several transmission time intervals (TTIs), each TTI corresponds to a transmission time of $$$0.5$$$ms.  Frequency domain resource, which is divided into several resource block groups (Resource Block Group, RBG), each RBG corresponds to a transmission bandwidth of $$$5760$$$ kHz.  Power domain resource: each cell has a fixed maximum transmission power to serve users. Summarily, two optimization variables are introduced to represent the scheduling result: $$$$$$ b_{r n t}^{(k)} \\in\\{0,1\\} \\tag{3} $$$$$$ $$$$$$ p_{ {rnt }}^{(k)} \\geq 0 , \\quad \\sum_r \\sum_n p_{ {rnt }}^{(k)} \\leq R, \\quad \\sum_n p_{ {rnt }}^{(k)} \\leq 4 \\tag{4} $$$$$$ Here, $$$b_{rnt}^{(k)}$$$ is a Boolean variable denoting whether the $$$r$$$-th RBG of cell $$$k$$$ is allocated to user $$$n$$$ at TTI $$$t$$$, and $$$p_{rnt}^{(k)}$$$ is a nonnegative continuous variable denoting the power allocated to user $$$n$$$ in the $$$r$$$-th RBG of cell $$$k$$$ at TTI $$$t$$$. For each TTI of each cell, the power range of each RBG is between $$$0$$$ and $$$4$$$, and the total power of all RBGs can not be larger than $$$R$$$.When the radio resources are allocated to the users, the XR data transmission can be provided for them. Assume that the $$$j$$$-th frame belongs to the $$$n$$$-th user, the actual transmitted bits for the frame, i.e., $$$g_j$$$ can be given by:$$$$$$ g_{j}= W\\times \\sum_{t=t_{0, j}}^{t_{1, j}} \\sum_k \\sum_r b_{r n t}^{(k)} \\times \\log _2\\left(1+s_{n t}^{(k)}\\right). \\tag{5} $$$$$$ Note that $$$W\\times \\mathrm{log}_2 (1+s_{nt}^{(k)} ) $$$ is the well-known Shannon formula, which represents the transmitted data volume, where $$$s_{nt}^{(k)}$$$ represents the transmission SINR (Signal-to-Interference-plus-Noise-Ratio) of user $$$n$$$ in cell $$$k$$$ at TTI $$$t$$$, and $$$W=192$$$ is the constant number of available frequency resounce elements of one RBG. $$$t_{0,j}$$$ and $$$t_{1,j}$$$ denote the start TTI and the end TTI of frame $$$j$$$, respectively. The physical meaning of Formula (5) is that the number of bits transmitted within the valid time period, $$$t_{0,j}\\sim t_{1,j}$$$, will be counted as valid transmission bits for the $$$j$$$-th frame. Finally, we give the expression of SINR, which may be complicated but corresponds to the actual physical transmission:$$$$$$ s_{nt}^{\\left( k \\right)} = {\\left( {\\prod\\limits_{r,b_{rnt}^{\\left( k \\right)} = 1} {s_{rnt}^{\\left( k \\right)}} } \\right)^{\\frac{1}{{\\sum\\nolimits_r {b_{rnt}^{\\left( k \\right)}} }}}} \\tag{6} $$$$$$ $$$$$$ s_{r n t}^{(k)}=\\frac{s_{0, r n t}^{(k)} \\times p_{r n t}^{(k)} \\times \\prod_{m \\neq n} e^{d^{(k)}_{mrn} \\times b_{r m t}^{(k)}}}{1+\\sum_{k^{\\prime} \\neq k, n^{\\prime} \\neq n} s_{0, r n t}^{(k^{\\prime})} \\times p_{r n^{\\prime} t}^{\\left(k^{\\prime}\\right)} \\times e^{-d^{(k^{\\prime})}_{n^{\\prime}rn}}} \\tag{7} $$$$$$Formula (6) shows the computation of user-level effective SINR: the transmission SINR of user $$$n$$$, i.e., $$$s_{nt}^{(k)}$$$, is the geometric mean of the SINRs of scheduled RBGs. Then, formula (7) shows the computation of RBG-level effective SINR. $$$s_{0,rnt}^{(k)}$$$ is a given constant denoting the initial SINR on RBG $$$r$$$ of cell $$$k$$$ at TTI $$$t$$$, which indicates the quality of the channel. Another given constant value $$$d^{(k)}_{mrn}$$$ represents the interference factor between user $$$m$$$ and user $$$n$$$ on RBG $$$r$$$, when user $$$m$$$ is scheduled on cell $$$k$$$. Note that $$$d^{(k)}_{mrn}=d^{(k)}_{nrm}\\le 0$$$, which reveals that scheduling multiple users on the same RBG-TTI resource will cause a decrease in the SINR of each user.To sum up, participants are required to find an efficient radio resource allocation, so that more XR data frames can be successfully transmitted. "
  },
  {
    "title": "Hard Design",
    "url": "https://codeforces.com/problemset/problem/1884/E",
    "description": "Consider an array of integers $$$b_0, b_1, \\ldots, b_{n-1}$$$. Your goal is to make all its elements equal. To do so, you can perform the following operation several (possibly, zero) times: Pick a pair of indices $$$0 \\le l \\le r \\le n-1$$$, then for each $$$l \\le i \\le r$$$ increase $$$b_i$$$ by $$$1$$$ (i. e. replace $$$b_i$$$ with $$$b_i + 1$$$). After performing this operation you receive $$$(r - l + 1)^2$$$ coins. The value $$$f(b)$$$ is defined as a pair of integers $$$(cnt, cost)$$$, where $$$cnt$$$ is the smallest number of operations required to make all elements of the array equal, and $$$cost$$$ is the largest total number of coins you can receive among all possible ways to make all elements equal within $$$cnt$$$ operations. In other words, first, you need to minimize the number of operations, second, you need to maximize the total number of coins you receive.You are given an array of integers $$$a_0, a_1, \\ldots, a_{n-1}$$$. Please, find the value of $$$f$$$ for all cyclic shifts of $$$a$$$.Formally, for each $$$0 \\le i \\le n-1$$$ you need to do the following: Let $$$c_j = a_{(j + i) \\pmod{n}}$$$ for each $$$0 \\le j \\le n-1$$$. Find $$$f(c)$$$. Since $$$cost$$$ can be very large, output it modulo $$$(10^9 + 7)$$$.Please note that under a fixed $$$cnt$$$ you need to maximize the total number of coins $$$cost$$$, not its remainder modulo $$$(10^9 + 7)$$$."
  },
  {
    "title": "Counting Rhyme",
    "url": "https://codeforces.com/problemset/problem/1884/D",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$.A pair of integers $$$(i, j)$$$, such that $$$1 \\le i < j \\le n$$$, is called good, if there does not exist an integer $$$k$$$ ($$$1 \\le k \\le n$$$) such that $$$a_i$$$ is divisible by $$$a_k$$$ and $$$a_j$$$ is divisible by $$$a_k$$$ at the same time.Please, find the number of good pairs."
  },
  {
    "title": "Medium Design",
    "url": "https://codeforces.com/problemset/problem/1884/C",
    "description": "The array $$$a_1, a_2, \\ldots, a_m$$$ is initially filled with zeroes. You are given $$$n$$$ pairwise distinct segments $$$1 \\le l_i \\le r_i \\le m$$$. You have to select an arbitrary subset of these segments (in particular, you may select an empty set). Next, you do the following:  For each $$$i = 1, 2, \\ldots, n$$$, if the segment $$$(l_i, r_i)$$$ has been selected to the subset, then for each index $$$l_i \\le j \\le r_i$$$ you increase $$$a_j$$$ by $$$1$$$ (i. e. $$$a_j$$$ is replaced by $$$a_j + 1$$$). If the segment $$$(l_i, r_i)$$$ has not been selected, the array does not change.  Next (after processing all values of $$$i = 1, 2, \\ldots, n$$$), you compute $$$\\max(a)$$$ as the maximum value among all elements of $$$a$$$. Analogously, compute $$$\\min(a)$$$ as the minimum value.  Finally, the cost of the selected subset of segments is declared as $$$\\max(a) - \\min(a)$$$.Please, find the maximum cost among all subsets of segments."
  },
  {
    "title": "Haunted House",
    "url": "https://codeforces.com/problemset/problem/1884/B",
    "description": "You are given a number in binary representation consisting of exactly $$$n$$$ bits, possibly, with leading zeroes. For example, for $$$n = 5$$$ the number $$$6$$$ will be given as $$$00110$$$, and for $$$n = 4$$$ the number $$$9$$$ will be given as $$$1001$$$.Let's fix some integer $$$i$$$ such that $$$1 \\le i \\le n$$$. In one operation you can swap any two adjacent bits in the binary representation. Your goal is to find the smallest number of operations you are required to perform to make the number divisible by $$$2^i$$$, or say that it is impossible.Please note that for each $$$1 \\le i \\le n$$$ you are solving the problem independently."
  },
  {
    "title": "Simple Design",
    "url": "https://codeforces.com/problemset/problem/1884/A",
    "description": "A positive integer is called $$$k$$$-beautiful, if the digit sum of the decimal representation of this number is divisible by $$$k^{\\dagger}$$$. For example, $$$9272$$$ is $$$5$$$-beautiful, since the digit sum of $$$9272$$$ is $$$9 + 2 + 7 + 2 = 20$$$.You are given two integers $$$x$$$ and $$$k$$$. Please find the smallest integer $$$y \\ge x$$$ which is $$$k$$$-beautiful.$$$^{\\dagger}$$$ An integer $$$n$$$ is divisible by $$$k$$$ if there exists an integer $$$m$$$ such that $$$n = k \\cdot m$$$."
  },
  {
    "title": "Dances (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1883/G2",
    "description": "This is the hard version of the problem. The only difference is that in this version $$$m \\leq 10^9$$$.You are given two arrays of integers $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$. Before applying any operations, you can reorder the elements of each array as you wish. Then, in one operation, you will perform both of the following actions, if the arrays are not empty: Choose any element from array $$$a$$$ and remove it (all remaining elements are shifted to a new array $$$a$$$), Choose any element from array $$$b$$$ and remove it (all remaining elements are shifted to a new array $$$b$$$).Let $$$k$$$ be the final size of both arrays. You need to find the minimum number of operations required to satisfy $$$a_i < b_i$$$ for all $$$1 \\leq i \\leq k$$$.This problem was too easy, so the problem author decided to make it more challenging. You are also given a positive integer $$$m$$$. Now, you need to find the sum of answers to the problem for $$$m$$$ pairs of arrays $$$(c[i], b)$$$, where $$$1 \\leq i \\leq m$$$. Array $$$c[i]$$$ is obtained from $$$a$$$ as follows: $$$c[i]_1 = i$$$, $$$c[i]_j = a_j$$$, for $$$2 \\leq j \\leq n$$$."
  },
  {
    "title": "Dances (Easy version)",
    "url": "https://codeforces.com/problemset/problem/1883/G1",
    "description": "This is the easy version of the problem. The only difference is that in this version $$$m = 1$$$.You are given two arrays of integers $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$. Before applying any operations, you can reorder the elements of each array as you wish. Then, in one operation, you will perform both of the following actions, if the arrays are not empty: Choose any element from array $$$a$$$ and remove it (all remaining elements are shifted to a new array $$$a$$$), Choose any element from array $$$b$$$ and remove it (all remaining elements are shifted to a new array $$$b$$$).Let $$$k$$$ be the final size of both arrays. You need to find the minimum number of operations required to satisfy $$$a_i < b_i$$$ for all $$$1 \\leq i \\leq k$$$.This problem was too easy, so the problem author decided to make it more challenging. You are also given a positive integer $$$m$$$. Now, you need to find the sum of answers to the problem for $$$m$$$ pairs of arrays $$$(c[i], b)$$$, where $$$1 \\leq i \\leq m$$$. Array $$$c[i]$$$ is obtained from $$$a$$$ as follows: $$$c[i]_1 = i$$$, $$$c[i]_j = a_j$$$, for $$$2 \\leq j \\leq n$$$."
  },
  {
    "title": "You Are So Beautiful",
    "url": "https://codeforces.com/problemset/problem/1883/F",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. Calculate the number of subarrays of this array $$$1 \\leq l \\leq r \\leq n$$$, such that: The array $$$b = [a_l, a_{l+1}, \\ldots, a_r]$$$ occurs in the array $$$a$$$ as a subsequence exactly once. In other words, there is exactly one way to select a set of indices $$$1 \\leq i_1 < i_2 < \\ldots < i_{r - l + 1} \\leq n$$$, such that $$$b_j = a_{i_j}$$$ for all $$$1 \\leq j \\leq r - l + 1$$$."
  },
  {
    "title": "Look Back",
    "url": "https://codeforces.com/problemset/problem/1883/E",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. You need to make it non-decreasing with the minimum number of operations. In one operation, you do the following: Choose an index $$$1 \\leq i \\leq n$$$, Set $$$a_i = a_i \\cdot 2$$$.An array $$$b_1, b_2, \\ldots, b_n$$$ is non-decreasing if $$$b_i \\leq b_{i+1}$$$ for all $$$1 \\leq i < n$$$."
  },
  {
    "title": "In Love",
    "url": "https://codeforces.com/problemset/problem/1883/D",
    "description": "Initially, you have an empty multiset of segments. You need to process $$$q$$$ operations of two types: $$$+$$$ $$$l$$$ $$$r$$$ — Add the segment $$$(l, r)$$$ to the multiset, $$$-$$$ $$$l$$$ $$$r$$$ — Remove exactly one segment $$$(l, r)$$$ from the multiset. It is guaranteed that this segment exists in the multiset.After each operation, you need to determine if there exists a pair of segments in the multiset that do not intersect. A pair of segments $$$(l, r)$$$ and $$$(a, b)$$$ do not intersect if there does not exist a point $$$x$$$ such that $$$l \\leq x \\leq r$$$ and $$$a \\leq x \\leq b$$$."
  },
  {
    "title": "Raspberries",
    "url": "https://codeforces.com/problemset/problem/1883/C",
    "description": "You are given an array of integers a1,a2,…,ana_1, a_2, \\ldots, a_n and a number kk (2≤k≤52 \\leq k \\leq 5). In one operation, you can do the following: Choose an index 1≤i≤n1 \\leq i \\leq n, Set ai=ai+1a_i = a_i + 1.Find the minimum number of operations needed to make the product of all the numbers in the array a1⋅a2⋅…⋅ana_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n divisible by kk."
  },
  {
    "title": "Chemistry",
    "url": "https://codeforces.com/problemset/problem/1883/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$, consisting of lowercase Latin letters, and an integer $$$k$$$.You need to check if it is possible to remove exactly $$$k$$$ characters from the string $$$s$$$ in such a way that the remaining characters can be rearranged to form a palindrome. Note that you can reorder the remaining characters in any way.A palindrome is a string that reads the same forwards and backwards. For example, the strings \"z\", \"aaa\", \"aba\", \"abccba\" are palindromes, while the strings \"codeforces\", \"reality\", \"ab\" are not."
  },
  {
    "title": "Morning",
    "url": "https://codeforces.com/problemset/problem/1883/A",
    "description": "You are given a four-digit pin code consisting of digits from $$$0$$$ to $$$9$$$ that needs to be entered. Initially, the cursor points to the digit $$$1$$$. In one second, you can perform exactly one of the following two actions: Press the cursor to display the current digit, Move the cursor to any adjacent digit.  The image above shows the device you are using to enter the pin code. For example, for the digit $$$5$$$, the adjacent digits are $$$4$$$ and $$$6$$$, and for the digit $$$0$$$, there is only one adjacent digit, $$$9$$$.Determine the minimum number of seconds required to enter the given four-digit pin code."
  },
  {
    "title": "Two Permutations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1882/E2",
    "description": "This is the hard version of the problem. The difference between the two versions is that you have to minimize the number of operations in this version. You can make hacks only if both versions of the problem are solved.You have two permutations$$$^{\\dagger}$$$ $$$p_{1}, p_{2}, \\ldots, p_{n}$$$ (of integers $$$1$$$ to $$$n$$$) and $$$q_{1}, q_{2}, \\ldots, q_{m}$$$ (of integers $$$1$$$ to $$$m$$$). Initially $$$p_{i}=a_{i}$$$ for $$$i=1, 2, \\ldots, n$$$, and $$$q_{j} = b_{j}$$$ for $$$j = 1, 2, \\ldots, m$$$. You can apply the following operation on the permutations several (possibly, zero) times.In one operation, $$$p$$$ and $$$q$$$ will change according to the following three steps:  You choose integers $$$i$$$, $$$j$$$ which satisfy $$$1 \\le i \\le n$$$ and $$$1 \\le j \\le m$$$.  Permutation $$$p$$$ is partitioned into three parts using $$$p_i$$$ as a pivot: the left part is formed by elements $$$p_1, p_2, \\ldots, p_{i-1}$$$ (this part may be empty), the middle part is the single element $$$p_i$$$, and the right part is $$$p_{i+1}, p_{i+2}, \\ldots, p_n$$$ (this part may be empty). To proceed, swap the left and the right parts of this partition. Formally, after this step, $$$p$$$ will become $$$p_{i+1}, p_{i+2}, \\ldots, p_{n}, p_{i}, p_{1}, p_{2}, \\ldots, p_{i-1}$$$. The elements of the newly formed $$$p$$$ will be reindexed starting from $$$1$$$.  Perform the same transformation on $$$q$$$ with index $$$j$$$. Formally, after this step, $$$q$$$ will become $$$q_{j+1}, q_{j+2}, \\ldots, q_{m}, q_{j}, q_{1}, q_{2}, \\ldots, q_{j-1}$$$. The elements of the newly formed $$$q$$$ will be reindexed starting from $$$1$$$. Your goal is to simultaneously make $$$p_{i}=i$$$ for $$$i=1, 2, \\ldots, n$$$, and $$$q_{j} = j$$$ for $$$j = 1, 2, \\ldots, m$$$.Find any way to achieve the goal using the minimum number of operations possible, or say that none exists. Please note that you have to minimize the number of operations.$$$^{\\dagger}$$$ A permutation of length $$$k$$$ is an array consisting of $$$k$$$ distinct integers from $$$1$$$ to $$$k$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$k=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Two Permutations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1882/E1",
    "description": "This is the easy version of the problem. The difference between the two versions is that you do not have to minimize the number of operations in this version. You can make hacks only if both versions of the problem are solved.You have two permutations$$$^{\\dagger}$$$ $$$p_{1}, p_{2}, \\ldots, p_{n}$$$ (of integers $$$1$$$ to $$$n$$$) and $$$q_{1}, q_{2}, \\ldots, q_{m}$$$ (of integers $$$1$$$ to $$$m$$$). Initially $$$p_{i}=a_{i}$$$ for $$$i=1, 2, \\ldots, n$$$, and $$$q_{j} = b_{j}$$$ for $$$j = 1, 2, \\ldots, m$$$. You can apply the following operation on the permutations several (possibly, zero) times.In one operation, $$$p$$$ and $$$q$$$ will change according to the following three steps:  You choose integers $$$i$$$, $$$j$$$ which satisfy $$$1 \\le i \\le n$$$ and $$$1 \\le j \\le m$$$.  Permutation $$$p$$$ is partitioned into three parts using $$$p_i$$$ as a pivot: the left part is formed by elements $$$p_1, p_2, \\ldots, p_{i-1}$$$ (this part may be empty), the middle part is the single element $$$p_i$$$, and the right part is $$$p_{i+1}, p_{i+2}, \\ldots, p_n$$$ (this part may be empty). To proceed, swap the left and the right parts of this partition. Formally, after this step, $$$p$$$ will become $$$p_{i+1}, p_{i+2}, \\ldots, p_{n}, p_{i}, p_{1}, p_{2}, \\ldots, p_{i-1}$$$. The elements of the newly formed $$$p$$$ will be reindexed starting from $$$1$$$.  Perform the same transformation on $$$q$$$ with index $$$j$$$. Formally, after this step, $$$q$$$ will become $$$q_{j+1}, q_{j+2}, \\ldots, q_{m}, q_{j}, q_{1}, q_{2}, \\ldots, q_{j-1}$$$. The elements of the newly formed $$$q$$$ will be reindexed starting from $$$1$$$. Your goal is to simultaneously make $$$p_{i}=i$$$ for $$$i=1, 2, \\ldots, n$$$, and $$$q_{j} = j$$$ for $$$j = 1, 2, \\ldots, m$$$.Find any valid way to achieve the goal using at most $$$10\\,000$$$ operations, or say that none exists. Please note that you do not have to minimize the number of operations.It can be proved that if it is possible to achieve the goal, then there exists a way to do so using at most $$$10\\,000$$$ operations.$$$^{\\dagger}$$$ A permutation of length $$$k$$$ is an array consisting of $$$k$$$ distinct integers from $$$1$$$ to $$$k$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$k=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Tree XOR",
    "url": "https://codeforces.com/problemset/problem/1882/D",
    "description": "You are given a tree with $$$n$$$ vertices labeled from $$$1$$$ to $$$n$$$. An integer $$$a_{i}$$$ is written on vertex $$$i$$$ for $$$i = 1, 2, \\ldots, n$$$. You want to make all $$$a_{i}$$$ equal by performing some (possibly, zero) spells.Suppose you root the tree at some vertex. On each spell, you can select any vertex $$$v$$$ and any non-negative integer $$$c$$$. Then for all vertices $$$i$$$ in the subtree$$$^{\\dagger}$$$ of $$$v$$$, replace $$$a_{i}$$$ with $$$a_{i} \\oplus c$$$. The cost of this spell is $$$s \\cdot c$$$, where $$$s$$$ is the number of vertices in the subtree. Here $$$\\oplus$$$ denotes the bitwise XOR operation.Let $$$m_r$$$ be the minimum possible total cost required to make all $$$a_i$$$ equal, if vertex $$$r$$$ is chosen as the root of the tree. Find $$$m_{1}, m_{2}, \\ldots, m_{n}$$$.$$$^{\\dagger}$$$ Suppose vertex $$$r$$$ is chosen as the root of the tree. Then vertex $$$i$$$ belongs to the subtree of $$$v$$$ if the simple path from $$$i$$$ to $$$r$$$ contains $$$v$$$."
  },
  {
    "title": "Card Game",
    "url": "https://codeforces.com/problemset/problem/1882/C",
    "description": "There are $$$n$$$ cards stacked in a deck. Initially, $$$a_{i}$$$ is written on the $$$i$$$-th card from the top. The value written on a card does not change.You will play a game. Initially your score is $$$0$$$. In each turn, you can do one of the following operations:   Choose an odd$$$^{\\dagger}$$$ positive integer $$$i$$$, which is not greater than the number of cards left in the deck. Remove the $$$i$$$-th card from the top of the deck and add the number written on the card to your score. The remaining cards will be reindexed starting from the top.  Choose an even$$$^{\\ddagger}$$$ positive integer $$$i$$$, which is not greater than the number of cards left in the deck. Remove the $$$i$$$-th card from the top of the deck. The remaining cards will be reindexed starting from the top.  End the game. You can end the game whenever you want, you do not have to remove all cards from the initial deck. What is the maximum score you can get when the game ends?$$$^{\\dagger}$$$ An integer $$$i$$$ is odd, if there exists an integer $$$k$$$ such that $$$i = 2k + 1$$$.$$$^{\\ddagger}$$$ An integer $$$i$$$ is even, if there exists an integer $$$k$$$ such that $$$i = 2k$$$."
  },
  {
    "title": "Sets and Union",
    "url": "https://codeforces.com/problemset/problem/1882/B",
    "description": "You have $$$n$$$ sets of integers $$$S_{1}, S_{2}, \\ldots, S_{n}$$$. We call a set $$$S$$$ attainable, if it is possible to choose some (possibly, none) of the sets $$$S_{1}, S_{2}, \\ldots, S_{n}$$$ so that $$$S$$$ is equal to their union$$$^{\\dagger}$$$. If you choose none of $$$S_{1}, S_{2}, \\ldots, S_{n}$$$, their union is an empty set.Find the maximum number of elements in an attainable $$$S$$$ such that $$$S \\neq S_{1} \\cup S_{2} \\cup \\ldots \\cup S_{n}$$$.$$$^{\\dagger}$$$ The union of sets $$$A_1, A_2, \\ldots, A_k$$$ is defined as the set of elements present in at least one of these sets. It is denoted by $$$A_1 \\cup A_2 \\cup \\ldots \\cup A_k$$$. For example, $$$\\{2, 4, 6\\} \\cup \\{2, 3\\} \\cup \\{3, 6, 7\\} = \\{2, 3, 4, 6, 7\\}$$$."
  },
  {
    "title": "Increasing Sequence",
    "url": "https://codeforces.com/problemset/problem/1882/A",
    "description": "You are given a sequence $$$a_{1}, a_{2}, \\ldots, a_{n}$$$. A sequence $$$b_{1}, b_{2}, \\ldots, b_{n}$$$ is called good, if it satisfies all of the following conditions:   $$$b_{i}$$$ is a positive integer for $$$i = 1, 2, \\ldots, n$$$;  $$$b_{i} \\neq a_{i}$$$ for $$$i = 1, 2, \\ldots, n$$$;  $$$b_{1} < b_{2} < \\ldots < b_{n}$$$.  Find the minimum value of $$$b_{n}$$$ among all good sequences $$$b_{1}, b_{2}, \\ldots, b_{n}$$$."
  },
  {
    "title": "Anya and the Mysterious String",
    "url": "https://codeforces.com/problemset/problem/1881/G",
    "description": "Anya received a string $$$s$$$ of length $$$n$$$ brought from Rome. The string $$$s$$$ consists of lowercase Latin letters and at first glance does not raise any suspicions. An instruction was attached to the string.Start of the instruction.A palindrome is a string that reads the same from left to right and right to left. For example, the strings \"anna\", \"aboba\", \"level\" are palindromes, while the strings \"gorilla\", \"banan\", \"off\" are not.A substring $$$[l \\ldots r]$$$ of string $$$s$$$ is a string $$$s_l s_{l+1} \\ldots s_{r-1} s_r$$$. For example, the substring $$$[4 \\ldots 6]$$$ of the string \"generation\" is the string \"era\".A string is called beautiful if it does not contain a substring of length at least two that is a palindrome. For example, the strings \"fox\", \"abcdef\", and \"yioy\" are beautiful, while the strings \"xyxx\", \"yikjkitrb\" are not.When an integer $$$x$$$ is added to the character $$$s_i$$$, it is replaced $$$x$$$ times with the next character in the alphabet, with \"z\" being replaced by \"a\".When an integer $$$x$$$ is added to the substring $$$[l, r]$$$ of string $$$s$$$, it becomes the string $$$s_1 s_2 \\ldots s_{l-1} (s_l + x) (s_{l+1} + x) \\ldots (s_{r-1} + x) (s_r + x) s_{r+1} \\ldots s_n$$$. For example, when the substring $$$[2, 4]$$$ of the string \"abazaba\" is added with the number $$$6$$$, the resulting string is \"ahgfaba\".End of the instruction.After reading the instruction, Anya resigned herself to the fact that she has to answer $$$m$$$ queries. The queries can be of two types:  Add the number $$$x$$$ to the substring $$$[l \\ldots r]$$$ of string $$$s$$$.  Determine whether the substring $$$[l \\ldots r]$$$ of string $$$s$$$ is beautiful. "
  },
  {
    "title": "Minimum Maximum Distance",
    "url": "https://codeforces.com/problemset/problem/1881/F",
    "description": "You have a tree with $$$n$$$ vertices, some of which are marked. A tree is a connected undirected graph without cycles.Let $$$f_i$$$ denote the maximum distance from vertex $$$i$$$ to any of the marked vertices.Your task is to find the minimum value of $$$f_i$$$ among all vertices.  For example, in the tree shown in the example, vertices $$$2$$$, $$$6$$$, and $$$7$$$ are marked. Then the array $$$f(i) = [2, 3, 2, 4, 4, 3, 3]$$$. The minimum $$$f_i$$$ is for vertices $$$1$$$ and $$$3$$$."
  },
  {
    "title": "Block Sequence",
    "url": "https://codeforces.com/problemset/problem/1881/E",
    "description": "Given a sequence of integers $$$a$$$ of length $$$n$$$.A sequence is called beautiful if it has the form of a series of blocks, each starting with its length, i.e., first comes the length of the block, and then its elements. For example, the sequences [$$$\\color{red}{3},\\ \\color{red}{3},\\ \\color{red}{4},\\ \\color{red}{5},\\ \\color{green}{2},\\ \\color{green}{6},\\ \\color{green}{1}$$$] and [$$$\\color{red}{1},\\ \\color{red}{8},\\ \\color{green}{4},\\ \\color{green}{5},\\ \\color{green}{2},\\ \\color{green}{6},\\ \\color{green}{1}$$$] are beautiful (different blocks are colored differently), while [$$$1$$$], [$$$1,\\ 4,\\ 3$$$], [$$$3,\\ 2,\\ 1$$$] are not.In one operation, you can remove any element from the sequence. What is the minimum number of operations required to make the given sequence beautiful?"
  },
  {
    "title": "Divide and Equalize",
    "url": "https://codeforces.com/problemset/problem/1881/D",
    "description": "You are given an array $$$a$$$ consisting of $$$n$$$ positive integers. You can perform the following operation on it:   Choose a pair of elements $$$a_i$$$ and $$$a_j$$$ ($$$1 \\le i, j \\le n$$$ and $$$i \\neq j$$$);  Choose one of the divisors of the integer $$$a_i$$$, i.e., an integer $$$x$$$ such that $$$a_i \\bmod x = 0$$$;  Replace $$$a_i$$$ with $$$\\frac{a_i}{x}$$$ and $$$a_j$$$ with $$$a_j \\cdot x$$$.  Determine whether it is possible to make all elements in the array the same by applying the operation a certain number of times (possibly zero).For example, let's consider the array $$$a$$$ = [$$$100, 2, 50, 10, 1$$$] with $$$5$$$ elements. Perform two operations on it:   Choose $$$a_3 = 50$$$ and $$$a_2 = 2$$$, $$$x = 5$$$. Replace $$$a_3$$$ with $$$\\frac{a_3}{x} = \\frac{50}{5} = 10$$$, and $$$a_2$$$ with $$$a_2 \\cdot x = 2 \\cdot 5 = 10$$$. The resulting array is $$$a$$$ = [$$$100, 10, 10, 10, 1$$$];  Choose $$$a_1 = 100$$$ and $$$a_5 = 1$$$, $$$x = 10$$$. Replace $$$a_1$$$ with $$$\\frac{a_1}{x} = \\frac{100}{10} = 10$$$, and $$$a_5$$$ with $$$a_5 \\cdot x = 1 \\cdot 10 = 10$$$. The resulting array is $$$a$$$ = [$$$10, 10, 10, 10, 10$$$].  After performing these operations, all elements in the array $$$a$$$ become equal to $$$10$$$."
  },
  {
    "title": "Perfect Square",
    "url": "https://codeforces.com/problemset/problem/1881/C",
    "description": "Kristina has a matrix of size $$$n$$$ by $$$n$$$, filled with lowercase Latin letters. The value of $$$n$$$ is even.She wants to change some characters so that her matrix becomes a perfect square. A matrix is called a perfect square if it remains unchanged when rotated $$$90^\\circ$$$ clockwise once.Here is an example of rotating a matrix by $$$90^\\circ$$$:    In one operation, Kristina can choose any cell and replace its value with the next character in the alphabet. If the character is equal to \"z\", its value does not change.Find the minimum number of operations required to make the matrix a perfect square.For example, if the $$$4$$$ by $$$4$$$ matrix looks like this:$$$$$$\\matrix{ a & b & b & a \\cr b & c & \\textbf{b} & b \\cr b & c & c & b\\cr a & b & b & a \\cr }$$$$$$then it is enough to apply $$$1$$$ operation to the letter b, highlighted in bold."
  },
  {
    "title": "Three Threadlets",
    "url": "https://codeforces.com/problemset/problem/1881/B",
    "description": "Once upon a time, bartender Decim found three threadlets and a pair of scissors.In one operation, Decim chooses any threadlet and cuts it into two threadlets, whose lengths are positive integers and their sum is equal to the length of the threadlet being cut.For example, he can cut a threadlet of length $$$5$$$ into threadlets of lengths $$$2$$$ and $$$3$$$, but he cannot cut it into threadlets of lengths $$$2.5$$$ and $$$2.5$$$, or lengths $$$0$$$ and $$$5$$$, or lengths $$$3$$$ and $$$4$$$.Decim can perform at most three operations. He is allowed to cut the threadlets obtained from previous cuts. Will he be able to make all the threadlets of equal length?"
  },
  {
    "title": "Don't Try to Count",
    "url": "https://codeforces.com/problemset/problem/1881/A",
    "description": "Given a string $$$x$$$ of length $$$n$$$ and a string $$$s$$$ of length $$$m$$$ ($$$n \\cdot m \\le 25$$$), consisting of lowercase Latin letters, you can apply any number of operations to the string $$$x$$$.In one operation, you append the current value of $$$x$$$ to the end of the string $$$x$$$. Note that the value of $$$x$$$ will change after this.For example, if $$$x =$$$\"aba\", then after applying operations, $$$x$$$ will change as follows: \"aba\" $$$\\rightarrow$$$ \"abaaba\" $$$\\rightarrow$$$ \"abaabaabaaba\".After what minimum number of operations $$$s$$$ will appear in $$$x$$$ as a substring? A substring of a string is defined as a contiguous segment of it."
  },
  {
    "title": "Last Man Standing",
    "url": "https://codeforces.com/problemset/problem/1879/F",
    "description": "There are $$$n$$$ heroes in a videogame. Each hero has some health value $$$h$$$ and initial armor value $$$a$$$. Let the current value of armor be $$$a_{\\mathit{cur}}$$$, initially equal to $$$a$$$.When $$$x$$$ points of damage are inflicted on a hero, the following happens: if $$$x < a_{\\mathit{cur}}$$$, then $$$x$$$ gets subtracted from $$$a_{\\mathit{cur}}$$$; otherwise, $$$1$$$ gets subtracted from $$$h$$$ and $$$a_{\\mathit{cur}}$$$ gets assigned back to $$$a$$$.In the start of the game, you choose the value $$$x$$$ (an integer strictly greater than $$$0$$$, arbitrarily large). Then you keep attacking all heroes in rounds: in one round, you inflict $$$x$$$ points of damage to all alive heroes. A hero dies when his health becomes $$$0$$$. The game ends when all heroes are dead.The last hero to die earns the number of points, equal to the number of rounds he was the only hero alive. The other heroes get $$$0$$$ points. In particular, if the last round ends with multiple heroes dying, then every hero gets $$$0$$$ points.The game is played for every possible $$$x$$$ (from $$$1$$$ to infinity). The points are reset between the games. What's the maximum number of points each hero has had?"
  },
  {
    "title": "Interactive Game with Coloring",
    "url": "https://codeforces.com/problemset/problem/1879/E",
    "description": "This is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush(stdout) in C++, system.out.flush() in Java, stdout.flush() in Python or flush(output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: https://codeforces.com/blog/entry/45307.You are given a tree on $$$n$$$ vertices; vertex $$$1$$$ is the root of the tree. For every $$$i \\in [2, n]$$$, the parent of the $$$i$$$-th vertex is $$$p_i$$$, and $$$p_i < i$$$.You have to color all edges of the tree using the minimum possible number of colors such that you can win the game on that tree (every edge should be painted into exactly one color).The game we're going to play will be conducted as follows. After you paint the edges and print their colors, the jury will place a chip into one of the vertices of the tree (except for the root). Your goal is to move this chip to the root in exactly $$$d$$$ moves, where $$$d$$$ is the distance from the root to that vertex (the distance is equal to the number of edges on the path). If the chip reaches the root in $$$d$$$ moves, you win. Otherwise, you lose.The jury won't tell you where the chip is located. You won't even know the value of $$$d$$$ in advance. However, at the start of each move, you will be told how many edges of each color are incident to the current vertex (this includes both the edge leading up the tree and the edges leading away from the root). You have to choose one of these colors, and the chip will be moved along the edge of the chosen color (if there are multiple edges with that color incident to the current vertex, the jury gets to choose one of them). After the chip is moved, you will be told the same information about the current vertex again, and the game continues, until you either reach the root, or you make $$$d$$$ moves without reaching the root.The interactor for this problem is adaptive. It means that both the starting vertex and the current vertex are not fixed and may change \"on the run\" depending on the output of your program. However, the state of the game will always be consistent with the information you are given: there will always be at least one starting vertex and at least one path of your chip from that vertex consistent with both the information about the colors you receive and the colors you've chosen during the moves."
  },
  {
    "title": "Sum of XOR Functions",
    "url": "https://codeforces.com/problemset/problem/1879/D",
    "description": "You are given an array $$$a$$$ of length $$$n$$$ consisting of non-negative integers.You have to calculate the value of $$$\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l, r) \\cdot (r - l + 1)$$$, where $$$f(l, r)$$$ is $$$a_l \\oplus a_{l+1} \\oplus \\dots \\oplus a_{r-1} \\oplus a_r$$$ (the character $$$\\oplus$$$ denotes bitwise XOR).Since the answer can be very large, print it modulo $$$998244353$$$."
  },
  {
    "title": "Make it Alternating",
    "url": "https://codeforces.com/problemset/problem/1879/C",
    "description": "You are given a binary string $$$s$$$. A binary string is a string consisting of characters 0 and/or 1.You can perform the following operation on $$$s$$$ any number of times (even zero):  choose an integer $$$i$$$ such that $$$1 \\le i \\le |s|$$$, then erase the character $$$s_i$$$. You have to make $$$s$$$ alternating, i. e. after you perform the operations, every two adjacent characters in $$$s$$$ should be different.Your goal is to calculate two values:  the minimum number of operations required to make $$$s$$$ alternating;  the number of different shortest sequences of operations that make $$$s$$$ alternating. Two sequences of operations are different if in at least one operation, the chosen integer $$$i$$$ is different in these two sequences. "
  },
  {
    "title": "Chips on the Board",
    "url": "https://codeforces.com/problemset/problem/1879/B",
    "description": "You are given a board of size $$$n \\times n$$$ ($$$n$$$ rows and $$$n$$$ colums) and two arrays of positive integers $$$a$$$ and $$$b$$$ of size $$$n$$$.Your task is to place the chips on this board so that the following condition is satisfied for every cell $$$(i, j)$$$:  there exists at least one chip in the same column or in the same row as the cell $$$(i, j)$$$. I. e. there exists a cell $$$(x, y)$$$ such that there is a chip in that cell, and either $$$x = i$$$ or $$$y = j$$$ (or both). The cost of putting a chip in the cell $$$(i, j)$$$ is equal to $$$a_i + b_j$$$. For example, for $$$n=3$$$, $$$a=[1, 4, 1]$$$ and $$$b=[3, 2, 2]$$$. One of the possible chip placements is as follows:  White squares are empty The total cost of that placement is $$$(1+3) + (1+2) + (1+2) = 10$$$.Calculate the minimum possible total cost of putting chips according to the rules above."
  },
  {
    "title": "Rigged!",
    "url": "https://codeforces.com/problemset/problem/1879/A",
    "description": "Monocarp organizes a weightlifting competition. There are $$$n$$$ athletes participating in the competition, the $$$i$$$-th athlete has strength $$$s_i$$$ and endurance $$$e_i$$$. The $$$1$$$-st athlete is Monocarp's friend Polycarp, and Monocarp really wants Polycarp to win.The competition will be conducted as follows. The jury will choose a positive (greater than zero) integer $$$w$$$, which denotes the weight of the barbell that will be used in the competition. The goal for each athlete is to lift the barbell as many times as possible. The athlete who lifts the barbell the most amount of times will be declared the winner (if there are multiple such athletes — there's no winner).If the barbell's weight $$$w$$$ is strictly greater than the strength of the $$$i$$$-th athlete $$$s_i$$$, then the $$$i$$$-th athlete will be unable to lift the barbell even one single time. Otherwise, the $$$i$$$-th athlete will be able to lift the barbell, and the number of times he does it will be equal to his endurance $$$e_i$$$.For example, suppose there are $$$4$$$ athletes with parameters $$$s_1 = 7, e_1 = 4$$$; $$$s_2 = 9, e_2 = 3$$$; $$$s_3 = 4, e_3 = 6$$$; $$$s_4 = 2, e_4 = 2$$$. If the weight of the barbell is $$$5$$$, then:  the first athlete will be able to lift the barbell $$$4$$$ times;  the second athlete will be able to lift the barbell $$$3$$$ times;  the third athlete will be unable to lift the barbell;  the fourth athlete will be unable to lift the barbell. Monocarp wants to choose $$$w$$$ in such a way that Polycarp (the $$$1$$$-st athlete) wins the competition. Help him to choose the value of $$$w$$$, or report that it is impossible."
  },
  {
    "title": "wxhtzdy ORO Tree",
    "url": "https://codeforces.com/problemset/problem/1878/G",
    "description": "After (finally) qualifying for the IOI 2023, wxhtzdy was very happy, so he decided to do what most competitive programmers do: trying to guess the problems that will be on IOI. During this process, he accidentally made a problem, which he thought was really cool.You are given a tree (a connected acyclic graph) with $$$n$$$ vertices and $$$n-1$$$ edges. Vertex $$$i$$$ ($$$1 \\le i \\le n$$$) has a value $$$a_i$$$. Lets' define $$$g(u, v)$$$ as the bitwise or of the values of all vertices on the shortest path from $$$u$$$ to $$$v$$$. For example, let's say that we want to calculate $$$g(3, 4)$$$, on the tree from the first test case in the example. On the path from $$$3$$$ to $$$4$$$ are vertices $$$3$$$, $$$1$$$, $$$4$$$. Then, $$$g(3, 4) = a_3 \\ | \\ a_1 \\ | \\ a_4$$$ (here, $$$|$$$ represents the bitwise OR operation).Also, you are given $$$q$$$ queries, and each query looks like this:You are given $$$x$$$ and $$$y$$$. Let's consider all vertices $$$z$$$ such that $$$z$$$ is on the shortest path from $$$x$$$ to $$$y$$$ (inclusive).Lets define the niceness of a vertex $$$z$$$ as the sum of the number of non-zero bits in $$$g(x, z)$$$ and the number of non-zero bits in $$$g(y, z)$$$. You need to find the maximum niceness among all vertices $$$z$$$ on the shortest path from $$$x$$$ to $$$y$$$.Since his brain is really tired after solving an output only problem on SIO (he had to do it to qualify for the IOI), he wants your help with this problem."
  },
  {
    "title": "Vasilije Loves Number Theory",
    "url": "https://codeforces.com/problemset/problem/1878/F",
    "description": "Vasilije is a smart student and his discrete mathematics teacher Sonja taught him number theory very well.He gave Ognjen a positive integer $$$n$$$.Denote $$$d(n)$$$ as the number of positive integer divisors of $$$n$$$, and denote $$$gcd(a, b)$$$ as the largest integer $$$g$$$ such that $$$a$$$ is divisible by $$$g$$$ and $$$b$$$ is divisible by $$$g$$$.After that, he gave Ognjen $$$q$$$ queries, and there are $$$2$$$ types of queries.   $$$1$$$, $$$x$$$ — set $$$n$$$ to $$$n \\cdot x$$$, and then answer the following question: does there exist a positive integer $$$a$$$ such that $$$gcd(a, n) = 1$$$, and $$$d(n \\cdot a) = n$$$?  $$$2$$$ — reset $$$n$$$ to its initial value (before any queries). Note that $$$n$$$ does not get back to its initial value after the type 1 query.Since Ognjen is afraid of number theory, Vasilije promised him that after each query, $$$d(n) \\le 10^9$$$, however, even with that constraint, he still needs your help with this problem."
  },
  {
    "title": "Iva & Pav",
    "url": "https://codeforces.com/problemset/problem/1878/E",
    "description": "Iva and Pav are a famous Serbian competitive programming couple. In Serbia, they call Pav \"papuca\" and that's why he will make all of Iva's wishes come true.Iva gave Pav an array $$$a$$$ of $$$n$$$ elements.Let's define $$$f(l, r) = a_l \\ \\& \\ a_{l+1} \\ \\& \\dots \\& \\ a_r$$$ (here $$$\\&$$$ denotes the bitwise AND operation). Note that $$$f(l, r)$$$ is not defined when $$$l>r$$$.Iva also gave Pav $$$q$$$ queries.Each query consists of 2 numbers, $$$k$$$ and $$$l$$$, and she wants Pav to find the largest index $$$r$$$ ($$$l \\le r \\le n$$$), such that $$$f(l, r) \\ge k$$$. Pav wants to solve this problem fast because he doesn't want to upset Iva. He needs your help."
  },
  {
    "title": "Reverse Madness",
    "url": "https://codeforces.com/problemset/problem/1878/D",
    "description": "You are given a string $$$s$$$ of length $$$n$$$, containing lowercase Latin letters. Next you will be given a positive integer $$$k$$$ and two arrays, $$$l$$$ and $$$r$$$ of length $$$k$$$.It is guaranteed that the following conditions hold for these 2 arrays:   $$$l_1 = 1$$$;  $$$r_k = n$$$;  $$$l_i \\le r_i$$$, for each positive integer $$$i$$$ such that $$$1 \\le i \\le k$$$;  $$$l_i = r_{i-1}+1$$$, for each positive integer $$$i$$$ such that $$$2 \\le i \\le k$$$; Now you will be given a positive integer $$$q$$$ which represents the number of modifications you need to do on $$$s$$$.Each modification is defined with one positive integer $$$x$$$:   Find an index $$$i$$$ such that $$$l_i \\le x \\le r_i$$$ (notice that such $$$i$$$ is unique).  Let $$$a=\\min(x, r_i+l_i-x)$$$ and let $$$b=\\max(x, r_i+l_i-x)$$$.  Reverse the substring of $$$s$$$ from index $$$a$$$ to index $$$b$$$. Reversing the substring $$$[a, b]$$$ of a string $$$s$$$ means to make $$$s$$$ equal to $$$s_1, s_2, \\dots, s_{a-1},\\ s_b, s_{b-1}, \\dots, s_{a+1}, s_a,\\ s_{b+1}, s_{b+2}, \\dots, s_{n-1}, s_n$$$.Print $$$s$$$ after the last modification is finished."
  },
  {
    "title": "Vasilije in Cacak",
    "url": "https://codeforces.com/problemset/problem/1878/C",
    "description": "Aca and Milovan, two fellow competitive programmers, decided to give Vasilije a problem to test his skills.Vasilije is given three positive integers: $$$n$$$, $$$k$$$, and $$$x$$$, and he has to determine if he can choose $$$k$$$ distinct integers between $$$1$$$ and $$$n$$$, such that their sum is equal to $$$x$$$.Since Vasilije is now in the weirdest city in Serbia where Aca and Milovan live, Cacak, the problem seems weird to him. So he needs your help with this problem."
  },
  {
    "title": "Aleksa and Stack",
    "url": "https://codeforces.com/problemset/problem/1878/B",
    "description": "After the Serbian Informatics Olympiad, Aleksa was very sad, because he didn't win a medal (he didn't know stack), so Vasilije came to give him an easy problem, just to make his day better.Vasilije gave Aleksa a positive integer $$$n$$$ ($$$n \\ge 3$$$) and asked him to construct a strictly increasing array of size $$$n$$$ of positive integers, such that   $$$3\\cdot a_{i+2}$$$ is not divisible by $$$a_i+a_{i+1}$$$ for each $$$i$$$ ($$$1\\le i \\le n-2$$$).  Note that a strictly increasing array $$$a$$$ of size $$$n$$$ is an array where $$$a_i < a_{i+1}$$$ for each $$$i$$$ ($$$1 \\le i \\le n-1$$$).Since Aleksa thinks he is a bad programmer now, he asked you to help him find such an array."
  },
  {
    "title": "How Much Does Daytona Cost?",
    "url": "https://codeforces.com/problemset/problem/1878/A",
    "description": "We define an integer to be the most common on a subsegment, if its number of occurrences on that subsegment is larger than the number of occurrences of any other integer in that subsegment. A subsegment of an array is a consecutive segment of elements in the array $$$a$$$.Given an array $$$a$$$ of size $$$n$$$, and an integer $$$k$$$, determine if there exists a non-empty subsegment of $$$a$$$ where $$$k$$$ is the most common element."
  },
  {
    "title": "Joyboard",
    "url": "https://codeforces.com/problemset/problem/1877/C",
    "description": "Chaneka, a gamer kid, invented a new gaming controller called joyboard. Interestingly, the joyboard she invented can only be used to play one game.The joyboard has a screen containing $$$n+1$$$ slots numbered from $$$1$$$ to $$$n+1$$$ from left to right. The $$$n+1$$$ slots are going to be filled with an array of non-negative integers $$$[a_1,a_2,a_3,\\ldots,a_{n+1}]$$$. Chaneka, as the player, must assign $$$a_{n+1}$$$ with an integer between $$$0$$$ and $$$m$$$ inclusive. Then, for each $$$i$$$ from $$$n$$$ to $$$1$$$, the value of $$$a_i$$$ will be equal to the remainder of dividing $$$a_{i+1}$$$ (the adjacent value to the right) by $$$i$$$. In other words, $$$a_i = a_{i + 1} \\bmod i$$$.Chaneka wants it such that after every slot is assigned with an integer, there are exactly $$$k$$$ distinct values in the entire screen (among all $$$n+1$$$ slots). How many valid ways are there for assigning a non-negative integer into slot $$$n+1$$$?"
  },
  {
    "title": "Goals of Victory",
    "url": "https://codeforces.com/problemset/problem/1877/A",
    "description": "There are $$$n$$$ teams in a football tournament. Each pair of teams match up once. After every match, Pak Chanek receives two integers as the result of the match, the number of goals the two teams score during the match. The efficiency of a team is equal to the total number of goals the team scores in each of its matches minus the total number of goals scored by the opponent in each of its matches.After the tournament ends, Pak Dengklek counts the efficiency of every team. Turns out that he forgot about the efficiency of one of the teams. Given the efficiency of $$$n-1$$$ teams $$$a_1,a_2,a_3,\\ldots,a_{n-1}$$$. What is the efficiency of the missing team? It can be shown that the efficiency of the missing team can be uniquely determined."
  },
  {
    "title": "Clubstep",
    "url": "https://codeforces.com/problemset/problem/1876/G",
    "description": "There is an extremely hard video game that is one of Chaneka's favourite video games. One of the hardest levels in the game is called Clubstep. Clubstep consists of $$$n$$$ parts, numbered from $$$1$$$ to $$$n$$$. Chaneka has practised the level a good amount, so currently, her familiarity value with each part $$$i$$$ is $$$a_i$$$.After this, Chaneka can do several (possibly zero) attempts on Clubstep. In each attempt, she dies on one of the $$$n$$$ parts. If an attempt dies on part $$$p$$$, that means it only successfully passes through every part $$$k$$$ for all $$$1 \\leq k \\leq p-1$$$ and it does not reach any part $$$k$$$ for all $$$p+1 \\leq k \\leq n$$$. An attempt that dies on part $$$p$$$ takes $$$p$$$ seconds.It is known that Chaneka improves much more on the part she dies on than anything else. It is also known that during an attempt, Chaneka does not get to practise that much on the parts she does not reach. So, the effect of an attempt that dies on part $$$p$$$ is as follows:   Chaneka's familiarity value with part $$$p$$$ increases by $$$2$$$.  Chaneka's familiarity value with each part $$$k$$$ for all $$$1 \\leq k \\leq p-1$$$ increases by $$$1$$$.  There will be $$$q$$$ questions. For the $$$j$$$-th question, you are given three integers $$$l_j$$$, $$$r_j$$$, and $$$x_j$$$. Then, you are asked to find out the minimum time (in seconds) for Chaneka to make it such that the familiarity value for every part $$$p$$$ ($$$l_j \\leq p \\leq r_j$$$) is at least $$$x_j$$$.Note that each question is independent, so the attempt Chaneka does on a question does not affect the familiarity values of any other questions."
  },
  {
    "title": "Indefinite Clownfish",
    "url": "https://codeforces.com/problemset/problem/1876/F",
    "description": "Pak Chanek has just bought an empty fish tank and he has been dreaming to fill it with his favourite kind of fish, clownfish. Pak Chanek likes clownfish because of their ability to change their genders on demand. Because of the size of his fish tank, Pak Chanek wants to buy exactly $$$k$$$ clownfish to fill the tank.Pak Chanek goes to the local fish shop. The shop provides $$$n$$$ clownfish numbered from $$$1$$$ to $$$n$$$, with clownfish $$$i$$$ having a size of $$$a_i$$$. Initially, every clownfish in the store does not have an assigned gender, but has the ability to be assigned to two possible clownfish genders, female or male.The store has a procedure which Pak Chanek should follow to buy clownfish. The shop owner will point at each clownfish sequentially from $$$1$$$ to $$$n$$$ and for each clownfish, she asks Pak Chanek whether to buy it or not. Each time Pak Chanek is asked, he must declare whether to buy the currently asked clownfish or not, before the shop owner moves on to the next clownfish. If Pak Chanek declares to buy the currently asked clownfish, he must also declare the gender to be assigned to that clownfish immediately. When assigning the gender for the currently asked clownfish, the following conditions must be satisfied:   If Pak Chanek assigns it to be female and he has bought a female clownfish before, then the size of the current one must be exactly $$$1$$$ bigger than the last female one.  If Pak Chanek assigns it to be male and he has bought a male clownfish before, then the size of the current one must be exactly $$$1$$$ smaller than the last male one. Pak Chanek wants to buy exactly $$$k$$$ clownfish such that:   There is at least one female clownfish and one male clownfish.  Among the $$$k$$$ clownfish Pak Chanek buys, the mean size of the female clownfish is equal to the mean size of the male clownfish. Let $$$l$$$ and $$$r$$$ respectively be the minimum and maximum index of a clownfish Pak Chanek buys. What is the minimum possible value of $$$r-l$$$?"
  },
  {
    "title": "Ball-Stackable",
    "url": "https://codeforces.com/problemset/problem/1876/E",
    "description": "With a problem title like that, there is no way this is going to be a graph problem.Chaneka has a graph with $$$n$$$ vertices and $$$n-1$$$ edges. Some of the edges are directed and some of the edges are undirected. Edge $$$i$$$ connects vertex $$$u_i$$$ to vertex $$$v_i$$$. If $$$t_i=0$$$, edge $$$i$$$ is undirected. If $$$t_i=1$$$, edge $$$i$$$ is directed in the direction from $$$u_i$$$ to $$$v_i$$$. It is known that if you make all edges undirected, the graph becomes a tree$$$^\\dagger$$$.Chaneka wants to direct all undirected edges and colour each edge (different edges can have the same colour).After doing that, suppose Chaneka starts a walk from an arbitrary vertex $$$x$$$ to an arbitrary vertex $$$y$$$ (it is possible that $$$x=y$$$) going through one or more edges. She is allowed to go through each edge either following the direction or opposite to the direction of the edge. She is also allowed to visit a vertex or an edge more than once. During the walk, Chaneka maintains a stack of balls that is initially empty before the walk. Each time Chaneka goes through an edge, she does the following:   If Chaneka goes through it in the right direction, she puts a new ball with a colour that is the same as the edge's colour to the top of the stack.  If Chaneka goes through it in the opposite direction, she removes the ball that is on the top of the stack. A walk is stackable if and only if the stack is not empty before each time Chaneka goes through an edge in the opposite direction.A walk is ball-stackable if and only if it is stackable and each time Chaneka goes through an edge in the opposite direction, the colour of the ball removed from the stack is the same as the colour of the edge traversed.Is it possible to direct all undirected edges and colour each edge such that all stackable walks are also ball-stackable? If it is possible, find a construction example that uses the maximum number of different colours among all valid ways of directing and colouring. If there are multiple such solutions, output any of them.$$$^\\dagger$$$ A tree is a connected graph with no cycles."
  },
  {
    "title": "Lexichromatography",
    "url": "https://codeforces.com/problemset/problem/1876/D",
    "description": "Pak Chanek loves his faculty, the Faculty of Computer Science, University of Indonesia (Fasilkom). He wants to play with the colours of the faculty's logo, blue and red.There is an array $$$a$$$ consisting of $$$n$$$ elements, element $$$i$$$ has a value of $$$a_i$$$. Pak Chanek wants to colour each element in the array blue or red such that these following conditions are satisfied:   If all blue elements are formed into a subsequence$$$^\\dagger$$$ and so are all the red elements, the blue subsequence is strictly less than the red subsequence lexicographically$$$^\\ddagger$$$.  Array $$$a$$$ does not have any subarray that is imbalanced. A subarray is imbalanced if and only if there is a value $$$k$$$ such that the absolute difference between the number of blue elements with value $$$k$$$ and the number of red elements with value $$$k$$$ in this subarray is $$$2$$$ or more.  Note that it is possible to colour every element of the array the same colour. How many different colourings satisfy all those conditions? Since the answer can be very big, print the answer modulo $$$998\\,244\\,353$$$. Two colourings are different if and only if there is at least one element that is blue in one colouring, but red in the other.$$$^\\dagger$$$ A subsequence of an array is a sequence that can be obtained from the array by deleting some elements (possibly none), without changing the order of the remaining elements.$$$^\\ddagger$$$ Let $$$p$$$ and $$$q$$$ be two different sequences. Sequence $$$p$$$ is said to be lexicographically less than sequence $$$q$$$ if and only if $$$p$$$ is a prefix of $$$q$$$ or there is an index $$$i$$$ such that $$$p_j=q_j$$$ holds for every $$$1\\leq j<i$$$, and $$$p_i<q_i$$$. In particular, an empty sequence is always lexicographically less than any non-empty sequence."
  },
  {
    "title": "Autosynthesis",
    "url": "https://codeforces.com/problemset/problem/1876/C",
    "description": "Chaneka writes down an array $$$a$$$ of $$$n$$$ positive integer elements. Initially, all elements are not circled. In one operation, Chaneka can circle an element. It is possible to circle the same element more than once.After doing all operations, Chaneka makes a sequence $$$r$$$ consisting of all uncircled elements of $$$a$$$ following the order of their indices.Chaneka also makes another sequence $$$p$$$ such that its length is equal to the number of operations performed and $$$p_i$$$ is the index of the element that is circled in the $$$i$$$-th operation.Chaneka wants to do several operations such that sequence $$$r$$$ is equal to sequence $$$p$$$. Help her achieve this, or report if it is impossible! Note that if there are multiple solutions, you can print any of them."
  },
  {
    "title": "Effects of Anti Pimples",
    "url": "https://codeforces.com/problemset/problem/1876/B",
    "description": "Chaneka has an array $$$[a_1,a_2,\\ldots,a_n]$$$. Initially, all elements are white. Chaneka will choose one or more different indices and colour the elements at those chosen indices black. Then, she will choose all white elements whose indices are multiples of the index of at least one black element and colour those elements green. After that, her score is the maximum value of $$$a_i$$$ out of all black and green elements.There are $$$2^n-1$$$ ways for Chaneka to choose the black indices. Find the sum of scores for all possible ways Chaneka can choose the black indices. Since the answer can be very big, print the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Helmets in Night Light",
    "url": "https://codeforces.com/problemset/problem/1876/A",
    "description": "Pak Chanek is the chief of a village named Khuntien. On one night filled with lights, Pak Chanek has a sudden and important announcement that needs to be notified to all of the $$$n$$$ residents in Khuntien.First, Pak Chanek shares the announcement directly to one or more residents with a cost of $$$p$$$ for each person. After that, the residents can share the announcement to other residents using a magical helmet-shaped device. However, there is a cost for using the helmet-shaped device. For each $$$i$$$, if the $$$i$$$-th resident has got the announcement at least once (either directly from Pak Chanek or from another resident), he/she can share the announcement to at most $$$a_i$$$ other residents with a cost of $$$b_i$$$ for each share.If Pak Chanek can also control how the residents share the announcement to other residents, what is the minimum cost for Pak Chanek to notify all $$$n$$$ residents of Khuntien about the announcement?"
  },
  {
    "title": "Jellyfish and Mex",
    "url": "https://codeforces.com/problemset/problem/1875/D",
    "description": "You are given an array of $$$n$$$ nonnegative integers $$$a_1, a_2, \\dots, a_n$$$. Let $$$m$$$ be a variable that is initialized to $$$0$$$, Jellyfish will perform the following operation $$$n$$$ times:  select an index $$$i$$$ ($$$1 \\leq i \\leq |a|$$$) and delete $$$a_i$$$ from $$$a$$$.  add $$$\\operatorname{MEX}(a)^{\\dagger}$$$ to $$$m$$$. Now Jellyfish wants to know the minimum possible final value of $$$m$$$ if he performs all the operations optimally.$$$^{\\dagger}$$$ The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:  The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Jellyfish and Green Apple",
    "url": "https://codeforces.com/problemset/problem/1875/C",
    "description": "Jellyfish has $$$n$$$ green apple pieces. Each green apple piece weighs $$$1~\\text{kg}$$$. Jellyfish wants to divide these green apple pieces equally among $$$m$$$ people.Jellyfish has a magic knife. Each time Jellyfish can choose one piece of green apple and divide it into two smaller pieces, with each piece having half the weight of the original piece.Jellyfish wants to know the minimum number of operations needed such that she can divide the green apple pieces such that the total weight of apple pieces received by each person is the same."
  },
  {
    "title": "Jellyfish and Undertale",
    "url": "https://codeforces.com/problemset/problem/1875/A",
    "description": "Flowey has planted a bomb in Snowdin!The bomb has a timer that is initially set to $$$b$$$. Every second, the timer will decrease by $$$1$$$. When the timer reaches $$$0$$$, the bomb will explode! To give the residents of Snowdin enough time to evacuate, you will need to delay the bomb from exploding for as long as possible.You have $$$n$$$ tools. Each tool can only be used at most once. If you use the $$$i$$$-th tool, the timer will increase by $$$x_i$$$. However, if the timer is changed to an integer larger than $$$a$$$, the timer will be set to $$$a$$$ due to a bug.More specifically, the following events will happen every second in the following order:  You will choose some (possibly none) of your tools that have not been used before. If you choose the $$$i$$$-th tool, and the bomb's timer is currently set to $$$c$$$, the timer will be changed to $$$\\min(c + x_i, a)$$$.  The timer decreases by $$$1$$$.  If the timer reaches $$$0$$$, the bomb explodes. Jellyfish now wants to know the maximum time in seconds until the bomb explodes if the tools are used optimally."
  },
  {
    "title": "Jellyfish and Inscryption",
    "url": "https://codeforces.com/problemset/problem/1874/G",
    "description": "Jellyfish loves playing a game called \"Inscryption\" which is played on a directed acyclic graph with $$$n$$$ vertices and $$$m$$$ edges. All edges $$$a \\to b$$$ satisfy $$$a < b$$$.You need to move from vertex $$$1$$$ to vertex $$$n$$$ along the directed edges, and then fight with the final boss.You will collect cards and props in the process.Each card has two attributes: HP and damage. If a card's HP is $$$a$$$ and its damage is $$$b$$$, then the power of the card is $$$a \\times b$$$.Each prop has only one attribute: power.In addition to vertex $$$1$$$ and vertex $$$n$$$, there are some vertices that trigger special events. The special events are:  You will get a card with $$$a$$$ HP, and $$$b$$$ damage.  If you have at least one card, choose one of your cards and increase its HP by $$$x$$$.  If you have at least one card, choose one of your cards and increase its damage by $$$y$$$.  You will get a prop with $$$w$$$ power. When you get to vertex $$$n$$$, you can choose at most one of your cards and multiply its damage by $$$10^9$$$.The final boss is very strong, so you want to maximize the sum of the power of all your cards and props. Find the maximum possible sum of power of all your cards and props if you play the game optimally."
  },
  {
    "title": "Jellyfish and OEIS",
    "url": "https://codeforces.com/problemset/problem/1874/F",
    "description": "Jellyfish always uses OEIS to solve math problems, but now she finds a problem that cannot be solved by OEIS:Count the number of permutations $$$p$$$ of $$$[1, 2, \\dots, n]$$$ such that for all $$$(l, r)$$$ such that $$$l \\leq r \\leq m_l$$$, the subarray $$$[p_l, p_{l+1}, \\dots, p_r]$$$ is not a permutation of $$$[l, l+1, \\dots, r]$$$.Since the answer may be large, you only need to find the answer modulo $$$10^9+7$$$."
  },
  {
    "title": "Jellyfish and Hack",
    "url": "https://codeforces.com/problemset/problem/1874/E",
    "description": "It is well known that quick sort works by randomly selecting a 'pivot' element from the array and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot. But Jellyfish thinks that choosing a random element is just a waste of time, so she always chooses the first element to be the pivot. The time her code needs to run can be calculated by the following pseudocode:function fun(A)    if A.length > 0        let L[1 ... L.length] and R[1 ... R.length] be new arrays        L.length = R.length = 0        for i = 2 to A.length            if A[i] < A[1]                L.length = L.length + 1                L[L.length] = A[i]            else                R.length = R.length + 1                R[R.length] = A[i]        return A.length + fun(L) + fun(R)    else        return 0Now you want to show her that her code is slow. When the function $$$\\mathrm{fun(A)}$$$ is greater than or equal to $$$lim$$$, her code will get $$$\\text{Time Limit Exceeded}$$$. You want to know how many distinct permutations $$$P$$$ of $$$[1, 2, \\dots, n]$$$ satisfies $$$\\mathrm{fun(P)} \\geq lim$$$. Because the answer may be large, you will only need to find the answer modulo $$$10^9+7$$$."
  },
  {
    "title": "Jellyfish and Miku",
    "url": "https://codeforces.com/problemset/problem/1874/D",
    "description": "There are $$$n + 1$$$ cities with numbers from $$$0$$$ to $$$n$$$, connected by $$$n$$$ roads. The $$$i$$$-th $$$(1 \\leq i \\leq n)$$$ road connects city $$$i-1$$$ and city $$$i$$$ bi-directionally. After Jellyfish flew back to city $$$0$$$, she found out that she had left her Miku fufu in city $$$n$$$.Each road has a positive integer level of beauty. Denote the beauty of the $$$i$$$-th road as $$$a_i$$$.Jellyfish is trying to find her fufu. Because of her poor sense of direction, she doesn't know which way to go. Every day, she randomly chooses a road connected to the city she currently is in and traverses it. Let $$$s$$$ be the sum of the beauty of the roads connected to the current city. For each road connected to the current city, Jellyfish will traverse the road with a probability of $$$\\frac x s$$$, where $$$x$$$ is the beauty of the road, reaching the city on the other side of the road.Jellyfish will start at city $$$0$$$, and she will get only her fufu back when she reaches city $$$n$$$.You want to choose the beauty of the roads such that the expected number of days Jellyfish takes to find her fufu will be the minimum possible. However, due to limited funding, the sum of beauties of all roads must be less than or equal to $$$m$$$. Find the minimum expected number of days Jellyfish needs to get her fufu back if the beauty of the roads is chosen optimally."
  },
  {
    "title": "Jellyfish and EVA",
    "url": "https://codeforces.com/problemset/problem/1874/C",
    "description": "Monsters have invaded the town again! Asuka invites her good friend, Jellyfish, to drive EVA with her.There are $$$n$$$ cities in the town. All the monsters are in city $$$n$$$. Jellyfish and Asuka are currently in city $$$1$$$ and need to move to city $$$n$$$ to defeat the monsters.There are $$$m$$$ roads. The $$$i$$$-th road allows one to travel from city $$$a_i$$$ to city $$$b_i$$$. All the roads are directed. That is, one cannot travel from city $$$b_i$$$ to $$$a_i$$$ using the $$$i$$$-th road. Interestingly, all roads satisfy $$$a_i<b_i$$$.Driving EVA requires two people to work together. However, Asuka and Jellyfish have not done any training together before.Suppose that EVA is currently in city $$$u$$$. Jellyfish and Asuka will both choose an undestroyed road that starts at city $$$u$$$. Suppose Jellyfish and Asuka choose roads that end at cities $$$v_1$$$ and $$$v_2$$$ respectively. If $$$v_1 = v_2$$$, EVA moves to city $$$v_1$$$ successfully. Otherwise, EVA stays in city $$$u$$$ and both roads that they have chosen will be destroyed.It is possible that EVA is currently in city $$$u$$$ ($$$u \\neq n$$$) and there are no undestroyed roads that start at city $$$u$$$. In that case, the mission will be a failure. Otherwise, if they reach city $$$n$$$ in the end, the mission is considered a success.Every time they choose the roads, Jellyfish knows that Asuka will choose a road randomly. Now, Jellyfish wants to know, if she chooses the roads optimally, what is the maximum probability of the mission being successful."
  },
  {
    "title": "Jellyfish and Math",
    "url": "https://codeforces.com/problemset/problem/1874/B",
    "description": "Jellyfish is given the non-negative integers $$$a$$$, $$$b$$$, $$$c$$$, $$$d$$$ and $$$m$$$. Initially $$$(x,y)=(a,b)$$$. Jellyfish wants to do several operations so that $$$(x,y)=(c,d)$$$.For each operation, she can do one of the following:  $$$x := x\\,\\&\\,y$$$,  $$$x := x\\,|\\,y$$$,  $$$y := x \\oplus y$$$,  $$$y := y \\oplus m$$$. Here $$$\\&$$$ denotes the bitwise AND operation, $$$|$$$ denotes the bitwise OR operation and $$$\\oplus$$$ denotes the bitwise XOR operation.Now Jellyfish asks you for the minimum number of operations such that $$$(x,y)=(c,d)$$$."
  },
  {
    "title": "Jellyfish and Game",
    "url": "https://codeforces.com/problemset/problem/1874/A",
    "description": "Jellyfish has $$$n$$$ green apples with values $$$a_1, a_2, \\dots, a_n$$$ and Gellyfish has $$$m$$$ green apples with values $$$b_1,b_2,\\ldots,b_m$$$.They will play a game with $$$k$$$ rounds. For $$$i=1,2,\\ldots,k$$$ in this order, they will perform the following actions:   If $$$i$$$ is odd, Jellyfish can choose to swap one of her apples with one of Gellyfish's apples or do nothing.  If $$$i$$$ is even, Gellyfish can choose to swap one of his apples with one of Jellyfish's apples or do nothing. Both players want to maximize the sum of the values of their apples.Since you are one of the smartest people in the world, Jellyfish wants you to tell her the final sum of the value of her apples after all $$$k$$$ rounds of the game. Assume that both Jellyfish and Gellyfish play optimally to maximize the sum of values of their apples."
  },
  {
    "title": "Mad City",
    "url": "https://codeforces.com/problemset/problem/1873/H",
    "description": "Marcel and Valeriu are in the mad city, which is represented by $$$n$$$ buildings with $$$n$$$ two-way roads between them. Marcel and Valeriu start at buildings $$$a$$$ and $$$b$$$ respectively. Marcel wants to catch Valeriu, in other words, be in the same building as him or meet on the same road. During each move, they choose to go to an adjacent building of their current one or stay in the same building. Because Valeriu knows Marcel so well, Valeriu can predict where Marcel will go in the next move. Valeriu can use this information to make his move. They start and end the move at the same time.It is guaranteed that any pair of buildings is connected by some path and there is at most one road between any pair of buildings.Assuming both players play optimally, answer if Valeriu has a strategy to indefinitely escape Marcel."
  },
  {
    "title": "ABBC or BACB",
    "url": "https://codeforces.com/problemset/problem/1873/G",
    "description": "You are given a string $$$s$$$ made up of characters $$$\\texttt{A}$$$ and $$$\\texttt{B}$$$. Initially you have no coins. You can perform two types of operations:   Pick a substring$$$^\\dagger$$$ $$$\\texttt{AB}$$$, change it to $$$\\texttt{BC}$$$, and get a coin.  Pick a substring$$$^\\dagger$$$ $$$\\texttt{BA}$$$, change it to $$$\\texttt{CB}$$$, and get a coin.  What is the most number of coins you can obtain?$$$^\\dagger$$$ A substring of length $$$2$$$ is a sequence of two adjacent characters of a string."
  },
  {
    "title": "Money Trees",
    "url": "https://codeforces.com/problemset/problem/1873/F",
    "description": "Luca is in front of a row of $$$n$$$ trees. The $$$i$$$-th tree has $$$a_i$$$ fruit and height $$$h_i$$$.He wants to choose a contiguous subarray of the array $$$[h_l, h_{l+1}, \\dots, h_r]$$$ such that for each $$$i$$$ ($$$l \\leq i < r$$$), $$$h_i$$$ is divisible$$$^{\\dagger}$$$ by $$$h_{i+1}$$$. He will collect all the fruit from each of the trees in the subarray (that is, he will collect $$$a_l + a_{l+1} + \\dots + a_r$$$ fruits). However, if he collects more than $$$k$$$ fruits in total, he will get caught. What is the maximum length of a subarray Luca can choose so he doesn't get caught?$$$^{\\dagger}$$$ $$$x$$$ is divisible by $$$y$$$ if the ratio $$$\\frac{x}{y}$$$ is an integer."
  },
  {
    "title": "Building an Aquarium",
    "url": "https://codeforces.com/problemset/problem/1873/E",
    "description": "You love fish, that's why you have decided to build an aquarium. You have a piece of coral made of $$$n$$$ columns, the $$$i$$$-th of which is $$$a_i$$$ units tall. Afterwards, you will build a tank around the coral as follows:   Pick an integer $$$h \\geq 1$$$ — the height of the tank. Build walls of height $$$h$$$ on either side of the tank.  Then, fill the tank up with water so that the height of each column is $$$h$$$, unless the coral is taller than $$$h$$$; then no water should be added to this column.  For example, with $$$a=[3,1,2,4,6,2,5]$$$ and a height of $$$h=4$$$, you will end up using a total of $$$w=8$$$ units of water, as shown.    You can use at most $$$x$$$ units of water to fill up the tank, but you want to build the biggest tank possible. What is the largest value of $$$h$$$ you can select?"
  },
  {
    "title": "1D Eraser",
    "url": "https://codeforces.com/problemset/problem/1873/D",
    "description": "You are given a strip of paper $$$s$$$ that is $$$n$$$ cells long. Each cell is either black or white. In an operation you can take any $$$k$$$ consecutive cells and make them all white.Find the minimum number of operations needed to remove all black cells."
  },
  {
    "title": "Target Practice",
    "url": "https://codeforces.com/problemset/problem/1873/C",
    "description": "A $$$10 \\times 10$$$ target is made out of five \"rings\" as shown. Each ring has a different point value: the outermost ring — 1 point, the next ring — 2 points, ..., the center ring — 5 points.  Vlad fired several arrows at the target. Help him determine how many points he got."
  },
  {
    "title": "Good Kid",
    "url": "https://codeforces.com/problemset/problem/1873/B",
    "description": "Slavic is preparing a present for a friend's birthday. He has an array $$$a$$$ of $$$n$$$ digits and the present will be the product of all these digits. Because Slavic is a good kid who wants to make the biggest product possible, he wants to add $$$1$$$ to exactly one of his digits. What is the maximum product Slavic can make?"
  },
  {
    "title": "Short Sort",
    "url": "https://codeforces.com/problemset/problem/1873/A",
    "description": "There are three cards with letters $$$\\texttt{a}$$$, $$$\\texttt{b}$$$, $$$\\texttt{c}$$$ placed in a row in some order. You can do the following operation at most once:   Pick two cards, and swap them.  Is it possible that the row becomes $$$\\texttt{abc}$$$ after the operation? Output \"YES\" if it is possible, and \"NO\" otherwise."
  },
  {
    "title": "Replace With Product",
    "url": "https://codeforces.com/problemset/problem/1872/G",
    "description": "Given an array $$$a$$$ of $$$n$$$ positive integers. You need to perform the following operation exactly once: Choose $$$2$$$ integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$) and replace the subarray $$$a[l \\ldots r]$$$ with the single element: the product of all elements in the subarray $$$(a_l \\cdot \\ldots \\cdot a_r)$$$.For example, if an operation with parameters $$$l = 2, r = 4$$$ is applied to the array $$$[5, 4, 3, 2, 1]$$$, the array will turn into $$$[5, 24, 1]$$$.Your task is to maximize the sum of the array after applying this operation. Find the optimal subarray to apply this operation."
  },
  {
    "title": "Selling a Menagerie",
    "url": "https://codeforces.com/problemset/problem/1872/F",
    "description": "You are the owner of a menagerie consisting of $$$n$$$ animals numbered from $$$1$$$ to $$$n$$$. However, maintaining the menagerie is quite expensive, so you have decided to sell it!It is known that each animal is afraid of exactly one other animal. More precisely, animal $$$i$$$ is afraid of animal $$$a_i$$$ ($$$a_i \\neq i$$$). Also, the cost of each animal is known, for animal $$$i$$$ it is equal to $$$c_i$$$.You will sell all your animals in some fixed order. Formally, you will need to choose some permutation$$$^\\dagger$$$ $$$p_1, p_2, \\ldots, p_n$$$, and sell animal $$$p_1$$$ first, then animal $$$p_2$$$, and so on, selling animal $$$p_n$$$ last.When you sell animal $$$i$$$, there are two possible outcomes: If animal $$$a_i$$$ was sold before animal $$$i$$$, you receive $$$c_i$$$ money for selling animal $$$i$$$. If animal $$$a_i$$$ was not sold before animal $$$i$$$, you receive $$$2 \\cdot c_i$$$ money for selling animal $$$i$$$. (Surprisingly, animals that are currently afraid are more valuable). Your task is to choose the order of selling the animals in order to maximize the total profit. For example, if $$$a = [3, 4, 4, 1, 3]$$$, $$$c = [3, 4, 5, 6, 7]$$$, and the permutation you choose is $$$[4, 2, 5, 1, 3]$$$, then: The first animal to be sold is animal $$$4$$$. Animal $$$a_4 = 1$$$ was not sold before, so you receive $$$2 \\cdot c_4 = 12$$$ money for selling it. The second animal to be sold is animal $$$2$$$. Animal $$$a_2 = 4$$$ was sold before, so you receive $$$c_2 = 4$$$ money for selling it. The third animal to be sold is animal $$$5$$$. Animal $$$a_5 = 3$$$ was not sold before, so you receive $$$2 \\cdot c_5 = 14$$$ money for selling it. The fourth animal to be sold is animal $$$1$$$. Animal $$$a_1 = 3$$$ was not sold before, so you receive $$$2 \\cdot c_1 = 6$$$ money for selling it. The fifth animal to be sold is animal $$$3$$$. Animal $$$a_3 = 4$$$ was sold before, so you receive $$$c_3 = 5$$$ money for selling it.Your total profit, with this choice of permutation, is $$$12 + 4 + 14 + 6 + 5 = 41$$$. Note that $$$41$$$ is not the maximum possible profit in this example.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array) and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$, but $$$4$$$ is present in the array)."
  },
  {
    "title": "Data Structures Fan",
    "url": "https://codeforces.com/problemset/problem/1872/E",
    "description": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$, as well as a binary string$$$^{\\dagger}$$$ $$$s$$$ consisting of $$$n$$$ characters.Augustin is a big fan of data structures. Therefore, he asked you to implement a data structure that can answer $$$q$$$ queries. There are two types of queries: \"1 $$$l$$$ $$$r$$$\" ($$$1\\le l \\le r \\le n$$$) — replace each character $$$s_i$$$ for $$$l \\le i \\le r$$$ with its opposite. That is, replace all $$$\\texttt{0}$$$ with $$$\\texttt{1}$$$ and all $$$\\texttt{1}$$$ with $$$\\texttt{0}$$$. \"2 $$$g$$$\" ($$$g \\in \\{0, 1\\}$$$) — calculate the value of the bitwise XOR of the numbers $$$a_i$$$ for all indices $$$i$$$ such that $$$s_i = g$$$. Note that the $$$\\operatorname{XOR}$$$ of an empty set of numbers is considered to be equal to $$$0$$$.Please help Augustin to answer all the queries!For example, if $$$n = 4$$$, $$$a = [1, 2, 3, 6]$$$, $$$s = \\texttt{1001}$$$, consider the following series of queries: \"2 $$$0$$$\" — we are interested in the indices $$$i$$$ for which $$$s_i = \\tt{0}$$$, since $$$s = \\tt{1001}$$$, these are the indices $$$2$$$ and $$$3$$$, so the answer to the query will be $$$a_2 \\oplus a_3 = 2 \\oplus 3 = 1$$$. \"1 $$$1$$$ $$$3$$$\" — we need to replace the characters $$$s_1, s_2, s_3$$$ with their opposites, so before the query $$$s = \\tt{1001}$$$, and after the query: $$$s = \\tt{0111}$$$. \"2 $$$1$$$\" — we are interested in the indices $$$i$$$ for which $$$s_i = \\tt{1}$$$, since $$$s = \\tt{0111}$$$, these are the indices $$$2$$$, $$$3$$$, and $$$4$$$, so the answer to the query will be $$$a_2 \\oplus a_3 \\oplus a_4 = 2 \\oplus 3 \\oplus 6 = 7$$$. \"1 $$$2$$$ $$$4$$$\" — $$$s = \\tt{0111}$$$ $$$\\to$$$ $$$s = \\tt{0000}$$$. \"2 $$$1$$$\" — $$$s = \\tt{0000}$$$, there are no indices with $$$s_i = \\tt{1}$$$, so since the $$$\\operatorname{XOR}$$$ of an empty set of numbers is considered to be equal to $$$0$$$, the answer to this query is $$$0$$$.$$$^{\\dagger}$$$ A binary string is a string containing only characters $$$\\texttt{0}$$$ or $$$\\texttt{1}$$$."
  },
  {
    "title": "Plus Minus Permutation",
    "url": "https://codeforces.com/problemset/problem/1872/D",
    "description": "You are given $$$3$$$ integers — $$$n$$$, $$$x$$$, $$$y$$$. Let's call the score of a permutation$$$^\\dagger$$$ $$$p_1, \\ldots, p_n$$$ the following value:$$$$$$(p_{1 \\cdot x} + p_{2 \\cdot x} + \\ldots + p_{\\lfloor \\frac{n}{x} \\rfloor \\cdot x}) - (p_{1 \\cdot y} + p_{2 \\cdot y} + \\ldots + p_{\\lfloor \\frac{n}{y} \\rfloor \\cdot y})$$$$$$In other words, the score of a permutation is the sum of $$$p_i$$$ for all indices $$$i$$$ divisible by $$$x$$$, minus the sum of $$$p_i$$$ for all indices $$$i$$$ divisible by $$$y$$$.You need to find the maximum possible score among all permutations of length $$$n$$$.For example, if $$$n = 7$$$, $$$x = 2$$$, $$$y = 3$$$, the maximum score is achieved by the permutation $$$[2,\\color{red}{\\underline{\\color{black}{6}}},\\color{blue}{\\underline{\\color{black}{1}}},\\color{red}{\\underline{\\color{black}{7}}},5,\\color{blue}{\\underline{\\color{red}{\\underline{\\color{black}{4}}}}},3]$$$ and is equal to $$$(6 + 7 + 4) - (1 + 4) = 17 - 5 = 12$$$.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation (the number $$$2$$$ appears twice in the array) and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$, but the array contains $$$4$$$)."
  },
  {
    "title": "Non-coprime Split",
    "url": "https://codeforces.com/problemset/problem/1872/C",
    "description": "You are given two integers $$$l \\le r$$$. You need to find positive integers $$$a$$$ and $$$b$$$ such that the following conditions are simultaneously satisfied: $$$l \\le a + b \\le r$$$ $$$\\gcd(a, b) \\neq 1$$$or report that they do not exist.$$$\\gcd(a, b)$$$ denotes the greatest common divisor of numbers $$$a$$$ and $$$b$$$. For example, $$$\\gcd(6, 9) = 3$$$, $$$\\gcd(8, 9) = 1$$$, $$$\\gcd(4, 2) = 2$$$."
  },
  {
    "title": "The Corridor or There and Back Again",
    "url": "https://codeforces.com/problemset/problem/1872/B",
    "description": "You are in a corridor that extends infinitely to the right, divided into square rooms. You start in room $$$1$$$, proceed to room $$$k$$$, and then return to room $$$1$$$. You can choose the value of $$$k$$$. Moving to an adjacent room takes $$$1$$$ second.Additionally, there are $$$n$$$ traps in the corridor: the $$$i$$$-th trap is located in room $$$d_i$$$ and will be activated $$$s_i$$$ seconds after you enter the room $$$\\boldsymbol{d_i}$$$. Once a trap is activated, you cannot enter or exit a room with that trap.   A schematic representation of a possible corridor and your path to room $$$k$$$ and back. Determine the maximum value of $$$k$$$ that allows you to travel from room $$$1$$$ to room $$$k$$$ and then return to room $$$1$$$ safely.For instance, if $$$n=1$$$ and $$$d_1=2, s_1=2$$$, you can proceed to room $$$k=2$$$ and return safely (the trap will activate at the moment $$$1+s_1=1+2=3$$$, it can't prevent you to return back). But if you attempt to reach room $$$k=3$$$, the trap will activate at the moment $$$1+s_1=1+2=3$$$, preventing your return (you would attempt to enter room $$$2$$$ on your way back at second $$$3$$$, but the activated trap would block you). Any larger value for $$$k$$$ is also not feasible. Thus, the answer is $$$k=2$$$."
  },
  {
    "title": "Two Vessels",
    "url": "https://codeforces.com/problemset/problem/1872/A",
    "description": "You have two vessels with water. The first vessel contains $$$a$$$ grams of water, and the second vessel contains $$$b$$$ grams of water. Both vessels are very large and can hold any amount of water.You also have an empty cup that can hold up to $$$c$$$ grams of water.In one move, you can scoop up to $$$c$$$ grams of water from any vessel and pour it into the other vessel. Note that the mass of water poured in one move does not have to be an integer.What is the minimum number of moves required to make the masses of water in the vessels equal? Note that you cannot perform any actions other than the described moves."
  },
  {
    "title": "Standard Graph Problem",
    "url": "https://codeforces.com/problemset/problem/1870/H",
    "description": "You are given a weighted directed graph with $$$n$$$ vertices and $$$m$$$ edges. Each vertex in the graph can be either highlighted or normal. Initially, all vertices are normal. The cost of the graph is defined as the minimum sum of edge weights that need to be selected so that from each normal vertex one can reach at least one highlighted vertex using the selected edges only. If it is not possible to select the edges, the cost is $$$-1$$$ instead.Your task is to compute the cost of the graph after each of the $$$q$$$ queries. The queries can be of two types:   $$$+\\;v_i$$$ makes vertex $$$v_i$$$ highlighted; it is guaranteed that the vertex is normal before the query.  $$$-\\;v_i$$$ makes vertex $$$v_i$$$ normal; it is guaranteed that the vertex is highlighted before the query. Output the cost of the graph after each of the $$$q$$$ queries."
  },
  {
    "title": "MEXanization",
    "url": "https://codeforces.com/problemset/problem/1870/G",
    "description": "Let's define $$$f(S)$$$. Let $$$S$$$ be a multiset (i.e., it can contain repeated elements) of non-negative integers. In one operation, you can choose any non-empty subset of $$$S$$$ (which can also contain repeated elements), remove this subset (all elements in it) from $$$S$$$, and add the MEX of the removed subset to $$$S$$$. You can perform any number of such operations. After all the operations, $$$S$$$ should contain exactly $$$1$$$ number. $$$f(S)$$$ is the largest number that could remain in $$$S$$$ after any sequence of operations.You are given an array of non-negative integers $$$a$$$ of length $$$n$$$. For each of its $$$n$$$ prefixes, calculate $$$f(S)$$$ if $$$S$$$ is the corresponding prefix (for the $$$i$$$-th prefix, $$$S$$$ consists of the first $$$i$$$ elements of array $$$a$$$).The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:   The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Lazy Numbers",
    "url": "https://codeforces.com/problemset/problem/1870/F",
    "description": "You are given positive integers $$$n$$$ and $$$k$$$. For each number from $$$1$$$ to $$$n$$$, we write its representation in the number system with base $$$k$$$ (without leading zeros) and then sort the resulting array in lexicographic order as strings. In the sorted array, we number the elements from $$$1$$$ to $$$n$$$ (i.e., indexing starts from $$$1$$$). Find the number of values $$$i$$$ such that the representation of number $$$i$$$ is at the $$$i$$$-th position in the sorted array of representations.Examples of representations: $$$1$$$ in any number system is equal to $$$1$$$, $$$7$$$ with $$$k = 3$$$ is written as $$$21$$$, and $$$81$$$ with $$$k = 9$$$ is written as $$$100$$$."
  },
  {
    "title": "Another MEX Problem",
    "url": "https://codeforces.com/problemset/problem/1870/E",
    "description": "You are given an array of integers $$$a$$$ of size $$$n$$$. You can choose a set of non-overlapping subarrays of the given array (note that some elements may be not included in any subarray, this is allowed). For each selected subarray, calculate the MEX of its elements, and then calculate the bitwise XOR of all the obtained MEX values. What is the maximum bitwise XOR that can be obtained?The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:   The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Prefix Purchase",
    "url": "https://codeforces.com/problemset/problem/1870/D",
    "description": "You have an array $$$a$$$ of size $$$n$$$, initially filled with zeros ($$$a_1 = a_2 = \\ldots = a_n = 0$$$). You also have an array of integers $$$c$$$ of size $$$n$$$.Initially, you have $$$k$$$ coins. By paying $$$c_i$$$ coins, you can add $$$1$$$ to all elements of the array $$$a$$$ from the first to the $$$i$$$-th element ($$$a_j \\mathrel{+}= 1$$$ for all $$$1 \\leq j \\leq i$$$). You can buy any $$$c_i$$$ any number of times. A purchase is only possible if $$$k \\geq c_i$$$, meaning that at any moment $$$k \\geq 0$$$ must hold true.Find the lexicographically largest array $$$a$$$ that can be obtained.An array $$$a$$$ is lexicographically smaller than an array $$$b$$$ of the same length if and only if in the first position where $$$a$$$ and $$$b$$$ differ, the element in array $$$a$$$ is smaller than the corresponding element in $$$b$$$."
  },
  {
    "title": "Colorful Table",
    "url": "https://codeforces.com/problemset/problem/1870/C",
    "description": "You are given two integers $$$n$$$ and $$$k$$$. You are also given an array of integers $$$a_1, a_2, \\ldots, a_n$$$ of size $$$n$$$. It is known that for all $$$1 \\leq i \\leq n$$$, $$$1 \\leq a_i \\leq k$$$.Define a two-dimensional array $$$b$$$ of size $$$n \\times n$$$ as follows: $$$b_{i, j} = \\min(a_i, a_j)$$$. Represent array $$$b$$$ as a square, where the upper left cell is $$$b_{1, 1}$$$, rows are numbered from top to bottom from $$$1$$$ to $$$n$$$, and columns are numbered from left to right from $$$1$$$ to $$$n$$$. Let the color of a cell be the number written in it (for a cell with coordinates $$$(i, j)$$$, this is $$$b_{i, j}$$$).For each color from $$$1$$$ to $$$k$$$, find the smallest rectangle in the array $$$b$$$ containing all cells of this color. Output the sum of width and height of this rectangle."
  },
  {
    "title": "Friendly Arrays",
    "url": "https://codeforces.com/problemset/problem/1870/B",
    "description": "You are given two arrays of integers — $$$a_1, \\ldots, a_n$$$ of length $$$n$$$, and $$$b_1, \\ldots, b_m$$$ of length $$$m$$$. You can choose any element $$$b_j$$$ from array $$$b$$$ ($$$1 \\leq j \\leq m$$$), and for all $$$1 \\leq i \\leq n$$$ perform $$$a_i = a_i | b_j$$$. You can perform any number of such operations.After all the operations, the value of $$$x = a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_n$$$ will be calculated. Find the minimum and maximum values of $$$x$$$ that could be obtained after performing any set of operations.Above, $$$|$$$ is the bitwise OR operation, and $$$\\oplus$$$ is the bitwise XOR operation."
  },
  {
    "title": "MEXanized Array",
    "url": "https://codeforces.com/problemset/problem/1870/A",
    "description": "You are given three non-negative integers $$$n$$$, $$$k$$$, and $$$x$$$. Find the maximum possible sum of elements in an array consisting of non-negative integers, which has $$$n$$$ elements, its MEX is equal to $$$k$$$, and all its elements do not exceed $$$x$$$. If such an array does not exist, output $$$-1$$$.The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:  The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "2D Traveling",
    "url": "https://codeforces.com/problemset/problem/1869/B",
    "description": "Piggy lives on an infinite plane with the Cartesian coordinate system on it.There are $$$n$$$ cities on the plane, numbered from $$$1$$$ to $$$n$$$, and the first $$$k$$$ cities are defined as major cities. The coordinates of the $$$i$$$-th city are $$$(x_i,y_i)$$$.Piggy, as a well-experienced traveller, wants to have a relaxing trip after Zhongkao examination. Currently, he is in city $$$a$$$, and he wants to travel to city $$$b$$$ by air. You can fly between any two cities, and you can visit several cities in any order while travelling, but the final destination must be city $$$b$$$.Because of active trade between major cities, it's possible to travel by plane between them for free. Formally, the price of an air ticket $$$f(i,j)$$$ between two cities $$$i$$$ and $$$j$$$ is defined as follows:$$$$$$ f(i,j)= \\begin{cases} 0, & \\text{if cities }i \\text{ and }j \\text{ are both major cities} \\\\ |x_i-x_j|+|y_i-y_j|, & \\text{otherwise} \\end{cases} $$$$$$Piggy doesn't want to save time, but he wants to save money. So you need to tell him the minimum value of the total cost of all air tickets if he can take any number of flights."
  },
  {
    "title": "Make It Zero",
    "url": "https://codeforces.com/problemset/problem/1869/A",
    "description": "During Zhongkao examination, Reycloer met an interesting problem, but he cannot come up with a solution immediately. Time is running out! Please help him.Initially, you are given an array $$$a$$$ consisting of $$$n \\ge 2$$$ integers, and you want to change all elements in it to $$$0$$$.In one operation, you select two indices $$$l$$$ and $$$r$$$ ($$$1\\le l\\le r\\le n$$$) and do the following:  Let $$$s=a_l\\oplus a_{l+1}\\oplus \\ldots \\oplus a_r$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation;  Then, for all $$$l\\le i\\le r$$$, replace $$$a_i$$$ with $$$s$$$. You can use the operation above in any order at most $$$8$$$ times in total.Find a sequence of operations, such that after performing the operations in order, all elements in $$$a$$$ are equal to $$$0$$$. It can be proven that the solution always exists."
  },
  {
    "title": "LIS?",
    "url": "https://codeforces.com/problemset/problem/1868/F",
    "description": "Entering senior high school life, Tom is attracted by LIS problems, not only the Longest Increasing Subsequence problem, but also the Largest Interval Sum problem. Now he gets a really interesting problem from his friend Daniel. However, it seems too hard for him to solve it, so he asks you for help.Given an array $$$a$$$ consisting of $$$n$$$ integers.In one operation, you do the following:   Select an interval $$$[l,r]$$$ ($$$1\\le l\\le r\\le n$$$), such that the sum of the interval is the largest among all intervals in the array $$$a$$$. More formally, $$$\\displaystyle\\sum_{i=l}^r a_i=\\max_{1\\le l'\\le r'\\le n}\\sum_{i=l'}^{r'} a_i$$$. Then subtract $$$1$$$ from all elements $$$a_l,a_{l+1},\\ldots,a_r$$$. Find the minimum number of operations you need to perform to make $$$a_i<0$$$ for every $$$1\\le i\\le n$$$."
  },
  {
    "title": "Min-Sum-Max",
    "url": "https://codeforces.com/problemset/problem/1868/E",
    "description": "Tom is waiting for his results of Zhongkao examination. To ease the tense atmosphere, his friend, Daniel, decided to play a game with him. This game is called \"Divide the Array\".The game is about the array $$$a$$$ consisting of $$$n$$$ integers. Denote $$$[l,r]$$$ as the subsegment consisting of integers $$$a_l,a_{l+1},\\ldots,a_r$$$.Tom will divide the array into contiguous subsegments $$$[l_1,r_1],[l_2,r_2],\\ldots,[l_m,r_m]$$$, such that each integer is in exactly one subsegment. More formally:  For all $$$1\\le i\\le m$$$, $$$1\\le l_i\\le r_i\\le n$$$;  $$$l_1=1$$$, $$$r_m=n$$$;  For all $$$1< i\\le m$$$, $$$l_i=r_{i-1}+1$$$. Denote $$$s_{i}=\\sum_{k=l_i}^{r_i} a_k$$$, that is, $$$s_i$$$ is the sum of integers in the $$$i$$$-th subsegment. For all $$$1\\le i\\le j\\le m$$$, the following condition must hold:$$$$$$ \\min_{i\\le k\\le j} s_k \\le \\sum_{k=i}^j s_k \\le \\max_{i\\le k\\le j} s_k. $$$$$$Tom believes that the more subsegments the array $$$a$$$ is divided into, the better results he will get. So he asks Daniel to find the maximum number of subsegments among all possible ways to divide the array $$$a$$$. You have to help him find it."
  },
  {
    "title": "Flower-like Pseudotree",
    "url": "https://codeforces.com/problemset/problem/1868/D",
    "description": "A pseudotree is a connected graph which has exactly one cycle and no self-loops. Note that a pseudotree may contain multiple-edges. It can be shown that a pseudotree with nn vertices always contains nn edges.After deleting all edges on the cycle in the pseudotree, a forest†^{\\dagger} will be formed. It can be shown that each tree in the forest will contain exactly one vertex which is on cycle before removing the edges. If all trees in the forest have the same depth‡^{\\ddagger} when picking the vertex on cycle as root, we call the original pseudotree flower-like.Our friend sszcdjr, had a flower-like pseudotree with nn vertices and nn edges. However, he forgot all the edges in the pseudotree. Fortunately, he still remembers the degrees of vertices. Specifically, the degree of the ii-th vertex is did_i.You have to help sszcdjr construct a possible flower-like pseudotree with nn vertices, where the degree of the ii-th vertex is exactly did_i, or tell him that it is impossible.†^{\\dagger} A forest is a graph in which all connectivity components are trees. A connected graph without cycles and self-loops is called a tree.‡^{\\ddagger} The depth of a tree with a root is the maximum distance from the root to the vertex of this tree."
  },
  {
    "title": "Travel Plan",
    "url": "https://codeforces.com/problemset/problem/1868/C",
    "description": "During the summer vacation after Zhongkao examination, Tom and Daniel are planning to go traveling.There are $$$n$$$ cities in their country, numbered from $$$1$$$ to $$$n$$$. And the traffic system in the country is very special. For each city $$$i$$$ ($$$1 \\le i \\le n$$$), there is  a road between city $$$i$$$ and $$$2i$$$, if $$$2i\\le n$$$;  a road between city $$$i$$$ and $$$2i+1$$$, if $$$2i+1\\le n$$$. Making a travel plan, Daniel chooses some integer value between $$$1$$$ and $$$m$$$ for each city, for the $$$i$$$-th city we denote it by $$$a_i$$$.Let $$$s_{i,j}$$$ be the maximum value of cities in the simple$$$^\\dagger$$$ path between cities $$$i$$$ and $$$j$$$. The score of the travel plan is $$$\\sum_{i=1}^n\\sum_{j=i}^n s_{i,j}$$$. Tom wants to know the sum of scores of all possible travel plans. Daniel asks you to help him find it. You just need to tell him the answer modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ A simple path between cities $$$x$$$ and $$$y$$$ is a path between them that passes through each city at most once."
  },
  {
    "title": "Candy Party (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1868/B2",
    "description": "This is the hard version of the problem. The only difference is that in this version everyone must give candies to no more than one person and receive candies from no more than one person. Note that a submission cannot pass both versions of the problem at the same time. You can make hacks only if both versions of the problem are solved.After Zhongkao examination, Daniel and his friends are going to have a party. Everyone will come with some candies.There will be $$$n$$$ people at the party. Initially, the $$$i$$$-th person has $$$a_i$$$ candies. During the party, they will swap their candies. To do this, they will line up in an arbitrary order and everyone will do the following no more than once:  Choose an integer $$$p$$$ ($$$1 \\le p \\le n$$$) and a non-negative integer $$$x$$$, then give his $$$2^{x}$$$ candies to the $$$p$$$-th person. Note that one cannot give more candies than currently he has (he might receive candies from someone else before) and he cannot give candies to himself. Daniel likes fairness, so he will be happy if and only if everyone receives candies from no more than one person. Meanwhile, his friend Tom likes average, so he will be happy if and only if all the people have the same number of candies after all swaps.Determine whether there exists a way to swap candies, so that both Daniel and Tom will be happy after the swaps."
  },
  {
    "title": "Candy Party (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1868/B1",
    "description": "This is the easy version of the problem. The only difference is that in this version everyone must give candies to exactly one person and receive candies from exactly one person. Note that a submission cannot pass both versions of the problem at the same time. You can make hacks only if both versions of the problem are solved.After Zhongkao examination, Daniel and his friends are going to have a party. Everyone will come with some candies.There will be $$$n$$$ people at the party. Initially, the $$$i$$$-th person has $$$a_i$$$ candies. During the party, they will swap their candies. To do this, they will line up in an arbitrary order and everyone will do the following exactly once:  Choose an integer $$$p$$$ ($$$1 \\le p \\le n$$$) and a non-negative integer $$$x$$$, then give his $$$2^{x}$$$ candies to the $$$p$$$-th person. Note that one cannot give more candies than currently he has (he might receive candies from someone else before) and he cannot give candies to himself. Daniel likes fairness, so he will be happy if and only if everyone receives candies from exactly one person. Meanwhile, his friend Tom likes average, so he will be happy if and only if all the people have the same number of candies after all swaps.Determine whether there exists a way to swap candies, so that both Daniel and Tom will be happy after the swaps."
  },
  {
    "title": "Fill in the Matrix",
    "url": "https://codeforces.com/problemset/problem/1868/A",
    "description": "There is an empty matrix $$$M$$$ of size $$$n\\times m$$$.Zhongkao examination is over, and Daniel would like to do some puzzle games. He is going to fill in the matrix $$$M$$$ using permutations of length $$$m$$$. That is, each row of $$$M$$$ must be a permutation of length $$$m^\\dagger$$$.Define the value of the $$$i$$$-th column in $$$M$$$ as $$$v_i=\\operatorname{MEX}(M_{1,i},M_{2,i},\\ldots,M_{n,i})^\\ddagger$$$. Since Daniel likes diversity, the beauty of $$$M$$$ is $$$s=\\operatorname{MEX}(v_1,v_2,\\cdots,v_m)$$$.You have to help Daniel fill in the matrix $$$M$$$ and maximize its beauty.$$$^\\dagger$$$ A permutation of length $$$m$$$ is an array consisting of $$$m$$$ distinct integers from $$$0$$$ to $$$m-1$$$ in arbitrary order. For example, $$$[1,2,0,4,3]$$$ is a permutation, but $$$[0,1,1]$$$ is not a permutation ($$$1$$$ appears twice in the array), and $$$[0,1,3]$$$ is also not a permutation ($$$m-1=2$$$ but there is $$$3$$$ in the array).$$$^\\ddagger$$$ The $$$\\operatorname{MEX}$$$ of an array is the smallest non-negative integer that does not belong to the array. For example, $$$\\operatorname{MEX}(2,2,1)=0$$$ because $$$0$$$ does not belong to the array, and $$$\\operatorname{MEX}(0,3,1,2)=4$$$ because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ appear in the array, but $$$4$$$ does not."
  },
  {
    "title": "Most Different Tree",
    "url": "https://codeforces.com/problemset/problem/1867/F",
    "description": "Given a tree with $$$n$$$ vertices rooted at vertex $$$1$$$, denote it as $$$G$$$. Also denote $$$P(G)$$$ as the multiset of subtrees of all vertices in tree $$$G$$$. You need to find a tree $$$G'$$$ of size $$$n$$$ rooted at vertex $$$1$$$ such that the number of subtrees in $$$P(G')$$$ that are isomorphic to any subtree in $$$P(G)$$$ is minimized.A subtree of vertex $$$v$$$ is a graph that contains all vertices for which vertex $$$v$$$ lies on the path from the root of the tree to itself, as well as all edges between these vertices.Two rooted trees are considered isomorphic if it is possible to relabel the vertices of one of them so that it becomes equal to the other, with the root of the first tree receiving the number of the root of the second tree."
  },
  {
    "title": "Salyg1n and Array (hard version)",
    "url": "https://codeforces.com/problemset/problem/1867/E2",
    "description": "This is the hard version of the problem. The only difference between the versions is the limit on the number of queries. In this version, you can make no more than 57 queries. You can make hacks only if both versions of the problem are solved.This is an interactive problem!salyg1n has given you a positive integer $$$k$$$ and wants to play a game with you. He has chosen an array of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$). You must print $$$a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_n$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. You can make queries of the following type:  $$$?$$$ $$$i$$$: in response to this query, you will receive $$$a_i \\oplus a_{i + 1} \\oplus \\ldots \\oplus a_{i + k - 1}$$$. Also, after this query, the subarray $$$a_i, a_{i + 1}, \\ldots, a_{i + k - 1}$$$ will be reversed, i.e., the chosen array $$$a$$$ will become: $$$a_1, a_2, \\ldots a_{i - 1}, a_{i + k - 1}, a_{i + k - 2}, \\ldots, a_{i + 1}, a_i, a_{i + k}, \\ldots, a_n$$$. You can make no more than $$$57$$$ queries to answer the problem."
  },
  {
    "title": "Salyg1n and Array (simple version)",
    "url": "https://codeforces.com/problemset/problem/1867/E1",
    "description": "This is the simple version of the problem. The only difference between the versions is the limit on the number of queries. In this version, you can make no more than 100 queries. You can make hacks only if both versions of the problem are solved.This is an interactive problem!salyg1n has given you a positive integer $$$k$$$ and wants to play a game with you. He has chosen an array of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$). You must print $$$a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_n$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation. You can make queries of the following type:  $$$?$$$ $$$i$$$: in response to this query, you will receive $$$a_i \\oplus a_{i + 1} \\oplus \\ldots \\oplus a_{i + k - 1}$$$. Also, after this query, the subarray $$$a_i, a_{i + 1}, \\ldots, a_{i + k - 1}$$$ will be reversed, i.e., the chosen array $$$a$$$ will become: $$$a_1, a_2, \\ldots a_{i - 1}, a_{i + k - 1}, a_{i + k - 2}, \\ldots, a_{i + 1}, a_i, a_{i + k}, \\ldots, a_n$$$. You can make no more than $$$100$$$ queries to answer the problem."
  },
  {
    "title": "Cyclic Operations",
    "url": "https://codeforces.com/problemset/problem/1867/D",
    "description": "Egor has an array $$$a$$$ of length $$$n$$$, initially consisting of zeros. However, he wanted to turn it into another array $$$b$$$ of length $$$n$$$.Since Egor doesn't take easy paths, only the following operation can be used (possibly zero or several times):  choose an array $$$l$$$ of length $$$k$$$ ($$$1 \\leq l_i \\leq n$$$, all $$$l_i$$$ are distinct) and change each element $$$a_{l_i}$$$ to $$$l_{(i\\%k)+1}$$$ ($$$1 \\leq i \\leq k$$$). He became interested in whether it is possible to get the array $$$b$$$ using only these operations. Since Egor is still a beginner programmer, he asked you to help him solve this problem.The operation $$$\\%$$$ means taking the remainder, that is, $$$a\\%b$$$ is equal to the remainder of dividing the number $$$a$$$ by the number $$$b$$$."
  },
  {
    "title": "Salyg1n and the MEX Game",
    "url": "https://codeforces.com/problemset/problem/1867/C",
    "description": "This is an interactive problem!salyg1n gave Alice a set $$$S$$$ of $$$n$$$ distinct integers $$$s_1, s_2, \\ldots, s_n$$$ ($$$0 \\leq s_i \\leq 10^9$$$). Alice decided to play a game with this set against Bob. The rules of the game are as follows:  Players take turns, with Alice going first.  In one move, Alice adds one number $$$x$$$ ($$$0 \\leq x \\leq 10^9$$$) to the set $$$S$$$. The set $$$S$$$ must not contain the number $$$x$$$ at the time of the move. In one move, Bob removes one number $$$y$$$ from the set $$$S$$$. The set $$$S$$$ must contain the number $$$y$$$ at the time of the move. Additionally, the number $$$y$$$ must be strictly smaller than the last number added by Alice. The game ends when Bob cannot make a move or after $$$2 \\cdot n + 1$$$ moves (in which case Alice's move will be the last one). The result of the game is $$$\\operatorname{MEX}\\dagger(S)$$$ ($$$S$$$ at the end of the game). Alice aims to maximize the result, while Bob aims to minimize it. Let $$$R$$$ be the result when both players play optimally. In this problem, you play as Alice against the jury program playing as Bob. Your task is to implement a strategy for Alice such that the result of the game is always at least $$$R$$$.$$$\\dagger$$$ $$$\\operatorname{MEX}$$$ of a set of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the set $$$c$$$. For example, $$$\\operatorname{MEX}(\\{0, 1, 2, 4\\})$$$ $$$=$$$ $$$3$$$."
  },
  {
    "title": "XOR Palindromes",
    "url": "https://codeforces.com/problemset/problem/1867/B",
    "description": "You are given a binary string $$$s$$$ of length $$$n$$$ (a string that consists only of $$$0$$$ and $$$1$$$). A number $$$x$$$ is good if there exists a binary string $$$l$$$ of length $$$n$$$, containing $$$x$$$ ones, such that if each symbol $$$s_i$$$ is replaced by $$$s_i \\oplus l_i$$$ (where $$$\\oplus$$$ denotes the bitwise XOR operation), then the string $$$s$$$ becomes a palindrome.You need to output a binary string $$$t$$$ of length $$$n+1$$$, where $$$t_i$$$ ($$$0 \\leq i \\leq n$$$) is equal to $$$1$$$ if number $$$i$$$ is good, and $$$0$$$ otherwise.A palindrome is a string that reads the same from left to right as from right to left. For example, 01010, 1111, 0110 are palindromes."
  },
  {
    "title": "green_gold_dog, array and permutation",
    "url": "https://codeforces.com/problemset/problem/1867/A",
    "description": "green_gold_dog has an array $$$a$$$ of length $$$n$$$, and he wants to find a permutation $$$b$$$ of length $$$n$$$ such that the number of distinct numbers in the element-wise difference between array $$$a$$$ and permutation $$$b$$$ is maximized.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation (as $$$2$$$ appears twice in the array) and $$$[1,3,4]$$$ is also not a permutation (as $$$n=3$$$, but $$$4$$$ appears in the array).The element-wise difference between two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$ is an array $$$c$$$ of length $$$n$$$, where $$$c_i$$$ = $$$a_i - b_i$$$ ($$$1 \\leq i \\leq n$$$)."
  },
  {
    "title": "Mighty Rock Tower",
    "url": "https://codeforces.com/problemset/problem/1866/M",
    "description": "Pak Chanek comes up with an idea in the midst of boredom to play a game. The game is a rock tower game. There is a big rock that is used as a base. There are also $$$N$$$ small identical rocks that Pak Chanek will use to build a rock tower with a height of $$$N$$$ above the base rock.Initially, there are no small rocks that are located above the base rock. In other words, the height of the tower above the base rock is initially $$$0$$$. In one move, Pak Chanek can place one small rock onto the top of the tower which makes the height of the tower above the base rock increase by $$$1$$$. Each time Pak Chanek place one small rock, the following will happen after the small rock is placed:   Let's say $$$x$$$ is the height of the tower above the base rock right after the small rock is placed.  There is a probability of $$$P_x$$$ percent that the topmost rock falls.  If $$$x \\geq 2$$$ and the topmost rock falls, then there is another probability of $$$P_x$$$ percent that the $$$2$$$-nd topmost rock also falls.  If $$$x \\geq 3$$$ and the $$$2$$$-nd topmost rock falls, then there is another probability of $$$P_x$$$ percent that the $$$3$$$-rd topmost rock also falls.  If $$$x \\geq 4$$$ and the $$$3$$$-rd topmost rock falls, then there is another probability of $$$P_x$$$ percent that the $$$4$$$-th topmost rock also falls.  And so on. If the tower successfully reaches a height of $$$N$$$ without any rocks falling after that, then the game is ended.If given an integer array $$$[P_1, P_2, \\ldots, P_N]$$$, what is the expected value of the number of moves that Pak Chanek needs to do to end the game? It can be proven that the expected value can be represented as an simple fraction $$$\\frac{P}{Q}$$$ where $$$Q$$$ is coprime to $$$998\\,244\\,353$$$. Output the value of $$$P \\times Q^{-1}$$$ modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Lihmuf Balling",
    "url": "https://codeforces.com/problemset/problem/1866/L",
    "description": "After working at a factory (Lihmuf Sorting), Lihmuf wants to play a game with his good friend, Pak Chanek. There are $$$N$$$ boxes numbered from $$$1$$$ to $$$N$$$. The $$$i$$$-th box contains $$$i$$$ balls. Pak Chanek and Lihmuf will play a game using those boxes.There will be $$$N$$$ turns numbered from $$$1$$$ to $$$N$$$. On each turn, Pak Chanek chooses one box and takes all balls from that box, then Lihmuf does the same thing for one box he chooses (it is possible that the two chosen boxes are the same).Given an integer $$$M$$$. Before the game begins, Lihmuf must choose an integer $$$K$$$ satisfying $$$1 \\leq K \\leq M$$$. It is known that on the $$$j$$$-th turn, Pak Chanek will choose the $$$j$$$-th box, while Lihmuf will choose the $$$y$$$-th box, with $$$y=((j \\times K - 1) \\bmod N) + 1$$$. Help Lihmuf choose the correct value of $$$K$$$ so that he will get as many balls as possible! If there are more than one possible values of $$$K$$$ that result in the maximum total balls, find the minimum such value of $$$K$$$.Keep in mind that each box can be chosen more than once, but after a box is chosen for the first time, the box becomes empty."
  },
  {
    "title": "Keen Tree Calculation",
    "url": "https://codeforces.com/problemset/problem/1866/K",
    "description": "There is a tree of $$$N$$$ vertices and $$$N-1$$$ edges. The $$$i$$$-th edge connects vertices $$$U_i$$$ and $$$V_i$$$ and has a length of $$$W_i$$$.Chaneka, the owner of the tree, asks you $$$Q$$$ times. For the $$$j$$$-th question, the following is the question format:   $$$X_j$$$ $$$K_j$$$ – If each edge that contains vertex $$$X_j$$$ has its length multiplied by $$$K_j$$$, what is the diameter of the tree? Notes:   Each of Chaneka's question is independent, which means the changes in edge length do not influence the next questions.  The diameter of a tree is the maximum possible distance between two different vertices in the tree. "
  },
  {
    "title": "Jackets and Packets",
    "url": "https://codeforces.com/problemset/problem/1866/J",
    "description": "Pak Chanek has $$$N$$$ jackets that are stored in a wardrobe. Pak Chanek's wardrobe has enough room for two stacks of jackets, namely the left stack and the right stack. Initially, all $$$N$$$ jackets are in the left stack, while the right stack is empty. Initially, the $$$i$$$-th jacket from the top of the left stack has colour $$$C_i$$$.Pak Chanek wants to pack all of those jackets into some packets, such that the jackets in the same packet has the same colour. However, it is possible for two jackets with the same colour to be in different packets.Pak Chanek can do two kinds of operations:   Pak Chanek can pick any number of jackets from the top from one stack as long as the colour is the same, then take those jackets out of the stack and pack them into a packet. This packing operation takes $$$X$$$ minutes, no matter how many jackets are packed.  Pak Chanek can move one topmost jacket from one stack to the top of the other stack (possibly right to left or left to right). This moving operation takes $$$Y$$$ minutes. Determine the minimum time to pack all jackets!"
  },
  {
    "title": "Imagination Castle",
    "url": "https://codeforces.com/problemset/problem/1866/I",
    "description": "Given a chessboard of size $$$N \\times M$$$ ($$$N$$$ rows and $$$M$$$ columns). Each row is numbered from $$$1$$$ to $$$N$$$ from top to bottom and each column is numbered from $$$1$$$ to $$$M$$$ from left to right. The tile in row $$$r$$$ and column $$$c$$$ is denoted as $$$(r,c)$$$. There exists $$$K$$$ distinct special tiles on the chessboard with the $$$i$$$-th special tile being tile $$$(X_i,Y_i)$$$. It is guaranteed that tile $$$(1,1)$$$ is not a special tile.A new chess piece has been invented, which is the castle. The castle moves similarly to a rook in regular chess, but slightly differently. In one move, a castle that is on some tile can only move to another tile in the same row or in the same column, but only in the right direction or the down direction. Formally, in one move, the castle on tile $$$(r,c)$$$ can only move to tile $$$(r',c')$$$ if and only if one of the following two conditions is satisfied:   $$$r'=r$$$ and $$$c'>c$$$.  $$$c'=c$$$ and $$$r'>r$$$. Chaneka and Bhinneka will play a game. In the beginning of the game, there is a castle in tile $$$(1,1)$$$. The two players will play alternatingly with Chaneka going first. In one turn, the player on that turn must move the castle following the movement rules of the castle.If a player moves the castle to a special tile on her turn, then that player wins the game and the game ends. If on a turn, the castle cannot be moved, the player on that turn loses and the game ends.Given the size of the board and the locations of each special tile. Determine the winner of this game if Chaneka and Bhinneka plays optimally."
  },
  {
    "title": "Happy Sets",
    "url": "https://codeforces.com/problemset/problem/1866/H",
    "description": "Define a set $$$A$$$ as a child of set $$$B$$$ if and only if for each element of value $$$x$$$ that is in $$$A$$$, there exists an element of value $$$x+1$$$ that is in $$$B$$$.Given integers $$$N$$$ and $$$K$$$. In order to make Chaneka happy, you must find the number of different arrays containing $$$N$$$ sets $$$[S_1, S_2, S_3, \\ldots, S_N]$$$ such that: - Each set can only contain zero or more different integers from $$$1$$$ to $$$K$$$. - There exists a way to rearrange the order of the array of sets into $$$[S'_1, S'_2, S'_3, \\ldots, S'_N]$$$ such that $$$S'_i$$$ is a child of $$$S'_{i+1}$$$ for each $$$1\\leq i\\leq N-1$$$.Print the answer modulo $$$998\\,244\\,353$$$.Two sets are considered different if and only if there is at least one value that only occurs in one of the two sets.Two arrays of sets are considered different if and only if there is at least one index $$$i$$$ such that the sets at index $$$i$$$ in the two arrays are different."
  },
  {
    "title": "Grouped Carriages",
    "url": "https://codeforces.com/problemset/problem/1866/G",
    "description": "Pak Chanek observes that the carriages of a train is always full on morning departure hours and afternoon departure hours. Therefore, the balance between carriages is needed so that it is not too crowded in only a few carriages.A train contains $$$N$$$ carriages that are numbered from $$$1$$$ to $$$N$$$ from left to right. Carriage $$$i$$$ initially contains $$$A_i$$$ passengers. All carriages are connected by carriage doors, namely for each $$$i$$$ ($$$1\\leq i\\leq N-1$$$), carriage $$$i$$$ and carriage $$$i+1$$$ are connected by a two-way door.Each passenger can move between carriages, but train regulation regulates that for each $$$i$$$, a passenger that starts from carriage $$$i$$$ cannot go through more than $$$D_i$$$ doors.Define $$$Z$$$ as the most number of passengers in one same carriage after moving. Pak Chanek asks, what is the minimum possible value of $$$Z$$$?"
  },
  {
    "title": "Freak Joker Process",
    "url": "https://codeforces.com/problemset/problem/1866/F",
    "description": "After the success of the basketball teams formed and trained by Pak Chanek last year (Basketball Together), Pak Chanek wants to measure the performance of each player that is considered as a superstar.There are $$$N$$$ superstar players that have been trained by Pak Chanek. At the end of the season, some calculations will be made on the performance of the $$$N$$$ players using an international method. Each player has two values $$$A_i$$$ and $$$B_i$$$ where each represents the offensive and defensive value of that player.Define $$$\\text{RankA}(i)$$$ as the offensive ranking of the $$$i$$$-th player, whose value is $$$c+1$$$ with $$$c$$$ here representing the number of $$$j$$$ ($$$1 \\leq j \\leq N$$$) such that $$$A_j>A_i$$$. Define $$$\\text{RankB}(i)$$$ as the defensive ranking of the $$$i$$$-th player, whose value is $$$c+1$$$ with $$$c$$$ here representing the number of $$$j$$$ ($$$1 \\leq j \\leq N$$$) such that $$$B_j>B_i$$$.Define $$$\\text{RankOverall}(i)$$$ as the overall ranking of the $$$i$$$-th player, whose value is $$$c+1$$$ with $$$c$$$ here representing the number of $$$j$$$ ($$$1 \\leq j \\leq N$$$) such that $$$\\text{RankA}(j)+\\text{RankB}(j)<\\text{RankA}(i)+\\text{RankB}(i)$$$.During the next $$$Q$$$ days, exactly one event will happen on each day. Each event is one of the three following possibilities:  1 k c – If $$$c$$$ is +, then $$$A_k$$$ increases by $$$1$$$. If $$$c$$$ is -, then $$$A_k$$$ decreases by $$$1$$$. ($$$1\\leq k\\leq N$$$; $$$c$$$ is + or -)  2 k c – If $$$c$$$ is +, then $$$B_k$$$ increases by $$$1$$$. If $$$c$$$ is -, then $$$B_k$$$ decreases by $$$1$$$. ($$$1\\leq k\\leq N$$$; $$$c$$$ is + or -)  3 k – Pak Chanek wants to know the value of $$$\\text{RankOverall}(k)$$$ at that moment. ($$$1\\leq k\\leq N$$$) "
  },
  {
    "title": "Elevators of Tamem",
    "url": "https://codeforces.com/problemset/problem/1866/E",
    "description": "There is a building named Taman Membeku (shortened as Tamem). The building has $$$N$$$ floors numbered from $$$1$$$ to $$$N$$$ from bottom to top. The only way to move between floors in the building is to use elevators. There are $$$3$$$ elevators available in Tamem, namely elevators $$$1$$$, $$$2$$$, and $$$3$$$.Pak Chanek works as an elevator operator in Tamem. Pak Chanek will work for $$$Q$$$ days. Initially, each elevator is in floor $$$1$$$ and all elevators are on. On each day, exactly one of the following will happen:   1 x y – There is a person currently in floor $$$x$$$ who wants to go to floor $$$y$$$. ($$$1\\leq x,y\\leq N$$$; $$$x\\neq y$$$)  2 p – Elevator $$$p$$$ changes state at the start of the day. If previously it is on, then it will turn off. If previously it is off, then it will turn on. ($$$1\\leq p\\leq3$$$) For each day, Pak Chanek can control the movement of all elevators as he pleases. However, for each day where there is a person currently in floor $$$x$$$ who wants to go to floor $$$y$$$, among all elevator movements done by Pak Chanek, the following must happen:   One elevator moves to floor $$$x$$$.  The person gets into the elevator.  The elevator moves to floor $$$y$$$.  The person gets out of the elevator. For each day, Pak Chanek can only move the elevators that are currently on. Note that, since a change in state happens at the start of the day, this means that an elevator that turns off on some day starts becoming unusable from that day itself. Conversely, an elevator that turns on on some day starts becoming usable from that day itself.It is known that the electricity fee for each day is different. More specifically, on the $$$j$$$-th day, the fee needed to move one elevator up or down by one floor is $$$A_j$$$.From the start, Pak Chanek already knows the electricity fees and the sequence of events that will happen on the $$$Q$$$ days, so Pak Chanek can operate the elevators strategically. What is the minimum possible electricity fee to fulfill all needs of the people who want to move between floors in Tamem? Note: in the end, each elevator does not have to go back to floor $$$1$$$."
  },
  {
    "title": "Digital Wallet",
    "url": "https://codeforces.com/problemset/problem/1866/D",
    "description": "There are $$$N$$$ arrays, each array has $$$M$$$ positive integer elements The $$$j$$$-th element of the $$$i$$$-th array is $$$A_{i,j}$$$.Initially, Chaneka's digital wallet contains $$$0$$$ money. Given an integer $$$K$$$. Chaneka will do $$$M-K+1$$$ operations. In the $$$p$$$-th operation, Chaneka does the following procedure:   Choose any array. Let's say Chaneka chooses the $$$x$$$-th array.  Choose an index $$$y$$$ in that array such that $$$p \\leq y \\leq p+K-1$$$.  Add the value of $$$A_{x, y}$$$ to the total money in the wallet.  Change the value of $$$A_{x, y}$$$ into $$$0$$$. Determine the maximum total money that can be earned!"
  },
  {
    "title": "Completely Searching for Inversions",
    "url": "https://codeforces.com/problemset/problem/1866/C",
    "description": "Pak Chanek has a directed acyclic graph (a directed graph that does not have any cycles) containing $$$N$$$ vertices. Vertex $$$i$$$ has $$$S_i$$$ edges directed away from that vertex. The $$$j$$$-th edge of vertex $$$i$$$ that is directed away from it, is directed towards vertex $$$L_{i,j}$$$ and has an integer $$$W_{i,j}$$$ ($$$0\\leq W_{i,j}\\leq1$$$). Another information about the graph is that the graph is shaped in such a way such that each vertex can be reached from vertex $$$1$$$ via zero or more directed edges.Pak Chanek has an array $$$Z$$$ that is initially empty.Pak Chanek defines the function dfs as follows:// dfs from vertex ivoid dfs(int i) {    // iterate each edge of vertex i that is directed away from it    for(int j = 1; j <= S[i]; j++) {        Z.push_back(W[i][j]); // add the integer in the edge to the end of Z        dfs(L[i][j]); // recurse to the next vertex    }}Note that the function does not keep track of which vertices have been visited, so each vertex can be processed more than once.Let's say Pak Chanek does dfs(1) once. After that, Pak Chanek will get an array $$$Z$$$ containing some elements $$$0$$$ or $$$1$$$. Define an inversion in array $$$Z$$$ as a pair of indices $$$(x, y)$$$ ($$$x < y$$$) such that $$$Z_x > Z_y$$$. How many different inversions in $$$Z$$$ are there if Pak Chanek does dfs(1) once? Since the answer can be very big, output the answer modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Battling with Numbers",
    "url": "https://codeforces.com/problemset/problem/1866/B",
    "description": "On the trip to campus during the mid semester exam period, Chaneka thinks of two positive integers $$$X$$$ and $$$Y$$$. Since the two integers can be very big, both are represented using their prime factorisations, such that:   $$$X=A_1^{B_1}\\times A_2^{B_2}\\times\\ldots\\times A_N^{B_N}$$$ (each $$$A_i$$$ is prime, each $$$B_i$$$ is positive, and $$$A_1<A_2<\\ldots<A_N$$$)  $$$Y=C_1^{D_1}\\times C_2^{D_2}\\times\\ldots\\times C_M^{D_M}$$$ (each $$$C_j$$$ is prime, each $$$D_j$$$ is positive, and $$$C_1<C_2<\\ldots<C_M$$$) Chaneka ponders about these two integers for too long throughout the trip, so Chaneka's friend commands her \"Gece, deh!\" (move fast) in order to not be late for the exam.Because of that command, Chaneka comes up with a problem, how many pairs of positive integers $$$p$$$ and $$$q$$$ such that $$$\\text{LCM}(p, q) = X$$$ and $$$\\text{GCD}(p, q) = Y$$$. Since the answer can be very big, output the answer modulo $$$998\\,244\\,353$$$.Notes:   $$$\\text{LCM}(p, q)$$$ is the smallest positive integer that is simultaneously divisible by $$$p$$$ and $$$q$$$.  $$$\\text{GCD}(p, q)$$$ is the biggest positive integer that simultaneously divides $$$p$$$ and $$$q$$$. "
  },
  {
    "title": "Ambitious Kid",
    "url": "https://codeforces.com/problemset/problem/1866/A",
    "description": "Chaneka, Pak Chanek's child, is an ambitious kid, so Pak Chanek gives her the following problem to test her ambition.Given an array of integers $$$[A_1, A_2, A_3, \\ldots, A_N]$$$. In one operation, Chaneka can choose one element, then increase or decrease the element's value by $$$1$$$. Chaneka can do that operation multiple times, even for different elements.What is the minimum number of operations that must be done to make it such that $$$A_1 \\times A_2 \\times A_3 \\times \\ldots \\times A_N = 0$$$?"
  },
  {
    "title": "Future Dominators",
    "url": "https://codeforces.com/problemset/problem/1864/I",
    "description": "Dhruvil and amenotiomoi are sitting in different countries and chatting online. Initially, amenotiomoi has an empty board of size $$$n \\times n$$$, and Dhruvil has a sequence of integers $$$1, 2, \\ldots, n^2$$$, each number occurring exactly once. The numbers may be placed in the cells of the board, each cell is either empty or contains exactly one number.The current state of the board is called good, if there is a way of placing the remaining numbers in empty cells so that all numbers except $$$1$$$ have a neighbor with a smaller value. Two cells are neighbors if they share an edge.The rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, the columns are numbered from $$$1$$$ to $$$n$$$ from left to right. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column is denoted as $$$(x, y)$$$.To chat, amenotiomoi asks $$$q$$$ queries to Dhruvil. Each time he provides Dhruvil with an empty cell $$$(x, y)$$$. Dhruvil has to place one of the remaining numbers in this cell so that the board is still good. Among all ways to do this, he chooses the largest possible number he can place and sends this number to amenotiomoi as the answer to the query.Since amenotiomoi knows the correct answer every time, he tells Dhruvil $$$(x \\oplus k,y \\oplus k)$$$ instead of $$$(x, y)$$$, where $$$k$$$ is the answer for the previous query. If amenotiomoi is sending the first query, he considers $$$k = 0$$$. Each time Dhruvil has to decode the query and send the answer to amenotiomoi. Here $$$\\oplus$$$ denotes the bitwise XOR operation.Help Dhruvil reply to all amenotiomoi's queries."
  },
  {
    "title": "Asterism Stream",
    "url": "https://codeforces.com/problemset/problem/1864/H",
    "description": "Bogocubic is playing a game with amenotiomoi. First, Bogocubic fixed an integer $$$n$$$, and then he gave amenotiomoi an integer $$$x$$$ which is initially equal to $$$1$$$.In one move amenotiomoi performs one of the following operations with the same probability:  increase $$$x$$$ by $$$1$$$;  multiply $$$x$$$ by $$$2$$$. Bogocubic wants to find the expected number of moves amenotiomoi has to do to make $$$x$$$ greater than or equal to $$$n$$$. Help him find this number modulo $$$998\\,244\\,353$$$.Formally, let $$$M = 998\\,244\\,353$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$y$$$ that $$$0 \\le y < M$$$ and $$$y \\cdot q \\equiv p \\pmod{M}$$$."
  },
  {
    "title": "Magic Square",
    "url": "https://codeforces.com/problemset/problem/1864/G",
    "description": "Aquamoon has a Rubik's Square which can be seen as an $$$n \\times n$$$ matrix, the elements of the matrix constitute a permutation of numbers $$$1, \\ldots, n^2$$$.Aquamoon can perform two operations on the matrix:  Row shift, i.e. shift an entire row of the matrix several positions (at least $$$1$$$ and at most $$$n-1$$$) to the right. The elements that come out of the right border of the matrix are moved to the beginning of the row. For example, shifting a row $$$\\begin{pmatrix} a & b & c \\end{pmatrix}$$$ by $$$2$$$ positions would result in $$$\\begin{pmatrix} b & c & a \\end{pmatrix}$$$; Column shift, i.e. shift an entire column of the matrix several positions (at least $$$1$$$ and at most $$$n-1$$$) downwards. The elements that come out of the lower border of the matrix are moved to the beginning of the column. For example, shifting a column $$$\\begin{pmatrix} a \\\\ b \\\\ c \\end{pmatrix}$$$ by $$$2$$$ positions would result in $$$\\begin{pmatrix} b\\\\c\\\\a \\end{pmatrix}$$$. The rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, the columns are numbered from $$$1$$$ to $$$n$$$ from left to right. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column is denoted as $$$(x, y)$$$.Aquamoon can perform several (possibly, zero) operations, but she has to obey the following restrictions: each row and each column can be shifted at most once; each integer of the matrix can be moved at most twice; the offsets of any two integers moved twice cannot be the same. Formally, if integers $$$a$$$ and $$$b$$$ have been moved twice, assuming $$$a$$$ has changed its position from $$$(x_1,y_1)$$$ to $$$(x_2,y_2)$$$, and $$$b$$$ has changed its position from $$$(x_3,y_3)$$$ to $$$(x_4,y_4)$$$, then $$$x_2-x_1 \\not\\equiv x_4-x_3 \\pmod{n}$$$ or $$$y_2-y_1 \\not\\equiv y_4-y_3 \\pmod{n}$$$.Aquamoon wonders in how many ways she can transform the Rubik's Square from the given initial state to a given target state. Two ways are considered different if the sequences of applied operations are different. Since the answer can be very large, print the result modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Exotic Queries",
    "url": "https://codeforces.com/problemset/problem/1864/F",
    "description": "AquaMoon gives RiverHamster a sequence of integers $$$a_1,a_2,\\dots,a_n$$$, and RiverHamster gives you $$$q$$$ queries. Each query is expressed by two integers $$$l$$$ and $$$r$$$. For each query independently, you can take any continuous segment of the sequence and subtract an identical non-negative value from all the numbers of this segment. You can do so multiple (possibly, zero) times. However, you may not choose two intersecting segments which are not included in one another. Your goal is to convert to $$$0$$$ all numbers whose initial value was within the range $$$[l, r]$$$. You must do so in the minimum number of operations.Please note that the queries are independent, the numbers in the array are restored to their initial values between the queries.Formally, for each query, you are to find the smallest $$$m$$$ such that there exists a sequence $$$\\{(x_j,y_j,z_j)\\}_{j=1}^{m}$$$ satisfying the following conditions:  for any $$$1 \\le j \\leq m$$$, $$$z_j \\ge 0$$$ and $$$1 \\le x_j \\le y_j \\leq n$$$ (here $$$[x_j, y_j]$$$ correspond to the segment of the sequence);  for any $$$1 \\le j < k \\le m$$$, it is true that $$$[x_j,y_j]\\subseteq[x_{k},y_{k}]$$$, or $$$[x_k,y_k]\\subseteq[x_{j},y_{j}]$$$, or $$$[x_j,y_j]\\cap[x_{k},y_{k}]=\\varnothing$$$;  for any $$$1 \\le i \\le n$$$, such that $$$l \\le a_i \\leq r$$$, it is true that $$$$$${\\large a_i = \\sum\\limits_{\\substack {1 \\le j \\le m \\\\ x_j \\le i \\le y_j}} z_j. }$$$$$$ "
  },
  {
    "title": "Guess Game",
    "url": "https://codeforces.com/problemset/problem/1864/E",
    "description": "Carol has a sequence $$$s$$$ of $$$n$$$ non-negative integers. She wants to play the \"Guess Game\" with Alice and Bob.To play the game, Carol will randomly select two integer indices $$$i_a$$$ and $$$i_b$$$ within the range $$$[1, n]$$$, and set $$$a=s_{i_a}$$$, $$$b=s_{i_b}$$$. Please note that $$$i_a$$$ and $$$i_b$$$ may coincide.Carol will tell:  the value of $$$a$$$ to Alice;  the value of $$$b$$$ to Bob;  the value of $$$a \\mid b$$$ to both Alice and Bob, where $$$|$$$ denotes the bitwise OR operation. Please note that Carol will not tell any information about $$$s$$$ to either Alice or Bob.Then the guessing starts. The two players take turns making guesses, with Alice starting first. The goal of both players is to establish which of the following is true: $$$a < b$$$, $$$a > b$$$, or $$$a = b$$$.In their turn, a player can do one of the following two things:  say \"I don't know\", and pass the turn to the other player;  say \"I know\", followed by the answer \"$$$a<b$$$\", \"$$$a>b$$$\", or \"$$$a=b$$$\"; then the game ends. Alice and Bob hear what each other says, and can use this information to deduce the answer. Both Alice and Bob are smart enough and only say \"I know\" when they are completely sure.You need to calculate the expected value of the number of turns taken by players in the game. Output the answer modulo $$$998\\,244\\,353$$$.Formally, let $$$M = 998\\,244\\,353$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$."
  },
  {
    "title": "Matrix Cascade",
    "url": "https://codeforces.com/problemset/problem/1864/D",
    "description": "There is a matrix of size $$$n \\times n$$$ which consists of 0s and 1s. The rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, the columns are numbered from $$$1$$$ to $$$n$$$ from left to right. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column is denoted as $$$(x, y)$$$.AquaMoon wants to turn all elements of the matrix to 0s. In one step she can perform the following operation:  Select an arbitrary cell, let it be $$$(i, j)$$$, then invert the element in $$$(i, j)$$$ and also invert all elements in cells $$$(x, y)$$$ for $$$x > i$$$ and $$$x - i \\ge \\left|y - j\\right|$$$. To invert a value means to change it to the opposite: 0 changes to 1, 1 changes to 0. Help AquaMoon determine the minimum number of steps she need to perform to turn all elements of the matrix to 0s. We can show that an answer always exists."
  },
  {
    "title": "Divisor Chain",
    "url": "https://codeforces.com/problemset/problem/1864/C",
    "description": "You are given an integer $$$x$$$. Your task is to reduce $$$x$$$ to $$$1$$$.To do that, you can do the following operation:  select a divisor $$$d$$$ of $$$x$$$, then change $$$x$$$ to $$$x-d$$$, i.e. reduce $$$x$$$ by $$$d$$$. (We say that $$$d$$$ is a divisor of $$$x$$$ if $$$d$$$ is an positive integer and there exists an integer $$$q$$$ such that $$$x = d \\cdot q$$$.) There is an additional constraint: you cannot select the same value of $$$d$$$ more than twice.For example, for $$$x=5$$$, the following scheme is invalid because $$$1$$$ is selected more than twice: $$$5\\xrightarrow{-1}4\\xrightarrow{-1}3\\xrightarrow{-1}2\\xrightarrow{-1}1$$$. The following scheme is however a valid one: $$$5\\xrightarrow{-1}4\\xrightarrow{-2}2\\xrightarrow{-1}1$$$.Output any scheme which reduces $$$x$$$ to $$$1$$$ with at most $$$1000$$$ operations. It can be proved that such a scheme always exists."
  },
  {
    "title": "Swap and Reverse",
    "url": "https://codeforces.com/problemset/problem/1864/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$ consisting of lowercase English letters, and an integer $$$k$$$. In one step you can perform any one of the two operations below:  Pick an index $$$i$$$ ($$$1 \\le i \\le n - 2$$$) and swap $$$s_{i}$$$ and $$$s_{i+2}$$$.  Pick an index $$$i$$$ ($$$1 \\le i \\le n-k+1$$$) and reverse the order of letters formed by the range $$$[i,i+k-1]$$$ of the string. Formally, if the string currently is equal to $$$s_1\\ldots s_{i-1}s_is_{i+1}\\ldots s_{i+k-2}s_{i+k-1}s_{i+k}\\ldots s_{n-1}s_n$$$, change it to $$$s_1\\ldots s_{i-1}s_{i+k-1}s_{i+k-2}\\ldots s_{i+1}s_is_{i+k}\\ldots s_{n-1}s_n$$$. You can make as many steps as you want (possibly, zero). Your task is to find the lexicographically smallest string you can obtain after some number of steps. A string $$$a$$$ is lexicographically smaller than a string $$$b$$$ of the same length if and only if the following holds:   in the first position where $$$a$$$ and $$$b$$$ differ, the string $$$a$$$ has a letter that appears earlier in the alphabet than the corresponding letter in $$$b$$$. "
  },
  {
    "title": "Increasing and Decreasing",
    "url": "https://codeforces.com/problemset/problem/1864/A",
    "description": "You are given three integers $$$x$$$, $$$y$$$, and $$$n$$$.Your task is to construct an array $$$a$$$ consisting of $$$n$$$ integers which satisfies the following conditions:  $$$a_1=x$$$, $$$a_n=y$$$;  $$$a$$$ is strictly increasing (i.e. $$$a_1 < a_2 < \\ldots < a_n$$$);  if we denote $$$b_i=a_{i+1}-a_{i}$$$ for $$$1 \\leq i \\leq n-1$$$, then $$$b$$$ is strictly decreasing (i.e. $$$b_1 > b_2 > \\ldots > b_{n-1}$$$). If there is no such array $$$a$$$, print a single integer $$$-1$$$."
  },
  {
    "title": "Redundant Routes",
    "url": "https://codeforces.com/problemset/problem/1863/I",
    "description": "You are given a tree with $$$n$$$ vertices labeled $$$1, 2, \\ldots, n$$$. The length of a simple path in the tree is the number of vertices in it.You are to select a set of simple paths of length at least $$$2$$$ each, but you cannot simultaneously select two distinct paths contained one in another. Find the largest possible size of such a set.Formally, a set $$$S$$$ of vertices is called a route if it contains at least two vertices and coincides with the set of vertices of a simple path in the tree. A collection of distinct routes is called a timetable. A route $$$S$$$ in a timetable $$$T$$$ is called redundant if there is a different route $$$S' \\in T$$$ such that $$$S \\subset S'$$$. A timetable is called efficient if it contains no redundant routes. Find the largest possible number of routes in an efficient timetable."
  },
  {
    "title": "Goldberg Machine 3",
    "url": "https://codeforces.com/problemset/problem/1863/H",
    "description": "There is a complete rooted binary tree, that is, a rooted tree in which each vertex has either $$$0$$$ or $$$2$$$ children. The root of the tree is vertex $$$1$$$. A node without children is called a leaf. Each leaf has a hunger value, we denote the hunger value of leaf $$$v$$$ by $$$h_v$$$.Each inner vertex of the tree has a selector pointing to one of the children of the vertex.This tree accepts cookies. Before launching the process you can choose the initial state of each selector individually. The process is as follows:  Initially there are no cookies in vertices.  You insert cookies into the root one by one.  As long as the cookie is not in a leaf, it falls to the child defined by the selector in the current vertex. This selector then changes its state to the opposite one, i. e. it starts pointing to the other child of the vertex.  You stop inserting cookies when each leaf $$$v$$$ has at least $$$h_v$$$ cookies in it. In this case, we say that the tree is filled up. You have $$$q$$$ queries. Each query changes the value of $$$h_v$$$ for some leaf $$$v$$$. You need to print $$$q + 1$$$ numbers, the $$$i$$$-th of them being the minimum number of cookies required to fill up the machine after $$$(i - 1)$$$ updates if you can pick any initial state for every selector. Since these numbers may be very large, print the answers modulo $$$998\\,244\\,353$$$.Please note that you can choose the initial state of all selectors independently between queries. However, the queries themselves are not independent: when answering the $$$i$$$-th query, you should also consider the effect of queries $$$1, 2, \\ldots, i - 1$$$."
  },
  {
    "title": "Swaps",
    "url": "https://codeforces.com/problemset/problem/1863/G",
    "description": "You are given an array of integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le n$$$). You can perform the following operation several (possibly, zero) times:  pick an arbitrary $$$i$$$ and perform swap$$$(a_i, a_{a_i})$$$. How many distinct arrays is it possible to attain? Output the answer modulo $$$(10^9 + 7)$$$."
  },
  {
    "title": "Divide, XOR, and Conquer",
    "url": "https://codeforces.com/problemset/problem/1863/F",
    "description": "You are given an array of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$.In one operation you split the array into two parts: a non-empty prefix and a non-empty suffix. The value of each part is the bitwise XOR of all elements in it. Next, discard the part with the smaller value. If both parts have equal values, you can choose which one to discard. Replace the array with the remaining part.The operations are being performed until the length of the array becomes $$$1$$$. For each $$$i$$$ ($$$1 \\le i \\le n$$$), determine whether it is possible to achieve the state when only the $$$i$$$-th element (with respect to the original numbering) remains.Formally, you have two numbers $$$l$$$ and $$$r$$$, initially $$$l = 1$$$ and $$$r = n$$$. The current state of the array is $$$[a_l, a_{l+1}, \\ldots, a_r]$$$.As long as $$$l < r$$$, you apply the following operation:   Choose an arbitrary $$$k$$$ from the set $$$\\{l, l + 1, \\ldots, r - 1\\}$$$. Denote $$$x = a_l \\oplus a_{l + 1} \\oplus \\ldots \\oplus a_k$$$ and $$$y = a_{k + 1} \\oplus a_{k + 2} \\oplus \\ldots \\oplus a_{r}$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation.  If $$$x < y$$$, set $$$l = k + 1$$$.  If $$$x > y$$$, set $$$r = k$$$.  If $$$x = y$$$, either set $$$l = k + 1$$$, or set $$$r = k$$$. For each $$$i$$$ ($$$1 \\le i \\le n$$$), determine whether it is possible to achieve $$$l = r = i$$$."
  },
  {
    "title": "Speedrun",
    "url": "https://codeforces.com/problemset/problem/1863/E",
    "description": "You are playing a video game. The game has $$$n$$$ quests that need to be completed. However, the $$$j$$$-th quest can only be completed at the beginning of hour $$$h_j$$$ of a game day. The game day is $$$k$$$ hours long. The hours of each game day are numbered $$$0, 1, \\ldots, k - 1$$$. After the first day ends, a new one starts, and so on.Also, there are dependencies between the quests, that is, for some pairs $$$(a_i, b_i)$$$ the $$$b_i$$$-th quest can only be completed after the $$$a_i$$$-th quest. It is guaranteed that there are no circular dependencies, as otherwise the game would be unbeatable and nobody would play it.You are skilled enough to complete any number of quests in a negligible amount of time (i. e. you can complete any number of quests at the beginning of the same hour, even if there are dependencies between them). You want to complete all quests as fast as possible. To do this, you can complete the quests in any valid order. The completion time is equal to the difference between the time of completing the last quest and the time of completing the first quest in this order.Find the least amount of time you need to complete the game."
  },
  {
    "title": "Two-Colored Dominoes",
    "url": "https://codeforces.com/problemset/problem/1863/D",
    "description": "There is an $$$n\\times m$$$ board divided into cells. There are also some dominoes on this board. Each domino covers two adjacent cells (that is, two cells that share a side), and no two dominoes overlap.Piet thinks that this board is too boring and it needs to be painted. He will paint the cells of the dominoes black and white. He calls the painting beautiful if all of the following conditions hold:  for each domino, one of its cells is painted white and the other is painted black;  for each row, the number of black cells in this row equals the number of white cells in this row;  for each column, the number of black cells in this column equals the number of white cells in this column. Note that the cells that are not covered by dominoes are not painted at all, they are counted as neither black nor white.Help Piet produce a beautiful painting or tell that it is impossible."
  },
  {
    "title": "MEX Repetition",
    "url": "https://codeforces.com/problemset/problem/1863/C",
    "description": "You are given an array $$$a_1,a_2,\\ldots, a_n$$$ of pairwise distinct integers from $$$0$$$ to $$$n$$$. Consider the following operation:  consecutively for each $$$i$$$ from $$$1$$$ to $$$n$$$ in this order, replace $$$a_i$$$ with $$$\\operatorname{MEX}(a_1, a_2, \\ldots, a_n)$$$. Here $$$\\operatorname{MEX}$$$ of a collection of integers $$$c_1, c_2, \\ldots, c_m$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the collection $$$c$$$. For example, $$$\\operatorname{MEX}(0, 2, 2, 1, 4) = 3$$$ and $$$\\operatorname{MEX}(1, 2) = 0$$$.Print the array after applying $$$k$$$ such operations."
  },
  {
    "title": "Split Sort",
    "url": "https://codeforces.com/problemset/problem/1863/B",
    "description": "You are given a permutation$$$^{\\dagger}$$$ $$$p_1, p_2, \\ldots, p_n$$$ of integers $$$1$$$ to $$$n$$$.You can change the current permutation by applying the following operation several (possibly, zero) times:  choose some $$$x$$$ ($$$2 \\le x \\le n$$$);  create a new permutation by:   first, writing down all elements of $$$p$$$ that are less than $$$x$$$, without changing their order;  second, writing down all elements of $$$p$$$ that are greater than or equal to $$$x$$$, without changing their order;   replace $$$p$$$ with the newly created permutation. For example, if the permutation used to be $$$[6, 4, 3, 5, 2, 1]$$$ and you choose $$$x = 4$$$, then you will first write down $$$[3, 2, 1]$$$, then append this with $$$[6, 4, 5]$$$. So the initial permutation will be replaced by $$$[3, 2, 1, 6, 4, 5]$$$.Find the minimum number of operations you need to achieve $$$p_i = i$$$ for $$$i = 1, 2, \\ldots, n$$$. We can show that it is always possible to do so.$$$^{\\dagger}$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Channel",
    "url": "https://codeforces.com/problemset/problem/1863/A",
    "description": "Petya is an administrator of a channel in one of the messengers. A total of $$$n$$$ people are subscribed to his channel, and Petya is not considered a subscriber.Petya has published a new post on the channel. At the moment of the publication, there were $$$a$$$ subscribers online. We assume that every subscriber always reads all posts in the channel if they are online.After this, Petya starts monitoring the number of subscribers online. He consecutively receives $$$q$$$ notifications of the form \"a subscriber went offline\" or \"a subscriber went online\". Petya does not know which exact subscriber goes online or offline. It is guaranteed that such a sequence of notifications could have indeed been received.Petya wonders if all of his subscribers have read the new post. Help him by determining one of the following:   it is impossible that all $$$n$$$ subscribers have read the post;  it is possible that all $$$n$$$ subscribers have read the post;  it is guaranteed that all $$$n$$$ subscribers have read the post. "
  },
  {
    "title": "The Great Equalizer",
    "url": "https://codeforces.com/problemset/problem/1862/G",
    "description": "Tema bought an old device with a small screen and a worn-out inscription \"The Great Equalizer\" on the side.The seller said that the device needs to be given an array $$$a$$$ of integers as input, after which \"The Great Equalizer\" will work as follows:   Sort the current array in non-decreasing order and remove duplicate elements leaving only one occurrence of each element.  If the current length of the array is equal to $$$1$$$, the device stops working and outputs the single number in the array — output value of the device.  Add an arithmetic progression {$$$n,\\ n - 1,\\ n - 2,\\ \\ldots,\\ 1$$$} to the current array, where $$$n$$$ is the length of the current array. In other words, $$$n - i$$$ is added to the $$$i$$$-th element of the array, when indexed from zero.  Go to the first step. To test the operation of the device, Tema came up with a certain array of integers $$$a$$$, and then wanted to perform $$$q$$$ operations on the array $$$a$$$ of the following type:   Assign the value $$$x$$$ ($$$1 \\le x \\le 10^9$$$) to the element $$$a_i$$$ ($$$1 \\le i \\le n$$$).  Give the array $$$a$$$ as input to the device and find out the result of the device's operation, while the array $$$a$$$ remains unchanged during the operation of the device. Help Tema find out the output values of the device after each operation."
  },
  {
    "title": "Magic Will Save the World",
    "url": "https://codeforces.com/problemset/problem/1862/F",
    "description": "A portal of dark forces has opened at the border of worlds, and now the whole world is under a terrible threat. To close the portal and save the world, you need to defeat $$$n$$$ monsters that emerge from the portal one after another.Only the sorceress Vika can handle this. She possesses two magical powers — water magic and fire magic. In one second, Vika can generate $$$w$$$ units of water mana and $$$f$$$ units of fire mana. She will need mana to cast spells. Initially Vika have $$$0$$$ units of water mana and $$$0$$$ units of fire mana.Each of the $$$n$$$ monsters that emerge from the portal has its own strength, expressed as a positive integer. To defeat the $$$i$$$-th monster with strength $$$s_i$$$, Vika needs to cast a water spell or a fire spell of at least the same strength. In other words, Vika can spend at least $$$s_i$$$ units of water mana on a water spell, or at least $$$s_i$$$ units of fire mana on a fire spell.Vika can create and cast spells instantly. Vika can cast an unlimited number of spells every second as long she has enough mana for that.The sorceress wants to save the world as quickly as possible, so tell her how much time she will need."
  },
  {
    "title": "Kolya and Movie Theatre",
    "url": "https://codeforces.com/problemset/problem/1862/E",
    "description": "Recently, Kolya found out that a new movie theatre is going to be opened in his city soon, which will show a new movie every day for $$$n$$$ days. So, on the day with the number $$$1 \\le i \\le n$$$, the movie theatre will show the premiere of the $$$i$$$-th movie. Also, Kolya found out the schedule of the movies and assigned the entertainment value to each movie, denoted by $$$a_i$$$.However, the longer Kolya stays without visiting a movie theatre, the larger the decrease in entertainment value of the next movie. That decrease is equivalent to $$$d \\cdot cnt$$$, where $$$d$$$ is a predetermined value and $$$cnt$$$ is the number of days since the last visit to the movie theatre. It is also known that Kolya managed to visit another movie theatre a day before the new one opened — the day with the number $$$0$$$. So if we visit the movie theatre the first time on the day with the number $$$i$$$, then $$$cnt$$$ — the number of days since the last visit to the movie theatre will be equal to $$$i$$$.For example, if $$$d = 2$$$ and $$$a = [3, 2, 5, 4, 6]$$$, then by visiting movies with indices $$$1$$$ and $$$3$$$, $$$cnt$$$ value for the day $$$1$$$ will be equal to $$$1 - 0 = 1$$$ and $$$cnt$$$ value for the day $$$3$$$ will be $$$3 - 1 = 2$$$, so the total entertainment value of the movies will be $$$a_1 - d \\cdot 1 + a_3 - d \\cdot 2 = 3 - 2 \\cdot 1 + 5 - 2 \\cdot 2 = 2$$$.Unfortunately, Kolya only has time to visit at most $$$m$$$ movies. Help him create a plan to visit the cinema in such a way that the total entertainment value of all the movies he visits is maximized."
  },
  {
    "title": "Ice Cream Balls",
    "url": "https://codeforces.com/problemset/problem/1862/D",
    "description": "Tema decided to improve his ice cream making skills. He has already learned how to make ice cream in a cone using exactly two balls.Before his ice cream obsession, Tema was interested in mathematics. Therefore, he is curious about the minimum number of balls he needs to have in order to make exactly $$$n$$$ different types of ice cream.There are plenty possible ice cream flavours: $$$1, 2, 3, \\dots$$$. Tema can make two-balls ice cream with any flavours (probably the same).Two ice creams are considered different if their sets of ball flavours are different. For example, $$$\\{1, 2\\} = \\{2, 1\\}$$$, but $$$\\{1, 1\\} \\neq \\{1, 2\\}$$$.For example, having the following ice cream balls: $$$\\{1, 1, 2\\}$$$, Tema can make only two types of ice cream: $$$\\{1, 1\\}$$$ and $$$\\{1, 2\\}$$$.Note, that Tema do not need to make all the ice cream cones at the same time. This means that he making ice cream cones independently. Also in order to make a following cone $$$\\{x, x\\}$$$ for some $$$x$$$, Tema needs at least $$$2$$$ balls of type $$$x$$$.Help Tema answer this question. It can be shown that answer always exist."
  },
  {
    "title": "Flower City Fence",
    "url": "https://codeforces.com/problemset/problem/1862/C",
    "description": "Anya lives in the Flower City. By order of the city mayor, she has to build a fence for herself.The fence consists of $$$n$$$ planks, each with a height of $$$a_i$$$ meters. According to the order, the heights of the planks must not increase. In other words, it is true that $$$a_i \\ge a_j$$$ for all $$$i < j$$$.Anya became curious whether her fence is symmetrical with respect to the diagonal. In other words, will she get the same fence if she lays all the planks horizontally in the same order.For example, for $$$n = 5$$$, $$$a = [5, 4, 3, 2, 1]$$$, the fence is symmetrical. Because if all the planks are laid horizontally, the fence will be $$$[5, 4, 3, 2, 1]$$$, as shown in the diagram.  On the left is the fence $$$[5, 4, 3, 2, 1]$$$, on the right is the same fence laid horizontally But for $$$n = 3$$$, $$$a = [4, 2, 1]$$$, the fence is not symmetrical. Because if all the planks are laid horizontally, the fence will be $$$[3, 2, 1, 1]$$$, as shown in the diagram.  On the left is the fence $$$[4, 2, 1]$$$, on the right is the same fence laid horizontally  Help Anya and determine whether her fence is symmetrical."
  },
  {
    "title": "Sequence Game",
    "url": "https://codeforces.com/problemset/problem/1862/B",
    "description": "Tema and Vika are playing the following game.First, Vika comes up with a sequence of positive integers $$$a$$$ of length $$$m$$$ and writes it down on a piece of paper. Then she takes a new piece of paper and writes down the sequence $$$b$$$ according to the following rule:   First, she writes down $$$a_1$$$.  Then, she writes down only those $$$a_i$$$ ($$$2 \\le i \\le m$$$) such that $$$a_{i - 1} \\le a_i$$$. Let the length of this sequence be denoted as $$$n$$$. For example, from the sequence $$$a=[4, 3, 2, 6, 3, 3]$$$, Vika will obtain the sequence $$$b=[4, 6, 3]$$$.She then gives the piece of paper with the sequence $$$b$$$ to Tema. He, in turn, tries to guess the sequence $$$a$$$.Tema considers winning in such a game highly unlikely, but still wants to find at least one sequence $$$a$$$ that could have been originally chosen by Vika. Help him and output any such sequence.Note that the length of the sequence you output should not exceed the input sequence length by more than two times."
  },
  {
    "title": "Gift Carpet",
    "url": "https://codeforces.com/problemset/problem/1862/A",
    "description": "Recently, Tema and Vika celebrated Family Day. Their friend Arina gave them a carpet, which can be represented as an $$$n \\cdot m$$$ table of lowercase Latin letters.Vika hasn't seen the gift yet, but Tema knows what kind of carpets she likes. Vika will like the carpet if she can read her name on. She reads column by column from left to right and chooses one or zero letters from current column.Formally, the girl will like the carpet if it is possible to select four distinct columns in order from left to right such that the first column contains \"v\", the second one contains \"i\", the third one contains \"k\", and the fourth one contains \"a\".Help Tema understand in advance whether Vika will like Arina's gift."
  },
  {
    "title": "Four Suits",
    "url": "https://codeforces.com/problemset/problem/1861/F",
    "description": "The game of Berland poker is played as follows. There are $$$n+1$$$ people: $$$n$$$ players, numbered from $$$1$$$ to $$$n$$$, and the dealer. The dealer has a deck which contains cards of four different suits (the number of cards of each suit is not necessarily the same); the number of cards in the deck is divisible by $$$n$$$. The dealer gives all cards to the players, so that every player receives the same number of cards, and the whole deck is used.After the cards are dealt, every player chooses one of four suits (independently) and discards all cards from their hand which do not belong to their chosen suit. The winner of the game is the player with the maximum number of cards left in their hand. The number of points the winner receives is $$$x - y$$$, where $$$x$$$ is the number of cards in the winner's hand, and $$$y$$$ is the maximum number of cards among all other players; everyone else receives $$$0$$$ points. Note that it means that if there are multiple players with the maximum number of cards, everyone receives $$$0$$$ points.Since every player wants to maximize their odds to win, they will choose a suit with the maximum number of cards in their hand.Monocarp is the dealer. He has already given some cards to the players; the $$$i$$$-th player received $$$a_{i,j}$$$ cards of suit $$$j$$$. Note that the number of cards in players' hands don't have to be the same at this moment. Monocarp has $$$b_1, b_2, b_3, b_4$$$ cards of suit $$$1, 2, 3, 4$$$ respectively left in his deck. He has to give them to the players so that, after all cards are dealt, every player has the same number of cards.For each player, calculate the maximum number of points they can receive among all ways to deal the remaining cards according to the rules of the game."
  },
  {
    "title": "Non-Intersecting Subpermutations",
    "url": "https://codeforces.com/problemset/problem/1861/E",
    "description": "You are given two integers $$$n$$$ and $$$k$$$.For an array of length $$$n$$$, let's define its cost as the maximum number of contiguous subarrays of this array that can be chosen so that:   each element belongs to at most one subarray;  the length of each subarray is exactly $$$k$$$;  each subarray contains each integer from $$$1$$$ to $$$k$$$ exactly once. For example, if $$$n = 10$$$, $$$k = 3$$$ and the array is $$$[1, 2, 1, 3, 2, 3, 2, 3, 1, 3]$$$, its cost is $$$2$$$ because, for example, we can choose the subarrays from the $$$2$$$-nd element to the $$$4$$$-th element and from the $$$7$$$-th element to the $$$9$$$-th element, and we can show that it's impossible to choose more than $$$2$$$ subarrays.Calculate the sum of costs over all arrays of length $$$n$$$ consisting of integers from $$$1$$$ to $$$k$$$, and print it modulo $$$998244353$$$."
  },
  {
    "title": "Sorting By Multiplication",
    "url": "https://codeforces.com/problemset/problem/1861/D",
    "description": "You are given an array $$$a$$$ of length $$$n$$$, consisting of positive integers. You can perform the following operation on this array any number of times (possibly zero):   choose three integers $$$l$$$, $$$r$$$ and $$$x$$$ such that $$$1 \\le l \\le r \\le n$$$, and multiply every $$$a_i$$$ such that $$$l \\le i \\le r$$$ by $$$x$$$. Note that you can choose any integer as $$$x$$$, it doesn't have to be positive.You have to calculate the minimum number of operations to make the array $$$a$$$ sorted in strictly ascending order (i. e. the condition $$$a_1 < a_2 < \\dots < a_n$$$ must be satisfied)."
  },
  {
    "title": "Queries for the Array",
    "url": "https://codeforces.com/problemset/problem/1861/C",
    "description": "Monocarp had an array $$$a$$$ consisting of integers. Initially, this array was empty.Monocarp performed three types of queries to this array:  choose an integer and append it to the end of the array. Each time Monocarp performed a query of this type, he wrote out a character +;  remove the last element from the array. Each time Monocarp performed a query of this type, he wrote out a character -. Monocarp never performed this query on an empty array;  check if the array is sorted in non-descending order, i.,e. $$$a_1 \\le a_2 \\le \\dots \\le a_k$$$, where $$$k$$$ is the number of elements in the array currently. Every array with less than $$$2$$$ elements is considered sorted. If the array was sorted by the time Monocarp was performing that query, he wrote out a character 1. Otherwise, he wrote out a character 0. You are given a sequence $$$s$$$ of $$$q$$$ characters 0, 1, + and/or -. These are the characters that were written out by Monocarp, given in the exact order he wrote them out.You have to check if this sequence is consistent, i. e. it was possible for Monocarp to perform the queries so that the sequence of characters he wrote out is exactly $$$s$$$."
  },
  {
    "title": "Two Binary Strings",
    "url": "https://codeforces.com/problemset/problem/1861/B",
    "description": "You are given two strings $$$a$$$ and $$$b$$$ of equal length, consisting of only characters 0 and/or 1; both strings start with character 0 and end with character 1. You can perform the following operation any number of times (possibly zero):   choose one of the strings and two equal characters in it; then turn all characters between them into those characters. Formally, you choose one of these two strings (let the chosen string be $$$s$$$), then pick two integers $$$l$$$ and $$$r$$$ such that $$$1 \\le l < r \\le |s|$$$ and $$$s_l = s_r$$$, then replace every character $$$s_i$$$ such that $$$l < i < r$$$ with $$$s_l$$$.For example, if the chosen string is 010101, you can transform it into one of the following strings by applying one operation:  000101 if you choose $$$l = 1$$$ and $$$r = 3$$$;  000001 if you choose $$$l = 1$$$ and $$$r = 5$$$;  010001 if you choose $$$l = 3$$$ and $$$r = 5$$$;  010111 if you choose $$$l = 4$$$ and $$$r = 6$$$;  011111 if you choose $$$l = 2$$$ and $$$r = 6$$$;  011101 if you choose $$$l = 2$$$ and $$$r = 4$$$. You have to determine if it's possible to make the given strings equal by applying this operation any number of times."
  },
  {
    "title": "Prime Deletion",
    "url": "https://codeforces.com/problemset/problem/1861/A",
    "description": "A prime number is a positive integer that has exactly two different positive divisors: $$$1$$$ and the integer itself. For example, $$$2$$$, $$$3$$$, $$$13$$$ and $$$101$$$ are prime numbers; $$$1$$$, $$$4$$$, $$$6$$$ and $$$42$$$ are not.You are given a sequence of digits from $$$1$$$ to $$$9$$$, in which every digit from $$$1$$$ to $$$9$$$ appears exactly once.You are allowed to do the following operation several (maybe zero) times: choose any digit from the sequence and delete it. However, you cannot perform this operation if the sequence consists of only two digits.Your goal is to obtain a sequence which represents a prime number. Note that you cannot reorder the digits in the sequence.Print the resulting sequence, or report that it is impossible to perform the operations so that the resulting sequence is a prime number."
  },
  {
    "title": "Evaluate RBS",
    "url": "https://codeforces.com/problemset/problem/1860/F",
    "description": "You are given $$$2n$$$ tuples of values $$$(a, b, c)$$$, where $$$a$$$ and $$$b$$$ are positive integers and $$$c$$$ is a bracket '(' or ')'. Exactly $$$n$$$ tuples have $$$c = $$$'(' and the other $$$n$$$ tuples have $$$c =$$$ ')'.You are asked to choose two positive values $$$x$$$ and $$$y$$$ ($$$x > 0$$$ and $$$y > 0$$$; not necessarily integers) and sort the tuples in the increasing value of $$$a \\cdot x + b \\cdot y$$$. If several tuples have the same value, you can place them in any order among themselves.Is it possible to choose such $$$x$$$ and $$$y$$$ that taking brackets $$$c$$$ from the tuples in the resulting order produces a regular bracket sequence?A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence."
  },
  {
    "title": "Fast Travel Text Editor",
    "url": "https://codeforces.com/problemset/problem/1860/E",
    "description": "You are given a string $$$s$$$, consisting of lowercase Latin letters.There's a cursor, initially placed between two adjacent letters of the string. The cursor can't be placed before the first or after the last letter.In one move, you can perform one of three actions:   move a cursor one position to the left (if that doesn't place it before the first letter);  move a cursor one position to the right (if that doesn't place it after the last letter);  let $$$x$$$ be the letter immediately to the left of the cursor, and $$$y$$$ be the letter immediately to the right of the cursor. Choose any pair of adjacent letters in the string such that the left of them is $$$x$$$ and the right of them is $$$y$$$, and move the cursor to the position between these two letters. You are asked $$$m$$$ queries. In each query, you are given two integers $$$f$$$ and $$$t$$$, which correspond to two valid positions of the cursor in the string. In response to the query, you have to calculate the minimum number of operations required to move the cursor from position $$$f$$$ to position $$$t$$$."
  },
  {
    "title": "Balanced String",
    "url": "https://codeforces.com/problemset/problem/1860/D",
    "description": "You are given a binary string $$$s$$$ (a binary string is a string consisting of characters 0 and/or 1).Let's call a binary string balanced if the number of subsequences 01 (the number of indices $$$i$$$ and $$$j$$$ such that $$$1 \\le i < j \\le n$$$, $$$s_i=0$$$ and $$$s_j=1$$$) equals to the number of subsequences 10 (the number of indices $$$k$$$ and $$$l$$$ such that $$$1 \\le k < l \\le n$$$, $$$s_k=1$$$ and $$$s_l=0$$$) in it.For example, the string 1000110 is balanced, because both the number of subsequences 01 and the number of subsequences 10 are equal to $$$6$$$. On the other hand, 11010 is not balanced, because the number of subsequences 01 is $$$1$$$, but the number of subsequences 10 is $$$5$$$. You can perform the following operation any number of times: choose two characters in $$$s$$$ and swap them. Your task is to calculate the minimum number of operations to make the string $$$s$$$ balanced."
  },
  {
    "title": "Game on Permutation",
    "url": "https://codeforces.com/problemset/problem/1860/C",
    "description": "Alice and Bob are playing a game. They have a permutation $$$p$$$ of size $$$n$$$ (a permutation of size $$$n$$$ is an array of size $$$n$$$ where each element from $$$1$$$ to $$$n$$$ occurs exactly once). They also have a chip, which can be placed on any element of the permutation.Alice and Bob make alternating moves: Alice makes the first move, then Bob makes the second move, then Alice makes the third move, and so on. During the first move, Alice chooses any element of the permutation and places the chip on that element. During each of the next moves, the current player has to move the chip to any element that is simultaneously to the left and strictly less than the current element (i. e. if the chip is on the $$$i$$$-th element, it can be moved to the $$$j$$$-th element if $$$j < i$$$ and $$$p_j < p_i$$$). If a player cannot make a move (it is impossible to move the chip according to the rules of the game), that player wins the game.Let's say that the $$$i$$$-th element of the permutation is lucky if the following condition holds:  if Alice places the chip on the $$$i$$$-th element during her first move, she can win the game no matter how Bob plays (i. e. she has a winning strategy). You have to calculate the number of lucky elements in the permutation."
  },
  {
    "title": "Fancy Coins",
    "url": "https://codeforces.com/problemset/problem/1860/B",
    "description": "Monocarp is going to make a purchase with cost of exactly $$$m$$$ burles.He has two types of coins, in the following quantities:   coins worth $$$1$$$ burle: $$$a_1$$$ regular coins and infinitely many fancy coins;  coins worth $$$k$$$ burles: $$$a_k$$$ regular coins and infinitely many fancy coins. Monocarp wants to make his purchase in such a way that there's no change — the total worth of provided coins is exactly $$$m$$$. He can use both regular and fancy coins. However, he wants to spend as little fancy coins as possible.What's the smallest total number of fancy coins he can use to make a purchase?"
  },
  {
    "title": "Not a Substring",
    "url": "https://codeforces.com/problemset/problem/1860/A",
    "description": "A bracket sequence is a string consisting of characters '(' and/or ')'. A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters '1' and '+' between the original characters of the sequence. For example:  bracket sequences \"()()\" and \"(())\" are regular (they can be transformed into \"(1)+(1)\" and \"((1+1)+1)\", respectively);  bracket sequences \")(\", \"(\" and \")\" are not regular. You are given a bracket sequence $$$s$$$; let's define its length as $$$n$$$. Your task is to find a regular bracket sequence $$$t$$$ of length $$$2n$$$ such that $$$s$$$ does not occur in $$$t$$$ as a contiguous substring, or report that there is no such sequence."
  },
  {
    "title": "Teleportation in Byteland",
    "url": "https://codeforces.com/problemset/problem/1859/F",
    "description": "There are nn cities in Byteland, some of which are connected by roads, which can be traversed in any direction. The ii-th road has its own hardness parameter wiw_i. Time spent on traversing a road with its hardness equal to wiw_i is ⌈wic⌉\\lceil\\frac{w_i}{c}\\rceil, where cc is the current driving skill.The travel network of Byteland is a tree. In other words, between any pair of cities, there is exactly one path that passes through each city at most once.In some cities you can visit driving courses. A single course takes TT time to complete, and after completing the course the driver's skill cc is increased by 22 times. Notice that the time TT required to complete a course is the same in all cities, and courses can be completed in the same city more than once.You need to answer the qq queries: what is the minimum time it takes to get from the city aa to city bb if you start the travelling with driving skill c=1c = 1?"
  },
  {
    "title": "Maximum Monogonosity",
    "url": "https://codeforces.com/problemset/problem/1859/E",
    "description": "You are given an array $$$a$$$ of length $$$n$$$ and an array $$$b$$$ of length $$$n$$$. The cost of a segment $$$[l, r]$$$, $$$1 \\le l \\le r \\le n$$$, is defined as $$$|b_l - a_r| + |b_r - a_l|$$$.Recall that two segments $$$[l_1, r_1]$$$, $$$1 \\le l_1 \\le r_1 \\le n$$$, and $$$[l_2, r_2]$$$, $$$1 \\le l_2 \\le r_2 \\le n$$$, are non-intersecting if one of the following conditions is satisfied: $$$r_1 < l_2$$$ or $$$r_2 < l_1$$$.The length of a segment $$$[l, r]$$$, $$$1 \\le l \\le r \\le n$$$, is defined as $$$r - l + 1$$$.Find the maximum possible sum of costs of non-intersecting segments $$$[l_j, r_j]$$$, $$$1 \\le l_j \\le r_j \\le n$$$, whose total length is equal to $$$k$$$."
  },
  {
    "title": "Andrey and Escape from Capygrad",
    "url": "https://codeforces.com/problemset/problem/1859/D",
    "description": "An incident occurred in Capygrad, the capital of Tyagoland, where all the capybaras in the city went crazy and started throwing mandarins. Andrey was forced to escape from the city as far as possible, using portals.Tyagoland is represented by a number line, and the city of Capygrad is located at point $$$0$$$. There are $$$n$$$ portals all over Tyagoland, each of which is characterised by four integers $$$l_i$$$, $$$r_i$$$, $$$a_i$$$ and $$$b_i$$$ ($$$1 \\le l_i \\le a_i \\le b_i \\le r_i \\le 10^9$$$). Note that the segment $$$[a_i, b_i]$$$ is contained in the segment $$$[l_i, r_i]$$$.If Andrey is on the segment $$$[l_i, r_i]$$$, then the portal can teleport him to any point on the segment $$$[a_i, b_i]$$$. Andrey has a pass that allows him to use the portals an unlimited number of times.Andrey thinks that the point $$$x$$$ is on the segment $$$[l, r]$$$ if the inequality $$$l \\le x \\le r$$$ is satisfied.Andrey has $$$q$$$ options for where to start his escape, each option is characterized by a single integer $$$x_i$$$ — the starting position of the escape. He wants to escape from Capygrad as far as possible (to the point with the maximum possible coordinate). Help Andrey determine how far he could escape from Capygrad, starting at each of the $$$q$$$ positions."
  },
  {
    "title": "Another Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1859/C",
    "description": "Andrey is just starting to come up with problems, and it's difficult for him. That's why he came up with a strange problem about permutations$$$^{\\dagger}$$$ and asks you to solve it. Can you do it?Let's call the cost of a permutation $$$p$$$ of length $$$n$$$ the value of the expression: $$$(\\sum_{i = 1}^{n} p_i \\cdot i) - (\\max_{j = 1}^{n} p_j \\cdot j)$$$. Find the maximum cost among all permutations of length $$$n$$$.$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Olya and Game with Arrays",
    "url": "https://codeforces.com/problemset/problem/1859/B",
    "description": "Artem suggested a game to the girl Olya. There is a list of $$$n$$$ arrays, where the $$$i$$$-th array contains $$$m_i \\ge 2$$$ positive integers $$$a_{i,1}, a_{i,2}, \\ldots, a_{i,m_i}$$$.Olya can move at most one (possibly $$$0$$$) integer from each array to another array. Note that integers can be moved from one array only once, but integers can be added to one array multiple times, and all the movements are done at the same time.The beauty of the list of arrays is defined as the sum $$$\\sum_{i=1}^n \\min_{j=1}^{m_i} a_{i,j}$$$. In other words, for each array, we find the minimum value in it and then sum up these values.The goal of the game is to maximize the beauty of the list of arrays. Help Olya win this challenging game!"
  },
  {
    "title": "United We Stand",
    "url": "https://codeforces.com/problemset/problem/1859/A",
    "description": "Given an array $$$a$$$ of length $$$n$$$, containing integers. And there are two initially empty arrays $$$b$$$ and $$$c$$$. You need to add each element of array $$$a$$$ to exactly one of the arrays $$$b$$$ or $$$c$$$, in order to satisfy the following conditions:  Both arrays $$$b$$$ and $$$c$$$ are non-empty. More formally, let $$$l_b$$$ be the length of array $$$b$$$, and $$$l_c$$$ be the length of array $$$c$$$. Then $$$l_b, l_c \\ge 1$$$.  For any two indices $$$i$$$ and $$$j$$$ ($$$1 \\le i \\le l_b, 1 \\le j \\le l_c$$$), $$$c_j$$$ is not a divisor of $$$b_i$$$. Output the arrays $$$b$$$ and $$$c$$$ that can be obtained, or output $$$-1$$$ if they do not exist."
  },
  {
    "title": "Rollbacks (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1858/E2",
    "description": "This is a hard version of this problem. The only difference between the versions is that you have to solve the hard version in online mode. You can make hacks only if both versions of the problem are solved.You have an array $$$a$$$, which is initially empty. You need to process queries of the following types:  + $$$x$$$ — add the integer $$$x$$$ to the end of the array $$$a$$$.  - $$$k$$$ — remove the last $$$k$$$ numbers from the array $$$a$$$.  ! — roll back the last active change (i.e., make the array $$$a$$$ the way it was before the change). In this problem, only queries of the first two types (+ and -) are considered as changes.  ? — find the number of distinct numbers in the array $$$a$$$. "
  },
  {
    "title": "Rollbacks (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1858/E1",
    "description": "This is an easy version of this problem. The only difference between the versions is that you have to solve the hard version in online mode. You can make hacks only if both versions of the problem are solved.You have an array $$$a$$$, which is initially empty. You need to process queries of the following types:  + $$$x$$$ — add the integer $$$x$$$ to the end of the array $$$a$$$.  - $$$k$$$ — remove the last $$$k$$$ numbers from the array $$$a$$$.  ! — roll back the last active change (i.e., make the array $$$a$$$ the way it was before the change). In this problem, only queries of the first two types (+ and -) are considered as changes.  ? — find the number of distinct numbers in the array $$$a$$$. "
  },
  {
    "title": "Trees and Segments",
    "url": "https://codeforces.com/problemset/problem/1858/D",
    "description": "The teachers of the Summer Informatics School decided to plant $$$n$$$ trees in a row, and it was decided to plant only oaks and firs. To do this, they made a plan, which can be represented as a binary string $$$s$$$ of length $$$n$$$. If $$$s_i = 0$$$, then the $$$i$$$-th tree in the row should be an oak, and if $$$s_i = 1$$$, then the $$$i$$$-th tree in the row should be a fir.The day of tree planting is tomorrow, and the day after tomorrow an inspector will come to the School. The inspector loves nature very much, and he will evaluate the beauty of the row as follows:  First, he will calculate $$$l_0$$$ as the maximum number of consecutive oaks in the row (the maximum substring consisting of zeros in the plan $$$s$$$). If there are no oaks in the row, then $$$l_0 = 0$$$.  Then, he will calculate $$$l_1$$$ as the maximum number of consecutive firs in the row (the maximum substring consisting of ones in the plan $$$s$$$). If there are no firs in the row, then $$$l_1 = 0$$$.  Finally, he will calculate the beauty of the row as $$$a \\cdot l_0 + l_1$$$ for some $$$a$$$ — the inspector's favourite number. The teachers know the value of the parameter $$$a$$$, but for security reasons they cannot tell it to you. They only told you that $$$a$$$ is an integer from $$$1$$$ to $$$n$$$.Since the trees have not yet been planted, the teachers decided to change the type of no more than $$$k$$$ trees to the opposite (i.e., change $$$s_i$$$ from $$$0$$$ to $$$1$$$ or from $$$1$$$ to $$$0$$$ in the plan) in order to maximize the beauty of the row of trees according to the inspector.For each integer $$$j$$$ from $$$1$$$ to $$$n$$$ answer the following question independently:   What is the maximum beauty of the row of trees that the teachers can achieve by changing the type of no more than $$$k$$$ trees if the inspector's favourite number $$$a$$$ is equal to $$$j$$$? "
  },
  {
    "title": "Yet Another Permutation Problem",
    "url": "https://codeforces.com/problemset/problem/1858/C",
    "description": "Alex got a new game called \"GCD permutations\" as a birthday present. Each round of this game proceeds as follows:  First, Alex chooses a permutation$$$^{\\dagger}$$$ $$$a_1, a_2, \\ldots, a_n$$$ of integers from $$$1$$$ to $$$n$$$.  Then, for each $$$i$$$ from $$$1$$$ to $$$n$$$, an integer $$$d_i = \\gcd(a_i, a_{(i \\bmod n) + 1})$$$ is calculated.  The score of the round is the number of distinct numbers among $$$d_1, d_2, \\ldots, d_n$$$. Alex has already played several rounds so he decided to find a permutation $$$a_1, a_2, \\ldots, a_n$$$ such that its score is as large as possible.Recall that $$$\\gcd(x, y)$$$ denotes the greatest common divisor (GCD) of numbers $$$x$$$ and $$$y$$$, and $$$x \\bmod y$$$ denotes the remainder of dividing $$$x$$$ by $$$y$$$.$$$^{\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "The Walkway",
    "url": "https://codeforces.com/problemset/problem/1858/B",
    "description": "There are $$$n$$$ benches near the Main Walkway in Summer Infomatics School. These benches are numbered by integers from $$$1$$$ to $$$n$$$ in order they follow. Also there are $$$m$$$ cookie sellers near the Walkway. The $$$i$$$-th ($$$1 \\le i \\le m$$$) cookie sellers is located near the $$$s_i$$$-th bench.Petya is standing in the beginning of the Walkway. He will pass near all benches starting from the $$$1$$$-st bench and ending with the $$$n$$$-th bench. Petya passes the distance between two consecutive benches in $$$1$$$ minute. He has a knapsack with an infinite amount of cookies. Petya is going to eat cookies from his knapsack and buy them from cookie sellers during the walk.Petya eats cookies only near the benches according to the following rule: he will eat the cookie near the $$$i$$$-th ($$$1 \\le i \\le n$$$) bench if and only if at least one of the following conditions holds:  There is a cookie seller near the $$$i$$$-th bench. Then Petya will buy a cookie from cookie seller and eat it immediately.  Petya has not yet eaten a cookie. Then Petya will take a cookie from his knapsack and eat it immediately.  At least $$$d$$$ minutes passed since Petya ate the previous cookie. In other words, Petya has not eaten a cookie near the benches $$$i-1, i-2, \\ldots, \\max(i-d+1, 1)$$$. Then Petya will take a cookie from his knapsack and eat it immediately. You may assume that Petya eats cookies instantly. Petya will not eat two or more cookies near the same bench.You want to minimize the number of cookies Petya will eat during his walk. In order to do this, you will ask the administration of the Summer Informatics School to remove exactly one cookie seller from the Walkway before Petya starts his walk.Please determine the minimum possible number of cookies Petya can eat after removing exactly one cookie seller. Also determine the number of cookie sellers, such that if you remove one of them, Petya will eat the minimum possible number of cookies."
  },
  {
    "title": "Buttons",
    "url": "https://codeforces.com/problemset/problem/1858/A",
    "description": "Anna and Katie ended up in a secret laboratory.There are $$$a+b+c$$$ buttons in the laboratory. It turned out that $$$a$$$ buttons can only be pressed by Anna, $$$b$$$ buttons can only be pressed by Katie, and $$$c$$$ buttons can be pressed by either of them. Anna and Katie decided to play a game, taking turns pressing these buttons. Anna makes the first turn. Each button can be pressed at most once, so at some point, one of the girls will not be able to make her turn.The girl who cannot press a button loses. Determine who will win if both girls play optimally."
  },
  {
    "title": "Counting Graphs",
    "url": "https://codeforces.com/problemset/problem/1857/G",
    "description": "Given a tree consisting of $$$n$$$ vertices. A tree is a connected undirected graph without cycles. Each edge of the tree has its weight, $$$w_i$$$.Your task is to count the number of different graphs that satisfy all four conditions:  The graph does not have self-loops and multiple edges.  The weights on the edges of the graph are integers and do not exceed $$$S$$$.  The graph has exactly one minimum spanning tree.  The minimum spanning tree of the graph is the given tree. Two graphs are considered different if their sets of edges are different, taking into account the weights of the edges.The answer can be large, output it modulo $$$998244353$$$."
  },
  {
    "title": "Sum and Product",
    "url": "https://codeforces.com/problemset/problem/1857/F",
    "description": "You have an array $$$a$$$ of length $$$n$$$.Your task is to answer $$$q$$$ queries: given $$$x,y$$$, find the number of pairs $$$i$$$ and $$$j$$$ ($$$1 \\le i < j \\le n$$$) that both $$$a_i + a_j = x$$$ and $$$a_i \\cdot a_j = y$$$.That is, for the array $$$[1,3,2]$$$ and asking for $$$x=3,y=2$$$ the answer is $$$1$$$:   $$$i=1$$$ and $$$j=2$$$ fail because $$$1 + 3 = 4$$$ and not $$$3,$$$ also $$$1 \\cdot 3=3$$$ and not $$$2$$$;  $$$i=1$$$ and $$$j=3$$$ satisfies both conditions;  $$$i=2$$$ and $$$j=3$$$ fail because $$$3 + 2 = 5$$$ and not $$$3,$$$ also $$$3 \\cdot 2=6$$$ and not $$$2$$$; "
  },
  {
    "title": "Power of Points",
    "url": "https://codeforces.com/problemset/problem/1857/E",
    "description": "You are given $$$n$$$ points with integer coordinates $$$x_1,\\dots x_n$$$, which lie on a number line.For some integer $$$s$$$, we construct segments [$$$s,x_1$$$], [$$$s,x_2$$$], $$$\\dots$$$, [$$$s,x_n$$$]. Note that if $$$x_i<s$$$, then the segment will look like [$$$x_i,s$$$]. The segment [$$$a, b$$$] covers all integer points $$$a, a+1, a+2, \\dots, b$$$.We define the power of a point $$$p$$$ as the number of segments that intersect the point with coordinate $$$p$$$, denoted as $$$f_p$$$.Your task is to compute $$$\\sum\\limits_{p=1}^{10^9}f_p$$$ for each $$$s \\in \\{x_1,\\dots,x_n\\}$$$, i.e., the sum of $$$f_p$$$ for all integer points from $$$1$$$ to $$$10^9$$$.For example, if the initial coordinates are $$$[1,2,5,7,1]$$$ and we choose $$$s=5$$$, then the segments will be: $$$[1,5]$$$,$$$[2,5]$$$,$$$[5,5]$$$,$$$[5,7]$$$,$$$[1,5]$$$. And the powers of the points will be: $$$f_1=2, f_2=3, f_3=3, f_4=3, f_5=5, f_6=1, f_7=1, f_8=0, \\dots, f_{10^9}=0$$$. Their sum is $$$2+3+3+3+5+1+1=18$$$."
  },
  {
    "title": "Strong Vertices",
    "url": "https://codeforces.com/problemset/problem/1857/D",
    "description": "Given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$. Elements of both arrays indexed from $$$1$$$ to $$$n$$$. You are constructing a directed graph, where edge from $$$u$$$ to $$$v$$$ ($$$u\\neq v$$$) exists if $$$a_u-a_v \\ge b_u-b_v$$$.A vertex $$$V$$$ is called strong if there exists a path from $$$V$$$ to all other vertices.A path in a directed graph is a chain of several vertices, connected by edges, such that moving from the vertex $$$u$$$, along the directions of the edges, the vertex $$$v$$$ can be reached.Your task is to find all strong vertices.For example, if $$$a=[3,1,2,4]$$$ and $$$b=[4,3,2,1]$$$, the graph will look like this:     The graph has only one strong vertex with number $$$4$$$ "
  },
  {
    "title": "Assembly via Minimums",
    "url": "https://codeforces.com/problemset/problem/1857/C",
    "description": "Sasha has an array $$$a$$$ of $$$n$$$ integers. He got bored and for all $$$i$$$, $$$j$$$ ($$$i < j$$$), he wrote down the minimum value of $$$a_i$$$ and $$$a_j$$$. He obtained a new array $$$b$$$ of size $$$\\frac{n\\cdot (n-1)}{2}$$$.For example, if $$$a=$$$ [$$$2,3,5,1$$$], he would write [$$$\\min(2, 3), \\min(2, 5), \\min(2, 1), \\min(3, 5), \\min(3, 1), min(5, 1)$$$] $$$=$$$ [$$$2, 2, 1, 3, 1, 1$$$].Then, he randomly shuffled all the elements of the array $$$b$$$.Unfortunately, he forgot the array $$$a$$$, and your task is to restore any possible array $$$a$$$ from which the array $$$b$$$ could have been obtained.The elements of array $$$a$$$ should be in the range $$$[-10^9,10^9]$$$."
  },
  {
    "title": "Maximum Rounding",
    "url": "https://codeforces.com/problemset/problem/1857/B",
    "description": "Given a natural number $$$x$$$. You can perform the following operation:   choose a positive integer $$$k$$$ and round $$$x$$$ to the $$$k$$$-th digit Note that the positions are numbered from right to left, starting from zero. If the number has $$$k$$$ digits, it is considered that the digit at the $$$k$$$-th position is equal to $$$0$$$.The rounding is done as follows:   if the digit at the $$$(k-1)$$$-th position is greater than or equal to $$$5$$$, then the digit at the $$$k$$$-th position is increased by $$$1$$$, otherwise the digit at the $$$k$$$-th position remains unchanged (mathematical rounding is used).  if before the operations the digit at the $$$k$$$-th position was $$$9$$$, and it should be increased by $$$1$$$, then we search for the least position $$$k'$$$ ($$$k'>k$$$), where the digit at the $$$k'$$$-th position is less than $$$9$$$ and add $$$1$$$ to the digit at the $$$k'$$$-th position. Then we assign $$$k=k'$$$.  after that, all digits which positions are less than $$$k$$$ are replaced with zeros.Your task is to make $$$x$$$ as large as possible, if you can perform the operation as many times as you want.For example, if $$$x$$$ is equal to $$$3451$$$, then if you choose consecutively:   $$$k=1$$$, then after the operation $$$x$$$ will become $$$3450$$$  $$$k=2$$$, then after the operation $$$x$$$ will become $$$3500$$$  $$$k=3$$$, then after the operation $$$x$$$ will become $$$4000$$$  $$$k=4$$$, then after the operation $$$x$$$ will become $$$0$$$  To maximize the answer, you need to choose $$$k=2$$$ first, and then $$$k=3$$$, then the number will become $$$4000$$$."
  },
  {
    "title": "Array Coloring",
    "url": "https://codeforces.com/problemset/problem/1857/A",
    "description": "You are given an array consisting of $$$n$$$ integers. Your task is to determine whether it is possible to color all its elements in two colors in such a way that the sums of the elements of both colors have the same parity and each color has at least one element colored.For example, if the array is [$$$1,2,4,3,2,3,5,4$$$], we can color it as follows: [$$$\\color{blue}{1},\\color{blue}{2},\\color{red}{4},\\color{blue}{3},\\color{red}{2},\\color{red}{3},\\color{red}{5},\\color{red}{4}$$$], where the sum of the blue elements is $$$6$$$ and the sum of the red elements is $$$18$$$."
  },
  {
    "title": "PermuTree (hard version)",
    "url": "https://codeforces.com/problemset/problem/1856/E2",
    "description": "This is the hard version of the problem. The differences between the two versions are the constraint on $$$n$$$ and the time limit. You can make hacks only if both versions of the problem are solved.You are given a tree with $$$n$$$ vertices rooted at vertex $$$1$$$.For some permutation$$$^\\dagger$$$ $$$a$$$ of length $$$n$$$, let $$$f(a)$$$ be the number of pairs of vertices $$$(u, v)$$$ such that $$$a_u < a_{\\operatorname{lca}(u, v)} < a_v$$$. Here, $$$\\operatorname{lca}(u,v)$$$ denotes the lowest common ancestor of vertices $$$u$$$ and $$$v$$$.Find the maximum possible value of $$$f(a)$$$ over all permutations $$$a$$$ of length $$$n$$$.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "PermuTree (easy version)",
    "url": "https://codeforces.com/problemset/problem/1856/E1",
    "description": "This is the easy version of the problem. The differences between the two versions are the constraint on $$$n$$$ and the time limit. You can make hacks only if both versions of the problem are solved.You are given a tree with $$$n$$$ vertices rooted at vertex $$$1$$$.For some permutation$$$^\\dagger$$$ $$$a$$$ of length $$$n$$$, let $$$f(a)$$$ be the number of pairs of vertices $$$(u, v)$$$ such that $$$a_u < a_{\\operatorname{lca}(u, v)} < a_v$$$. Here, $$$\\operatorname{lca}(u,v)$$$ denotes the lowest common ancestor of vertices $$$u$$$ and $$$v$$$.Find the maximum possible value of $$$f(a)$$$ over all permutations $$$a$$$ of length $$$n$$$.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "More Wrong",
    "url": "https://codeforces.com/problemset/problem/1856/D",
    "description": "This is an interactive problem.The jury has hidden a permutation$$$^\\dagger$$$ $$$p$$$ of length $$$n$$$.In one query, you can pick two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le n$$$) by paying $$$(r - l)^2$$$ coins. In return, you will be given the number of inversions$$$^\\ddagger$$$ in the subarray $$$[p_l, p_{l + 1}, \\ldots p_r]$$$.Find the index of the maximum element in $$$p$$$ by spending at most $$$5 \\cdot n^2$$$ coins.Note: the grader is not adaptive: the permutation is fixed before any queries are made.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).$$$^\\ddagger$$$ The number of inversions in an array is the number of pairs of indices $$$(i,j)$$$ such that $$$i < j$$$ and $$$a_i > a_j$$$. For example, the array $$$[10,2,6,3]$$$ contains $$$4$$$ inversions. The inversions are $$$(1,2),(1,3),(1,4)$$$, and $$$(3,4)$$$."
  },
  {
    "title": "To Become Max",
    "url": "https://codeforces.com/problemset/problem/1856/C",
    "description": "You are given an array of integers $$$a$$$ of length $$$n$$$.In one operation you:   Choose an index $$$i$$$ such that $$$1 \\le i \\le n - 1$$$ and $$$a_i \\le a_{i + 1}$$$.  Increase $$$a_i$$$ by $$$1$$$. Find the maximum possible value of $$$\\max(a_1, a_2, \\ldots a_n)$$$ that you can get after performing this operation at most $$$k$$$ times."
  },
  {
    "title": "Good Arrays",
    "url": "https://codeforces.com/problemset/problem/1856/B",
    "description": "You are given an array of positive integers $$$a$$$ of length $$$n$$$.Let's call an array of positive integers $$$b$$$ of length $$$n$$$ good if:   $$$a_i \\neq b_i$$$ for all $$$i$$$ from $$$1$$$ to $$$n$$$,  $$$a_1 + a_2 +\\ldots + a_n = b_1 + b_2 + \\ldots + b_n$$$. Does a good array exist?"
  },
  {
    "title": "Tales of a Sort",
    "url": "https://codeforces.com/problemset/problem/1856/A",
    "description": "Alphen has an array of positive integers $$$a$$$ of length $$$n$$$.Alphen can perform the following operation:   For all $$$i$$$ from $$$1$$$ to $$$n$$$, replace $$$a_i$$$ with $$$\\max(0, a_i - 1)$$$. Alphen will perform the above operation until $$$a$$$ is sorted, that is $$$a$$$ satisfies $$$a_1 \\leq a_2 \\leq \\ldots \\leq a_n$$$. How many operations will Alphen perform? Under the constraints of the problem, it can be proven that Alphen will perform a finite number of operations."
  },
  {
    "title": "Longest Divisors Interval",
    "url": "https://codeforces.com/problemset/problem/1855/B",
    "description": "Given a positive integer $$$n$$$, find the maximum size of an interval $$$[l, r]$$$ of positive integers such that, for every $$$i$$$ in the interval (i.e., $$$l \\leq i \\leq r$$$), $$$n$$$ is a multiple of $$$i$$$.Given two integers $$$l\\le r$$$, the size of the interval $$$[l, r]$$$ is $$$r-l+1$$$ (i.e., it coincides with the number of integers belonging to the interval)."
  },
  {
    "title": "Dalton the Teacher",
    "url": "https://codeforces.com/problemset/problem/1855/A",
    "description": "Dalton is the teacher of a class with $$$n$$$ students, numbered from $$$1$$$ to $$$n$$$. The classroom contains $$$n$$$ chairs, also numbered from $$$1$$$ to $$$n$$$. Initially student $$$i$$$ is seated on chair $$$p_i$$$. It is guaranteed that $$$p_1,p_2,\\dots, p_n$$$ is a permutation of length $$$n$$$.A student is happy if his/her number is different from the number of his/her chair. In order to make all of his students happy, Dalton can repeatedly perform the following operation: choose two distinct students and swap their chairs. What is the minimum number of moves required to make all the students happy? One can show that, under the constraints of this problem, it is possible to make all the students happy with a finite number of moves.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Mark and Spaceship",
    "url": "https://codeforces.com/problemset/problem/1854/F",
    "description": "Mark loves to move fast. So he made a spaceship that works in $$$4$$$-dimensional space. He wants to use the spaceship to complete missions as fast as possible. In each mission, the spaceship starts at $$$(0, 0, 0, 0)$$$ and needs to end up at $$$(a, b, c, d)$$$. To do this, he instructs the spaceship's computer to execute a series of moves, where each move is a unit step in one of the eight cardinal directions: $$$(\\pm 1, 0, 0, 0)$$$, $$$(0, \\pm 1, 0, 0)$$$, $$$(0, 0, \\pm 1, 0)$$$, $$$(0, 0, 0, \\pm 1)$$$.Unfortunately, he also moved fast when building the spaceship, so there is a bug in the spaceship's code. The first move will be executed once, the second move will be executed twice, the third move will be executed thrice, and so on. In general, the $$$i$$$-th move will be executed $$$i$$$ times.For any four integers $$$a, b, c, d$$$, let $$$f(a, b, c, d)$$$ be the minimum number of moves of a mission that ends up at $$$(a, b, c, d)$$$. Compute the sum of $$$f(a, b, c, d)$$$ over all points (with integer coordinates) such that $$$-A\\le a\\le A$$$, $$$-B\\le b\\le B$$$, $$$-C\\le c\\le C$$$, $$$-D\\le d\\le D$$$."
  },
  {
    "title": "Game Bundles",
    "url": "https://codeforces.com/problemset/problem/1854/E",
    "description": "Rishi is developing games in the 2D metaverse and wants to offer game bundles to his customers. Each game has an associated enjoyment value. A game bundle consists of a subset of games whose total enjoyment value adds up to $$$60$$$.Your task is to choose $$$k$$$ games, where $$$1 \\leq k \\leq 60$$$, along with their respective enjoyment values $$$a_1, a_2, \\dots, a_k$$$, in such a way that exactly $$$m$$$ distinct game bundles can be formed."
  },
  {
    "title": "Michael and Hotel",
    "url": "https://codeforces.com/problemset/problem/1854/D",
    "description": "Michael and Brian are stuck in a hotel with $$$n$$$ rooms, numbered from $$$1$$$ to $$$n$$$, and need to find each other. But this hotel's doors are all locked and the only way of getting around is by using the teleporters in each room. Room $$$i$$$ has a teleporter that will take you to room $$$a_i$$$ (it might be that $$$a_i = i$$$). But they don't know the values of $$$a_1,a_2, \\dots, a_n$$$.Instead, they can call up the front desk to ask queries. In one query, they give a room $$$u$$$, a positive integer $$$k$$$, and a set of rooms $$$S$$$. The hotel concierge answers whether a person starting in room $$$u$$$, and using the teleporters $$$k$$$ times, ends up in a room in $$$S$$$.Brian is in room $$$1$$$. Michael wants to know the set $$$A$$$ of rooms so that if he starts in one of those rooms they can use the teleporters to meet up. He can ask at most $$$2000$$$ queries.The values $$$a_1, a_2, \\dots, a_n$$$ are fixed before the start of the interaction and do not depend on your queries. In other words, the interactor is not adaptive."
  },
  {
    "title": "Expected Destruction",
    "url": "https://codeforces.com/problemset/problem/1854/C",
    "description": "You have a set $$$S$$$ of $$$n$$$ distinct integers between $$$1$$$ and $$$m$$$.Each second you do the following steps:   Pick an element $$$x$$$ in $$$S$$$ uniformly at random.  Remove $$$x$$$ from $$$S$$$.  If $$$x+1 \\leq m$$$ and $$$x+1$$$ is not in $$$S$$$, add $$$x+1$$$ to $$$S$$$. What is the expected number of seconds until $$$S$$$ is empty?Output the answer modulo $$$1\\,000\\,000\\,007$$$.Formally, let $$$P = 1\\,000\\,000\\,007$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{a}{b}$$$, where $$$a$$$ and $$$b$$$ are integers and $$$b \\not \\equiv 0 \\pmod{P}$$$. Output the integer equal to $$$a \\cdot b^{-1} \\bmod P$$$. In other words, output an integer $$$z$$$ such that $$$0 \\le z < P$$$ and $$$z \\cdot b \\equiv a \\pmod{P}$$$."
  },
  {
    "title": "Earn or Unlock",
    "url": "https://codeforces.com/problemset/problem/1854/B",
    "description": "Andrea is playing the game Tanto Cuore.  He has a deck of $$$n$$$ cards with values $$$a_1, \\ldots, a_n$$$ from top to bottom. Each card can be either locked or unlocked. Initially, only the topmost card is unlocked. The game proceeds in turns. In each turn, Andrea chooses an unlocked card in the deck — the value written on the card is $$$v$$$ — and performs exactly one of the following two operations:   Unlock the first $$$v$$$ locked cards in the deck from the top. If there are less than $$$v$$$ locked cards in the deck, then unlock all the locked cards.  Earn $$$v$$$ victory points.  In both cases, after performing the operation, he removes the card from the deck.The game ends when all the cards remaining in the deck are locked, or there are no more cards in the deck.What is the maximum number of victory points Andrea can earn?"
  },
  {
    "title": "Dual (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1854/A2",
    "description": "Popskyy & tiasu - Dual⠀The only difference between the two versions of this problem is the constraint on the maximum number of operations. You can make hacks only if all versions of the problem are solved.You are given an array $$$a_1, a_2,\\dots, a_n$$$ of integers (positive, negative or $$$0$$$). You can perform multiple operations on the array (possibly $$$0$$$ operations).In one operation, you choose $$$i, j$$$ ($$$1 \\leq i, j \\leq n$$$, they can be equal) and set $$$a_i := a_i + a_j$$$ (i.e., add $$$a_j$$$ to $$$a_i$$$).Make the array non-decreasing (i.e., $$$a_i \\leq a_{i+1}$$$ for $$$1 \\leq i \\leq n-1$$$) in at most $$$31$$$ operations. You do not need to minimize the number of operations."
  },
  {
    "title": "Dual (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1854/A1",
    "description": "Popskyy & tiasu - Dual⠀The only difference between the two versions of this problem is the constraint on the maximum number of operations. You can make hacks only if all versions of the problem are solved.You are given an array $$$a_1, a_2,\\dots, a_n$$$ of integers (positive, negative or $$$0$$$). You can perform multiple operations on the array (possibly $$$0$$$ operations).In one operation, you choose $$$i, j$$$ ($$$1 \\leq i, j \\leq n$$$, they can be equal) and set $$$a_i := a_i + a_j$$$ (i.e., add $$$a_j$$$ to $$$a_i$$$).Make the array non-decreasing (i.e., $$$a_i \\leq a_{i+1}$$$ for $$$1 \\leq i \\leq n-1$$$) in at most $$$50$$$ operations. You do not need to minimize the number of operations."
  },
  {
    "title": "Fibonaccharsis",
    "url": "https://codeforces.com/problemset/problem/1853/B",
    "description": "Ntarsis has received two integers $$$n$$$ and $$$k$$$ for his birthday. He wonders how many fibonacci-like sequences of length $$$k$$$ can be formed with $$$n$$$ as the $$$k$$$-th element of the sequence. A sequence of non-decreasing non-negative integers is considered fibonacci-like if $$$f_i = f_{i-1} + f_{i-2}$$$ for all $$$i > 2$$$, where $$$f_i$$$ denotes the $$$i$$$-th element in the sequence. Note that $$$f_1$$$ and $$$f_2$$$ can be arbitrary.For example, sequences such as $$$[4,5,9,14]$$$ and $$$[0,1,1]$$$ are considered fibonacci-like sequences, while $$$[0,0,0,1,1]$$$, $$$[1, 2, 1, 3]$$$, and $$$[-1,-1,-2]$$$ are not: the first two do not always satisfy $$$f_i = f_{i-1} + f_{i-2}$$$, the latter does not satisfy that the elements are non-negative.Impress Ntarsis by helping him with this task."
  },
  {
    "title": "Desorting",
    "url": "https://codeforces.com/problemset/problem/1853/A",
    "description": "Call an array $$$a$$$ of length $$$n$$$ sorted if $$$a_1 \\leq a_2 \\leq \\ldots \\leq a_{n-1} \\leq a_n$$$.Ntarsis has an array $$$a$$$ of length $$$n$$$. He is allowed to perform one type of operation on it (zero or more times):   Choose an index $$$i$$$ ($$$1 \\leq i \\leq n-1$$$).  Add $$$1$$$ to $$$a_1, a_2, \\ldots, a_i$$$.  Subtract $$$1$$$ from $$$a_{i+1}, a_{i+2}, \\ldots, a_n$$$. The values of $$$a$$$ can be negative after an operation.Determine the minimum operations needed to make $$$a$$$ not sorted."
  },
  {
    "title": "Panda Meetups",
    "url": "https://codeforces.com/problemset/problem/1852/F",
    "description": "The red pandas are in town to meet their relatives, the blue pandas! The town is modeled by a number line.The pandas have already planned their meetup, but the schedule keeps changing. You are given $$$q$$$ updates of the form x t c.  If $$$c < 0$$$, it means $$$|c|$$$ more red pandas enter the number line at position $$$x$$$ and time $$$t$$$. Then, each unit of time, they can each independently move one unit in either direction across the number line, or not move at all.  If $$$c > 0$$$, it means that $$$c$$$ more blue pandas check position $$$x$$$ for red pandas at time $$$t$$$. If a blue panda does not meet a red panda at that specific location and time, they dejectedly leave the number line right away. If there is a red panda at a position at the same time a blue panda checks it, they form a friendship and leave the number line. Each red panda can form a friendship with at most one blue panda and vice versa. The updates will be given in order of non-decreasing $$$x$$$ values. After each update, please print the maximum number of friendships if the red pandas move in an optimal order based on all the updates given in the input above (and including) this update. The order in which a red panda moves can change between updates."
  },
  {
    "title": "Rivalries",
    "url": "https://codeforces.com/problemset/problem/1852/E",
    "description": "Ntarsis has an array $$$a$$$ of length $$$n$$$.The power of a subarray $$$a_l \\dots a_r$$$ ($$$1 \\leq l \\leq r \\leq n$$$) is defined as:   The largest value $$$x$$$ such that $$$a_l \\dots a_r$$$ contains $$$x$$$ and neither $$$a_1 \\dots a_{l-1}$$$ nor $$$a_{r+1} \\dots a_n$$$ contains $$$x$$$.  If no such $$$x$$$ exists, the power is $$$0$$$. Call an array $$$b$$$ a rival to $$$a$$$ if the following holds:   The length of both $$$a$$$ and $$$b$$$ are equal to some $$$n$$$.  Over all $$$l, r$$$ where $$$1 \\leq l \\leq r \\leq n$$$, the power of $$$a_l \\dots a_r$$$ equals the power of $$$b_l \\dots b_r$$$.  The elements of $$$b$$$ are positive. Ntarsis wants you to find a rival $$$b$$$ to $$$a$$$ such that the sum of $$$b_i$$$ over $$$1 \\leq i \\leq n$$$ is maximized. Help him with this task!"
  },
  {
    "title": "Miriany and Matchstick",
    "url": "https://codeforces.com/problemset/problem/1852/D",
    "description": "Miriany's matchstick is a $$$2 \\times n$$$ grid that needs to be filled with characters A or B. He has already filled in the first row of the grid and would like you to fill in the second row. You must do so in a way such that the number of adjacent pairs of cells with different characters$$$^\\dagger$$$ is equal to $$$k$$$. If it is impossible, report so.$$$^\\dagger$$$ An adjacent pair of cells with different characters is a pair of cells $$$(r_1, c_1)$$$ and $$$(r_2, c_2)$$$ ($$$1 \\le r_1, r_2 \\le 2$$$, $$$1 \\le c_1, c_2 \\le n$$$) such that $$$|r_1 - r_2| + |c_1 - c_2| = 1$$$ and the characters in $$$(r_1, c_1)$$$ and $$$(r_2, c_2)$$$ are different."
  },
  {
    "title": "Ina of the Mountain",
    "url": "https://codeforces.com/problemset/problem/1852/C",
    "description": "To prepare her \"Takodachi\" dumbo octopuses for world domination, Ninomae Ina'nis, a.k.a. Ina of the Mountain, orders Hoshimachi Suisei to throw boulders at them. Ina asks you, Kiryu Coco, to help choose where the boulders are thrown.There are $$$n$$$ octopuses on a single-file trail on Ina's mountain, numbered $$$1, 2, \\ldots, n$$$. The $$$i$$$-th octopus has a certain initial health value $$$a_i$$$, where $$$1 \\leq a_i \\leq k$$$.Each boulder crushes consecutive octopuses with indexes $$$l, l+1, \\ldots, r$$$, where $$$1 \\leq l \\leq r \\leq n$$$. You can choose the numbers $$$l$$$ and $$$r$$$ arbitrarily for each boulder.For each boulder, the health value of each octopus the boulder crushes is reduced by $$$1$$$. However, as octopuses are immortal, once they reach a health value of $$$0$$$, they will immediately regenerate to a health value of $$$k$$$. Given the octopuses' initial health values, find the minimum number of boulders that need to be thrown to make the health of all octopuses equal to $$$k$$$."
  },
  {
    "title": "Imbalanced Arrays",
    "url": "https://codeforces.com/problemset/problem/1852/B",
    "description": "Ntarsis has come up with an array $$$a$$$ of $$$n$$$ non-negative integers.Call an array $$$b$$$ of $$$n$$$ integers imbalanced if it satisfies the following:   $$$-n\\le b_i\\le n$$$, $$$b_i \\ne 0$$$,  there are no two indices $$$(i, j)$$$ ($$$1 \\le i, j \\le n$$$) such that $$$b_i + b_j = 0$$$,  for each $$$1 \\leq i \\leq n$$$, there are exactly $$$a_i$$$ indices $$$j$$$ ($$$1 \\le j \\le n$$$) such that $$$b_i+b_j>0$$$, where $$$i$$$ and $$$j$$$ are not necessarily distinct. Given the array $$$a$$$, Ntarsis wants you to construct some imbalanced array. Help him solve this task, or determine it is impossible."
  },
  {
    "title": "Ntarsis' Set",
    "url": "https://codeforces.com/problemset/problem/1852/A",
    "description": "Ntarsis has been given a set $$$S$$$, initially containing integers $$$1, 2, 3, \\ldots, 10^{1000}$$$ in sorted order. Every day, he will remove the $$$a_1$$$-th, $$$a_2$$$-th, $$$\\ldots$$$, $$$a_n$$$-th smallest numbers in $$$S$$$ simultaneously.What is the smallest element in $$$S$$$ after $$$k$$$ days?"
  },
  {
    "title": "Vlad and the Mountains",
    "url": "https://codeforces.com/problemset/problem/1851/G",
    "description": "Vlad decided to go on a trip to the mountains. He plans to move between $$$n$$$ mountains, some of which are connected by roads. The $$$i$$$-th mountain has a height of $$$h_i$$$.If there is a road between mountains $$$i$$$ and $$$j$$$, Vlad can move from mountain $$$i$$$ to mountain $$$j$$$ by spending $$$h_j - h_i$$$ units of energy. If his energy drops below zero during the transition, he will not be able to move from mountain $$$i$$$ to mountain $$$j$$$. Note that $$$h_j - h_i$$$ can be negative and then the energy will be restored.Vlad wants to consider different route options, so he asks you to answer the following queries: is it possible to construct some route starting at mountain $$$a$$$ and ending at mountain $$$b$$$, given that he initially has $$$e$$$ units of energy?"
  },
  {
    "title": "Lisa and the Martians",
    "url": "https://codeforces.com/problemset/problem/1851/F",
    "description": "Lisa was kidnapped by martians! It okay, because she has watched a lot of TV shows about aliens, so she knows what awaits her. Let's call integer martian if it is a non-negative integer and strictly less than $$$2^k$$$, for example, when $$$k = 12$$$, the numbers $$$51$$$, $$$1960$$$, $$$0$$$ are martian, and the numbers $$$\\pi$$$, $$$-1$$$, $$$\\frac{21}{8}$$$, $$$4096$$$ are not.The aliens will give Lisa $$$n$$$ martian numbers $$$a_1, a_2, \\ldots, a_n$$$. Then they will ask her to name any martian number $$$x$$$. After that, Lisa will select a pair of numbers $$$a_i, a_j$$$ ($$$i \\neq j$$$) in the given sequence and count $$$(a_i \\oplus x) \\& (a_j \\oplus x)$$$. The operation $$$\\oplus$$$ means Bitwise exclusive OR, the operation $$$\\&$$$ means Bitwise And. For example, $$$(5 \\oplus 17) \\& (23 \\oplus 17) = (00101_2 \\oplus 10001_2) \\& (10111_2 \\oplus 10001_2) = 10100_2 \\& 00110_2 = 00100_2 = 4$$$.Lisa is sure that the higher the calculated value, the higher her chances of returning home. Help the girl choose such $$$i, j, x$$$ that maximize the calculated value."
  },
  {
    "title": "Nastya and Potions",
    "url": "https://codeforces.com/problemset/problem/1851/E",
    "description": "Alchemist Nastya loves mixing potions. There are a total of $$$n$$$ types of potions, and one potion of type $$$i$$$ can be bought for $$$c_i$$$ coins.Any kind of potions can be obtained in no more than one way, by mixing from several others. The potions used in the mixing process will be consumed. Moreover, no potion can be obtained from itself through one or more mixing processes.As an experienced alchemist, Nastya has an unlimited supply of $$$k$$$ types of potions $$$p_1, p_2, \\dots, p_k$$$, but she doesn't know which one she wants to obtain next. To decide, she asks you to find, for each $$$1 \\le i \\le n$$$, the minimum number of coins she needs to spend to obtain a potion of type $$$i$$$ next."
  },
  {
    "title": "Prefix Permutation Sums",
    "url": "https://codeforces.com/problemset/problem/1851/D",
    "description": "Your friends have an array of $$$n$$$ elements, calculated its array of prefix sums and passed it to you, accidentally losing one element during the transfer. Your task is to find out if the given array can matches permutation.A permutation of $$$n$$$ elements is an array of $$$n$$$ numbers from $$$1$$$ to $$$n$$$ such that each number occurs exactly one times in it.The array of prefix sums of the array $$$a$$$ — is such an array $$$b$$$ that $$$b_i = \\sum_{j=1}^i a_j, 1 \\le i \\le n$$$.For example, the original permutation was $$$[1, 5, 2, 4, 3]$$$. Its array of prefix sums — $$$[1, 6, 8, 12, 15]$$$. Having lost one element, you can get, for example, arrays $$$[6, 8, 12, 15]$$$ or $$$[1, 6, 8, 15]$$$.It can also be shown that the array $$$[1, 2, 100]$$$ does not correspond to any permutation."
  },
  {
    "title": "Tiles Comeback",
    "url": "https://codeforces.com/problemset/problem/1851/C",
    "description": "Vlad remembered that he had a series of $$$n$$$ tiles and a number $$$k$$$. The tiles were numbered from left to right, and the $$$i$$$-th tile had colour $$$c_i$$$.If you stand on the first tile and start jumping any number of tiles right, you can get a path of length $$$p$$$. The length of the path is the number of tiles you stood on.Vlad wants to see if it is possible to get a path of length $$$p$$$ such that:   it ends at tile with index $$$n$$$;  $$$p$$$ is divisible by $$$k$$$  the path is divided into blocks of length exactly $$$k$$$ each;  tiles in each block have the same colour, the colors in adjacent blocks are not necessarily different. For example, let $$$n = 14$$$, $$$k = 3$$$.The colours of the tiles are contained in the array $$$c$$$ = [$$$\\color{red}{1}, \\color{violet}{2}, \\color{red}{1}, \\color{red}{1}, \\color{gray}{7}, \\color{orange}{5}, \\color{green}{3}, \\color{green}{3}, \\color{red}{1}, \\color{green}{3}, \\color{blue}{4}, \\color{blue}{4}, \\color{violet}{2}, \\color{blue}{4}$$$]. Then we can construct a path of length $$$6$$$ consisting of $$$2$$$ blocks:$$$\\color{red}{c_1} \\rightarrow \\color{red}{c_3} \\rightarrow \\color{red}{c_4} \\rightarrow \\color{blue}{c_{11}} \\rightarrow \\color{blue}{c_{12}} \\rightarrow \\color{blue}{c_{14}}$$$All tiles from the $$$1$$$-st block will have colour $$$\\color{red}{\\textbf{1}}$$$, from the $$$2$$$-nd block will have colour $$$\\color{blue}{\\textbf{4}}$$$.It is also possible to construct a path of length $$$9$$$ in this example, in which all tiles from the $$$1$$$-st block will have colour $$$\\color{red}{\\textbf{1}}$$$, from the $$$2$$$-nd block will have colour $$$\\color{green}{\\textbf{3}}$$$, and from the $$$3$$$-rd block will have colour $$$\\color{blue}{\\textbf{4}}$$$."
  },
  {
    "title": "Parity Sort",
    "url": "https://codeforces.com/problemset/problem/1851/B",
    "description": "You have an array of integers $$$a$$$ of length $$$n$$$. You can apply the following operation to the given array:   Swap two elements $$$a_i$$$ and $$$a_j$$$ such that $$$i \\neq j$$$, $$$a_i$$$ and $$$a_j$$$ are either both even or both odd.  Determine whether it is possible to sort the array in non-decreasing order by performing the operation any number of times (possibly zero).For example, let $$$a$$$ = [$$$7, 10, 1, 3, 2$$$]. Then we can perform $$$3$$$ operations to sort the array:   Swap $$$a_3 = 1$$$ and $$$a_1 = 7$$$, since $$$1$$$ and $$$7$$$ are odd. We get $$$a$$$ = [$$$1, 10, 7, 3, 2$$$];  Swap $$$a_2 = 10$$$ and $$$a_5 = 2$$$, since $$$10$$$ and $$$2$$$ are even. We get $$$a$$$ = [$$$1, 2, 7, 3, 10$$$];  Swap $$$a_4 = 3$$$ and $$$a_3 = 7$$$, since $$$3$$$ and $$$7$$$ are odd. We get $$$a$$$ = [$$$1, 2, 3, 7, 10$$$]. "
  },
  {
    "title": "Escalator Conversations",
    "url": "https://codeforces.com/problemset/problem/1851/A",
    "description": "One day, Vlad became curious about who he can have a conversation with on the escalator in the subway. There are a total of $$$n$$$ passengers. The escalator has a total of $$$m$$$ steps, all steps indexed from $$$1$$$ to $$$m$$$ and $$$i$$$-th step has height $$$i \\cdot k$$$.Vlad's height is $$$H$$$ centimeters. Two people with heights $$$a$$$ and $$$b$$$ can have a conversation on the escalator if they are standing on different steps and the height difference between them is equal to the height difference between the steps.For example, if two people have heights $$$170$$$ and $$$180$$$ centimeters, and $$$m = 10, k = 5$$$, then they can stand on steps numbered $$$7$$$ and $$$5$$$, where the height difference between the steps is equal to the height difference between the two people: $$$k \\cdot 2 = 5 \\cdot 2 = 10 = 180 - 170$$$. There are other possible ways.Given an array $$$h$$$ of size $$$n$$$, where $$$h_i$$$ represents the height of the $$$i$$$-th person. Vlad is interested in how many people he can have a conversation with on the escalator individually.For example, if $$$n = 5, m = 3, k = 3, H = 11$$$, and $$$h = [5, 4, 14, 18, 2]$$$, Vlad can have a conversation with the person with height $$$5$$$ (Vlad will stand on step $$$1$$$, and the other person will stand on step $$$3$$$) and with the person with height $$$14$$$ (for example, Vlad can stand on step $$$3$$$, and the other person will stand on step $$$2$$$). Vlad cannot have a conversation with the person with height $$$2$$$ because even if they stand on the extreme steps of the escalator, the height difference between them will be $$$6$$$, while their height difference is $$$9$$$. Vlad cannot have a conversation with the rest of the people on the escalator, so the answer for this example is $$$2$$$."
  },
  {
    "title": "The Third Letter",
    "url": "https://codeforces.com/problemset/problem/1850/H",
    "description": "In order to win his toughest battle, Mircea came up with a great strategy for his army. He has $$$n$$$ soldiers and decided to arrange them in a certain way in camps. Each soldier has to belong to exactly one camp, and there is one camp at each integer point on the $$$x$$$-axis (at points $$$\\cdots, -2, -1, 0, 1, 2, \\cdots$$$).The strategy consists of $$$m$$$ conditions. Condition $$$i$$$ tells that soldier $$$a_i$$$ should belong to a camp that is situated $$$d_i$$$ meters in front of the camp that person $$$b_i$$$ belongs to. (If $$$d_i < 0$$$, then $$$a_i$$$'s camp should be $$$-d_i$$$ meters behind $$$b_i$$$'s camp.)Now, Mircea wonders if there exists a partition of soldiers that respects the condition and he asks for your help! Answer \"YES\" if there is a partition of the $$$n$$$ soldiers that satisfies all of the $$$m$$$ conditions and \"NO\" otherwise.Note that two different soldiers may be placed in the same camp."
  },
  {
    "title": "The Morning Star",
    "url": "https://codeforces.com/problemset/problem/1850/G",
    "description": "A compass points directly toward the morning star. It can only point in one of eight directions: the four cardinal directions (N, S, E, W) or some combination (NW, NE, SW, SE). Otherwise, it will break.  The directions the compass can point. There are $$$n$$$ distinct points with integer coordinates on a plane. How many ways can you put a compass at one point and the morning star at another so that the compass does not break?"
  },
  {
    "title": "We Were Both Children",
    "url": "https://codeforces.com/problemset/problem/1850/F",
    "description": "Mihai and Slavic were looking at a group of $$$n$$$ frogs, numbered from $$$1$$$ to $$$n$$$, all initially located at point $$$0$$$. Frog $$$i$$$ has a hop length of $$$a_i$$$. Each second, frog $$$i$$$ hops $$$a_i$$$ units forward. Before any frogs start hopping, Slavic and Mihai can place exactly one trap in a coordinate in order to catch all frogs that will ever pass through the corresponding coordinate.However, the children can't go far away from their home so they can only place a trap in the first $$$n$$$ points (that is, in a point with a coordinate between $$$1$$$ and $$$n$$$) and the children can't place a trap in point $$$0$$$ since they are scared of frogs.Can you help Slavic and Mihai find out what is the maximum number of frogs they can catch using a trap?"
  },
  {
    "title": "Cardboard for Pictures",
    "url": "https://codeforces.com/problemset/problem/1850/E",
    "description": "Mircea has $$$n$$$ pictures. The $$$i$$$-th picture is a square with a side length of $$$s_i$$$ centimeters. He mounted each picture on a square piece of cardboard so that each picture has a border of $$$w$$$ centimeters of cardboard on all sides. In total, he used $$$c$$$ square centimeters of cardboard. Given the picture sizes and the value $$$c$$$, can you find the value of $$$w$$$?  A picture of the first test case. Here $$$c = 50 = 5^2 + 4^2 + 3^2$$$, so $$$w=1$$$ is the answer. Please note that the piece of cardboard goes behind each picture, not just the border."
  },
  {
    "title": "Balanced Round",
    "url": "https://codeforces.com/problemset/problem/1850/D",
    "description": "You are the author of a Codeforces round and have prepared $$$n$$$ problems you are going to set, problem $$$i$$$ having difficulty $$$a_i$$$. You will do the following process:   remove some (possibly zero) problems from the list;  rearrange the remaining problems in any order you wish. A round is considered balanced if and only if the absolute difference between the difficulty of any two consecutive problems is at most $$$k$$$ (less or equal than $$$k$$$).What is the minimum number of problems you have to remove so that an arrangement of problems is balanced?"
  },
  {
    "title": "Word on the Paper",
    "url": "https://codeforces.com/problemset/problem/1850/C",
    "description": "On an $$$8 \\times 8$$$ grid of dots, a word consisting of lowercase Latin letters is written vertically in one column, from top to bottom. What is it?"
  },
  {
    "title": "Ten Words of Wisdom",
    "url": "https://codeforces.com/problemset/problem/1850/B",
    "description": "In the game show \"Ten Words of Wisdom\", there are $$$n$$$ participants numbered from $$$1$$$ to $$$n$$$, each of whom submits one response. The $$$i$$$-th response is $$$a_i$$$ words long and has quality $$$b_i$$$. No two responses have the same quality, and at least one response has length at most $$$10$$$.The winner of the show is the response which has the highest quality out of all responses that are not longer than $$$10$$$ words. Which response is the winner?"
  },
  {
    "title": "To My Critics",
    "url": "https://codeforces.com/problemset/problem/1850/A",
    "description": "Suneet has three digits $$$a$$$, $$$b$$$, and $$$c$$$. Since math isn't his strongest point, he asks you to determine if you can choose any two digits to make a sum greater or equal to $$$10$$$.Output \"YES\" if there is such a pair, and \"NO\" otherwise."
  },
  {
    "title": "XOR Partition",
    "url": "https://codeforces.com/problemset/problem/1849/F",
    "description": "For a set of integers $$$S$$$, let's define its cost as the minimum value of $$$x \\oplus y$$$ among all pairs of different integers from the set (here, $$$\\oplus$$$ denotes bitwise XOR). If there are less than two elements in the set, its cost is equal to $$$2^{30}$$$.You are given a set of integers $$$\\{a_1, a_2, \\dots, a_n\\}$$$. You have to partition it into two sets $$$S_1$$$ and $$$S_2$$$ in such a way that every element of the given set belongs to exactly one of these two sets. The value of the partition is the minimum among the costs of $$$S_1$$$ and $$$S_2$$$.Find the partition with the maximum possible value."
  },
  {
    "title": "Max to the Right of Min",
    "url": "https://codeforces.com/problemset/problem/1849/E",
    "description": "You are given a permutation $$$p$$$ of length $$$n$$$ — an array, consisting of integers from $$$1$$$ to $$$n$$$, all distinct.Let $$$p_{l,r}$$$ denote a subarray — an array formed by writing down elements from index $$$l$$$ to index $$$r$$$, inclusive.Let $$$\\mathit{maxpos}_{l,r}$$$ denote the index of the maximum element on $$$p_{l,r}$$$. Similarly, let $$$\\mathit{minpos}_{l,r}$$$ denote the index of the minimum element on it.Calculate the number of subarrays $$$p_{l,r}$$$ such that $$$\\mathit{maxpos}_{l,r} > \\mathit{minpos}_{l,r}$$$."
  },
  {
    "title": "Array Painting",
    "url": "https://codeforces.com/problemset/problem/1849/D",
    "description": "You are given an array of $$$n$$$ integers, where each integer is either $$$0$$$, $$$1$$$, or $$$2$$$. Initially, each element of the array is blue.Your goal is to paint each element of the array red. In order to do so, you can perform operations of two types:  pay one coin to choose a blue element and paint it red;  choose a red element which is not equal to $$$0$$$ and a blue element adjacent to it, decrease the chosen red element by $$$1$$$, and paint the chosen blue element red. What is the minimum number of coins you have to spend to achieve your goal?"
  },
  {
    "title": "Binary String Copying",
    "url": "https://codeforces.com/problemset/problem/1849/C",
    "description": "You are given a string $$$s$$$ consisting of $$$n$$$ characters 0 and/or 1.You make $$$m$$$ copies of this string, let the $$$i$$$-th copy be the string $$$t_i$$$. Then you perform exactly one operation on each of the copies: for the $$$i$$$-th copy, you sort its substring $$$[l_i; r_i]$$$ (the substring from the $$$l_i$$$-th character to the $$$r_i$$$-th character, both endpoints inclusive). Note that each operation affects only one copy, and each copy is affected by only one operation.Your task is to calculate the number of different strings among $$$t_1, t_2, \\ldots, t_m$$$. Note that the initial string $$$s$$$ should be counted only if at least one of the copies stays the same after the operation."
  },
  {
    "title": "Monsters",
    "url": "https://codeforces.com/problemset/problem/1849/B",
    "description": "Monocarp is playing yet another computer game. And yet again, his character is killing some monsters. There are $$$n$$$ monsters, numbered from $$$1$$$ to $$$n$$$, and the $$$i$$$-th of them has $$$a_i$$$ health points initially.Monocarp's character has an ability that deals $$$k$$$ damage to the monster with the highest current health. If there are several of them, the one with the smaller index is chosen. If a monster's health becomes less than or equal to $$$0$$$ after Monocarp uses his ability, then it dies.Monocarp uses his ability until all monsters die. Your task is to determine the order in which monsters will die."
  },
  {
    "title": "Morning Sandwich",
    "url": "https://codeforces.com/problemset/problem/1849/A",
    "description": "Monocarp always starts his morning with a good ol' sandwich. Sandwiches Monocarp makes always consist of bread, cheese and/or ham.A sandwich always follows the formula:   a piece of bread  a slice of cheese or ham  a piece of bread  $$$\\dots$$$  a slice of cheese or ham  a piece of bread So it always has bread on top and at the bottom, and it alternates between bread and filling, where filling is a slice of either cheese or ham. Each piece of bread and each slice of cheese or ham is called a layer.Today Monocarp woke up and discovered that he has $$$b$$$ pieces of bread, $$$c$$$ slices of cheese and $$$h$$$ slices of ham. What is the maximum number of layers his morning sandwich can have?"
  },
  {
    "title": "Vika and Wiki",
    "url": "https://codeforces.com/problemset/problem/1848/F",
    "description": "Recently, Vika was studying her favorite internet resource - Wikipedia.On the expanses of Wikipedia, she read about an interesting mathematical operation bitwise XOR, denoted by $$$\\oplus$$$. Vika began to study the properties of this mysterious operation. To do this, she took an array $$$a$$$ consisting of $$$n$$$ non-negative integers and applied the following operation to all its elements at the same time: $$$a_i = a_i \\oplus a_{(i+1) \\bmod n}$$$. Here $$$x \\bmod y$$$ denotes the remainder of dividing $$$x$$$ by $$$y$$$. The elements of the array are numbered starting from $$$0$$$.Since it is not enough to perform the above actions once for a complete study, Vika repeats them until the array $$$a$$$ becomes all zeros.Determine how many of the above actions it will take to make all elements of the array $$$a$$$ zero. If this moment never comes, output $$$-1$$$."
  },
  {
    "title": "Vika and Stone Skipping",
    "url": "https://codeforces.com/problemset/problem/1848/E",
    "description": "In Vika's hometown, Vladivostok, there is a beautiful sea.Often you can see kids skimming stones. This is the process of throwing a stone into the sea at a small angle, causing it to fly far and bounce several times off the water surface.Vika has skimmed stones many times and knows that if you throw a stone from the shore perpendicular to the coastline with a force of $$$f$$$, it will first touch the water at a distance of $$$f$$$ from the shore, then bounce off and touch the water again at a distance of $$$f - 1$$$ from the previous point of contact. The stone will continue to fly in a straight line, reducing the distances between the points where it touches the water, until it falls into the sea.Formally, the points at which the stone touches the water surface will have the following coordinates: $$$f$$$, $$$f + (f - 1)$$$, $$$f + (f - 1) + (f - 2)$$$, ... , $$$f + (f - 1) + (f - 2) + \\ldots + 1$$$ (assuming that $$$0$$$ is the coordinate of the shoreline).Once, while walking along the embankment of Vladivostok in the evening, Vika saw a group of guys skipping stones across the sea, launching them from the same point with different forces.She became interested in what is the maximum number of guys who can launch a stone with their force $$$f_i$$$, so that all $$$f_i$$$ are different positive integers, and all $$$n$$$ stones touched the water at the point with the coordinate $$$x$$$ (assuming that $$$0$$$ is the coordinate of the shoreline).After thinking a little, Vika answered her question. After that, she began to analyze how the answer to her question would change if she multiplied the coordinate $$$x$$$ by some positive integers $$$x_1$$$, $$$x_2$$$, ... , $$$x_q$$$, which she picked for analysis.Vika finds it difficult to cope with such analysis on her own, so she turned to you for help.Formally, Vika is interested in the answer to her question for the coordinates $$$X_1 = x \\cdot x_1$$$, $$$X_2 = X_1 \\cdot x_2$$$, ... , $$$X_q = X_{q-1} \\cdot x_q$$$. Since the answer for such coordinates can be quite large, find it modulo $$$M$$$. It is guaranteed that $$$M$$$ is prime."
  },
  {
    "title": "Vika and Bonuses",
    "url": "https://codeforces.com/problemset/problem/1848/D",
    "description": "A new bonus system has been introduced at Vika's favorite cosmetics store, \"Golden Pear\"!The system works as follows: suppose a customer has $$$b$$$ bonuses. Before paying for the purchase, the customer can choose one of two options:   Get a discount equal to the current number of bonuses, while the bonuses are not deducted.  Accumulate an additional $$$x$$$ bonuses, where $$$x$$$ is the last digit of the number $$$b$$$. As a result, the customer's account will have $$$b+x$$$ bonuses. For example, if a customer had $$$24$$$ bonuses, he can either get a discount of $$$24$$$ or accumulate an additional $$$4$$$ bonuses, after which his account will have $$$28$$$ bonuses.At the moment, Vika has already accumulated $$$s$$$ bonuses.The girl knows that during the remaining time of the bonus system, she will make $$$k$$$ more purchases at the \"Golden Pear\" store network.After familiarizing herself with the rules of the bonus system, Vika became interested in the maximum total discount she can get.Help the girl answer this question."
  },
  {
    "title": "Vika and Price Tags",
    "url": "https://codeforces.com/problemset/problem/1848/C",
    "description": "Vika came to her favorite cosmetics store \"Golden Pear\". She noticed that the prices of $$$n$$$ items have changed since her last visit.She decided to analyze how much the prices have changed and calculated the difference between the old and new prices for each of the $$$n$$$ items.Vika enjoyed calculating the price differences and decided to continue this process.Let the old prices be represented as an array of non-negative integers $$$a$$$, and the new prices as an array of non-negative integers $$$b$$$. Both arrays have the same length $$$n$$$.In one operation, Vika constructs a new array $$$c$$$ according to the following principle: $$$c_i = |a_i - b_i|$$$. Then, array $$$c$$$ renamed into array $$$b$$$, and array $$$b$$$ renamed into array $$$a$$$ at the same time, after which Vika repeats the operation with them.For example, if $$$a = [1, 2, 3, 4, 5, 6, 7]$$$; $$$b = [7, 6, 5, 4, 3, 2, 1]$$$, then $$$c = [6, 4, 2, 0, 2, 4, 6]$$$. Then, $$$a = [7, 6, 5, 4, 3, 2, 1]$$$; $$$b = [6, 4, 2, 0, 2, 4, 6]$$$.Vika decided to call a pair of arrays $$$a$$$, $$$b$$$ dull if after some number of such operations all elements of array $$$a$$$ become zeros.Output \"YES\" if the original pair of arrays is dull, and \"NO\" otherwise."
  },
  {
    "title": "Vika and the Bridge",
    "url": "https://codeforces.com/problemset/problem/1848/B",
    "description": "In the summer, Vika likes to visit her country house. There is everything for relaxation: comfortable swings, bicycles, and a river.There is a wooden bridge over the river, consisting of $$$n$$$ planks. It is quite old and unattractive, so Vika decided to paint it. And in the shed, they just found cans of paint of $$$k$$$ colors.After painting each plank in one of $$$k$$$ colors, Vika was about to go swinging to take a break from work. However, she realized that the house was on the other side of the river, and the paint had not yet completely dried, so she could not walk on the bridge yet.In order not to spoil the appearance of the bridge, Vika decided that she would still walk on it, but only stepping on planks of the same color. Otherwise, a small layer of paint on her sole will spoil the plank of another color. Vika also has a little paint left, but it will only be enough to repaint one plank of the bridge.Now Vika is standing on the ground in front of the first plank. To walk across the bridge, she will choose some planks of the same color (after repainting), which have numbers $$$1 \\le i_1 < i_2 < \\ldots < i_m \\le n$$$ (planks are numbered from $$$1$$$ from left to right). Then Vika will have to cross $$$i_1 - 1, i_2 - i_1 - 1, i_3 - i_2 - 1, \\ldots, i_m - i_{m-1} - 1, n - i_m$$$ planks as a result of each of $$$m + 1$$$ steps.Since Vika is afraid of falling, she does not want to take too long steps. Help her and tell her the minimum possible maximum number of planks she will have to cross in one step, if she can repaint one (or zero) plank a different color while crossing the bridge."
  },
  {
    "title": "Vika and Her Friends",
    "url": "https://codeforces.com/problemset/problem/1848/A",
    "description": "Vika and her friends went shopping in a mall, which can be represented as a rectangular grid of rooms with sides of length $$$n$$$ and $$$m$$$. Each room has coordinates $$$(a, b)$$$, where $$$1 \\le a \\le n, 1 \\le b \\le m$$$. Thus we call a hall with coordinates $$$(c, d)$$$ a neighbouring for it if $$$|a - c| + |b - d| = 1$$$.Tired of empty fashion talks, Vika decided to sneak away unnoticed. But since she hasn't had a chance to visit one of the shops yet, she doesn't want to leave the mall. After a while, her friends noticed Vika's disappearance and started looking for her.Currently, Vika is in a room with coordinates $$$(x, y)$$$, and her $$$k$$$ friends are in rooms with coordinates $$$(x_1, y_1)$$$, $$$(x_2, y_2)$$$, ... $$$, (x_k, y_k)$$$, respectively. The coordinates can coincide. Note that all the girls must move to the neighbouring rooms.Every minute, first Vika moves to one of the adjacent to the side rooms of her choice, and then each friend (seeing Vika's choice) also chooses one of the adjacent rooms to move to.If at the end of the minute (that is, after all the girls have moved on to the neighbouring rooms) at least one friend is in the same room as Vika, she is caught and all the other friends are called.Tell us, can Vika run away from her annoying friends forever, or will she have to continue listening to empty fashion talks after some time?"
  },
  {
    "title": "The Boss's Identity",
    "url": "https://codeforces.com/problemset/problem/1847/F",
    "description": "While tracking Diavolo's origins, Giorno receives a secret code from Polnareff. The code can be represented as an infinite sequence of positive integers: $$$a_1, a_2, \\dots $$$. Giorno immediately sees the pattern behind the code. The first $$$n$$$ numbers $$$a_1, a_2, \\dots, a_n$$$ are given. For $$$i > n$$$ the value of $$$a_i$$$ is $$$(a_{i-n}\\ |\\ a_{i-n+1})$$$, where $$$|$$$ denotes the bitwise OR operator.Pieces of information about Diavolo are hidden in $$$q$$$ questions. Each question has a positive integer $$$v$$$ associated with it and its answer is the smallest index $$$i$$$ such that $$$a_i > v$$$. If no such $$$i$$$ exists, the answer is $$$-1$$$. Help Giorno in answering the questions!"
  },
  {
    "title": "Triangle Platinum?",
    "url": "https://codeforces.com/problemset/problem/1847/E",
    "description": "This is an interactive problem.Made in Heaven is a rather curious Stand. Of course, it is (arguably) the strongest Stand in existence, but it is also an ardent puzzle enjoyer. For example, it gave Qtaro the following problem recently:Made in Heaven has $$$n$$$ hidden integers $$$a_1, a_2, \\dots, a_n$$$ ($$$3 \\le n \\le 5000$$$, $$$1 \\le a_i \\le 4$$$). Qtaro must determine all the $$$a_i$$$ by asking Made in Heaven some queries of the following form:   In one query Qtaro is allowed to give Made in Heaven three distinct indexes $$$i$$$, $$$j$$$ and $$$k$$$ ($$$1 \\leq i, j, k \\leq n$$$).  If $$$a_i, a_j, a_k$$$ form the sides of a non-degenerate triangle$$$^\\dagger$$$, Made in Heaven will respond with the area of this triangle.  Otherwise, Made in Heaven will respond with $$$0$$$. By asking at most $$$5500$$$ such questions, Qtaro must either tell Made in Heaven all the values of the $$$a_i$$$, or report that it is not possible to uniquely determine them.Unfortunately due to the universe reboot, Qtaro is not as smart as Jotaro. Please help Qtaro solve Made In Heaven's problem.  —————————————————————— $$$^\\dagger$$$ Three positive integers $$$a, b, c$$$ are said to form the sides of a non-degenerate triangle if and only if all of the following three inequalities hold:   $$$a+b > c$$$,  $$$b+c > a$$$,  $$$c+a > b$$$. "
  },
  {
    "title": "Professor Higashikata",
    "url": "https://codeforces.com/problemset/problem/1847/D",
    "description": "Josuke is tired of his peaceful life in Morioh. Following in his nephew Jotaro's footsteps, he decides to study hard and become a professor of computer science. While looking up competitive programming problems online, he comes across the following one: Let $$$s$$$ be a binary string of length $$$n$$$. An operation on $$$s$$$ is defined as choosing two distinct integers $$$i$$$ and $$$j$$$ ($$$1 \\leq i < j \\leq n$$$), and swapping the characters $$$s_i, s_j$$$.Consider the $$$m$$$ strings $$$t_1, t_2, \\ldots, t_m$$$, where $$$t_i$$$ is the substring $$$^\\dagger$$$ of $$$s$$$ from $$$l_i$$$ to $$$r_i$$$. Define $$$t(s) = t_1+t_2+\\ldots+t_m$$$ as the concatenation of the strings $$$t_i$$$ in that order.There are $$$q$$$ updates to the string. In the $$$i$$$-th update $$$s_{x_i}$$$ gets flipped. That is if $$$s_{x_i}=1$$$, then $$$s_{x_i}$$$ becomes $$$0$$$ and vice versa. After each update, find the minimum number of operations one must perform on $$$s$$$ to make $$$t(s)$$$ lexicographically as large$$$^\\ddagger$$$ as possible. Note that no operation is actually performed. We are only interested in the number of operations.Help Josuke in his dream by solving the problem for him. —————————————————————— $$$\\dagger$$$ A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.$$$\\ddagger$$$ A string $$$a$$$ is lexicographically larger than a string $$$b$$$ of the same length if and only if the following holds:   in the first position where $$$a$$$ and $$$b$$$ differ, the string $$$a$$$ has a $$$1$$$, and the string $$$b$$$ has a $$$0$$$. "
  },
  {
    "title": "Vampiric Powers, anyone?",
    "url": "https://codeforces.com/problemset/problem/1847/C",
    "description": "DIO knows that the Stardust Crusaders have determined his location and will be coming to fight him. To foil their plans he decides to send out some Stand users to fight them. Initially, he summoned $$$n$$$ Stand users with him, the $$$i$$$-th one having a strength of $$$a_i$$$. Using his vampiric powers, he can do the following as many times as he wishes:  Let the current number of Stand users be $$$m$$$.  DIO chooses an index $$$i$$$ ($$$1 \\le i \\le m$$$).  Then he summons a new Stand user, with index $$$m+1$$$ and strength given by: $$$$$$a_{m+1} = a_i \\oplus a_{i+1} \\oplus \\ldots \\oplus a_m,$$$$$$where the operator $$$\\oplus$$$ denotes the bitwise XOR operation.  Now, the number of Stand users becomes $$$m+1$$$. Unfortunately for DIO, by using Hermit Purple's divination powers, the Crusaders know that he is plotting this, and they also know the strengths of the original Stand users. Help the Crusaders find the maximum possible strength of a Stand user among all possible ways that DIO can summon."
  },
  {
    "title": "Hamon Odyssey",
    "url": "https://codeforces.com/problemset/problem/1847/B",
    "description": "Jonathan is fighting against DIO's Vampire minions. There are $$$n$$$ of them with strengths $$$a_1, a_2, \\dots, a_n$$$. $$$\\def\\and {{\\,\\texttt{&}\\,}}$$$Denote $$$(l, r)$$$ as the group consisting of the vampires with indices from $$$l$$$ to $$$r$$$. Jonathan realizes that the strength of any such group is in its weakest link, that is, the bitwise AND. More formally, the strength level of the group $$$(l, r)$$$ is defined as $$$$$$f(l,r) = a_l \\and a_{l+1} \\and a_{l+2} \\and \\ldots \\and a_r.$$$$$$ Here, $$$\\and$$$ denotes the bitwise AND operation. Because Jonathan would like to defeat the vampire minions fast, he will divide the vampires into contiguous groups, such that each vampire is in exactly one group, and the sum of strengths of the groups is minimized. Among all ways to divide the vampires, he would like to find the way with the maximum number of groups.Given the strengths of each of the $$$n$$$ vampires, find the maximum number of groups among all possible ways to divide the vampires with the smallest sum of strengths."
  },
  {
    "title": "The Man who became a God ",
    "url": "https://codeforces.com/problemset/problem/1847/A",
    "description": "Kars is tired and resentful of the narrow mindset of his village since they are content with staying where they are and are not trying to become the perfect life form. Being a top-notch inventor, Kars wishes to enhance his body and become the perfect life form. Unfortunately, $$$n$$$ of the villagers have become suspicious of his ideas. The $$$i$$$-th villager has a suspicion of $$$a_i$$$ on him. Individually each villager is scared of Kars, so they form into groups to be more powerful.The power of the group of villagers from $$$l$$$ to $$$r$$$ be defined as $$$f(l,r)$$$ where $$$$$$f(l,r) = |a_l - a_{l+1}| + |a_{l + 1} - a_{l + 2}| + \\ldots + |a_{r-1} - a_r|.$$$$$$Here $$$|x-y|$$$ is the absolute value of $$$x-y$$$. A group with only one villager has a power of $$$0$$$.Kars wants to break the villagers into exactly $$$k$$$ contiguous subgroups so that the sum of their power is minimized. Formally, he must find $$$k - 1$$$ positive integers $$$1 \\le r_1 < r_2 < \\ldots < r_{k - 1} < n$$$ such that $$$f(1, r_1) + f(r_1 + 1, r_2) + \\ldots + f(r_{k-1} + 1, n)$$$ is minimised. Help Kars in finding the minimum value of $$$f(1, r_1) + f(r_1 + 1, r_2) + \\ldots + f(r_{k-1} + 1, n)$$$."
  },
  {
    "title": "Rudolf and CodeVid-23",
    "url": "https://codeforces.com/problemset/problem/1846/G",
    "description": "A new virus called \"CodeVid-23\" has spread among programmers. Rudolf, being a programmer, was not able to avoid it.There are $$$n$$$ symptoms numbered from $$$1$$$ to $$$n$$$ that can appear when infected. Initially, Rudolf has some of them. He went to the pharmacy and bought $$$m$$$ medicines.For each medicine, the number of days it needs to be taken is known, and the set of symptoms it removes. Unfortunately, medicines often have side effects. Therefore, for each medicine, the set of symptoms that appear when taking it is also known.After reading the instructions, Rudolf realized that taking more than one medicine at a time is very unhealthy.Rudolph wants to be healed as soon as possible. Therefore, he asks you to calculate the minimum number of days to remove all symptoms, or to say that it is impossible."
  },
  {
    "title": "Rudolph and Mimic",
    "url": "https://codeforces.com/problemset/problem/1846/F",
    "description": "This is an interactive task.Rudolph is a scientist who studies alien life forms. There is a room in front of Rudolph with $$$n$$$ different objects scattered around. Among the objects there is exactly one amazing creature — a mimic that can turn into any object. He has already disguised himself in this room and Rudolph needs to find him by experiment.The experiment takes place in several stages. At each stage, the following happens: Rudolf looks at all the objects in the room and writes down their types. The type of each object is indicated by a number; there can be several objects of the same type. After inspecting, Rudolph can point to an object that he thinks is a mimic. After that, the experiment ends. Rudolph only has one try, so if he is unsure of the mimic's position, he does the next step instead. Rudolf can remove any number of objects from the room (possibly zero). Then Rudolf leaves the room and at this time all objects, including the mimic, are mixed with each other, their order is changed, and the mimic can transform into any other object (even one that is not in the room). After this, Rudolf returns to the room and repeats the stage. The mimic may not change appearance, but it can not remain a same object for more than two stages in a row.Rudolf's task is to detect mimic in no more than five stages."
  },
  {
    "title": "Rudolf and Snowflakes (hard version)",
    "url": "https://codeforces.com/problemset/problem/1846/E2",
    "description": "This is the hard version of the problem. The only difference is that in this version $$$n \\le 10^{18}$$$.One winter morning, Rudolf was looking thoughtfully out the window, watching the falling snowflakes. He quickly noticed a certain symmetry in the configuration of the snowflakes. And like a true mathematician, Rudolf came up with a mathematical model of a snowflake.He defined a snowflake as an undirected graph constructed according to the following rules:   Initially, the graph has only one vertex.  Then, more vertices are added to the graph. The initial vertex is connected by edges to $$$k$$$ new vertices ($$$k > 1$$$).  Each vertex that is connected to only one other vertex is connected by edges to $$$k$$$ more new vertices. This step should be done at least once. The smallest possible snowflake for $$$k = 4$$$ is shown in the figure.   After some mathematical research, Rudolf realized that such snowflakes may not have any number of vertices. Help Rudolf check whether a snowflake with $$$n$$$ vertices can exist."
  },
  {
    "title": "Rudolf and Snowflakes (simple version)",
    "url": "https://codeforces.com/problemset/problem/1846/E1",
    "description": "This is a simple version of the problem. The only difference is that in this version $$$n \\le 10^6$$$.One winter morning, Rudolf was looking thoughtfully out the window, watching the falling snowflakes. He quickly noticed a certain symmetry in the configuration of the snowflakes. And like a true mathematician, Rudolf came up with a mathematical model of a snowflake.He defined a snowflake as an undirected graph constructed according to the following rules:   Initially, the graph has only one vertex.  Then, more vertices are added to the graph. The initial vertex is connected by edges to $$$k$$$ new vertices ($$$k > 1$$$).  Each vertex that is connected to only one other vertex is connected by edges to $$$k$$$ more new vertices. This step should be done at least once. The smallest possible snowflake for $$$k = 4$$$ is shown in the figure.   After some mathematical research, Rudolf realized that such snowflakes may not have any number of vertices. Help Rudolf check if a snowflake with $$$n$$$ vertices can exist."
  },
  {
    "title": "Rudolph and Christmas Tree",
    "url": "https://codeforces.com/problemset/problem/1846/D",
    "description": "Rudolph drew a beautiful Christmas tree and decided to print the picture. However, the ink in the cartridge often runs out at the most inconvenient moment. Therefore, Rudolph wants to calculate in advance how much green ink he will need.The tree is a vertical trunk with identical triangular branches at different heights. The thickness of the trunk is negligible.Each branch is an isosceles triangle with base $$$d$$$ and height $$$h$$$, whose base is perpendicular to the trunk. The triangles are arranged upward at an angle, and the trunk passes exactly in the middle. The base of the $$$i$$$-th triangle is located at a height of $$$y_i$$$.The figure below shows an example of a tree with $$$d = 4, h = 2$$$ and three branches with bases at heights $$$[1, 4, 5]$$$.   Help Rudolph calculate the total area of the tree branches."
  },
  {
    "title": "Rudolf and the Another Competition",
    "url": "https://codeforces.com/problemset/problem/1846/C",
    "description": "Rudolf has registered for a programming competition that will follow the rules of ICPC. The rules imply that for each solved problem, a participant gets $$$1$$$ point, and also incurs a penalty equal to the number of minutes passed from the beginning of the competition to the moment of solving the problem. In the final table, the participant with the most points is ranked higher, and in case of a tie in points, the participant with the lower penalty is ranked higher.In total, $$$n$$$ participants have registered for the competition. Rudolf is a participant with index $$$1$$$. It is known that $$$m$$$ problems will be proposed. And the competition will last $$$h$$$ minutes.A powerful artificial intelligence has predicted the values $$$t_{i, j}$$$, which represent the number of minutes it will take for the $$$i$$$-th participant to solve the $$$j$$$-th problem.Rudolf realized that the order of solving problems will affect the final result. For example, if $$$h = 120$$$, and the times to solve problems are [$$$20, 15, 110$$$], then if Rudolf solves the problems in the order:  $$${3, 1, 2}$$$, then he will only solve the third problem and get $$$1$$$ point and $$$110$$$ penalty.  $$${1, 2, 3}$$$, then he will solve the first problem after $$$20$$$ minutes from the start, the second one after $$$20+15=35$$$ minutes, and he will not have time to solve the third one. Thus, he will get $$$2$$$ points and $$$20+35=55$$$ penalty.  $$${2, 1, 3}$$$, then he will solve the second problem after $$$15$$$ minutes from the start, the first one after $$$15+20=35$$$ minutes, and he will not have time to solve the third one. Thus, he will get $$$2$$$ points and $$$15+35=50$$$ penalty. Rudolf became interested in what place he will take in the competition if each participant solves problems in the optimal order based on the predictions of the artificial intelligence. It will be assumed that in case of a tie in points and penalty, Rudolf will take the best place."
  },
  {
    "title": "Rudolph and Tic-Tac-Toe",
    "url": "https://codeforces.com/problemset/problem/1846/B",
    "description": "Rudolph invented the game of tic-tac-toe for three players. It has classic rules, except for the third player who plays with pluses. Rudolf has a $$$3 \\times 3$$$ field  — the result of the completed game. Each field cell contains either a cross, or a nought, or a plus sign, or nothing. The game is won by the player who makes a horizontal, vertical or diagonal row of $$$3$$$'s of their symbols.Rudolph wants to find the result of the game. Either exactly one of the three players won or it ended in a draw. It is guaranteed that multiple players cannot win at the same time."
  },
  {
    "title": "Rudolph and Cut the Rope ",
    "url": "https://codeforces.com/problemset/problem/1846/A",
    "description": "There are $$$n$$$ nails driven into the wall, the $$$i$$$-th nail is driven $$$a_i$$$ meters above the ground, one end of the $$$b_i$$$ meters long rope is tied to it. All nails hang at different heights one above the other. One candy is tied to all ropes at once. Candy is tied to end of a rope that is not tied to a nail.To take the candy, you need to lower it to the ground. To do this, Rudolph can cut some ropes, one at a time. Help Rudolph find the minimum number of ropes that must be cut to get the candy.The figure shows an example of the first test:   "
  },
  {
    "title": "Swimmers in the Pool",
    "url": "https://codeforces.com/problemset/problem/1845/F",
    "description": "There is a pool of length $$$l$$$ where $$$n$$$ swimmers plan to swim. People start swimming at the same time (at the time moment $$$0$$$), but you can assume that they take different lanes, so they don't interfere with each other.Each person swims along the following route: they start at point $$$0$$$ and swim to point $$$l$$$ with constant speed (which is equal to $$$v_i$$$ units per second for the $$$i$$$-th swimmer). After reaching the point $$$l$$$, the swimmer instantly (in negligible time) turns back and starts swimming to the point $$$0$$$ with the same constant speed. After returning to the point $$$0$$$, the swimmer starts swimming to the point $$$l$$$, and so on.Let's say that some real moment of time is a meeting moment if there are at least two swimmers that are in the same point of the pool at that moment of time (that point may be $$$0$$$ or $$$l$$$ as well as any other real point inside the pool).The pool will be open for $$$t$$$ seconds. You have to calculate the number of meeting moments while the pool is open. Since the answer may be very large, print it modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Boxes and Balls",
    "url": "https://codeforces.com/problemset/problem/1845/E",
    "description": "There are $$$n$$$ boxes placed in a line. The boxes are numbered from $$$1$$$ to $$$n$$$. Some boxes contain one ball inside of them, the rest are empty. At least one box contains a ball and at least one box is empty.In one move, you have to choose a box with a ball inside and an adjacent empty box and move the ball from one box into another. Boxes $$$i$$$ and $$$i+1$$$ for all $$$i$$$ from $$$1$$$ to $$$n-1$$$ are considered adjacent to each other. Boxes $$$1$$$ and $$$n$$$ are not adjacent.How many different arrangements of balls exist after exactly $$$k$$$ moves are performed? Two arrangements are considered different if there is at least one such box that it contains a ball in one of them and doesn't contain a ball in the other one.Since the answer might be pretty large, print its remainder modulo $$$10^9+7$$$."
  },
  {
    "title": "Rating System",
    "url": "https://codeforces.com/problemset/problem/1845/D",
    "description": "You are developing a rating system for an online game. Every time a player participates in a match, the player's rating changes depending on the results.Initially, the player's rating is $$$0$$$. There are $$$n$$$ matches; after the $$$i$$$-th match, the rating change is equal to $$$a_i$$$ (the rating increases by $$$a_i$$$ if $$$a_i$$$ is positive, or decreases by $$$|a_i|$$$ if it's negative. There are no zeros in the sequence $$$a$$$).The system has an additional rule: for a fixed integer $$$k$$$, if a player's rating has reached the value $$$k$$$, it will never fall below it. Formally, if a player's rating at least $$$k$$$, and a rating change would make it less than $$$k$$$, then the rating will decrease to exactly $$$k$$$.Your task is to determine the value $$$k$$$ in such a way that the player's rating after all $$$n$$$ matches is the maximum possible (among all integer values of $$$k$$$). If there are multiple possible answers, you can print any of them."
  },
  {
    "title": "Strong Password",
    "url": "https://codeforces.com/problemset/problem/1845/C",
    "description": "Monocarp finally got the courage to register on ForceCoders. He came up with a handle but is still thinking about the password.He wants his password to be as strong as possible, so he came up with the following criteria:   the length of the password should be exactly $$$m$$$;  the password should only consist of digits from $$$0$$$ to $$$9$$$;  the password should not appear in the password database (given as a string $$$s$$$) as a subsequence (not necessarily contiguous). Monocarp also came up with two strings of length $$$m$$$: $$$l$$$ and $$$r$$$, both consisting only of digits from $$$0$$$ to $$$9$$$. He wants the $$$i$$$-th digit of his password to be between $$$l_i$$$ and $$$r_i$$$, inclusive.Does there exist a password that fits all criteria?"
  },
  {
    "title": "Come Together",
    "url": "https://codeforces.com/problemset/problem/1845/B",
    "description": "Bob and Carol hanged out with Alice the whole day, but now it's time to go home. Alice, Bob and Carol live on an infinite 2D grid in cells $$$A$$$, $$$B$$$, and $$$C$$$ respectively. Right now, all of them are in cell $$$A$$$.If Bob (or Carol) is in some cell, he (she) can move to one of the neighboring cells. Two cells are called neighboring if they share a side. For example, the cell $$$(3, 5)$$$ has four neighboring cells: $$$(2, 5)$$$, $$$(4, 5)$$$, $$$(3, 6)$$$ and $$$(3, 4)$$$.Bob wants to return to the cell $$$B$$$, Carol — to the cell $$$C$$$. Both of them want to go along the shortest path, i. e. along the path that consists of the minimum possible number of cells. But they would like to walk together as well. What is the maximum possible number of cells that Bob and Carol can walk together if each of them walks home using one of the shortest paths?"
  },
  {
    "title": "Forbidden Integer",
    "url": "https://codeforces.com/problemset/problem/1845/A",
    "description": "You are given an integer $$$n$$$, which you want to obtain. You have an unlimited supply of every integer from $$$1$$$ to $$$k$$$, except integer $$$x$$$ (there are no integer $$$x$$$ at all).You are allowed to take an arbitrary amount of each of these integers (possibly, zero). Can you make the sum of taken integers equal to $$$n$$$?If there are multiple answers, print any of them."
  },
  {
    "title": "Multiple of Three Cycles",
    "url": "https://codeforces.com/problemset/problem/1844/H",
    "description": "An array $$$a_1,\\dots,a_n$$$ of length $$$n$$$ is initially all blank. There are $$$n$$$ updates where one entry of $$$a$$$ is updated to some number, such that $$$a$$$ becomes a permutation of $$$1,2,\\dots,n$$$ after all the updates.After each update, find the number of ways (modulo $$$998\\,244\\,353$$$) to fill in the remaining blank entries of $$$a$$$ so that $$$a$$$ becomes a permutation of $$$1,2,\\dots,n$$$ and all cycle lengths in $$$a$$$ are multiples of $$$3$$$.A permutation of $$$1,2,\\dots,n$$$ is an array of length $$$n$$$ consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. A cycle in a permutation $$$a$$$ is a sequence of pairwise distinct integers $$$(i_1,\\dots,i_k)$$$ such that $$$i_2 = a_{i_1},i_3 = a_{i_2},\\dots,i_k = a_{i_{k-1}},i_1 = a_{i_k}$$$. The length of this cycle is the number $$$k$$$, which is a multiple of $$$3$$$ if and only if $$$k \\equiv 0 \\pmod 3$$$."
  },
  {
    "title": "Tree Weights",
    "url": "https://codeforces.com/problemset/problem/1844/G",
    "description": "You are given a tree with $$$n$$$ nodes labelled $$$1,2,\\dots,n$$$. The $$$i$$$-th edge connects nodes $$$u_i$$$ and $$$v_i$$$ and has an unknown positive integer weight $$$w_i$$$. To help you figure out these weights, you are also given the distance $$$d_i$$$ between the nodes $$$i$$$ and $$$i+1$$$ for all $$$1 \\le i \\le n-1$$$ (the sum of the weights of the edges on the simple path between the nodes $$$i$$$ and $$$i+1$$$ in the tree).Find the weight of each edge. If there are multiple solutions, print any of them. If there are no weights $$$w_i$$$ consistent with the information, print a single integer $$$-1$$$."
  },
  {
    "title": "Min Cost Permutation (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1844/F2",
    "description": "The only difference between this problem and the easy version is the constraints on $$$t$$$ and $$$n$$$.You are given an array of $$$n$$$ positive integers $$$a_1,\\dots,a_n$$$, and a (possibly negative) integer $$$c$$$.Across all permutations $$$b_1,\\dots,b_n$$$ of the array $$$a_1,\\dots,a_n$$$, consider the minimum possible value of $$$$$$\\sum_{i=1}^{n-1} |b_{i+1}-b_i-c|.$$$$$$ Find the lexicographically smallest permutation $$$b$$$ of the array $$$a$$$ that achieves this minimum.A sequence $$$x$$$ is lexicographically smaller than a sequence $$$y$$$ if and only if one of the following holds: $$$x$$$ is a prefix of $$$y$$$, but $$$x \\ne y$$$; in the first position where $$$x$$$ and $$$y$$$ differ, the sequence $$$x$$$ has a smaller element than the corresponding element in $$$y$$$."
  },
  {
    "title": "Min Cost Permutation (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1844/F1",
    "description": "The only difference between this problem and the hard version is the constraints on $$$t$$$ and $$$n$$$.You are given an array of $$$n$$$ positive integers $$$a_1,\\dots,a_n$$$, and a (possibly negative) integer $$$c$$$.Across all permutations $$$b_1,\\dots,b_n$$$ of the array $$$a_1,\\dots,a_n$$$, consider the minimum possible value of $$$$$$\\sum_{i=1}^{n-1} |b_{i+1}-b_i-c|.$$$$$$ Find the lexicographically smallest permutation $$$b$$$ of the array $$$a$$$ that achieves this minimum.A sequence $$$x$$$ is lexicographically smaller than a sequence $$$y$$$ if and only if one of the following holds: $$$x$$$ is a prefix of $$$y$$$, but $$$x \\ne y$$$; in the first position where $$$x$$$ and $$$y$$$ differ, the sequence $$$x$$$ has a smaller element than the corresponding element in $$$y$$$."
  },
  {
    "title": "Great Grids",
    "url": "https://codeforces.com/problemset/problem/1844/E",
    "description": "An $$$n \\times m$$$ grid of characters is called great if it satisfies these three conditions:   Each character is either 'A', 'B', or 'C'.  Every $$$2 \\times 2$$$ contiguous subgrid contains all three different letters.  Any two cells that share a common edge contain different letters. Let $$$(x,y)$$$ denote the cell in the $$$x$$$-th row from the top and $$$y$$$-th column from the left.You want to construct a great grid that satisfies $$$k$$$ constraints. Each constraint consists of two cells, $$$(x_{i,1},y_{i,1})$$$ and $$$(x_{i,2},y_{i,2})$$$, that share exactly one corner. You want your great grid to have the same letter in cells $$$(x_{i,1},y_{i,1})$$$ and $$$(x_{i,2},y_{i,2})$$$.Determine whether there exists a great grid satisfying all the constraints. "
  },
  {
    "title": "Row Major",
    "url": "https://codeforces.com/problemset/problem/1844/D",
    "description": "The row-major order of an $$$r \\times c$$$ grid of characters $$$A$$$ is the string obtained by concatenating all the rows, i.e. $$$$$$ A_{11}A_{12} \\dots A_{1c}A_{21}A_{22} \\dots A_{2c} \\dots A_{r1}A_{r2} \\dots A_{rc}. $$$$$$A grid of characters $$$A$$$ is bad if there are some two adjacent cells (cells sharing an edge) with the same character.You are given a positive integer $$$n$$$. Consider all strings $$$s$$$ consisting of only lowercase Latin letters such that they are not the row-major order of any bad grid. Find any string with the minimum number of distinct characters among all such strings of length $$$n$$$.It can be proven that at least one such string exists under the constraints of the problem."
  },
  {
    "title": "Particles",
    "url": "https://codeforces.com/problemset/problem/1844/C",
    "description": "You have discovered $$$n$$$ mysterious particles on a line with integer charges of $$$c_1,\\dots,c_n$$$. You have a device that allows you to perform the following operation:   Choose a particle and remove it from the line. The remaining particles will shift to fill in the gap that is created. If there were particles with charges $$$x$$$ and $$$y$$$ directly to the left and right of the removed particle, they combine into a single particle of charge $$$x+y$$$. For example, if the line of particles had charges of $$$[-3,1,4,-1,5,-9]$$$, performing the operation on the $$$4$$$th particle will transform the line into $$$[-3,1,9,-9]$$$.  If we then use the device on the $$$1$$$st particle in this new line, the line will turn into $$$[1,9,-9]$$$. You will perform operations until there is only one particle left. What is the maximum charge of this remaining particle that you can obtain?"
  },
  {
    "title": "Permutations & Primes",
    "url": "https://codeforces.com/problemset/problem/1844/B",
    "description": "You are given a positive integer $$$n$$$.In this problem, the $$$\\operatorname{MEX}$$$ of a collection of integers $$$c_1,c_2,\\dots,c_k$$$ is defined as the smallest positive integer $$$x$$$ which does not occur in the collection $$$c$$$. The primality of an array $$$a_1,\\dots,a_n$$$ is defined as the number of pairs $$$(l,r)$$$ such that $$$1 \\le l \\le r \\le n$$$ and $$$\\operatorname{MEX}(a_l,\\dots,a_r)$$$ is a prime number. Find any permutation of $$$1,2,\\dots,n$$$ with the maximum possible primality among all permutations of $$$1,2,\\dots,n$$$. Note:   A prime number is a number greater than or equal to $$$2$$$ that is not divisible by any positive integer except $$$1$$$ and itself. For example, $$$2,5,13$$$ are prime numbers, but $$$1$$$ and $$$6$$$ are not prime numbers.  A permutation of $$$1,2,\\dots,n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array). "
  },
  {
    "title": "Subtraction Game",
    "url": "https://codeforces.com/problemset/problem/1844/A",
    "description": "You are given two positive integers, $$$a$$$ and $$$b$$$ ($$$a < b$$$).For some positive integer $$$n$$$, two players will play a game starting with a pile of $$$n$$$ stones. They take turns removing exactly $$$a$$$ or exactly $$$b$$$ stones from the pile. The player who is unable to make a move loses.Find a positive integer $$$n$$$ such that the second player to move in this game has a winning strategy. This means that no matter what moves the first player makes, the second player can carefully choose their moves (possibly depending on the first player's moves) to ensure they win."
  },
  {
    "title": "Omsk Metro (hard version)",
    "url": "https://codeforces.com/problemset/problem/1843/F2",
    "description": "This is the hard version of the problem. The only difference between the simple and hard versions is that in this version $$$u$$$ can take any possible value.As is known, Omsk is the capital of Berland. Like any capital, Omsk has a well-developed metro system. The Omsk metro consists of a certain number of stations connected by tunnels, and between any two stations there is exactly one path that passes through each of the tunnels no more than once. In other words, the metro is a tree.To develop the metro and attract residents, the following system is used in Omsk. Each station has its own weight $$$x \\in \\{-1, 1\\}$$$. If the station has a weight of $$$-1$$$, then when the station is visited by an Omsk resident, a fee of $$$1$$$ burle is charged. If the weight of the station is $$$1$$$, then the Omsk resident is rewarded with $$$1$$$ burle.Omsk Metro currently has only one station with number $$$1$$$ and weight $$$x = 1$$$. Every day, one of the following events occurs:  A new station with weight $$$x$$$ is added to the station with number $$$v_i$$$, and it is assigned a number that is one greater than the number of existing stations.  Alex, who lives in Omsk, wonders: is there a subsegment$$$\\dagger$$$ (possibly empty) of the path between vertices $$$u$$$ and $$$v$$$ such that, by traveling along it, exactly $$$k$$$ burles can be earned (if $$$k < 0$$$, this means that $$$k$$$ burles will have to be spent on travel). In other words, Alex is interested in whether there is such a subsegment of the path that the sum of the weights of the vertices in it is equal to $$$k$$$. Note that the subsegment can be empty, and then the sum is equal to $$$0$$$. You are a friend of Alex, so your task is to answer Alex's questions.$$$\\dagger$$$Subsegment — continuous sequence of elements."
  },
  {
    "title": "Omsk Metro (simple version)",
    "url": "https://codeforces.com/problemset/problem/1843/F1",
    "description": "This is the simple version of the problem. The only difference between the simple and hard versions is that in this version $$$u = 1$$$.As is known, Omsk is the capital of Berland. Like any capital, Omsk has a well-developed metro system. The Omsk metro consists of a certain number of stations connected by tunnels, and between any two stations there is exactly one path that passes through each of the tunnels no more than once. In other words, the metro is a tree.To develop the metro and attract residents, the following system is used in Omsk. Each station has its own weight $$$x \\in \\{-1, 1\\}$$$. If the station has a weight of $$$-1$$$, then when the station is visited by an Omsk resident, a fee of $$$1$$$ burle is charged. If the weight of the station is $$$1$$$, then the Omsk resident is rewarded with $$$1$$$ burle.Omsk Metro currently has only one station with number $$$1$$$ and weight $$$x = 1$$$. Every day, one of the following events occurs:  A new station with weight $$$x$$$ is added to the station with number $$$v_i$$$, and it is assigned a number that is one greater than the number of existing stations.  Alex, who lives in Omsk, wonders: is there a subsegment$$$\\dagger$$$ (possibly empty) of the path between vertices $$$u$$$ and $$$v$$$ such that, by traveling along it, exactly $$$k$$$ burles can be earned (if $$$k < 0$$$, this means that $$$k$$$ burles will have to be spent on travel). In other words, Alex is interested in whether there is such a subsegment of the path that the sum of the weights of the vertices in it is equal to $$$k$$$. Note that the subsegment can be empty, and then the sum is equal to $$$0$$$. You are a friend of Alex, so your task is to answer Alex's questions.$$$\\dagger$$$Subsegment — continuous sequence of elements."
  },
  {
    "title": "Tracking Segments",
    "url": "https://codeforces.com/problemset/problem/1843/E",
    "description": "You are given an array $$$a$$$ consisting of $$$n$$$ zeros. You are also given a set of $$$m$$$ not necessarily different segments. Each segment is defined by two numbers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$) and represents a subarray $$$a_{l_i}, a_{l_i+1}, \\dots, a_{r_i}$$$ of the array $$$a$$$.Let's call the segment $$$l_i, r_i$$$ beautiful if the number of ones on this segment is strictly greater than the number of zeros. For example, if $$$a = [1, 0, 1, 0, 1]$$$, then the segment $$$[1, 5]$$$ is beautiful (the number of ones is $$$3$$$, the number of zeros is $$$2$$$), but the segment $$$[3, 4]$$$ is not is beautiful (the number of ones is $$$1$$$, the number of zeros is $$$1$$$).You also have $$$q$$$ changes. For each change you are given the number $$$1 \\le x \\le n$$$, which means that you must assign an element $$$a_x$$$ the value $$$1$$$.You have to find the first change after which at least one of $$$m$$$ given segments becomes beautiful, or report that none of them is beautiful after processing all $$$q$$$ changes."
  },
  {
    "title": "Apple Tree",
    "url": "https://codeforces.com/problemset/problem/1843/D",
    "description": "Timofey has an apple tree growing in his garden; it is a rooted tree of $$$n$$$ vertices with the root in vertex $$$1$$$ (the vertices are numbered from $$$1$$$ to $$$n$$$). A tree is a connected graph without loops and multiple edges.This tree is very unusual — it grows with its root upwards. However, it's quite normal for programmer's trees.The apple tree is quite young, so only two apples will grow on it. Apples will grow in certain vertices (these vertices may be the same). After the apples grow, Timofey starts shaking the apple tree until the apples fall. Each time Timofey shakes the apple tree, the following happens to each of the apples:Let the apple now be at vertex $$$u$$$.  If a vertex $$$u$$$ has a child, the apple moves to it (if there are several such vertices, the apple can move to any of them).  Otherwise, the apple falls from the tree. It can be shown that after a finite time, both apples will fall from the tree.Timofey has $$$q$$$ assumptions in which vertices apples can grow. He assumes that apples can grow in vertices $$$x$$$ and $$$y$$$, and wants to know the number of pairs of vertices ($$$a$$$, $$$b$$$) from which apples can fall from the tree, where $$$a$$$ — the vertex from which an apple from vertex $$$x$$$ will fall, $$$b$$$ — the vertex from which an apple from vertex $$$y$$$ will fall. Help him do this."
  },
  {
    "title": "Sum in Binary Tree",
    "url": "https://codeforces.com/problemset/problem/1843/C",
    "description": "Vanya really likes math. One day when he was solving another math problem, he came up with an interesting tree. This tree is built as follows.Initially, the tree has only one vertex with the number $$$1$$$ — the root of the tree. Then, Vanya adds two children to it, assigning them consecutive numbers — $$$2$$$ and $$$3$$$, respectively. After that, he will add children to the vertices in increasing order of their numbers, starting from $$$2$$$, assigning their children the minimum unused indices. As a result, Vanya will have an infinite tree with the root in the vertex $$$1$$$, where each vertex will have exactly two children, and the vertex numbers will be arranged sequentially by layers.    Part of Vanya's tree. Vanya wondered what the sum of the vertex numbers on the path from the vertex with number $$$1$$$ to the vertex with number $$$n$$$ in such a tree is equal to. Since Vanya doesn't like counting, he asked you to help him find this sum."
  },
  {
    "title": "Long Long",
    "url": "https://codeforces.com/problemset/problem/1843/B",
    "description": "Today Alex was brought array $$$a_1, a_2, \\dots, a_n$$$ of length $$$n$$$. He can apply as many operations as he wants (including zero operations) to change the array elements.In $$$1$$$ operation Alex can choose any $$$l$$$ and $$$r$$$ such that $$$1 \\leq l \\leq r \\leq n$$$, and multiply all elements of the array from $$$l$$$ to $$$r$$$ inclusive by $$$-1$$$. In other words, Alex can replace the subarray $$$[a_l, a_{l + 1}, \\dots, a_r]$$$ by $$$[-a_l, -a_{l + 1}, \\dots, -a_r]$$$ in $$$1$$$ operation.For example, let $$$n = 5$$$, the array is $$$[1, -2, 0, 3, -1]$$$, $$$l = 2$$$ and $$$r = 4$$$, then after the operation the array will be $$$[1, 2, 0, -3, -1]$$$.Alex is late for school, so you should help him find the maximum possible sum of numbers in the array, which can be obtained by making any number of operations, as well as the minimum number of operations that must be done for this."
  },
  {
    "title": "Sasha and Array Coloring",
    "url": "https://codeforces.com/problemset/problem/1843/A",
    "description": "Sasha found an array $$$a$$$ consisting of $$$n$$$ integers and asked you to paint elements.You have to paint each element of the array. You can use as many colors as you want, but each element should be painted into exactly one color, and for each color, there should be at least one element of that color.The cost of one color is the value of $$$\\max(S) - \\min(S)$$$, where $$$S$$$ is the sequence of elements of that color. The cost of the whole coloring is the sum of costs over all colors.For example, suppose you have an array $$$a = [\\color{red}{1}, \\color{red}{5}, \\color{blue}{6}, \\color{blue}{3}, \\color{red}{4}]$$$, and you painted its elements into two colors as follows: elements on positions $$$1$$$, $$$2$$$ and $$$5$$$ have color $$$1$$$; elements on positions $$$3$$$ and $$$4$$$ have color $$$2$$$. Then:  the cost of the color $$$1$$$ is $$$\\max([1, 5, 4]) - \\min([1, 5, 4]) = 5 - 1 = 4$$$;  the cost of the color $$$2$$$ is $$$\\max([6, 3]) - \\min([6, 3]) = 6 - 3 = 3$$$;  the total cost of the coloring is $$$7$$$. For the given array $$$a$$$, you have to calculate the maximum possible cost of the coloring."
  },
  {
    "title": "Tenzing and Necklace",
    "url": "https://codeforces.com/problemset/problem/1842/I",
    "description": "bright, sunny and innocent......Tenzing has a beautiful necklace. The necklace consists of $$$n$$$ pearls numbered from $$$1$$$ to $$$n$$$ with a string connecting pearls $$$i$$$ and $$$(i \\text{ mod } n)+1$$$ for all $$$1 \\leq i \\leq n$$$.One day Tenzing wants to cut the necklace into several parts by cutting some strings. But for each connected part of the necklace, there should not be more than $$$k$$$ pearls. The time needed to cut each string may not be the same. Tenzing needs to spend $$$a_i$$$ minutes cutting the string between pearls $$$i$$$ and $$$(i \\text{ mod } n)+1$$$.Tenzing wants to know the minimum time in minutes to cut the necklace such that each connected part will not have more than $$$k$$$ pearls."
  },
  {
    "title": "Tenzing and Random Real Numbers",
    "url": "https://codeforces.com/problemset/problem/1842/H",
    "description": "There are $$$n$$$ uniform random real variables between 0 and 1, inclusive, which are denoted as $$$x_1, x_2, \\ldots, x_n$$$.Tenzing has $$$m$$$ conditions. Each condition has the form of $$$x_i+x_j\\le 1$$$ or $$$x_i+x_j\\ge 1$$$.Tenzing wants to know the probability that all the conditions are satisfied, modulo $$$998~244~353$$$.Formally, let $$$M = 998~244~353$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output the integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$."
  },
  {
    "title": "Tenzing and Random Operations",
    "url": "https://codeforces.com/problemset/problem/1842/G",
    "description": "Yet another random problem.Tenzing has an array $$$a$$$ of length $$$n$$$ and an integer $$$v$$$.Tenzing will perform the following operation $$$m$$$ times:  Choose an integer $$$i$$$ such that $$$1 \\leq i \\leq n$$$ uniformly at random.  For all $$$j$$$ such that $$$i \\leq j \\leq n$$$, set $$$a_j := a_j + v$$$. Tenzing wants to know the expected value of $$$\\prod_{i=1}^n a_i$$$ after performing the $$$m$$$ operations, modulo $$$10^9+7$$$.Formally, let $$$M = 10^9+7$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output the integer $$$x$$$ that $$$0 \\le x < M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$."
  },
  {
    "title": "Tenzing and Tree",
    "url": "https://codeforces.com/problemset/problem/1842/F",
    "description": "Tenzing has an undirected tree of $$$n$$$ vertices.Define the value of a tree with black and white vertices in the following way. The value of an edge is the absolute difference between the number of black nodes in the two components of the tree after deleting the edge. The value of the tree is the sum of values over all edges.For all $$$k$$$ such that $$$0 \\leq k \\leq n$$$, Tenzing wants to know the maximum value of the tree when $$$k$$$ vertices are painted black and $$$n-k$$$ vertices are painted white."
  },
  {
    "title": "Tenzing and Triangle",
    "url": "https://codeforces.com/problemset/problem/1842/E",
    "description": "There are $$$n$$$ pairwise-distinct points and a line $$$x+y=k$$$ on a two-dimensional plane. The $$$i$$$-th point is at $$$(x_i,y_i)$$$. All points have non-negative coordinates and are strictly below the line. Alternatively, $$$0 \\leq x_i,y_i, x_i+y_i < k$$$.Tenzing wants to erase all the points. He can perform the following two operations:  Draw triangle: Tenzing will choose two non-negative integers $$$a$$$, $$$b$$$ that satisfy $$$a+b<k$$$, then all points inside the triangle formed by lines $$$x=a$$$, $$$y=b$$$ and $$$x+y=k$$$ will be erased. It can be shown that this triangle is an isosceles right triangle. Let the side lengths of the triangle be $$$l$$$, $$$l$$$ and $$$\\sqrt 2 l$$$ respectively. Then, the cost of this operation is $$$l \\cdot A$$$.The blue area of the following picture describes the triangle with $$$a=1,b=1$$$ with cost $$$=1\\cdot A$$$.   Erase a specific point: Tenzing will choose an integer $$$i$$$ that satisfies $$$1 \\leq i \\leq n$$$ and erase the point $$$i$$$. The cost of this operation is $$$c_i$$$.Help Tenzing find the minimum cost to erase all of the points."
  },
  {
    "title": "Tenzing and His Animal Friends ",
    "url": "https://codeforces.com/problemset/problem/1842/D",
    "description": "Tell a story about me and my animal friends.Tenzing has $$$n$$$ animal friends. He numbers them from $$$1$$$ to $$$n$$$.One day Tenzing wants to play with his animal friends. To do so, Tenzing will host several games.In one game, he will choose a set $$$S$$$ which is a subset of $$$\\{1,2,3,...,n\\}$$$ and choose an integer $$$t$$$. Then, he will play the game with the animals in $$$S$$$ for $$$t$$$ minutes.But there are some restrictions:   Tenzing loves friend $$$1$$$ very much, so $$$1$$$ must be an element of $$$S$$$.  Tenzing doesn't like friend $$$n$$$, so $$$n$$$ must not be an element of $$$S$$$.  There are m additional restrictions. The $$$i$$$-th special restriction is described by integers $$$u_i$$$, $$$v_i$$$ and $$$y_i$$$, suppose $$$x$$$ is the total time that exactly one of $$$u_i$$$ and $$$v_i$$$ is playing with Tenzing. Tenzing must ensure that $$$x$$$ is less or equal to $$$y_i$$$. Otherwise, there will be unhappiness. Tenzing wants to know the maximum total time that he can play with his animal friends. Please find out the maximum total time that Tenzing can play with his animal friends and a way to organize the games that achieves this maximum total time, or report that he can play with his animal friends for an infinite amount of time. Also, Tenzing does not want to host so many games, so he will host at most $$$n^2$$$ games."
  },
  {
    "title": "Tenzing and Balls",
    "url": "https://codeforces.com/problemset/problem/1842/C",
    "description": "Enjoy erasing Tenzing, identified as Accepted!Tenzing has $$$n$$$ balls arranged in a line. The color of the $$$i$$$-th ball from the left is $$$a_i$$$.Tenzing can do the following operation any number of times:  select $$$i$$$ and $$$j$$$ such that $$$1\\leq i < j \\leq |a|$$$ and $$$a_i=a_j$$$,  remove $$$a_i,a_{i+1},\\ldots,a_j$$$ from the array (and decrease the indices of all elements to the right of $$$a_j$$$ by $$$j-i+1$$$). Tenzing wants to know the maximum number of balls he can remove."
  },
  {
    "title": "Tenzing and Books",
    "url": "https://codeforces.com/problemset/problem/1842/B",
    "description": "Tenzing received $$$3n$$$ books from his fans. The books are arranged in $$$3$$$ stacks with $$$n$$$ books in each stack. Each book has a non-negative integer difficulty rating.Tenzing wants to read some (possibly zero) books. At first, his knowledge is $$$0$$$.To read the books, Tenzing will choose a non-empty stack, read the book on the top of the stack, and then discard the book. If Tenzing's knowledge is currently $$$u$$$, then his knowledge will become $$$u|v$$$ after reading a book with difficulty rating $$$v$$$. Here $$$|$$$ denotes the bitwise OR operation. Note that Tenzing can stop reading books whenever he wants.Tenzing's favourite number is $$$x$$$. Can you help Tenzing check if it is possible for his knowledge to become $$$x$$$?"
  },
  {
    "title": "Tenzing and Tsondu",
    "url": "https://codeforces.com/problemset/problem/1842/A",
    "description": "Tsondu always runs first! ! !Tsondu and Tenzing are playing a card game. Tsondu has $$$n$$$ monsters with ability values $$$a_1, a_2, \\ldots, a_n$$$ while Tenzing has $$$m$$$ monsters with ability values $$$b_1, b_2, \\ldots, b_m$$$.Tsondu and Tenzing take turns making moves, with Tsondu going first. In each move, the current player chooses two monsters: one on their side and one on the other side. Then, these monsters will fight each other. Suppose the ability values for the chosen monsters are $$$x$$$ and $$$y$$$ respectively, then the ability values of the monsters will become $$$x-y$$$ and $$$y-x$$$ respectively. If the ability value of any monster is smaller than or equal to $$$0$$$, the monster dies.The game ends when at least one player has no monsters left alive. The winner is the player with at least one monster left alive. If both players have no monsters left alive, the game ends in a draw.Find the result of the game when both players play optimally."
  },
  {
    "title": "Monocarp and a Strategic Game",
    "url": "https://codeforces.com/problemset/problem/1841/F",
    "description": "Monocarp plays a strategic computer game in which he develops a city. The city is inhabited by creatures of four different races — humans, elves, orcs, and dwarves.Each inhabitant of the city has a happiness value, which is an integer. It depends on how many creatures of different races inhabit the city. Specifically, the happiness of each inhabitant is $$$0$$$ by default; it increases by $$$1$$$ for each other creature of the same race and decreases by $$$1$$$ for each creature of a hostile race. Humans are hostile to orcs (and vice versa), and elves are hostile to dwarves (and vice versa).At the beginning of the game, Monocarp's city is not inhabited by anyone. During the game, $$$n$$$ groups of creatures will come to his city, wishing to settle there. The $$$i$$$-th group consists of $$$a_i$$$ humans, $$$b_i$$$ orcs, $$$c_i$$$ elves, and $$$d_i$$$ dwarves. Each time, Monocarp can either accept the entire group of creatures into the city, or reject the entire group.The game calculates Monocarp's score according to the following formula: $$$m + k$$$, where $$$m$$$ is the number of inhabitants in the city, and $$$k$$$ is the sum of the happiness values of all creatures in the city.Help Monocarp earn the maximum possible number of points by the end of the game!"
  },
  {
    "title": "Fill the Matrix",
    "url": "https://codeforces.com/problemset/problem/1841/E",
    "description": "There is a square matrix, consisting of $$$n$$$ rows and $$$n$$$ columns of cells, both numbered from $$$1$$$ to $$$n$$$. The cells are colored white or black. Cells from $$$1$$$ to $$$a_i$$$ are black, and cells from $$$a_i+1$$$ to $$$n$$$ are white, in the $$$i$$$-th column.You want to place $$$m$$$ integers in the matrix, from $$$1$$$ to $$$m$$$. There are two rules:   each cell should contain at most one integer;  black cells should not contain integers. The beauty of the matrix is the number of such $$$j$$$ that $$$j+1$$$ is written in the same row, in the next column as $$$j$$$ (in the neighbouring cell to the right).What's the maximum possible beauty of the matrix?"
  },
  {
    "title": "Pairs of Segments",
    "url": "https://codeforces.com/problemset/problem/1841/D",
    "description": "Two segments $$$[l_1, r_1]$$$ and $$$[l_2, r_2]$$$ intersect if there exists at least one $$$x$$$ such that $$$l_1 \\le x \\le r_1$$$ and $$$l_2 \\le x \\le r_2$$$.An array of segments $$$[[l_1, r_1], [l_2, r_2], \\dots, [l_k, r_k]]$$$ is called beautiful if $$$k$$$ is even, and is possible to split the elements of this array into $$$\\frac{k}{2}$$$ pairs in such a way that:  every element of the array belongs to exactly one of the pairs;  segments in each pair intersect with each other;  segments in different pairs do not intersect. For example, the array $$$[[2, 4], [9, 12], [2, 4], [7, 7], [10, 13], [6, 8]]$$$ is beautiful, since it is possible to form $$$3$$$ pairs as follows:  the first element of the array (segment $$$[2, 4]$$$) and the third element of the array (segment $$$[2, 4]$$$);  the second element of the array (segment $$$[9, 12]$$$) and the fifth element of the array (segment $$$[10, 13]$$$);  the fourth element of the array (segment $$$[7, 7]$$$) and the sixth element of the array (segment $$$[6, 8]$$$). As you can see, the segments in each pair intersect, and no segments from different pairs intersect.You are given an array of $$$n$$$ segments $$$[[l_1, r_1], [l_2, r_2], \\dots, [l_n, r_n]]$$$. You have to remove the minimum possible number of elements from this array so that the resulting array is beautiful."
  },
  {
    "title": "Ranom Numbers",
    "url": "https://codeforces.com/problemset/problem/1841/C",
    "description": "No, not \"random\" numbers.Ranom digits are denoted by uppercase Latin letters from A to E. Moreover, the value of the letter A is $$$1$$$, B is $$$10$$$, C is $$$100$$$, D is $$$1000$$$, E is $$$10000$$$.A Ranom number is a sequence of Ranom digits. The value of the Ranom number is calculated as follows: the values of all digits are summed up, but some digits are taken with negative signs: a digit is taken with negative sign if there is a digit with a strictly greater value to the right of it (not necessarily immediately after it); otherwise, that digit is taken with a positive sign.For example, the value of the Ranom number DAAABDCA is $$$1000 - 1 - 1 - 1 - 10 + 1000 + 100 + 1 = 2088$$$.You are given a Ranom number. You can change no more than one digit in it. Calculate the maximum possible value of the resulting number."
  },
  {
    "title": "Keep it Beautiful",
    "url": "https://codeforces.com/problemset/problem/1841/B",
    "description": "The array $$$[a_1, a_2, \\dots, a_k]$$$ is called beautiful if it is possible to remove several (maybe zero) elements from the beginning of the array and insert all these elements to the back of the array in the same order in such a way that the resulting array is sorted in non-descending order.In other words, the array $$$[a_1, a_2, \\dots, a_k]$$$ is beautiful if there exists an integer $$$i \\in [0, k-1]$$$ such that the array $$$[a_{i+1}, a_{i+2}, \\dots, a_{k-1}, a_k, a_1, a_2, \\dots, a_i]$$$ is sorted in non-descending order.For example:  $$$[3, 7, 7, 9, 2, 3]$$$ is beautiful: we can remove four first elements and insert them to the back in the same order, and we get the array $$$[2, 3, 3, 7, 7, 9]$$$, which is sorted in non-descending order;  $$$[1, 2, 3, 4, 5]$$$ is beautiful: we can remove zero first elements and insert them to the back, and we get the array $$$[1, 2, 3, 4, 5]$$$, which is sorted in non-descending order;  $$$[5, 2, 2, 1]$$$ is not beautiful. Note that any array consisting of zero elements or one element is beautiful.You are given an array $$$a$$$, which is initially empty. You have to process $$$q$$$ queries to it. During the $$$i$$$-th query, you will be given one integer $$$x_i$$$, and you have to do the following:  if you can append the integer $$$x_i$$$ to the back of the array $$$a$$$ so that the array $$$a$$$ stays beautiful, you have to append it;  otherwise, do nothing. After each query, report whether you appended the given integer $$$x_i$$$, or not."
  },
  {
    "title": "Game with Board",
    "url": "https://codeforces.com/problemset/problem/1841/A",
    "description": "Alice and Bob play a game. They have a blackboard; initially, there are $$$n$$$ integers written on it, and each integer is equal to $$$1$$$.Alice and Bob take turns; Alice goes first. On their turn, the player has to choose several (at least two) equal integers on the board, wipe them and write a new integer which is equal to their sum.For example, if the board currently contains integers $$$\\{1, 1, 2, 2, 2, 3\\}$$$, then the following moves are possible:  choose two integers equal to $$$1$$$, wipe them and write an integer $$$2$$$, then the board becomes $$$\\{2, 2, 2, 2, 3\\}$$$;  choose two integers equal to $$$2$$$, wipe them and write an integer $$$4$$$, then the board becomes $$$\\{1, 1, 2, 3, 4\\}$$$;  choose three integers equal to $$$2$$$, wipe them and write an integer $$$6$$$, then the board becomes $$$\\{1, 1, 3, 6\\}$$$. If a player cannot make a move (all integers on the board are different), that player wins the game.Determine who wins if both players play optimally."
  },
  {
    "title": "In Search of Truth (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1840/G2",
    "description": "The only difference between easy and hard versions is the maximum number of queries. In this version, you are allowed to ask at most $$$1000$$$ queries.This is an interactive problem.You are playing a game. The circle is divided into $$$n$$$ sectors, sectors are numbered from $$$1$$$ to $$$n$$$ in some order. You are in the adjacent room and do not know either the number of sectors or their numbers. There is also an arrow that initially points to some sector. Initially, the host tells you the number of the sector to which the arrow points. After that, you can ask the host to move the arrow $$$k$$$ sectors counterclockwise or clockwise at most $$$1000$$$ times. And each time you are told the number of the sector to which the arrow points.Your task is to determine the integer $$$n$$$ — the number of sectors in at most $$$1000$$$ queries.It is guaranteed that $$$1 \\le n \\le 10^6$$$."
  },
  {
    "title": "In Search of Truth (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1840/G1",
    "description": "The only difference between easy and hard versions is the maximum number of queries. In this version, you are allowed to ask at most $$$2023$$$ queries.This is an interactive problem.You are playing a game. The circle is divided into $$$n$$$ sectors, sectors are numbered from $$$1$$$ to $$$n$$$ in some order. You are in the adjacent room and do not know either the number of sectors or their numbers. There is also an arrow that initially points to some sector. Initially, the host tells you the number of the sector to which the arrow points. After that, you can ask the host to move the arrow $$$k$$$ sectors counterclockwise or clockwise at most $$$2023$$$ times. And each time you are told the number of the sector to which the arrow points.Your task is to determine the integer $$$n$$$ — the number of sectors in at most $$$2023$$$ queries.It is guaranteed that $$$1 \\le n \\le 10^6$$$."
  },
  {
    "title": "Railguns",
    "url": "https://codeforces.com/problemset/problem/1840/F",
    "description": "Tema is playing a very interesting computer game.During the next mission, Tema's character found himself on an unfamiliar planet. Unlike Earth, this planet is flat and can be represented as an $$$n \\times m$$$ rectangle.Tema's character is located at the point with coordinates $$$(0, 0)$$$. In order to successfully complete the mission, he needs to reach the point with coordinates $$$(n, m)$$$ alive.Let the character of the computer game be located at the coordinate $$$(i, j)$$$. Every second, starting from the first, Tema can:  either use vertical hyperjump technology, after which his character will end up at coordinate $$$(i + 1, j)$$$ at the end of the second;  or use horizontal hyperjump technology, after which his character will end up at coordinate $$$(i, j + 1)$$$ at the end of the second;  or Tema can choose not to make a hyperjump, in which case his character will not move during this second; The aliens that inhabit this planet are very dangerous and hostile. Therefore, they will shoot from their railguns $$$r$$$ times.Each shot completely penetrates one coordinate vertically or horizontally. If the character is in the line of its impact at the time of the shot (at the end of the second), he dies.Since Tema looked at the game's source code, he knows complete information about each shot — the time, the penetrated coordinate, and the direction of the shot.What is the minimum time for the character to reach the desired point? If he is doomed to die and cannot reach the point with coordinates $$$(n, m)$$$, output $$$-1$$$."
  },
  {
    "title": "Character Blocking",
    "url": "https://codeforces.com/problemset/problem/1840/E",
    "description": "You are given two strings of equal length $$$s_1$$$ and $$$s_2$$$, consisting of lowercase Latin letters, and an integer $$$t$$$.You need to answer $$$q$$$ queries, numbered from $$$1$$$ to $$$q$$$. The $$$i$$$-th query comes in the $$$i$$$-th second of time. Each query is one of three types:   block the characters at position $$$pos$$$ (indexed from $$$1$$$) in both strings for $$$t$$$ seconds;  swap two unblocked characters;  determine if the two strings are equal at the time of the query, ignoring blocked characters. Note that in queries of the second type, the characters being swapped can be from the same string or from $$$s_1$$$ and $$$s_2$$$."
  },
  {
    "title": "Wooden Toy Festival",
    "url": "https://codeforces.com/problemset/problem/1840/D",
    "description": "In a small town, there is a workshop specializing in woodwork. Since the town is small, only three carvers work there.Soon, a wooden toy festival is planned in the town. The workshop employees want to prepare for it.They know that $$$n$$$ people will come to the workshop with a request to make a wooden toy. People are different and may want different toys. For simplicity, let's denote the pattern of the toy that the $$$i$$$-th person wants as $$$a_i$$$ ($$$1 \\le a_i \\le 10^9$$$).Each of the carvers can choose an integer pattern $$$x$$$ ($$$1 \\le x \\le 10^9$$$) in advance, different carvers can choose different patterns. $$$x$$$ is the integer. During the preparation for the festival, the carvers will perfectly work out the technique of making the toy of the chosen pattern, which will allow them to cut it out of wood instantly. To make a toy of pattern $$$y$$$ for a carver who has chosen pattern $$$x$$$, it will take $$$|x - y|$$$ time, because the more the toy resembles the one he can make instantly, the faster the carver will cope with the work.On the day of the festival, when the next person comes to the workshop with a request to make a wooden toy, the carvers can choose who will take on the job. At the same time, the carvers are very skilled people and can work on orders for different people simultaneously.Since people don't like to wait, the carvers want to choose patterns for preparation in such a way that the maximum waiting time over all people is as small as possible.Output the best maximum waiting time that the carvers can achieve."
  },
  {
    "title": "Ski Resort",
    "url": "https://codeforces.com/problemset/problem/1840/C",
    "description": "Dima Vatrushin is a math teacher at school. He was sent on vacation for $$$n$$$ days for his good work. Dima has long dreamed of going to a ski resort, so he wants to allocate several consecutive days and go skiing. Since the vacation requires careful preparation, he will only go for at least $$$k$$$ days.You are given an array $$$a$$$ containing the weather forecast at the resort. That is, on the $$$i$$$-th day, the temperature will be $$$a_i$$$ degrees.Dima was born in Siberia, so he can go on vacation only if the temperature does not rise above $$$q$$$ degrees throughout the vacation.Unfortunately, Dima was so absorbed in abstract algebra that he forgot how to count. He asks you to help him and count the number of ways to choose vacation dates at the resort."
  },
  {
    "title": "Binary Cafe",
    "url": "https://codeforces.com/problemset/problem/1840/B",
    "description": "Once upon a time, Toma found himself in a binary cafe. It is a very popular and unusual place.The cafe offers visitors $$$k$$$ different delicious desserts. The desserts are numbered from $$$0$$$ to $$$k-1$$$. The cost of the $$$i$$$-th dessert is $$$2^i$$$ coins, because it is a binary cafe! Toma is willing to spend no more than $$$n$$$ coins on tasting desserts. At the same time, he is not interested in buying any dessert more than once, because one is enough to evaluate the taste.In how many different ways can he buy several desserts (possibly zero) for tasting?"
  },
  {
    "title": "Cipher Shifer",
    "url": "https://codeforces.com/problemset/problem/1840/A",
    "description": "There is a string $$$a$$$ (unknown to you), consisting of lowercase Latin letters, encrypted according to the following rule into string $$$s$$$:  after each character of string $$$a$$$, an arbitrary (possibly zero) number of any lowercase Latin letters, different from the character itself, is added;  after each such addition, the character that we supplemented is added. You are given string $$$s$$$, and you need to output the initial string $$$a$$$. In other words, you need to decrypt string $$$s$$$.Note that each string encrypted in this way is decrypted uniquely."
  },
  {
    "title": "Decreasing Game",
    "url": "https://codeforces.com/problemset/problem/1839/E",
    "description": "This is an interactive problem.Consider the following game for two players:  Initially, an array of integers $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$ is written on blackboard. Game consists of rounds. On each round, the following happens:   The first player selects any $$$i$$$ such that $$$a_i \\gt 0$$$. If there is no such $$$i$$$, the first player loses the game (the second player wins) and game ends.  The second player selects any $$$j \\neq i$$$ such that $$$a_j \\gt 0$$$. If there is no such $$$j$$$, the second player loses the game (the first player wins) and game ends.  Let $$$d = \\min(a_i, a_j)$$$. The values of $$$a_i$$$ and $$$a_j$$$ are simultaneously decreased by $$$d$$$ and the next round starts.  It can be shown that game always ends after the finite number of rounds.You have to select which player you will play for (first or second) and win the game."
  },
  {
    "title": "Ball Sorting",
    "url": "https://codeforces.com/problemset/problem/1839/D",
    "description": "There are $$$n$$$ colorful balls arranged in a row. The balls are painted in $$$n$$$ distinct colors, denoted by numbers from $$$1$$$ to $$$n$$$. The $$$i$$$-th ball from the left is painted in color $$$c_i$$$. You want to reorder the balls so that the $$$i$$$-th ball from the left has color $$$i$$$. Additionally, you have $$$k \\ge 1$$$ balls of color $$$0$$$ that you can use in the reordering process.Due to the strange properties of the balls, they can be reordered only by performing the following operations:  Place a ball of color $$$0$$$ anywhere in the sequence (between any two consecutive balls, before the leftmost ball or after the rightmost ball) while keeping the relative order of other balls. You can perform this operation no more than $$$k$$$ times, because you have only $$$k$$$ balls of color $$$0$$$. Choose any ball of non-zero color such that at least one of the balls adjacent to him has color $$$0$$$, and move that ball (of non-zero color) anywhere in the sequence (between any two consecutive balls, before the leftmost ball or after the rightmost ball) while keeping the relative order of other balls. You can perform this operation as many times as you want, but for each operation you should pay $$$1$$$ coin.  You can perform these operations in any order. After the last operation, all balls of color $$$0$$$ magically disappear, leaving a sequence of $$$n$$$ balls of non-zero colors.What is the minimum amount of coins you should spend on the operations of the second type, so that the $$$i$$$-th ball from the left has color $$$i$$$ for all $$$i$$$ from $$$1$$$ to $$$n$$$ after the disappearance of all balls of color zero? It can be shown that under the constraints of the problem, it is always possible to reorder the balls in the required way. Solve the problem for all $$$k$$$ from $$$1$$$ to $$$n$$$."
  },
  {
    "title": "Insert Zero and Invert Prefix",
    "url": "https://codeforces.com/problemset/problem/1839/C",
    "description": "You have a sequence $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$, each element of which is either $$$0$$$ or $$$1$$$, and a sequence $$$b$$$, which is initially empty.You are going to perform $$$n$$$ operations. On each of them you will increase the length of $$$b$$$ by $$$1$$$.  On the $$$i$$$-th operation you choose an integer $$$p$$$ between $$$0$$$ and $$$i-1$$$. You insert $$$0$$$ in the sequence $$$b$$$ on position $$$p+1$$$ (after the first $$$p$$$ elements), and then you invert the first $$$p$$$ elements of $$$b$$$. More formally: let's denote the sequence $$$b$$$ before the $$$i$$$-th ($$$1 \\le i \\le n$$$) operation as $$$b_1, b_2, \\ldots, b_{i-1}$$$. On the $$$i$$$-th operation you choose an integer $$$p$$$ between $$$0$$$ and $$$i-1$$$ and replace $$$b$$$ with $$$\\overline{b_1}, \\overline{b_2}, \\ldots, \\overline{b_{p}}, 0, b_{p+1}, b_{p+2}, \\ldots, b_{i-1}$$$. Here, $$$\\overline{x}$$$ denotes the binary inversion. Hence, $$$\\overline{0} = 1$$$ and $$$\\overline{1} = 0$$$. You can find examples of operations in the Notes section.Determine if there exists a sequence of operations that makes $$$b$$$ equal to $$$a$$$. If such sequence of operations exists, find it."
  },
  {
    "title": "Lamps",
    "url": "https://codeforces.com/problemset/problem/1839/B",
    "description": "You have $$$n$$$ lamps, numbered by integers from $$$1$$$ to $$$n$$$. Each lamp $$$i$$$ has two integer parameters $$$a_i$$$ and $$$b_i$$$.At each moment each lamp is in one of three states: it may be turned on, turned off, or broken.Initially all lamps are turned off. In one operation you can select one lamp that is turned off and turn it on (you can't turn on broken lamps). You receive $$$b_i$$$ points for turning lamp $$$i$$$ on. The following happens after each performed operation:   Let's denote the number of lamps that are turned on as $$$x$$$ (broken lamps do not count). All lamps $$$i$$$ such that $$$a_i \\le x$$$ simultaneously break, whether they were turned on or off. Please note that broken lamps never count as turned on and that after a turned on lamp breaks, you still keep points received for turning it on.You can perform an arbitrary number of operations.Find the maximum number of points you can get."
  },
  {
    "title": "The Good Array",
    "url": "https://codeforces.com/problemset/problem/1839/A",
    "description": "You are given two integers $$$n$$$ and $$$k$$$.An array $$$a_1, a_2, \\ldots, a_n$$$ of length $$$n$$$, consisting of zeroes and ones is good if for all integers $$$i$$$ from $$$1$$$ to $$$n$$$ both of the following conditions are satisfied:  at least $$$\\lceil \\frac{i}{k} \\rceil$$$ of the first $$$i$$$ elements of $$$a$$$ are equal to $$$1$$$,  at least $$$\\lceil \\frac{i}{k} \\rceil$$$ of the last $$$i$$$ elements of $$$a$$$ are equal to $$$1$$$. Here, $$$\\lceil \\frac{i}{k} \\rceil$$$ denotes the result of division of $$$i$$$ by $$$k$$$, rounded up. For example, $$$\\lceil \\frac{6}{3} \\rceil = 2$$$, $$$\\lceil \\frac{11}{5} \\rceil = \\lceil 2.2 \\rceil = 3$$$ and $$$\\lceil \\frac{7}{4} \\rceil = \\lceil 1.75 \\rceil = 2$$$.Find the minimum possible number of ones in a good array."
  },
  {
    "title": "Stuck Conveyor",
    "url": "https://codeforces.com/problemset/problem/1838/F",
    "description": "This is an interactive problem.There is an $$$n$$$ by $$$n$$$ grid of conveyor belts, in positions $$$(1, 1)$$$ through $$$(n, n)$$$ of a coordinate plane. Every other square in the plane is empty. Each conveyor belt can be configured to move boxes up ('^'), down ('v'), left ('<'), or right ('>'). If a box moves onto an empty square, it stops moving.However, one of the $$$n^2$$$ belts is stuck, and will always move boxes in the same direction, no matter how it is configured. Your goal is to perform a series of tests to determine which conveyor belt is stuck, and the direction in which it sends items.To achieve this, you can perform up to $$$25$$$ tests. In each test, you assign a direction to all $$$n^2$$$ belts, place a box on top of one of them, and then turn all of the conveyors on. One possible result of a query with $$$n=4$$$. In this case, the box starts at $$$(2, 2)$$$. If there were no stuck conveyor, it would end up at $$$(5, 4)$$$, but because of the stuck '>' conveyor at $$$(3, 3)$$$, it enters an infinite loop.The conveyors move the box around too quickly for you to see, so the only information you receive from a test is whether the box eventually stopped moving, and if so, the coordinates of its final position."
  },
  {
    "title": "Count Supersequences",
    "url": "https://codeforces.com/problemset/problem/1838/E",
    "description": "You are given an array $$$a$$$ of $$$n$$$ integers, where all elements $$$a_i$$$ lie in the range $$$[1, k]$$$. How many different arrays $$$b$$$ of $$$m$$$ integers, where all elements $$$b_i$$$ lie in the range $$$[1, k]$$$, contain $$$a$$$ as a subsequence? Two arrays are considered different if they differ in at least one position.A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements.Since the answer may be large, print it modulo $$$10^9 + 7$$$."
  },
  {
    "title": "Bracket Walk",
    "url": "https://codeforces.com/problemset/problem/1838/D",
    "description": "There is a string $$$s$$$ of length $$$n$$$ consisting of the characters '(' and ')'. You are walking on this string. You start by standing on top of the first character of $$$s$$$, and you want to make a sequence of moves such that you end on the $$$n$$$-th character. In one step, you can move one space to the left (if you are not standing on the first character), or one space to the right (if you are not standing on the last character). You may not stay in the same place, however you may visit any character, including the first and last character, any number of times.At each point in time, you write down the character you are currently standing on. We say the string is walkable if there exists some sequence of moves that take you from the first character to the last character, such that the string you write down is a regular bracket sequence.A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters '1' and '+' between the original characters of the sequence. For example, bracket sequences \"()()\", \"(())\" are regular (the resulting expressions are: \"(1)+(1)\", \"((1+1)+1)\"), and \")(\" and \"(\" are not.One possible valid walk on $$$s=\\mathtt{(())()))}$$$. The red dot indicates your current position, and the red string indicates the string you have written down. Note that the red string is a regular bracket sequence at the end of the process.You are given $$$q$$$ queries. Each query flips the value of a character from '(' to ')' or vice versa. After each query, determine whether the string is walkable.Queries are cumulative, so the effects of each query carry on to future queries."
  },
  {
    "title": "No Prime Differences",
    "url": "https://codeforces.com/problemset/problem/1838/C",
    "description": "You are given integers $$$n$$$ and $$$m$$$. Fill an $$$n$$$ by $$$m$$$ grid with the integers $$$1$$$ through $$$n\\cdot m$$$, in such a way that for any two adjacent cells in the grid, the absolute difference of the values in those cells is not a prime number. Two cells in the grid are considered adjacent if they share a side.  It can be shown that under the given constraints, there is always a solution."
  },
  {
    "title": "Minimize Permutation Subarrays",
    "url": "https://codeforces.com/problemset/problem/1838/B",
    "description": "You are given a permutation $$$p$$$ of size $$$n$$$. You want to minimize the number of subarrays of $$$p$$$ that are permutations. In order to do so, you must perform the following operation exactly once:  Select integers $$$i$$$, $$$j$$$, where $$$1 \\le i, j \\le n$$$, then  Swap $$$p_i$$$ and $$$p_j$$$. For example, if $$$p = [5, 1, 4, 2, 3]$$$ and we choose $$$i = 2$$$, $$$j = 3$$$, the resulting array will be $$$[5, 4, 1, 2, 3]$$$. If instead we choose $$$i = j = 5$$$, the resulting array will be $$$[5, 1, 4, 2, 3]$$$.Which choice of $$$i$$$ and $$$j$$$ will minimize the number of subarrays that are permutations?A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).An array $$$a$$$ is a subarray of an array $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end."
  },
  {
    "title": "Blackboard List",
    "url": "https://codeforces.com/problemset/problem/1838/A",
    "description": "Two integers were written on a blackboard. After that, the following step was carried out $$$n-2$$$ times:  Select any two integers on the board, and write the absolute value of their difference on the board. After this process was complete, the list of $$$n$$$ integers was shuffled. You are given the final list. Recover one of the initial two numbers. You do not need to recover the other one.You are guaranteed that the input can be generated using the above process."
  },
  {
    "title": "Editorial for Two",
    "url": "https://codeforces.com/problemset/problem/1837/F",
    "description": "Berland Intercollegiate Contest has just finished. Monocarp and Polycarp, as the jury, are going to conduct an editorial. Unfortunately, the time is limited, since they have to finish before the closing ceremony.There were $$$n$$$ problems in the contest. The problems are numbered from $$$1$$$ to $$$n$$$. The editorial for the $$$i$$$-th problem takes $$$a_i$$$ minutes. Monocarp and Polycarp are going to conduct an editorial for exactly $$$k$$$ of the problems.The editorial goes as follows. They have a full problemset of $$$n$$$ problems before them, in order. They remove $$$n - k$$$ problems without changing the order of the remaining $$$k$$$ problems. Then, Monocarp takes some prefix of these $$$k$$$ problems (possibly, an empty one or all problems). Polycarp takes the remaining suffix of them. After that, they go to different rooms and conduct editorials for their problems in parallel. So, the editorial takes as much time as the longer of these two does.Please, help Monocarp and Polycarp to choose the problems and the split in such a way that the editorial finishes as early as possible. Print the duration of the editorial."
  },
  {
    "title": "Playoff Fixing",
    "url": "https://codeforces.com/problemset/problem/1837/E",
    "description": "$$$2^k$$$ teams participate in a playoff tournament. The teams are numbered from $$$1$$$ to $$$2^k$$$, in order of decreasing strength. So, team $$$1$$$ is the strongest one, team $$$2^k$$$ is the weakest one. A team with a smaller number always defeats a team with a larger number.First of all, the teams are arranged in some order during a procedure called seeding. Each team is assigned another unique value from $$$1$$$ to $$$2^k$$$, called a seed, that represents its starting position in the playoff.The tournament consists of $$$2^k - 1$$$ games. They are held as follows: the teams are split into pairs: team with seed $$$1$$$ plays against team with seed $$$2$$$, team with seed $$$3$$$ plays against team with seed $$$4$$$ (exactly in this order), and so on (so, $$$2^{k-1}$$$ games are played in that phase). When a team loses a game, it is eliminated.After that, only $$$2^{k-1}$$$ teams remain. If only one team remains, it is declared the champion; otherwise, $$$2^{k-2}$$$ games are played: in the first one of them, the winner of the game \"seed $$$1$$$ vs seed $$$2$$$\" plays against the winner of the game \"seed $$$3$$$ vs seed $$$4$$$\", then the winner of the game \"seed $$$5$$$ vs seed $$$6$$$\" plays against the winner of the game \"seed $$$7$$$ vs seed $$$8$$$\", and so on. This process repeats until only one team remains.After the tournament ends, the teams are assigned places according to the tournament phase when they were eliminated. In particular:  the winner of the tournament gets place $$$1$$$;  the team eliminated in the finals gets place $$$2$$$;  both teams eliminated in the semifinals get place $$$3$$$;  all teams eliminated in the quarterfinals get place $$$5$$$;  all teams eliminated in the 1/8 finals get place $$$9$$$, and so on. Now that we established the rules, we do a little rigging. In particular, we want:   team $$$1$$$ (not team with seed $$$1$$$) to take place $$$1$$$;  team $$$2$$$ to take place $$$2$$$;  teams $$$3$$$ and $$$4$$$ to take place $$$3$$$;  teams from $$$5$$$ to $$$8$$$ to take place $$$5$$$, and so on. For example, this picture describes one of the possible ways the tournament can go with $$$k = 3$$$, and the resulting places of the teams:  Some seeds are already reserved for some teams (we are not the only ones rigging the tournament, apparently). We have to fill the rest of the seeds with the remaining teams to achieve the desired placements. How many ways are there to do that? Since that value might be large, print it modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Bracket Coloring",
    "url": "https://codeforces.com/problemset/problem/1837/D",
    "description": "A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example:  the bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");  the bracket sequences \")(\", \"(\" and \")\" are not. A bracket sequence is called beautiful if one of the following conditions is satisfied:  it is a regular bracket sequence;  if the order of the characters in this sequence is reversed, it becomes a regular bracket sequence. For example, the bracket sequences \"()()\", \"(())\", \")))(((\", \"))()((\" are beautiful.You are given a bracket sequence $$$s$$$. You have to color it in such a way that:  every bracket is colored into one color;  for every color, there is at least one bracket colored into that color;  for every color, if you write down the sequence of brackets having that color in the order they appear, you will get a beautiful bracket sequence. Color the given bracket sequence $$$s$$$ into the minimum number of colors according to these constraints, or report that it is impossible."
  },
  {
    "title": "Best Binary String",
    "url": "https://codeforces.com/problemset/problem/1837/C",
    "description": "You are given a string $$$s$$$ consisting of the characters 0, 1 and/or ?. Let's call it a pattern.Let's say that the binary string (a string where each character is either 0 or 1) matches the pattern if you can replace each character ? with 0 or 1 (for each character, the choice is independent) so that the strings become equal. For example, 0010 matches ?01?, but 010 doesn't match 1??, ??, or ????.Let's define the cost of the binary string as the minimum number of operations of the form \"reverse an arbitrary contiguous substring of the string\" required to sort the string in non-descending order.You have to find a binary string with the minimum possible cost among those that match the given pattern. If there are multiple answers, print any of them."
  },
  {
    "title": "Comparison String",
    "url": "https://codeforces.com/problemset/problem/1837/B",
    "description": "You are given a string $$$s$$$ of length $$$n$$$, where each character is either < or >.An array $$$a$$$ consisting of $$$n+1$$$ elements is compatible with the string $$$s$$$ if, for every $$$i$$$ from $$$1$$$ to $$$n$$$, the character $$$s_i$$$ represents the result of comparing $$$a_i$$$ and $$$a_{i+1}$$$, i. e.:  $$$s_i$$$ is < if and only if $$$a_i < a_{i+1}$$$;  $$$s_i$$$ is > if and only if $$$a_i > a_{i+1}$$$. For example, the array $$$[1, 2, 5, 4, 2]$$$ is compatible with the string <<>>. There are other arrays with are compatible with that string, for example, $$$[13, 37, 42, 37, 13]$$$.The cost of the array is the number of different elements in it. For example, the cost of $$$[1, 2, 5, 4, 2]$$$ is $$$4$$$; the cost of $$$[13, 37, 42, 37, 13]$$$ is $$$3$$$.You have to calculate the minimum cost among all arrays which are compatible with the given string $$$s$$$."
  },
  {
    "title": "Grasshopper on a Line",
    "url": "https://codeforces.com/problemset/problem/1837/A",
    "description": "You are given two integers $$$x$$$ and $$$k$$$. Grasshopper starts in a point $$$0$$$ on an OX axis. In one move, it can jump some integer distance, that is not divisible by $$$k$$$, to the left or to the right.What's the smallest number of moves it takes the grasshopper to reach point $$$x$$$? What are these moves? If there are multiple answers, print any of them."
  },
  {
    "title": "Astrophysicists",
    "url": "https://codeforces.com/problemset/problem/1836/B",
    "description": "In many, many years, far, far away, there will be a launch of the first flight to Mars. To celebrate the success, $$$n$$$ astrophysicists working on the project will be given bonuses of a total value of $$$k$$$ gold coins.You have to distribute the money among the astrophysicists, and to make it easier, you have to assign bonuses in silver coins. Each gold coin is worth $$$g$$$ silver coins, so you have to distribute all $$$k \\cdot g$$$ silver coins among $$$n$$$ people.Unfortunately, the company has some financial troubles right now. Therefore, instead of paying the number of silver coins written on the bonus, they decided to round this amount to the nearest integer number of gold coins.The rounding procedure is as follows. If an astrophysicist has bonus equal to $$$x$$$ silver coins, and we denote $$$r = x \\bmod g$$$, then:   If $$$r \\geq \\lceil \\frac{g}{2} \\rceil$$$, the astrophysicist receives $$$x + (g - r)$$$ silver coins;  Otherwise, an astrophysicists receives $$$x - r$$$ silver coins.  Note that due to rounding, the total sum of actually paid money is not, in general, equal to $$$k \\cdot g$$$ silver coins. The operation $$$a \\bmod b$$$ denotes the remainder of the division of $$$a$$$ by $$$b$$$. Sum of values before rounding has to be equal to $$$k \\cdot g$$$ silver coins, but some workers can be assigned $$$0$$$ silver coins.You aim to distribute the bonuses so that the company saves as many silver coins due to rounding as possible. Please note that there is always a distribution in which the company spends no more than $$$k \\cdot g$$$ silver coins."
  },
  {
    "title": "Destroyer",
    "url": "https://codeforces.com/problemset/problem/1836/A",
    "description": "John is a lead programmer on a destroyer belonging to the space navy of the Confederacy of Independent Operating Systems. One of his tasks is checking if the electronic brains of robots were damaged during battles.A standard test is to order the robots to form one or several lines, in each line the robots should stand one after another. After that, each robot reports the number of robots standing in front of it in its line.  An example of robots' arrangement (the front of the lines is on the left). The robots report the numbers above. The $$$i$$$-th robot reported number $$$l_i$$$. Unfortunately, John does not know which line each robot stands in, and can't check the reported numbers. Please determine if it is possible to form the lines in such a way that all reported numbers are correct, or not."
  },
  {
    "title": "Good Graph",
    "url": "https://codeforces.com/problemset/problem/1835/F",
    "description": "You are given a bipartite graph $$$G$$$ with the vertex set in the left part $$$L$$$, in the right part $$$R$$$, and $$$m$$$ edges connecting these two sets. We know that $$$|L| = |R| = n$$$.For any subset $$$S \\subseteq L$$$, let $$$N(S)$$$ denote the set of all neighbors of vertices in $$$S$$$. We say that a subset $$$S \\subseteq L$$$ in graph $$$G$$$ is tight if $$$|S| = |N(S)|$$$. We say that graph $$$G$$$ is good if $$$\\forall_{S \\subseteq L}, |S| \\leq |N(S)|$$$.Your task is to verify whether the graph is good and, if so, to optimize it. If the graph is not good, find a subset $$$S \\subseteq L$$$ such that $$$|S| > |N(S)|$$$. However, if the graph is good, your task is to find a good bipartite graph $$$G'$$$ with the same set of vertices $$$L \\cup R$$$, in which $$$\\forall_{S \\subseteq L}$$$, $$$S$$$ is tight in $$$G$$$ if and only if $$$S$$$ is tight in $$$G'$$$. If there are multiple such graphs, choose one with the smallest possible number of edges. If there are still multiple such graphs, print any."
  },
  {
    "title": "Old Mobile",
    "url": "https://codeforces.com/problemset/problem/1835/E",
    "description": "During the latest mission of the starship U.S.S. Coder, Captain Jan Bitovsky was accidentally teleported to the surface of an unknown planet. Trying to find his way back, Jan found an artifact from planet Earth's ancient civilization — a mobile device capable of interstellar calls created by Byterola. Unfortunately, there was another problem. Even though Jan, as a representative of humans, knew perfectly the old notation of the cell phone numbers, the symbols on the device's keyboard were completely worn down and invisible to the human eye. The old keyboards had exactly $$$m + 1$$$ buttons, one for each digit from the base $$$m$$$ numerical system, and one single backspace button allowing one to erase the last written digit (if nothing was written on the screen, then this button does nothing, but it's still counted as pressed).Jan would like to communicate with his crew. He needs to type a certain number (also from the base $$$m$$$ numerical system, that is, digits from $$$0$$$ to $$$m - 1$$$). He wants to know the expected number of button presses necessary to contact the U.S.S. Coder. Jan always chooses the most optimal buttons based on his current knowledge. Buttons are indistinguishable until pressed. Help him!"
  },
  {
    "title": "Doctor's Brown Hypothesis",
    "url": "https://codeforces.com/problemset/problem/1835/D",
    "description": "The rebels have been crushed in the most recent battle with the imperial forces, but there is a ray of new hope.Meanwhile, on one of the conquered planets, Luke was getting ready for an illegal street race (which should come as no surprise, given his family history). Luke arrived at the finish line with 88 miles per hour on his speedometer. After getting out of the car, he was greeted by a new reality. It turns out that the battle has not happened yet and will start in exactly $$$k$$$ hours.The rebels have placed a single battleship on each of the $$$n$$$ planets. $$$m$$$ unidirectional wormholes connect the planets. Traversing each wormhole takes exactly one hour. Generals of the Imperium have planned the battle precisely, but their troops cannot dynamically adapt to changing circumstances. Because of this, it is enough for the rebels to move some ships around before the battle to confuse the enemy, secure victory and change the galaxy's fate.Owing to numerous strategical considerations, which we now omit, the rebels would like to choose two ships that will switch places so that both of them will be on the move for the whole time (exactly $$$k$$$ hours). In other words, rebels look for two planets, $$$x$$$ and $$$y$$$, such that paths of length $$$k$$$ exist from $$$x$$$ to $$$y$$$ and from $$$y$$$ to $$$x$$$.Because of the limited fuel supply, choosing one ship would also be acceptable. This ship should fly through the wormholes for $$$k$$$ hours and then return to its initial planet.How many ways are there to choose the ships for completing the mission? "
  },
  {
    "title": "Twin Clusters",
    "url": "https://codeforces.com/problemset/problem/1835/C",
    "description": "Famous worldwide astrophysicist Mleil waGrasse Tysok recently read about the existence of twin galaxy clusters. Before he shares this knowledge with the broader audience in his podcast called S.tarT-ok, he wants to prove their presence on his own. Mleil is aware that the vastness of the universe is astounding (almost as astounding as his observation skills) and decides to try his luck and find some new pair of twin clusters.To do so, he used his TLEscope to observe a part of the night sky that was not yet examined by humanity in which there are exactly $$$2^{k + 1}$$$ galaxies in a row. $$$i$$$-th of them consist of exactly $$$0 \\le g_i < 4^k$$$ stars.A galaxy cluster is any non-empty contiguous segment of galaxies. Moreover, its' trait is said to be equal to the bitwise XOR of all values $$$g_i$$$ within this range.Two galaxy clusters are considered twins if and only if they have the same traits and their corresponding segments are disjoint.Write a program that, for many scenarios, will read a description of a night sky part observed by Mleil and outputs a location of two intervals belonging to some twin clusters pair, or a single value $$$-1$$$ if no such pair exists."
  },
  {
    "title": "Lottery",
    "url": "https://codeforces.com/problemset/problem/1835/B",
    "description": "$$$n$$$ people indexed with integers from $$$1$$$ to $$$n$$$ came to take part in a lottery. Each received a ticket with an integer from $$$0$$$ to $$$m$$$.In a lottery, one integer called target is drawn uniformly from $$$0$$$ to $$$m$$$. $$$k$$$ tickets (or less, if there are not enough participants) with the closest numbers to the target are declared the winners. In case of a draw, a ticket belonging to the person with a smaller index is declared a winner.Bytek decided to take part in the lottery. He knows the values on the tickets of all previous participants. He can pick whatever value he wants on his ticket, but unfortunately, as he is the last one to receive it, he is indexed with an integer $$$n + 1$$$. Bytek wants to win the lottery. Thus, he wants to know what he should pick to maximize the chance of winning. He wants to know the smallest integer in case there are many such integers. Your task is to find it and calculate his chance of winning."
  },
  {
    "title": "k-th equality",
    "url": "https://codeforces.com/problemset/problem/1835/A",
    "description": "Consider all equalities of form $$$a + b = c$$$, where $$$a$$$ has $$$A$$$ digits, $$$b$$$ has $$$B$$$ digits, and $$$c$$$ has $$$C$$$ digits. All the numbers are positive integers and are written without leading zeroes. Find the $$$k$$$-th lexicographically smallest equality when written as a string like above or determine that it does not exist.For example, the first three equalities satisfying $$$A = 1$$$, $$$B = 1$$$, $$$C = 2$$$ are   $$$1 + 9 = 10$$$,  $$$2 + 8 = 10$$$,  $$$2 + 9 = 11$$$. An equality $$$s$$$ is lexicographically smaller than an equality $$$t$$$ with the same lengths of the numbers if and only if the following holds:   in the first position where $$$s$$$ and $$$t$$$ differ, the equality $$$s$$$ has a smaller digit than the corresponding digit in $$$t$$$. "
  },
  {
    "title": "Typewriter",
    "url": "https://codeforces.com/problemset/problem/1834/F",
    "description": "Recently, Polycarp was given an unusual typewriter as a gift! Unfortunately, the typewriter was defective and had a rather strange design.The typewriter consists of $$$n$$$ cells numbered from left to right from $$$1$$$ to $$$n$$$, and a carriage that moves over them. The typewriter cells contain $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$, and each cell $$$i$$$ initially contains the integer $$$p_i$$$. Before all actions, the carriage is at cell number $$$1$$$ and there is nothing in its buffer storage. The cell on which the carriage is located is called the current cell. The carriage can perform five types of operations:  Take the integer from the current cell, if it is not empty, and put it in the carriage buffer, if it is empty (this buffer can contain no more than one integer).  Put the integer from the carriage buffer, if it is not empty, into the current cell, if it is empty.  Swap the number in the carriage buffer with the number in the current cell, if both the buffer and the cell contain integers.  Move the carriage from the current cell $$$i$$$ to cell $$$i + 1$$$ (if $$$i < n$$$), while the integer in the buffer is preserved.  Reset the carriage, i.e. move it to cell number $$$1$$$, while the integer in the buffer is preserved. Polycarp was very interested in this typewriter, so he asks you to help him understand it and will ask you $$$q$$$ queries of three types:  Perform a cyclic shift of the sequence $$$p$$$ to the left by $$$k_j$$$.  Perform a cyclic shift of the sequence $$$p$$$ to the right by $$$k_j$$$.  Reverse the sequence $$$p$$$. Before and after each query, Polycarp wants to know what minimum number of carriage resets is needed for the current sequence in order to distribute the numbers to their cells (so that the number $$$i$$$ ends up in cell number $$$i$$$).Note that Polycarp only wants to know the minimum number of carriage resets required to arrange the numbers in their places, but he does not actually distribute them.Help Polycarp find the answers to his queries!"
  },
  {
    "title": "MEX of LCM",
    "url": "https://codeforces.com/problemset/problem/1834/E",
    "description": "You are given an array $$$a$$$ of length $$$n$$$. A positive integer $$$x$$$ is called good if it is impossible to find a subsegment$$$^{\\dagger}$$$ of the array such that the least common multiple of all its elements is equal to $$$x$$$.You need to find the smallest good integer.A subsegment$$$^{\\dagger}$$$ of the array $$$a$$$ is a set of elements $$$a_l, a_{l + 1}, \\ldots, a_r$$$ for some $$$1 \\le l \\le r \\le n$$$. We will denote such subsegment as $$$[l, r]$$$."
  },
  {
    "title": "Survey in Class",
    "url": "https://codeforces.com/problemset/problem/1834/D",
    "description": "Zinaida Viktorovna has $$$n$$$ students in her history class. The homework for today included $$$m$$$ topics, but the students had little time to prepare, so $$$i$$$-th student learned only topics from $$$l_i$$$ to $$$r_i$$$ inclusive.At the beginning of the lesson, each student holds their hand at $$$0$$$. The teacher wants to ask some topics. It goes like this:  The teacher asks the topic $$$k$$$.  If the student has learned topic $$$k$$$, then he raises his hand by $$$1$$$, otherwise he lower it by $$$1$$$. Each topic Zinaida Viktorovna can ask no more than one time.Find the maximum difference of the heights of the highest and the lowest hand that can be in class after the survey.Note that the student's hand can go below $$$0$$$."
  },
  {
    "title": "Game with Reversing",
    "url": "https://codeforces.com/problemset/problem/1834/C",
    "description": "Alice and Bob are playing a game. They have two strings $$$S$$$ and $$$T$$$ of the same length $$$n$$$ consisting of lowercase latin letters. Players take turns alternately, with Alice going first.On her turn, Alice chooses an integer $$$i$$$ from $$$1$$$ to $$$n$$$, one of the strings $$$S$$$ or $$$T$$$, and any lowercase latin letter $$$c$$$, and replaces the $$$i$$$-th symbol in the chosen string with the character $$$c$$$.On his turn, Bob chooses one of the strings $$$S$$$ or $$$T$$$, and reverses it. More formally, Bob makes the replacement $$$S := \\operatorname{rev}(S)$$$ or $$$T := \\operatorname{rev}(T)$$$, where $$$\\operatorname{rev}(P) = P_n P_{n-1} \\ldots P_1$$$.The game lasts until the strings $$$S$$$ and $$$T$$$ are equal. As soon as the strings become equal, the game ends instantly.Define the duration of the game as the total number of moves made by both players during the game. For example, if Alice made $$$2$$$ moves in total, and Bob made $$$1$$$ move, then the duration of this game is $$$3$$$.Alice's goal is to minimize the duration of the game, and Bob's goal is to maximize the duration of the game.What will be the duration of the game, if both players play optimally? It can be shown that the game will end in a finite number of turns."
  },
  {
    "title": "Maximum Strength",
    "url": "https://codeforces.com/problemset/problem/1834/B",
    "description": "Fedya is playing a new game called \"The Legend of Link\", in which one of the character's abilities is to combine two materials into one weapon. Each material has its own strength, which can be represented by a positive integer $$$x$$$. The strength of the resulting weapon is determined as the sum of the absolute differences of the digits in the decimal representation of the integers at each position.Formally, let the first material have strength $$$X = \\overline{x_{1}x_{2} \\ldots x_{n}}$$$, and the second material have strength $$$Y = \\overline{y_{1}y_{2} \\ldots y_{n}}$$$. Then the strength of the weapon is calculated as $$$|x_{1} - y_{1}| + |x_{2} - y_{2}| + \\ldots + |x_{n} - y_{n}|$$$. If the integers have different lengths, then the shorter integer is padded with leading zeros.Fedya has an unlimited supply of materials with all possible strengths from $$$L$$$ to $$$R$$$, inclusive. Help him find the maximum possible strength of the weapon he can obtain.An integer $$$C = \\overline{c_{1}c_{2} \\ldots c_{k}}$$$ is defined as an integer obtained by sequentially writing the digits $$$c_1, c_2, \\ldots, c_k$$$ from left to right, i.e. $$$10^{k-1} \\cdot c_1 + 10^{k-2} \\cdot c_2 + \\ldots + c_k$$$."
  },
  {
    "title": "Unit Array",
    "url": "https://codeforces.com/problemset/problem/1834/A",
    "description": "Given an array $$$a$$$ of length $$$n$$$, which elements are equal to $$$-1$$$ and $$$1$$$. Let's call the array $$$a$$$ good if the following conditions are held at the same time:  $$$a_1 + a_2 + \\ldots + a_n \\ge 0$$$;  $$$a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n = 1$$$. In one operation, you can select an arbitrary element of the array $$$a_i$$$ and change its value to the opposite. In other words, if $$$a_i = -1$$$, you can assign the value to $$$a_i := 1$$$, and if $$$a_i = 1$$$, then assign the value to $$$a_i := -1$$$.Determine the minimum number of operations you need to perform to make the array $$$a$$$ good. It can be shown that this is always possible."
  },
  {
    "title": "Ksyusha and Chinchilla",
    "url": "https://codeforces.com/problemset/problem/1833/G",
    "description": "Ksyusha has a pet chinchilla, a tree on $$$n$$$ vertices and huge scissors. A tree is a connected graph without cycles. During a boring physics lesson Ksyusha thought about how to entertain her pet.Chinchillas like to play with branches. A branch is a tree of $$$3$$$ vertices.  The branch looks like this. A cut is the removal of some (not yet cut) edge in the tree. Ksyusha has plenty of free time, so she can afford to make enough cuts so that the tree splits into branches. In other words, after several (possibly zero) cuts, each vertex must belong to exactly one branch.Help Ksyusha choose the edges to be cut or tell that it is impossible."
  },
  {
    "title": "Ira and Flamenco",
    "url": "https://codeforces.com/problemset/problem/1833/F",
    "description": "Ira loves Spanish flamenco dance very much. She decided to start her own dance studio and found $$$n$$$ students, $$$i$$$th of whom has level $$$a_i$$$.Ira can choose several of her students and set a dance with them. So she can set a huge number of dances, but she is only interested in magnificent dances. The dance is called magnificent if the following is true:   exactly $$$m$$$ students participate in the dance;  levels of all dancers are pairwise distinct;  levels of every two dancers have an absolute difference strictly less than $$$m$$$. For example, if $$$m = 3$$$ and $$$a = [4, 2, 2, 3, 6]$$$, the following dances are magnificent (students participating in the dance are highlighted in red): $$$[\\color{red}{4}, 2, \\color{red}{2}, \\color{red}{3}, 6]$$$, $$$[\\color{red}{4}, \\color{red}{2}, 2, \\color{red}{3}, 6]$$$. At the same time dances $$$[\\color{red}{4}, 2, 2, \\color{red}{3}, 6]$$$, $$$[4, \\color{red}{2}, \\color{red}{2}, \\color{red}{3}, 6]$$$, $$$[\\color{red}{4}, 2, 2, \\color{red}{3}, \\color{red}{6}]$$$ are not magnificent.In the dance $$$[\\color{red}{4}, 2, 2, \\color{red}{3}, 6]$$$ only $$$2$$$ students participate, although $$$m = 3$$$.The dance $$$[4, \\color{red}{2}, \\color{red}{2}, \\color{red}{3}, 6]$$$ involves students with levels $$$2$$$ and $$$2$$$, although levels of all dancers must be pairwise distinct.In the dance $$$[\\color{red}{4}, 2, 2, \\color{red}{3}, \\color{red}{6}]$$$ students with levels $$$3$$$ and $$$6$$$ participate, but $$$|3 - 6| = 3$$$, although $$$m = 3$$$.Help Ira count the number of magnificent dances that she can set. Since this number can be very large, count it modulo $$$10^9 + 7$$$. Two dances are considered different if the sets of students participating in them are different."
  },
  {
    "title": "Round Dance",
    "url": "https://codeforces.com/problemset/problem/1833/E",
    "description": "$$$n$$$ people came to the festival and decided to dance a few round dances. There are at least $$$2$$$ people in the round dance and each person has exactly two neighbors. If there are $$$2$$$ people in the round dance then they have the same neighbor on each side.You decided to find out exactly how many dances there were. But each participant of the holiday remembered exactly one neighbor. Your task is to determine what the minimum and maximum number of round dances could be.For example, if there were $$$6$$$ people at the holiday, and the numbers of the neighbors they remembered are equal $$$[2, 1, 4, 3, 6, 5]$$$, then the minimum number of round dances is$$$1$$$:  $$$1 - 2 - 3 - 4 - 5 - 6 - 1$$$  and the maximum is $$$3$$$:   $$$1 - 2 - 1$$$  $$$3 - 4 - 3$$$  $$$5 - 6 - 5$$$ "
  },
  {
    "title": "Flipper",
    "url": "https://codeforces.com/problemset/problem/1833/D",
    "description": "You are given a permutation $$$p$$$ of length $$$n$$$.A permutation is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in any order. For example, $$$\\{2,3,1,5,4\\}$$$ is a permutation, while $$$\\{1,2,2\\}$$$ is not (since $$$2$$$ appears twice), and $$$\\{1,3,4\\}$$$ is also not a permutation (as $$$n=3$$$, but the array contains $$$4$$$).To the permutation $$$p$$$, you need to apply the following operation exactly once:  First you choose a segment $$$[l, r]$$$ ($$$1 \\le l \\le r \\le n$$$, a segment is a continuous sequence of numbers $$$\\{p_l, p_{l+1}, \\ldots, p_{r-1}, p_r\\}$$$) and reverse it. Reversing a segment means swapping pairs of numbers $$$(p_l, p_r)$$$, $$$(p_{l+1}, p_{r-1})$$$, ..., $$$(p_{l + i}, p_{r - i})$$$ (where $$$l + i \\le r - i$$$).  Then you swap the prefix and suffix: $$$[r+1, n]$$$ and $$$[1, l - 1]$$$ (note that these segments may be empty). For example, given $$$n = 5, p = \\{2, \\color{blue}{3}, \\color{blue}{1}, 5, 4\\}$$$, if you choose the segment $$$[l = 2, r = 3]$$$, after reversing the segment $$$p = \\{\\color{green}{2}, \\color{blue}{1}, \\color{blue}{3}, \\color{green}{5}, \\color{green}{4}\\}$$$, then you swap the segments $$$[4, 5]$$$ and $$$[1, 1]$$$. Thus, $$$p = \\{\\color{green}{5}, \\color{green}{4}, 1, 3, \\color{green}{2}\\}$$$. It can be shown that this is the maximum possible result for the given permutation.You need to output the lexicographically maximum permutation that can be obtained by applying the operation described exactly once.A permutation $$$a$$$ is lexicographically greater than permutation $$$b$$$ if there exists an $$$i$$$ ($$$1 \\le i \\le n$$$) such that $$$a_j = b_j$$$ for $$$1 \\le j < i$$$ and $$$a_i > b_i$$$."
  },
  {
    "title": "Vlad Building Beautiful Array",
    "url": "https://codeforces.com/problemset/problem/1833/C",
    "description": "Vlad was given an array $$$a$$$ of $$$n$$$ positive integers. Now he wants to build a beautiful array $$$b$$$ of length $$$n$$$ from it.Vlad considers an array beautiful if all the numbers in it are positive and have the same parity. That is, all numbers in the beautiful array are greater than zero and are either all even or all odd.To build the array $$$b$$$, Vlad can assign each $$$b_i$$$ either the value $$$a_i$$$ or $$$a_i - a_j$$$, where any $$$j$$$ from $$$1$$$ to $$$n$$$ can be chosen.To avoid trying to do the impossible, Vlad asks you to determine whether it is possible to build a beautiful array $$$b$$$ of length $$$n$$$ using his array $$$a$$$."
  },
  {
    "title": "Restore the Weather",
    "url": "https://codeforces.com/problemset/problem/1833/B",
    "description": "You are given an array $$$a$$$ containing the weather forecast for Berlandia for the last $$$n$$$ days. That is, $$$a_i$$$ — is the estimated air temperature on day $$$i$$$ ($$$1 \\le i \\le n$$$).You are also given an array $$$b$$$ — the air temperature that was actually present on each of the days. However, all the values in array $$$b$$$ are mixed up. Determine which day was which temperature, if you know that the weather never differs from the forecast by more than $$$k$$$ degrees. In other words, if on day $$$i$$$ the real air temperature was $$$c$$$, then the equality $$$|a_i - c| \\le k$$$ is always true.For example, let an array $$$a$$$ = [$$$1, 3, 5, 3, 9$$$] of length $$$n = 5$$$ and $$$k = 2$$$ be given and an array $$$b$$$ = [$$$2, 5, 11, 2, 4$$$]. Then, so that the value of $$$b_i$$$ corresponds to the air temperature on day $$$i$$$, we can rearrange the elements of the array $$$b$$$ so: [$$$2, 2, 5, 4, 11$$$]. Indeed:   On the $$$1$$$st day, $$$|a_1 - b_1| = |1 - 2| = 1$$$, $$$1 \\le 2 = k$$$ is satisfied;  On the $$$2$$$nd day $$$|a_2 - b_2| = |3 - 2| = 1$$$, $$$1 \\le 2 = k$$$ is satisfied;  On the $$$3$$$rd day, $$$|a_3 - b_3| = |5 - 5| = 0$$$, $$$0 \\le 2 = k$$$ is satisfied;  On the $$$4$$$th day, $$$|a_4 - b_4| = |3 - 4| = 1$$$, $$$1 \\le 2 = k$$$ is satisfied;  On the $$$5$$$th day, $$$|a_5 - b_5| = |9 - 11| = 2$$$, $$$2 \\le 2 = k$$$ is satisfied. "
  },
  {
    "title": "Musical Puzzle",
    "url": "https://codeforces.com/problemset/problem/1833/A",
    "description": "Vlad decided to compose a melody on his guitar. Let's represent the melody as a sequence of notes corresponding to the characters 'a', 'b', 'c', 'd', 'e', 'f', and 'g'.However, Vlad is not very experienced in playing the guitar and can only record exactly two notes at a time. Vlad wants to obtain the melody $$$s$$$, and to do this, he can merge the recorded melodies together. In this case, the last sound of the first melody must match the first sound of the second melody.For example, if Vlad recorded the melodies \"ab\" and \"ba\", he can merge them together and obtain the melody \"aba\", and then merge the result with \"ab\" to get \"abab\".Help Vlad determine the minimum number of melodies consisting of two notes that he needs to record in order to obtain the melody $$$s$$$."
  },
  {
    "title": "Zombies",
    "url": "https://codeforces.com/problemset/problem/1832/F",
    "description": "Polycarp plays a computer game in a post-apocalyptic setting. The zombies have taken over the world, and Polycarp with a small team of survivors is defending against hordes trying to invade their base. The zombies are invading for $$$x$$$ minutes starting from minute $$$0$$$. There are $$$n$$$ entrances to the base, and every minute one zombie attempts to enter through every entrance.The survivors can defend the entrances against the zombies. There are two options:   manually — shoot the zombies coming through a certain entrance;  automatically — set up an electric fence on a certain entrance to fry the zombies. If an entrance is defended either or both ways during some minute, no zombie goes through.Every entrance is defended by a single dedicated survivor. The $$$i$$$-th entrance is defended manually from minute $$$l_i$$$ until minute $$$r_i$$$, non-inclusive — $$$[l_i, r_i)$$$.There are $$$k$$$ generators that can be used to defend the entrances automatically. Every entrance should be connected to exactly one generator, but a generator can be connected to multiple entrances (or even none of them). Each generator will work for exactly $$$m$$$ consecutive minutes. Polycarp can choose when to power on each generator independently of each other, the $$$m$$$ minute long interval should be fully inside the $$$[0, x)$$$ time interval.Polycarp is a weird gamer. He wants the game to be as difficult as possible for him. So he wants to connect each entrance to a generator and choose the time for each generator in such a way that as many zombies as possible enter the base. Please, help him to achieve that!"
  },
  {
    "title": "Combinatorics Problem",
    "url": "https://codeforces.com/problemset/problem/1832/E",
    "description": "Recall that the binomial coefficient $$$\\binom{x}{y}$$$ is calculated as follows ($$$x$$$ and $$$y$$$ are non-negative integers):  if $$$x < y$$$, then $$$\\binom{x}{y} = 0$$$;  otherwise, $$$\\binom{x}{y} = \\frac{x!}{y! \\cdot (x-y)!}$$$. You are given an array $$$a_1, a_2, \\dots, a_n$$$ and an integer $$$k$$$. You have to calculate a new array $$$b_1, b_2, \\dots, b_n$$$, where  $$$b_1 = (\\binom{1}{k} \\cdot a_1) \\bmod 998244353$$$;  $$$b_2 = (\\binom{2}{k} \\cdot a_1 + \\binom{1}{k} \\cdot a_2) \\bmod 998244353$$$;  $$$b_3 = (\\binom{3}{k} \\cdot a_1 + \\binom{2}{k} \\cdot a_2 + \\binom{1}{k} \\cdot a_3) \\bmod 998244353$$$, and so on. Formally, $$$b_i = (\\sum\\limits_{j=1}^{i} \\binom{i - j + 1}{k} \\cdot a_j) \\bmod 998244353$$$.Note that the array is given in a modified way, and you have to output it in a modified way as well."
  },
  {
    "title": "Red-Blue Operations (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1832/D2",
    "description": "The only difference between easy and hard versions is the maximum values of $$$n$$$ and $$$q$$$.You are given an array, consisting of $$$n$$$ integers. Initially, all elements are red.You can apply the following operation to the array multiple times. During the $$$i$$$-th operation, you select an element of the array; then:   if the element is red, it increases by $$$i$$$ and becomes blue;  if the element is blue, it decreases by $$$i$$$ and becomes red. The operations are numbered from $$$1$$$, i. e. during the first operation some element is changed by $$$1$$$ and so on.You are asked $$$q$$$ queries of the following form:   given an integer $$$k$$$, what can the largest minimum in the array be if you apply exactly $$$k$$$ operations to it? Note that the operations don't affect the array between queries, all queries are asked on the initial array $$$a$$$."
  },
  {
    "title": "Red-Blue Operations (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1832/D1",
    "description": "The only difference between easy and hard versions is the maximum values of $$$n$$$ and $$$q$$$.You are given an array, consisting of $$$n$$$ integers. Initially, all elements are red.You can apply the following operation to the array multiple times. During the $$$i$$$-th operation, you select an element of the array; then:   if the element is red, it increases by $$$i$$$ and becomes blue;  if the element is blue, it decreases by $$$i$$$ and becomes red. The operations are numbered from $$$1$$$, i. e. during the first operation some element is changed by $$$1$$$ and so on.You are asked $$$q$$$ queries of the following form:   given an integer $$$k$$$, what can the largest minimum in the array be if you apply exactly $$$k$$$ operations to it? Note that the operations don't affect the array between queries, all queries are asked on the initial array $$$a$$$."
  },
  {
    "title": "Contrast Value",
    "url": "https://codeforces.com/problemset/problem/1832/C",
    "description": "For an array of integers $$$[a_1, a_2, \\dots, a_n]$$$, let's call the value $$$|a_1-a_2|+|a_2-a_3|+\\cdots+|a_{n-1}-a_n|$$$ the contrast of the array. Note that the contrast of an array of size $$$1$$$ is equal to $$$0$$$.You are given an array of integers $$$a$$$. Your task is to build an array of $$$b$$$ in such a way that all the following conditions are met:  $$$b$$$ is not empty, i.e there is at least one element;  $$$b$$$ is a subsequence of $$$a$$$, i.e $$$b$$$ can be produced by deleting some elements from $$$a$$$ (maybe zero);  the contrast of $$$b$$$ is equal to the contrast of $$$a$$$. What is the minimum possible size of the array $$$b$$$?"
  },
  {
    "title": "Maximum Sum",
    "url": "https://codeforces.com/problemset/problem/1832/B",
    "description": "You are given an array $$$a_1, a_2, \\dots, a_n$$$, where all elements are different.You have to perform exactly $$$k$$$ operations with it. During each operation, you do exactly one of the following two actions (you choose which to do yourself):  find two minimum elements in the array, and delete them;  find the maximum element in the array, and delete it. You have to calculate the maximum possible sum of elements in the resulting array."
  },
  {
    "title": "New Palindrome",
    "url": "https://codeforces.com/problemset/problem/1832/A",
    "description": "A palindrome is a string that reads the same from left to right as from right to left. For example, abacaba, aaaa, abba, racecar are palindromes.You are given a string $$$s$$$ consisting of lowercase Latin letters. The string $$$s$$$ is a palindrome.You have to check whether it is possible to rearrange the letters in it to get another palindrome (not equal to the given string $$$s$$$)."
  },
  {
    "title": "Array merging",
    "url": "https://codeforces.com/problemset/problem/1831/B",
    "description": "You are given two arrays $$$a$$$ and $$$b$$$ both of length $$$n$$$.You will merge$$$^\\dagger$$$ these arrays forming another array $$$c$$$ of length $$$2 \\cdot n$$$. You have to find the maximum length of a subarray consisting of equal values across all arrays $$$c$$$ that could be obtained.$$$^\\dagger$$$ A merge of two arrays results in an array $$$c$$$ composed by successively taking the first element of either array (as long as that array is nonempty) and removing it. After this step, the element is appended to the back of $$$c$$$. We repeat this operation as long as we can (i.e. at least one array is nonempty)."
  },
  {
    "title": "Twin Permutations",
    "url": "https://codeforces.com/problemset/problem/1831/A",
    "description": "You are given a permutation$$$^\\dagger$$$ $$$a$$$ of length $$$n$$$.Find any permutation $$$b$$$ of length $$$n$$$ such that $$$a_1+b_1 \\le a_2+b_2 \\le a_3+b_3 \\le \\ldots \\le a_n+b_n$$$.It can be proven that a permutation $$$b$$$ that satisfies the condition above always exists.$$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "The Third Grace",
    "url": "https://codeforces.com/problemset/problem/1830/F",
    "description": "You are given $$$n$$$ intervals and $$$m$$$ points on the number line. The $$$i$$$-th intervals covers coordinates $$$[l_i,r_i]$$$ and the $$$i$$$-th point is on coordinate $$$i$$$ and has coefficient $$$p_i$$$.Initially, all points are not activated. You should choose a subset of the $$$m$$$ points to activate. For each of $$$n$$$ interval, we define its cost as:   $$$0$$$, if there are no activated points in the interval;  the coefficient of the activated point with the largest coordinate within it, otherwise. Your task is to maximize the sum of the costs of all intervals by choosing which points to activate."
  },
  {
    "title": "Bully Sort",
    "url": "https://codeforces.com/problemset/problem/1830/E",
    "description": "On a permutation $$$p$$$ of length $$$n$$$, we define a bully swap as follows:  Let $$$i$$$ be the index of the largest element $$$p_i$$$ such that $$$p_i \\neq i$$$.  Let $$$j$$$ be the index of the smallest element $$$p_j$$$ such that $$$i < j$$$.  Swap $$$p_i$$$ and $$$p_j$$$. We define $$$f(p)$$$ as the number of bully swaps we need to perform until $$$p$$$ becomes sorted. Note that if $$$p$$$ is the identity permutation, $$$f(p)=0$$$.You are given $$$n$$$ and a permutation $$$p$$$ of length $$$n$$$. You need to process the following $$$q$$$ updates.In each update, you are given two integers $$$x$$$ and $$$y$$$. You will swap $$$p_x$$$ and $$$p_y$$$ and then find the value of $$$f(p)$$$.Note that the updates are persistent. Changes made to the permutation $$$p$$$ will apply when processing future updates."
  },
  {
    "title": "Mex Tree",
    "url": "https://codeforces.com/problemset/problem/1830/D",
    "description": "You are given a tree with $$$n$$$ nodes. For each node, you either color it in $$$0$$$ or $$$1$$$.The value of a path $$$(u,v)$$$ is equal to the MEX$$$^\\dagger$$$ of the colors of the nodes from the shortest path between $$$u$$$ and $$$v$$$.The value of a coloring is equal to the sum of values of all paths $$$(u,v)$$$ such that $$$1 \\leq u \\leq v \\leq n$$$.What is the maximum possible value of any coloring of the tree?$$$^{\\dagger}$$$ The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance:  The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.  The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.  The MEX of $$$[0,3,1,2]$$$ is $$$4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not. "
  },
  {
    "title": "Hyperregular Bracket Strings",
    "url": "https://codeforces.com/problemset/problem/1830/C",
    "description": "You are given an integer $$$n$$$ and $$$k$$$ intervals. The $$$i$$$-th interval is $$$[l_i,r_i]$$$ where $$$1 \\leq l_i \\leq r_i \\leq n$$$.Let us call a regular bracket sequence$$$^{\\dagger,\\ddagger}$$$ of length $$$n$$$ hyperregular if for each $$$i$$$ such that $$$1 \\leq i \\leq k$$$, the substring $$$\\overline{s_{l_i} s_{l_{i}+1} \\ldots s_{r_i}}$$$ is also a regular bracket sequence.Your task is to count the number of hyperregular bracket sequences. Since this number can be really large, you are only required to find it modulo $$$998\\,244\\,353$$$.$$$^\\dagger$$$ A bracket sequence is a string containing only the characters \"(\" and \")\".$$$^\\ddagger$$$ A bracket sequence is called regular if one can turn it into a valid math expression by adding characters + and 1. For example, sequences (())(), (), (()(())) and the empty string are regular, while )(, ((), and (()))( are not."
  },
  {
    "title": "The BOSS Can Count Pairs",
    "url": "https://codeforces.com/problemset/problem/1830/B",
    "description": "You are given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$.Your task is to count the number of pairs of integers $$$(i,j)$$$ such that $$$1 \\leq i < j \\leq n$$$ and $$$a_i \\cdot a_j = b_i+b_j$$$."
  },
  {
    "title": "Copil Copac Draws Trees",
    "url": "https://codeforces.com/problemset/problem/1830/A",
    "description": "Copil Copac is given a list of $$$n-1$$$ edges describing a tree of $$$n$$$ vertices. He decides to draw it using the following algorithm:  Step $$$0$$$: Draws the first vertex (vertex $$$1$$$). Go to step $$$1$$$.  Step $$$1$$$: For every edge in the input, in order: if the edge connects an already drawn vertex $$$u$$$ to an undrawn vertex $$$v$$$, he will draw the undrawn vertex $$$v$$$ and the edge. After checking every edge, go to step $$$2$$$.  Step $$$2$$$: If all the vertices are drawn, terminate the algorithm. Else, go to step $$$1$$$. The number of readings is defined as the number of times Copil Copac performs step $$$1$$$.Find the number of readings needed by Copil Copac to draw the tree."
  },
  {
    "title": "Don't Blame Me",
    "url": "https://codeforces.com/problemset/problem/1829/H",
    "description": "Sadly, the problem setter couldn't think of an interesting story, thus he just asks you to solve the following problem.Given an array $$$a$$$ consisting of $$$n$$$ positive integers, count the number of non-empty subsequences for which the bitwise $$$\\mathsf{AND}$$$ of the elements in the subsequence has exactly $$$k$$$ set bits in its binary representation. The answer may be large, so output it modulo $$$10^9+7$$$.Recall that the subsequence of an array $$$a$$$ is a sequence that can be obtained from $$$a$$$ by removing some (possibly, zero) elements. For example, $$$[1, 2, 3]$$$, $$$[3]$$$, $$$[1, 3]$$$ are subsequences of $$$[1, 2, 3]$$$, but $$$[3, 2]$$$ and $$$[4, 5, 6]$$$ are not.Note that $$$\\mathsf{AND}$$$ represents the bitwise AND operation."
  },
  {
    "title": "Hits Different",
    "url": "https://codeforces.com/problemset/problem/1829/G",
    "description": "In a carnival game, there is a huge pyramid of cans with $$$2023$$$ rows, numbered in a regular pattern as shown. If can $$$9^2$$$ is hit initially, then all cans colored red in the picture above would fall. You throw a ball at the pyramid, and it hits a single can with number $$$n^2$$$. This causes all cans that are stacked on top of this can to fall (that is, can $$$n^2$$$ falls, then the cans directly above $$$n^2$$$ fall, then the cans directly above those cans, and so on). For example, the picture above shows the cans that would fall if can $$$9^2$$$ is hit.What is the sum of the numbers on all cans that fall? Recall that $$$n^2 = n \\times n$$$."
  },
  {
    "title": "Forever Winter",
    "url": "https://codeforces.com/problemset/problem/1829/F",
    "description": "A snowflake graph is generated from two integers $$$x$$$ and $$$y$$$, both greater than $$$1$$$, as follows:   Start with one central vertex.  Connect $$$x$$$ new vertices to this central vertex.  Connect $$$y$$$ new vertices to each of these $$$x$$$ vertices.  For example, below is a snowflake graph for $$$x=5$$$ and $$$y=3$$$.  The snowflake graph above has a central vertex $$$15$$$, then $$$x=5$$$ vertices attached to it ($$$3$$$, $$$6$$$, $$$7$$$, $$$8$$$, and $$$20$$$), and then $$$y=3$$$ vertices attached to each of those.  Given a snowflake graph, determine the values of $$$x$$$ and $$$y$$$."
  },
  {
    "title": "The Lakes",
    "url": "https://codeforces.com/problemset/problem/1829/E",
    "description": "You are given an $$$n \\times m$$$ grid $$$a$$$ of non-negative integers. The value $$$a_{i,j}$$$ represents the depth of water at the $$$i$$$-th row and $$$j$$$-th column. A lake is a set of cells such that:  each cell in the set has $$$a_{i,j} > 0$$$, and  there exists a path between any pair of cells in the lake by going up, down, left, or right a number of times and without stepping on a cell with $$$a_{i,j} = 0$$$. The volume of a lake is the sum of depths of all the cells in the lake.Find the largest volume of a lake in the grid."
  },
  {
    "title": "Gold Rush",
    "url": "https://codeforces.com/problemset/problem/1829/D",
    "description": "Initially you have a single pile with $$$n$$$ gold nuggets. In an operation you can do the following:   Take any pile and split it into two piles, so that one of the resulting piles has exactly twice as many gold nuggets as the other. (All piles should have an integer number of nuggets.)   One possible move is to take a pile of size $$$6$$$ and split it into piles of sizes $$$2$$$ and $$$4$$$, which is valid since $$$4$$$ is twice as large as $$$2$$$.  Can you make a pile with exactly $$$m$$$ gold nuggets using zero or more operations?"
  },
  {
    "title": "Mr",
    "url": "https://codeforces.com/problemset/problem/1829/C",
    "description": "Victor wants to become \"Mr. Perfectly Fine\". For that, he needs to acquire a certain set of skills. More precisely, he has $$$2$$$ skills he needs to acquire. Victor has $$$n$$$ books. Reading book $$$i$$$ takes him $$$m_i$$$ minutes and will give him some (possibly none) of the required two skills, represented by a binary string of length $$$2$$$.What is the minimum amount of time required so that Victor acquires all of the two skills? "
  },
  {
    "title": "Blank Space",
    "url": "https://codeforces.com/problemset/problem/1829/B",
    "description": "You are given a binary array $$$a$$$ of $$$n$$$ elements, a binary array is an array consisting only of $$$0$$$s and $$$1$$$s. A blank space is a segment of consecutive elements consisting of only $$$0$$$s. Your task is to find the length of the longest blank space."
  },
  {
    "title": "Love Story",
    "url": "https://codeforces.com/problemset/problem/1829/A",
    "description": "Timur loves codeforces. That's why he has a string $$$s$$$ having length $$$10$$$ made containing only lowercase Latin letters. Timur wants to know how many indices string $$$s$$$ differs from the string \"codeforces\".For example string $$$s =$$$ \"coolforsez\" differs from \"codeforces\" in $$$4$$$ indices, shown in bold.Help Timur by finding the number of indices where string $$$s$$$ differs from \"codeforces\".Note that you can't reorder the characters in the string $$$s$$$."
  },
  {
    "title": "Permutation Swap",
    "url": "https://codeforces.com/problemset/problem/1828/B",
    "description": "You are given an unsorted permutation $$$p_1, p_2, \\ldots, p_n$$$. To sort the permutation, you choose a constant $$$k$$$ ($$$k \\ge 1$$$) and do some operations on the permutation. In one operation, you can choose two integers $$$i$$$, $$$j$$$ ($$$1 \\le j < i \\le n$$$) such that $$$i - j = k$$$, then swap $$$p_i$$$ and $$$p_j$$$.What is the maximum value of $$$k$$$ that you can choose to sort the given permutation?A permutation is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2, 3, 1, 5, 4]$$$ is a permutation, but $$$[1, 2, 2]$$$ is not a permutation ($$$2$$$ appears twice in the array) and $$$[1, 3, 4]$$$ is also not a permutation ($$$n = 3$$$ but there is $$$4$$$ in the array).An unsorted permutation $$$p$$$ is a permutation such that there is at least one position $$$i$$$ that satisfies $$$p_i \\ne i$$$."
  },
  {
    "title": "Divisible Array",
    "url": "https://codeforces.com/problemset/problem/1828/A",
    "description": "You are given a positive integer $$$n$$$. Please find an array $$$a_1, a_2, \\ldots, a_n$$$ that is perfect.A perfect array $$$a_1, a_2, \\ldots, a_n$$$ satisfies the following criteria:   $$$1 \\le a_i \\le 1000$$$ for all $$$1 \\le i \\le n$$$.  $$$a_i$$$ is divisible by $$$i$$$ for all $$$1 \\le i \\le n$$$.  $$$a_1 + a_2 + \\ldots + a_n$$$ is divisible by $$$n$$$. "
  },
  {
    "title": "Copium Permutation",
    "url": "https://codeforces.com/problemset/problem/1827/F",
    "description": "You are given a permutation $$$a_1,a_2,\\ldots,a_n$$$ of the first $$$n$$$ positive integers. A subarray $$$[l,r]$$$ is called copium if we can rearrange it so that it becomes a sequence of consecutive integers, or more formally, if $$$$$$\\max(a_l,a_{l+1},\\ldots,a_r)-\\min(a_l,a_{l+1},\\ldots,a_r)=r-l$$$$$$ For each $$$k$$$ in the range $$$[0,n]$$$, print out the maximum number of copium subarrays of $$$a$$$ over all ways of rearranging the last $$$n-k$$$ elements of $$$a$$$."
  },
  {
    "title": "Bus Routes",
    "url": "https://codeforces.com/problemset/problem/1827/E",
    "description": "There is a country consisting of $$$n$$$ cities and $$$n - 1$$$ bidirectional roads connecting them such that we can travel between any two cities using these roads. In other words, these cities and roads form a tree.There are $$$m$$$ bus routes connecting the cities together. A bus route between city $$$x$$$ and city $$$y$$$ allows you to travel between any two cities in the simple path between $$$x$$$ and $$$y$$$ with this route.Determine if for every pair of cities $$$u$$$ and $$$v$$$, you can travel from $$$u$$$ to $$$v$$$ using at most two bus routes."
  },
  {
    "title": "Two Centroids",
    "url": "https://codeforces.com/problemset/problem/1827/D",
    "description": "You are given a tree (an undirected connected acyclic graph) which initially only contains vertex $$$1$$$. There will be several queries to the given tree. In the $$$i$$$-th query, vertex $$$i + 1$$$ will appear and be connected to vertex $$$p_i$$$ ($$$1 \\le p_i \\le i$$$). After each query, please find out the least number of operations required to make the current tree has two centroids. In one operation, you can add one vertex and one edge to the tree such that it remains a tree.A vertex is called a centroid if its removal splits the tree into subtrees with at most $$$\\lfloor \\frac{n}{2} \\rfloor$$$ vertices each, with $$$n$$$ as the number of vertices of the tree. For example, the centroid of the following tree is $$$3$$$ because the biggest subtree after removing the centroid has $$$2$$$ vertices.  In the next tree, vertex $$$1$$$ and $$$2$$$ are both centroids.  "
  },
  {
    "title": "Palindrome Partition",
    "url": "https://codeforces.com/problemset/problem/1827/C",
    "description": "A substring is a continuous and non-empty segment of letters from a given string, without any reorders.An even palindrome is a string that reads the same backward as forward and has an even length. For example, strings \"zz\", \"abba\", \"abccba\" are even palindromes, but strings \"codeforces\", \"reality\", \"aba\", \"c\" are not.A beautiful string is an even palindrome or a string that can be partitioned into some smaller even palindromes.You are given a string $$$s$$$, consisting of $$$n$$$ lowercase Latin letters. Count the number of beautiful substrings of $$$s$$$."
  },
  {
    "title": "Range Sorting (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1827/B2",
    "description": "The only difference between this problem and the easy version is the constraints on $$$t$$$ and $$$n$$$.You are given an array $$$a$$$, consisting of $$$n$$$ distinct integers $$$a_1, a_2, \\ldots, a_n$$$. Define the beauty of an array $$$p_1, p_2, \\ldots p_k$$$ as the minimum amount of time needed to sort this array using an arbitrary number of range-sort operations. In each range-sort operation, you will do the following:   Choose two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le k$$$).  Sort the subarray $$$p_l, p_{l + 1}, \\ldots, p_r$$$ in $$$r - l$$$ seconds. Please calculate the sum of beauty over all subarrays of array $$$a$$$.A subarray of an array is defined as a sequence of consecutive elements of the array."
  },
  {
    "title": "Range Sorting (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1827/B1",
    "description": "The only difference between this problem and the hard version is the constraints on $$$t$$$ and $$$n$$$.You are given an array $$$a$$$, consisting of $$$n$$$ distinct integers $$$a_1, a_2, \\ldots, a_n$$$. Define the beauty of an array $$$p_1, p_2, \\ldots p_k$$$ as the minimum amount of time needed to sort this array using an arbitrary number of range-sort operations. In each range-sort operation, you will do the following:   Choose two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le k$$$).  Sort the subarray $$$p_l, p_{l + 1}, \\ldots, p_r$$$ in $$$r - l$$$ seconds. Please calculate the sum of beauty over all subarrays of array $$$a$$$.A subarray of an array is defined as a sequence of consecutive elements of the array."
  },
  {
    "title": "Counting Orders",
    "url": "https://codeforces.com/problemset/problem/1827/A",
    "description": "You are given two arrays $$$a$$$ and $$$b$$$ each consisting of $$$n$$$ integers. All elements of $$$a$$$ are pairwise distinct.Find the number of ways to reorder $$$a$$$ such that $$$a_i > b_i$$$ for all $$$1 \\le i \\le n$$$, modulo $$$10^9 + 7$$$.Two ways of reordering are considered different if the resulting arrays are different."
  },
  {
    "title": "Fading into Fog",
    "url": "https://codeforces.com/problemset/problem/1826/F",
    "description": "This is an interactive problem.There are $$$n$$$ distinct hidden points with real coordinates on a two-dimensional Euclidean plane. In one query, you can ask some line $$$ax + by + c = 0$$$ and get the projections of all $$$n$$$ points to this line in some order. The given projections are not exact, please read the interaction section for more clarity.Using the minimum number of queries, guess all $$$n$$$ points and output them in some order. Here minimality means the minimum number of queries required to solve any possible test case with $$$n$$$ points.The hidden points are fixed in advance and do not change throughout the interaction. In other words, the interactor is not adaptive.A projection of point $$$A$$$ to line $$$ax + by + c = 0$$$ is the point on the line closest to $$$A$$$."
  },
  {
    "title": "Walk the Runway",
    "url": "https://codeforces.com/problemset/problem/1826/E",
    "description": "A fashion tour consists of $$$m$$$ identical runway shows in different cities. There are $$$n$$$ models willing to participate in the tour, numbered from $$$1$$$ to $$$n$$$. People in different cities have different views on the fashion industry, so they rate each model differently. In particular, people in city $$$i$$$ rate model $$$j$$$ with rating $$$r_{i, j}$$$.You are to choose some number of $$$k$$$ models, and their order, let the chosen models have indices $$$j_1, j_2, \\dots, j_k$$$ in the chosen order. In each city, these $$$k$$$ models will walk the runway one after another in this order. To make the show exciting, in each city, the ratings of models should be strictly increasing in the order of their performance. More formally, for any city $$$i$$$ and index $$$t$$$ ($$$2 \\leq t \\leq k$$$), the ratings must satisfy $$$r_{i,j_{t - 1}} < r_{i,j_t}$$$. After all, the fashion industry is all about money, so choosing model $$$j$$$ to participate in the tour profits you $$$p_j$$$ money. Compute the maximum total profit you can make by choosing the models and their order while satisfying all the requirements."
  },
  {
    "title": "Running Miles",
    "url": "https://codeforces.com/problemset/problem/1826/D",
    "description": "There is a street with $$$n$$$ sights, with sight number $$$i$$$ being $$$i$$$ miles from the beginning of the street. Sight number $$$i$$$ has beauty $$$b_i$$$. You want to start your morning jog $$$l$$$ miles and end it $$$r$$$ miles from the beginning of the street. By the time you run, you will see sights you run by (including sights at $$$l$$$ and $$$r$$$ miles from the start). You are interested in the $$$3$$$ most beautiful sights along your jog, but every mile you run, you get more and more tired.So choose $$$l$$$ and $$$r$$$, such that there are at least $$$3$$$ sights you run by, and the sum of beauties of the $$$3$$$ most beautiful sights minus the distance in miles you have to run is maximized. More formally, choose $$$l$$$ and $$$r$$$, such that $$$b_{i_1} + b_{i_2} + b_{i_3} - (r - l)$$$ is maximum possible, where $$$i_1, i_2, i_3$$$ are the indices of the three maximum elements in range $$$[l, r]$$$."
  },
  {
    "title": "Dreaming of Freedom",
    "url": "https://codeforces.com/problemset/problem/1826/C",
    "description": "Because to take away a man's freedom of choice, even his freedom to make the wrong choice, is to manipulate him as though he were a puppet and not a person.— Madeleine L'EngleThere are $$$n$$$ programmers choosing their favorite algorithm amongst $$$m$$$ different choice options. Before the first round, all $$$m$$$ options are available. In each round, every programmer makes a vote for one of the remaining algorithms. After the round, only the algorithms with the maximum number of votes remain. The voting process ends when there is only one option left. Determine whether the voting process can continue indefinitely or no matter how people vote, they will eventually choose a single option after some finite amount of rounds?"
  },
  {
    "title": "Lunatic Never Content",
    "url": "https://codeforces.com/problemset/problem/1826/B",
    "description": "You have an array $$$a$$$ of $$$n$$$ non-negative integers. Let's define $$$f(a, x) = [a_1 \\bmod x, a_2 \\bmod x, \\dots, a_n \\bmod x]$$$ for some positive integer $$$x$$$. Find the biggest $$$x$$$, such that $$$f(a, x)$$$ is a palindrome.Here, $$$a \\bmod x$$$ is the remainder of the integer division of $$$a$$$ by $$$x$$$.An array is a palindrome if it reads the same backward as forward. More formally, an array $$$a$$$ of length $$$n$$$ is a palindrome if for every $$$i$$$ ($$$1 \\leq i \\leq n$$$) $$$a_i = a_{n - i + 1}$$$."
  },
  {
    "title": "Trust Nobody",
    "url": "https://codeforces.com/problemset/problem/1826/A",
    "description": "There is a group of $$$n$$$ people. Some of them might be liars, who always tell lies. Other people always tell the truth. The $$$i$$$-th person says \"There are at least $$$l_i$$$ liars amongst us\". Determine if what people are saying is contradictory, or if it is possible. If it is possible, output the number of liars in the group. If there are multiple possible answers, output any one of them."
  },
  {
    "title": "LuoTianyi and the Table",
    "url": "https://codeforces.com/problemset/problem/1825/B",
    "description": "LuoTianyi gave an array $$$b$$$ of $$$n \\cdot m$$$ integers. She asks you to construct a table $$$a$$$ of size $$$n \\times m$$$, filled with these $$$n \\cdot m$$$ numbers, and each element of the array must be used exactly once. Also she asked you to maximize the following value: $$$\\sum\\limits_{i=1}^{n}\\sum\\limits_{j=1}^{m}\\left(\\max\\limits_{1 \\le x \\le i, 1 \\le y \\le j}a_{x,y}-\\min\\limits_{1 \\le x \\le i, 1 \\le y \\le j}a_{x,y}\\right)$$$ This means that we consider $$$n \\cdot m$$$ subtables with the upper left corner in $$$(1,1)$$$ and the bottom right corner in $$$(i, j)$$$ ($$$1 \\le i \\le n$$$, $$$1 \\le j \\le m$$$), for each such subtable calculate the difference of the maximum and minimum elements in it, then sum up all these differences. You should maximize the resulting sum.Help her find the maximal possible value, you don't need to reconstruct the table itself."
  },
  {
    "title": "LuoTianyi and the Palindrome String",
    "url": "https://codeforces.com/problemset/problem/1825/A",
    "description": "LuoTianyi gives you a palindrome$$$^{\\dagger}$$$ string $$$s$$$, and she wants you to find out the length of the longest non-empty subsequence$$$^{\\ddagger}$$$ of $$$s$$$ which is not a palindrome string. If there is no such subsequence, output $$$-1$$$ instead.$$$^{\\dagger}$$$ A palindrome is a string that reads the same backward as forward. For example, strings \"z\", \"aaa\", \"aba\", \"abccba\" are palindromes, but strings \"codeforces\", \"reality\", \"ab\" are not.$$$^{\\ddagger}$$$ A string $$$a$$$ is a subsequence of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from $$$b$$$. For example, strings \"a\", \"aaa\", \"bab\" are subsequences of string \"abaab\", but strings \"codeforces\", \"bbb\", \"h\" are not."
  },
  {
    "title": "LuoTianyi and Cartridge",
    "url": "https://codeforces.com/problemset/problem/1824/E",
    "description": "LuoTianyi is watching the anime Made in Abyss. She finds that making a Cartridge is interesting. To describe the process of making a Cartridge more clearly, she abstracts the original problem and gives you the following problem.You are given a tree $$$T$$$ consisting of $$$n$$$ vertices. Each vertex has values $$$a_i$$$ and $$$b_i$$$ and each edge has values $$$c_j$$$ and $$$d_j$$$.Now you are aim to build a tree $$$T'$$$ as follows:  First, select $$$p$$$ vertices from $$$T$$$ ($$$p$$$ is a number chosen by yourself) as the vertex set $$$S'$$$ of $$$T'$$$.  Next, select $$$p-1$$$ edges from $$$T$$$ one by one (you cannot select one edge more than once).  May you have chosen the $$$j$$$-th edge connects vertices $$$x_j$$$ and $$$y_j$$$ with values $$$(c_j,d_j)$$$, then you can choose two vertices $$$u$$$ and $$$v$$$ in $$$S'$$$ that satisfy the edge $$$(x_j,y_j)$$$ is contained in the simple path from $$$u$$$ to $$$v$$$ in $$$T$$$, and link $$$u$$$ and $$$v$$$ in $$$T'$$$ by the edge with values $$$(c_j,d_j)$$$ ($$$u$$$ and $$$v$$$ shouldn't be contained in one connected component before in $$$T'$$$).     A tree with three vertices, $$$\\min(A,C)=1,B+D=7$$$, the cost is $$$7$$$.     Selected vertices $$$2$$$ and $$$3$$$ as $$$S'$$$, used the edge $$$(1,2)$$$ with $$$c_j = 2$$$ and $$$d_j = 1$$$ to link this vertices, now $$$\\min(A,C)=2,B+D=4$$$, the cost is $$$8$$$. Let $$$A$$$ be the minimum of values $$$a_i$$$ in $$$T'$$$ and $$$C$$$ be the minimum of values $$$c_i$$$ in $$$T'$$$. Let $$$B$$$ be the sum of $$$b_i$$$ in $$$T'$$$ and $$$D$$$ be the sum of values $$$d_i$$$ in $$$T'$$$. Let $$$\\min(A, C) \\cdot (B + D)$$$ be the cost of $$$T'$$$. You need to find the maximum possible cost of $$$T'$$$."
  },
  {
    "title": "LuoTianyi and the Function",
    "url": "https://codeforces.com/problemset/problem/1824/D",
    "description": "LuoTianyi gives you an array $$$a$$$ of $$$n$$$ integers and the index begins from $$$1$$$.Define $$$g(i,j)$$$ as follows:  $$$g(i,j)$$$ is the largest integer $$$x$$$ that satisfies $$$\\{a_p:i\\le p\\le j\\}\\subseteq\\{a_q:x\\le q\\le j\\}$$$ while $$$i \\le j$$$;  and $$$g(i,j)=0$$$ while $$$i>j$$$. There are $$$q$$$ queries. For each query you are given four integers $$$l,r,x,y$$$, you need to calculate $$$\\sum\\limits_{i=l}^{r}\\sum\\limits_{j=x}^{y}g(i,j)$$$."
  },
  {
    "title": "LuoTianyi and XOR-Tree",
    "url": "https://codeforces.com/problemset/problem/1824/C",
    "description": "LuoTianyi gives you a tree with values in its vertices, and the root of the tree is vertex $$$1$$$.In one operation, you can change the value in one vertex to any non-negative integer.Now you need to find the minimum number of operations you need to perform to make each path from the root to leaf$$$^{\\dagger}$$$ has a bitwise XOR value of zero.$$$^{\\dagger}$$$A leaf in a rooted tree is a vertex that has exactly one neighbor and is not a root."
  },
  {
    "title": "LuoTianyi and the Floating Islands (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1824/B2",
    "description": "This is the hard version of the problem. The only difference is that in this version $$$k\\le n$$$. You can make hacks only if both versions of the problem are solved.      Chtholly and the floating islands. LuoTianyi now lives in a world with $$$n$$$ floating islands. The floating islands are connected by $$$n-1$$$ undirected air routes, and any two of them can reach each other by passing the routes. That means, the $$$n$$$ floating islands form a tree.One day, LuoTianyi wants to meet her friends: Chtholly, Nephren, William, .... Totally, she wants to meet $$$k$$$ people. She doesn't know the exact positions of them, but she knows that they are in pairwise distinct islands. She define an island is good if and only if the sum of the distances$$$^{\\dagger}$$$ from it to the islands with $$$k$$$ people is the minimal among all the $$$n$$$ islands.Now, LuoTianyi wants to know that, if the $$$k$$$ people are randomly set in $$$k$$$ distinct of the $$$n$$$ islands, then what is the expect number of the good islands? You just need to tell her the expect number modulo $$$10^9+7$$$.$$$^{\\dagger}$$$The distance between two islands is the minimum number of air routes you need to take to get from one island to the other."
  },
  {
    "title": "LuoTianyi and the Floating Islands (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1824/B1",
    "description": "This is the easy version of the problem. The only difference is that in this version $$$k\\le\\min(n,3)$$$. You can make hacks only if both versions of the problem are solved.     Chtholly and the floating islands. LuoTianyi now lives in a world with $$$n$$$ floating islands. The floating islands are connected by $$$n-1$$$ undirected air routes, and any two of them can reach each other by passing the routes. That means, the $$$n$$$ floating islands form a tree.One day, LuoTianyi wants to meet her friends: Chtholly, Nephren, William, .... Totally, she wants to meet $$$k$$$ people. She doesn't know the exact positions of them, but she knows that they are in pairwise distinct islands. She define an island is good if and only if the sum of the distances$$$^{\\dagger}$$$ from it to the islands with $$$k$$$ people is the minimal among all the $$$n$$$ islands.Now, LuoTianyi wants to know that, if the $$$k$$$ people are randomly set in $$$k$$$ distinct of the $$$n$$$ islands, then what is the expect number of the good islands? You just need to tell her the expect number modulo $$$10^9+7$$$.$$$^{\\dagger}$$$The distance between two islands is the minimum number of air routes you need to take to get from one island to the other."
  },
  {
    "title": "LuoTianyi and the Show",
    "url": "https://codeforces.com/problemset/problem/1824/A",
    "description": "There are $$$n$$$ people taking part in a show about VOCALOID. They will sit in the row of seats, numbered $$$1$$$ to $$$m$$$ from left to right.The $$$n$$$ people come and sit in order. Each person occupies a seat in one of three ways:  Sit in the seat next to the left of the leftmost person who is already sitting, or if seat $$$1$$$ is taken, then leave the show. If there is no one currently sitting, sit in seat $$$m$$$. Sit in the seat next to the right of the rightmost person who is already sitting, or if seat $$$m$$$ is taken, then leave the show. If there is no one currently sitting, sit in seat $$$1$$$. Sit in the seat numbered $$$x_i$$$. If this seat is taken, then leave the show. Now you want to know what is the maximum number of people that can take a seat, if you can let people into the show in any order?"
  },
  {
    "title": "Random Walk",
    "url": "https://codeforces.com/problemset/problem/1823/F",
    "description": "You are given a tree consisting of $$$n$$$ vertices and $$$n - 1$$$ edges, and each vertex $$$v$$$ has a counter $$$c(v)$$$ assigned to it.Initially, there is a chip placed at vertex $$$s$$$ and all counters, except $$$c(s)$$$, are set to $$$0$$$; $$$c(s)$$$ is set to $$$1$$$.Your goal is to place the chip at vertex $$$t$$$. You can achieve it by a series of moves. Suppose right now the chip is placed at the vertex $$$v$$$. In one move, you do the following:  choose one of neighbors $$$to$$$ of vertex $$$v$$$ uniformly at random ($$$to$$$ is neighbor of $$$v$$$ if and only if there is an edge $$$\\{v, to\\}$$$ in the tree);  move the chip to vertex $$$to$$$ and increase $$$c(to)$$$ by $$$1$$$; You'll repeat the move above until you reach the vertex $$$t$$$.For each vertex $$$v$$$ calculate the expected value of $$$c(v)$$$ modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Removing Graph",
    "url": "https://codeforces.com/problemset/problem/1823/E",
    "description": "Alice and Bob are playing a game on a graph. They have an undirected graph without self-loops and multiple edges. All vertices of the graph have degree equal to $$$2$$$. The graph may consist of several components. Note that if such graph has $$$n$$$ vertices, it will have exactly $$$n$$$ edges.Alice and Bob take turn. Alice goes first. In each turn, the player can choose $$$k$$$ ($$$l \\le k \\le r$$$; $$$l < r$$$) vertices that form a connected subgraph and erase these vertices from the graph, including all incident edges.The player who can't make a step loses.For example, suppose they are playing on the given graph with given $$$l = 2$$$ and $$$r = 3$$$:  A valid vertex set for Alice to choose at the first move is one of the following:   $$$\\{1, 2\\}$$$  $$$\\{1, 3\\}$$$  $$$\\{2, 3\\}$$$  $$$\\{4, 5\\}$$$  $$$\\{4, 6\\}$$$  $$$\\{5, 6\\}$$$  $$$\\{1, 2, 3\\}$$$  $$$\\{4, 5, 6\\}$$$  Suppose, Alice chooses subgraph $$$\\{4, 6\\}$$$.Then a valid vertex set for Bob to choose at the first move is one of the following:   $$$\\{1, 2\\}$$$  $$$\\{1, 3\\}$$$  $$$\\{2, 3\\}$$$  $$$\\{1, 2, 3\\}$$$  Suppose, Bob chooses subgraph $$$\\{1, 2, 3\\}$$$.Alice can't make a move, so she loses.You are given a graph of size $$$n$$$ and integers $$$l$$$ and $$$r$$$. Who will win if both Alice and Bob play optimally."
  },
  {
    "title": "Unique Palindromes",
    "url": "https://codeforces.com/problemset/problem/1823/D",
    "description": "A palindrome is a string that reads the same backwards as forwards. For example, the string abcba is palindrome, while the string abca is not.Let $$$p(t)$$$ be the number of unique palindromic substrings of string $$$t$$$, i. e. the number of substrings $$$t[l \\dots r]$$$ that are palindromes themselves. Even if some substring occurs in $$$t$$$ several times, it's counted exactly once. (The whole string $$$t$$$ is also counted as a substring of $$$t$$$).For example, string $$$t$$$ $$$=$$$ abcbbcabcb has $$$p(t) = 6$$$ unique palindromic substrings: a, b, c, bb, bcb and cbbc.Now, let's define $$$p(s, m) = p(t)$$$ where $$$t = s[1 \\dots m]$$$. In other words, $$$p(s, m)$$$ is the number of palindromic substrings in the prefix of $$$s$$$ of length $$$m$$$. For example, $$$p($$$abcbbcabcb$$$, 5)$$$ $$$=$$$ $$$p($$$abcbb$$$) = 5$$$.You are given an integer $$$n$$$ and $$$k$$$ \"conditions\" ($$$k \\le 20$$$). Let's say that string $$$s$$$, consisting of $$$n$$$ lowercase Latin letters, is good if all $$$k$$$ conditions are satisfied at the same time. A condition is a pair $$$(x_i, c_i)$$$ and have the following meaning:   $$$p(s, x_i) = c_i$$$, i. e. a prefix of $$$s$$$ of length $$$x_i$$$ contains exactly $$$c_i$$$ unique palindromic substrings.  Find a good string $$$s$$$ or report that such $$$s$$$ doesn't exist.Look in Notes if you need further clarifications."
  },
  {
    "title": "Strongly Composite",
    "url": "https://codeforces.com/problemset/problem/1823/C",
    "description": "A prime number is an integer greater than $$$1$$$, which has exactly two divisors. For example, $$$7$$$ is a prime, since it has two divisors $$$\\{1, 7\\}$$$. A composite number is an integer greater than $$$1$$$, which has more than two different divisors.Note that the integer $$$1$$$ is neither prime nor composite.Let's look at some composite number $$$v$$$. It has several divisors: some divisors are prime, others are composite themselves. If the number of prime divisors of $$$v$$$ is less or equal to the number of composite divisors, let's name $$$v$$$ as strongly composite.For example, number $$$12$$$ has $$$6$$$ divisors: $$$\\{1, 2, 3, 4, 6, 12\\}$$$, two divisors $$$2$$$ and $$$3$$$ are prime, while three divisors $$$4$$$, $$$6$$$ and $$$12$$$ are composite. So, $$$12$$$ is strongly composite. Other examples of strongly composite numbers are $$$4$$$, $$$8$$$, $$$9$$$, $$$16$$$ and so on.On the other side, divisors of $$$15$$$ are $$$\\{1, 3, 5, 15\\}$$$: $$$3$$$ and $$$5$$$ are prime, $$$15$$$ is composite. So, $$$15$$$ is not a strongly composite. Other examples are: $$$2$$$, $$$3$$$, $$$5$$$, $$$6$$$, $$$7$$$, $$$10$$$ and so on.You are given $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$a_i > 1$$$). You have to build an array $$$b_1, b_2, \\dots, b_k$$$ such that following conditions are satisfied:   Product of all elements of array $$$a$$$ is equal to product of all elements of array $$$b$$$: $$$a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n = b_1 \\cdot b_2 \\cdot \\ldots \\cdot b_k$$$;  All elements of array $$$b$$$ are integers greater than $$$1$$$ and strongly composite;  The size $$$k$$$ of array $$$b$$$ is the maximum possible. Find the size $$$k$$$ of array $$$b$$$, or report, that there is no array $$$b$$$ satisfying the conditions."
  },
  {
    "title": "Sort with Step",
    "url": "https://codeforces.com/problemset/problem/1823/B",
    "description": "Let's define a permutation of length $$$n$$$ as an array $$$p$$$ of length $$$n$$$, which contains every number from $$$1$$$ to $$$n$$$ exactly once.You are given a permutation $$$p_1, p_2, \\dots, p_n$$$ and a number $$$k$$$. You need to sort this permutation in the ascending order. In order to do it, you can repeat the following operation any number of times (possibly, zero):   pick two elements of the permutation $$$p_i$$$ and $$$p_j$$$ such that $$$|i - j| = k$$$, and swap them. Unfortunately, some permutations can't be sorted with some fixed numbers $$$k$$$. For example, it's impossible to sort $$$[2, 4, 3, 1]$$$ with $$$k = 2$$$.That's why, before starting the sorting, you can make at most one preliminary exchange:   choose any pair $$$p_i$$$ and $$$p_j$$$ and swap them. Your task is to:   check whether is it possible to sort the permutation without any preliminary exchanges,  if it's not, check, whether is it possible to sort the permutation using exactly one preliminary exchange. For example, if $$$k = 2$$$ and permutation is $$$[2, 4, 3, 1]$$$, then you can make a preliminary exchange of $$$p_1$$$ and $$$p_4$$$, which will produce permutation $$$[1, 4, 3, 2]$$$, which is possible to sort with given $$$k$$$."
  },
  {
    "title": "A-characteristic",
    "url": "https://codeforces.com/problemset/problem/1823/A",
    "description": "Consider an array $$$a_1, a_2, \\dots, a_n$$$ consisting of numbers $$$1$$$ and $$$-1$$$. Define $$$A$$$-characteristic of this array as a number of pairs of indices $$$1 \\le i < j \\le n$$$, such that $$$a_i \\cdot a_j = 1$$$.Find any array $$$a$$$ with given length $$$n$$$ with $$$A$$$-characteristic equal to the given value $$$k$$$."
  },
  {
    "title": "Magic Triples (Hard Version)",
    "url": "https://codeforces.com/problemset/problem/1822/G2",
    "description": "This is the hard version of the problem. The only difference is that in this version, $$$a_i \\le 10^9$$$.For a given sequence of $$$n$$$ integers $$$a$$$, a triple $$$(i, j, k)$$$ is called magic if:   $$$1 \\le i, j, k \\le n$$$.  $$$i$$$, $$$j$$$, $$$k$$$ are pairwise distinct.  there exists a positive integer $$$b$$$ such that $$$a_i \\cdot b = a_j$$$ and $$$a_j \\cdot b = a_k$$$. Kolya received a sequence of integers $$$a$$$ as a gift and now wants to count the number of magic triples for it. Help him with this task!Note that there are no constraints on the order of integers $$$i$$$, $$$j$$$ and $$$k$$$."
  },
  {
    "title": "Magic Triples (Easy Version)",
    "url": "https://codeforces.com/problemset/problem/1822/G1",
    "description": "This is the easy version of the problem. The only difference is that in this version, $$$a_i \\le 10^6$$$.For a given sequence of $$$n$$$ integers $$$a$$$, a triple $$$(i, j, k)$$$ is called magic if:   $$$1 \\le i, j, k \\le n$$$.  $$$i$$$, $$$j$$$, $$$k$$$ are pairwise distinct.  there exists a positive integer $$$b$$$ such that $$$a_i \\cdot b = a_j$$$ and $$$a_j \\cdot b = a_k$$$. Kolya received a sequence of integers $$$a$$$ as a gift and now wants to count the number of magic triples for it. Help him with this task!Note that there are no constraints on the order of integers $$$i$$$, $$$j$$$ and $$$k$$$."
  },
  {
    "title": "Gardening Friends",
    "url": "https://codeforces.com/problemset/problem/1822/F",
    "description": "Two friends, Alisa and Yuki, planted a tree with $$$n$$$ vertices in their garden. A tree is an undirected graph without cycles, loops, or multiple edges. Each edge in this tree has a length of $$$k$$$. Initially, vertex $$$1$$$ is the root of the tree.Alisa and Yuki are growing the tree not just for fun, they want to sell it. The cost of the tree is defined as the maximum distance from the root to a vertex among all vertices of the tree. The distance between two vertices $$$u$$$ and $$$v$$$ is the sum of the lengths of the edges on the path from $$$u$$$ to $$$v$$$.The girls took a course in gardening, so they know how to modify the tree. Alisa and Yuki can spend $$$c$$$ coins to shift the root of the tree to one of the neighbors of the current root. This operation can be performed any number of times (possibly zero). Note that the structure of the tree is left unchanged; the only change is which vertex is the root.The friends want to sell the tree with the maximum profit. The profit is defined as the difference between the cost of the tree and the total cost of operations. The profit is cost of the tree minus the total cost of operations.Help the girls and find the maximum profit they can get by applying operations to the tree any number of times (possibly zero)."
  },
  {
    "title": "Making Anti-Palindromes",
    "url": "https://codeforces.com/problemset/problem/1822/E",
    "description": "You are given a string $$$s$$$, consisting of lowercase English letters. In one operation, you are allowed to swap any two characters of the string $$$s$$$.A string $$$s$$$ of length $$$n$$$ is called an anti-palindrome, if $$$s[i] \\ne s[n - i + 1]$$$ for every $$$i$$$ ($$$1 \\le i \\le n$$$). For example, the strings \"codeforces\", \"string\" are anti-palindromes, but the strings \"abacaba\", \"abc\", \"test\" are not.Determine the minimum number of operations required to make the string $$$s$$$ an anti-palindrome, or output $$$-1$$$, if this is not possible."
  },
  {
    "title": "Super-Permutation",
    "url": "https://codeforces.com/problemset/problem/1822/D",
    "description": "A permutation is a sequence $$$n$$$ integers, where each integer from $$$1$$$ to $$$n$$$ appears exactly once. For example, $$$[1]$$$, $$$[3,5,2,1,4]$$$, $$$[1,3,2]$$$ are permutations, while $$$[2,3,2]$$$, $$$[4,3,1]$$$, $$$[0]$$$ are not.Given a permutation $$$a$$$, we construct an array $$$b$$$, where $$$b_i = (a_1 + a_2 +~\\dots~+ a_i) \\bmod n$$$.A permutation of numbers $$$[a_1, a_2, \\dots, a_n]$$$ is called a super-permutation if $$$[b_1 + 1, b_2 + 1, \\dots, b_n + 1]$$$ is also a permutation of length $$$n$$$.Grisha became interested whether a super-permutation of length $$$n$$$ exists. Help him solve this non-trivial problem. Output any super-permutation of length $$$n$$$, if it exists. Otherwise, output $$$-1$$$."
  },
  {
    "title": "Bun Lover",
    "url": "https://codeforces.com/problemset/problem/1822/C",
    "description": "Tema loves cinnabon rolls — buns with cinnabon and chocolate in the shape of a \"snail\".Cinnabon rolls come in different sizes and are square when viewed from above. The most delicious part of a roll is the chocolate, which is poured in a thin layer over the cinnabon roll in the form of a spiral and around the bun, as in the following picture:  Cinnabon rolls of sizes 4, 5, 6 For a cinnabon roll of size $$$n$$$, the length of the outer side of the square is $$$n$$$, and the length of the shortest vertical chocolate segment in the central part is one.Formally, the bun consists of two dough spirals separated by chocolate. A cinnabon roll of size $$$n + 1$$$ is obtained from a cinnabon roll of size $$$n$$$ by wrapping each of the dough spirals around the cinnabon roll for another layer.It is important that a cinnabon roll of size $$$n$$$ is defined in a unique way.Tema is interested in how much chocolate is in his cinnabon roll of size $$$n$$$. Since Tema has long stopped buying small cinnabon rolls, it is guaranteed that $$$n \\ge 4$$$.Answer this non-obvious question by calculating the total length of the chocolate layer."
  },
  {
    "title": "Karina and Array",
    "url": "https://codeforces.com/problemset/problem/1822/B",
    "description": "Karina has an array of $$$n$$$ integers $$$a_1, a_2, a_3, \\dots, a_n$$$. She loves multiplying numbers, so she decided that the beauty of a pair of numbers is their product. And the beauty of an array is the maximum beauty of a pair of adjacent elements in the array.For example, for $$$n = 4$$$, $$$a=[3, 5, 7, 4]$$$, the beauty of the array is $$$\\max$$$($$$3 \\cdot 5$$$, $$$5 \\cdot 7$$$, $$$7 \\cdot 4$$$) = $$$\\max$$$($$$15$$$, $$$35$$$, $$$28$$$) = $$$35$$$.Karina wants her array to be as beautiful as possible. In order to achieve her goal, she can remove some elements (possibly zero) from the array. After Karina removes all elements she wants to, the array must contain at least two elements.Unfortunately, Karina doesn't have enough time to do all her tasks, so she asks you to calculate the maximum beauty of the array that she can get by removing any number of elements (possibly zero)."
  },
  {
    "title": "TubeTube Feed",
    "url": "https://codeforces.com/problemset/problem/1822/A",
    "description": "Mushroom Filippov cooked himself a meal and while having his lunch, he decided to watch a video on TubeTube. He can not spend more than $$$t$$$ seconds for lunch, so he asks you for help with the selection of video.The TubeTube feed is a list of $$$n$$$ videos, indexed from $$$1$$$ to $$$n$$$. The $$$i$$$-th video lasts $$$a_i$$$ seconds and has an entertainment value $$$b_i$$$. Initially, the feed is opened on the first video, and Mushroom can skip to the next video in $$$1$$$ second (if the next video exists). Mushroom can skip videos any number of times (including zero).Help Mushroom choose one video that he can open and watch in $$$t$$$ seconds. If there are several of them, he wants to choose the most entertaining one. Print the index of any appropriate video, or $$$-1$$$ if there is no such."
  },
  {
    "title": "Timber",
    "url": "https://codeforces.com/problemset/problem/1821/F",
    "description": "There is a beautiful alley with trees in front of a shopping mall. Unfortunately, it has to go to make space for the parking lot.The trees on the alley all grow in a single line. There are $$$n$$$ spots for trees, index $$$0$$$ is the shopping mall, index $$$n+1$$$ is the road and indices from $$$1$$$ to $$$n$$$ are the spots for trees. Some of them are taken — there grow trees of the same height $$$k$$$. No more than one tree grows in each spot.When you chop down a tree in the spot $$$x$$$, you can make it fall either left or right. If it falls to the left, it takes up spots from $$$x-k$$$ to $$$x$$$, inclusive. If it falls to the right, it takes up spots from $$$x$$$ to $$$x+k$$$, inclusive.Let $$$m$$$ trees on the alley grow in some spots $$$x_1, x_2, \\dots, x_m$$$. Let an alley be called unfortunate if all $$$m$$$ trees can be chopped down in such a way that:   no tree falls on the shopping mall or the road;  each spot is taken up by no more than one fallen tree. Calculate the number of different unfortunate alleys with $$$m$$$ trees of height $$$k$$$. Two alleys are considered different if there is a spot $$$y$$$ such that a tree grows in $$$y$$$ on the first alley and doesn't grow in $$$y$$$ on the second alley.Output the number modulo $$$998\\,244\\,353$$$."
  },
  {
    "title": "Rearrange Brackets",
    "url": "https://codeforces.com/problemset/problem/1821/E",
    "description": "A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example:  bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");  bracket sequences \")(\", \"(\" and \")\" are not. You are given a regular bracket sequence. In one move, you can remove a pair of adjacent brackets such that the left one is an opening bracket and the right one is a closing bracket. Then concatenate the resulting parts without changing the order. The cost of this move is the number of brackets to the right of the right bracket of this pair.The cost of the regular bracket sequence is the smallest total cost of the moves required to make the sequence empty.Actually, you are not removing any brackets. Instead, you are given a regular bracket sequence and an integer $$$k$$$. You can perform the following operation at most $$$k$$$ times:   extract some bracket from the sequence and insert it back at any position (between any two brackets, at the start or at the end; possibly, at the same place it was before). After all operations are performed, the bracket sequence has to be regular. What is the smallest possible cost of the resulting regular bracket sequence?"
  },
  {
    "title": "Black Cells",
    "url": "https://codeforces.com/problemset/problem/1821/D",
    "description": "You are playing with a really long strip consisting of $$$10^{18}$$$ white cells, numbered from left to right as $$$0$$$, $$$1$$$, $$$2$$$ and so on. You are controlling a special pointer that is initially in cell $$$0$$$. Also, you have a \"Shift\" button you can press and hold.In one move, you can do one of three actions:   move the pointer to the right (from cell $$$x$$$ to cell $$$x + 1$$$);  press and hold the \"Shift\" button;  release the \"Shift\" button: the moment you release \"Shift\", all cells that were visited while \"Shift\" was pressed are colored in black.  (Of course, you can't press Shift if you already hold it. Similarly, you can't release Shift if you haven't pressed it.)Your goal is to color at least $$$k$$$ cells, but there is a restriction: you are given $$$n$$$ segments $$$[l_i, r_i]$$$ — you can color cells only inside these segments, i. e. you can color the cell $$$x$$$ if and only if $$$l_i \\le x \\le r_i$$$ for some $$$i$$$.What is the minimum number of moves you need to make in order to color at least $$$k$$$ cells black?"
  },
  {
    "title": "Tear It Apart",
    "url": "https://codeforces.com/problemset/problem/1821/C",
    "description": "You are given a string $$$s$$$, consisting of lowercase Latin letters.In one operation, you can select several (one or more) positions in it such that no two selected positions are adjacent to each other. Then you remove the letters on the selected positions from the string. The resulting parts are concatenated without changing their order.What is the smallest number of operations required to make all the letters in $$$s$$$ the same?"
  },
  {
    "title": "Sort the Subarray",
    "url": "https://codeforces.com/problemset/problem/1821/B",
    "description": "Monocarp had an array $$$a$$$ consisting of $$$n$$$ integers. He has decided to choose two integers $$$l$$$ and $$$r$$$ such that $$$1 \\le l \\le r \\le n$$$, and then sort the subarray $$$a[l..r]$$$ (the subarray $$$a[l..r]$$$ is the part of the array $$$a$$$ containing the elements $$$a_l, a_{l+1}, a_{l+2}, \\dots, a_{r-1}, a_r$$$) in non-descending order. After sorting the subarray, Monocarp has obtained a new array, which we denote as $$$a'$$$.For example, if $$$a = [6, 7, 3, 4, 4, 6, 5]$$$, and Monocarp has chosen $$$l = 2, r = 5$$$, then $$$a' = [6, 3, 4, 4, 7, 6, 5]$$$.You are given the arrays $$$a$$$ and $$$a'$$$. Find the integers $$$l$$$ and $$$r$$$ that Monocarp could have chosen. If there are multiple pairs of values $$$(l, r)$$$, find the one which corresponds to the longest subarray."
  },
  {
    "title": "Matching",
    "url": "https://codeforces.com/problemset/problem/1821/A",
    "description": "An integer template is a string consisting of digits and/or question marks.A positive (strictly greater than $$$0$$$) integer matches the integer template if it is possible to replace every question mark in the template with a digit in such a way that we get the decimal representation of that integer without any leading zeroes.For example:  $$$42$$$ matches 4?;  $$$1337$$$ matches ????;  $$$1337$$$ matches 1?3?;  $$$1337$$$ matches 1337;  $$$3$$$ does not match ??;  $$$8$$$ does not match ???8;  $$$1337$$$ does not match 1?7. You are given an integer template consisting of at most $$$5$$$ characters. Calculate the number of positive (strictly greater than $$$0$$$) integers that match it."
  },
  {
    "title": "JoJo's Incredible Adventures",
    "url": "https://codeforces.com/problemset/problem/1820/B",
    "description": "Did you think there was going to be a JoJo legend here? But no, that was me, Dio!Given a binary string $$$s$$$ of length $$$n$$$, consisting of characters 0 and 1. Let's build a square table of size $$$n \\times n$$$, consisting of 0 and 1 characters as follows.In the first row of the table write the original string $$$s$$$. In the second row of the table write cyclic shift of the string $$$s$$$ by one to the right. In the third row of the table, write the cyclic shift of line $$$s$$$ by two to the right. And so on. Thus, the row with number $$$k$$$ will contain a cyclic shift of string $$$s$$$ by $$$k$$$ to the right. The rows are numbered from $$$0$$$ to $$$n - 1$$$ top-to-bottom.In the resulting table we need to find the rectangle consisting only of ones that has the largest area.We call a rectangle the set of all cells $$$(i, j)$$$ in the table, such that $$$x_1 \\le i \\le x_2$$$ and $$$y_1 \\le j \\le y_2$$$ for some integers $$$0 \\le x_1 \\le x_2 < n$$$ and $$$0 \\le y_1 \\le y_2 < n$$$.Recall that the cyclic shift of string $$$s$$$ by $$$k$$$ to the right is the string $$$s_{n-k+1} \\ldots s_n s_1 s_2 \\ldots s_{n-k}$$$. For example, the cyclic shift of the string \"01011\" by $$$0$$$ to the right is the string itself \"01011\", its cyclic shift by $$$3$$$ to the right is the string \"01101\"."
  },
  {
    "title": "Yura's New Name",
    "url": "https://codeforces.com/problemset/problem/1820/A",
    "description": "After holding one team contest, boy Yura got very tired and wanted to change his life and move to Japan. In honor of such a change, Yura changed his name to something nice.Fascinated by this idea he already thought up a name $$$s$$$ consisting only of characters \"_\" and \"^\". But there's a problem — Yura likes smiley faces \"^_^\" and \"^^\". Therefore any character of the name must be a part of at least one such smiley. Note that only the consecutive characters of the name can be a smiley face.More formally, consider all occurrences of the strings \"^_^\" and \"^^\" in the string $$$s$$$. Then all such occurrences must cover the whole string $$$s$$$, possibly with intersections. For example, in the string \"^^__^_^^__^\" the characters at positions $$$3,4,9,10$$$ and $$$11$$$ are not contained inside any smileys, and the other characters at positions $$$1,2,5,6,7$$$ and $$$8$$$ are contained inside smileys.In one operation Jura can insert one of the characters \"_\" and \"^\" into his name $$$s$$$ (you can insert it at any position in the string). He asks you to tell him the minimum number of operations you need to do to make the name fit Yura's criteria."
  },
  {
    "title": "Willy-nilly, Crack, Into Release!",
    "url": "https://codeforces.com/problemset/problem/1819/F",
    "description": "You have long dreamed of working in a large IT company and finally got a job there. You have studied all existing modern technologies for a long time and are ready to apply all your knowledge in practice. But then you sit down at your desk and see a sheet of paper with the company's motto printed in large letters: abcdabcdabcdabcd....The company's motto contains four main principles— a (Willi), b (Nilli), c (Crack), d (Release). Therefore, you consider strings of length $$$n$$$ consisting of these four Latin letters. Unordered pairs of letters \"ab\", \"bc\", \"cd\", and \"da\" in this motto are adjacent, so we will call such pairs of symbols good. So, if you are given a string $$$s$$$ of length $$$n$$$, and it is known that the unordered pair of symbols $$$\\{ x, y \\}$$$ is good, then you can perform one of the following operations on the string:  if $$$s_n = x$$$, then you are allowed to replace this symbol with $$$y$$$,  if there exists $$$1 \\le i < n$$$ such that $$$s_i = x$$$ and $$$s_{i+1} = \\ldots = s_n = y$$$, then you are allowed to replace the $$$i$$$-th symbol of the string with $$$y$$$, and all subsequent symbols with $$$x$$$. For example, the string bacdd can be replaced with one of the strings bacda, bacdc, or badcc, and the string aac can be replaced with aab or aad.A non-empty sequence of operations for the string $$$s$$$ will be called correct if the following two conditions are met:  after performing all operations, the string becomes $$$s$$$ again,  no string, except for $$$s$$$, will occur more than once during the operations. At the same time, the string $$$s$$$ can occur exactly twice - before the start of the operations and after performing all operations. Now we are ready to move on to the problem statement! You have a set of strings that is initially empty. Then, each of $$$q$$$ queries adds another string $$$t_i$$$ to the set, or removes the string $$$t_i$$$ from the set. After each query, you need to output the minimum and maximum size of a correct sequence of operations in which each word occurs at least once. The choice of the initial string $$$s$$$ is up to you."
  },
  {
    "title": "Roads in E City",
    "url": "https://codeforces.com/problemset/problem/1819/E",
    "description": "This is an interactive problem.As is well known, the city \"E\" has never had its roads repaired in its a thousand and a half years old history. And only recently the city administration repaired some of them.It is known that in total in the city \"E\" there are $$$n$$$ intersections and $$$m$$$ roads, which can be used in both directions, numbered with integers from $$$1$$$ to $$$m$$$. The $$$i$$$-th road connects intersections with numbers $$$a_i$$$ and $$$b_i$$$.Among all $$$m$$$ roads, some subset of the roads has been repaired, but you do not know which one. The only information you could get from the city's road services is that you can get from any intersection to any other intersection by driving only on the roads that have been repaired.You are a young entrepreneur, and decided to organize a delivery service of fresh raw meat in the city \"E\" (in this city such meat is called \"steaks\", it is very popular among the locals). You have already recruited a staff of couriers, but the couriers are willing to travel only on repaired roads. Now you have to find out which roads have already been repaired.The city administration has given you the city for a period of time, so you can make different queries of one of three types:  Block the road with the number $$$x$$$. In this case, movement on the road for couriers will be forbidden. Initially all roads are unblocked. Unblock the road with the number $$$x$$$. In this case, couriers will be able to move on the road $$$x$$$ if it is repaired. Try to deliver the order to the intersection with the number $$$y$$$. In this case, one of your couriers will start moving from intersection with number $$$s$$$ you don't know and deliver the order to intersection with number $$$y$$$ if there is a path on unblocked repaired roads from intersection $$$s$$$ to intersection $$$y$$$. It is guaranteed that intersection $$$s$$$ will be chosen beforehand. Unfortunately, the city is placed at your complete disposal for a short period of time, so you can make no more than $$$100 \\cdot m$$$ requests."
  },
  {
    "title": "Misha and Apples",
    "url": "https://codeforces.com/problemset/problem/1819/D",
    "description": "Schoolboy Misha got tired of doing sports programming, so he decided to quit everything and go to the magical forest to sell magic apples.His friend Danya came to the magical forest to visit Misha. What was his surprise when he found out that Misha found a lot of friends there, the same former sports programmers. And all of them, like Misha, have their own shop where they sell magic apples. To support his friends, who have changed their lives so drastically, he decided to buy up their entire assortment.The buying process works as follows: in total there are $$$n$$$ stalls, numbered with integers from $$$1$$$ to $$$n$$$, and $$$m$$$ kinds of magic apples, numbered with integers from $$$1$$$ to $$$m$$$. Each shop sells some number of kinds of apples. Danya visits all the shops in order of increasing number, starting with the first one. Upon entering the shop he buys one magic apple of each kind sold in that shop and puts them in his backpack.However, magical apples wouldn't be magical if they were all right. The point is that when two apples of the same type end up together in the backpack, all of the apples in it magically disappear. Importantly, the disappearance happens after Danya has put the apples in the backpack and left the shop.Upon returning home, Danya realized that somewhere in the forest he had managed to lose his backpack. Unfortunately, for some shops Danya had forgotten what assortment of apples there was. Remembering only for some shops, what kinds of magical apples were sold in them, he wants to know what is the maximum number of apples he could have in his backpack after all his purchases at best."
  },
  {
    "title": "The Fox and the Complete Tree Traversal",
    "url": "https://codeforces.com/problemset/problem/1819/C",
    "description": "The fox Yae climbed the tree of the Sacred Sakura. A tree is a connected undirected graph that does not contain cycles.The fox uses her magical powers to move around the tree. Yae can jump from vertex $$$v$$$ to another vertex $$$u$$$ if and only if the distance between these vertices does not exceed $$$2$$$. In other words, in one jump Yae can jump from vertex $$$v$$$ to vertex $$$u$$$ if vertices $$$v$$$ and $$$u$$$ are connected by an edge, or if there exists such vertex $$$w$$$ that vertices $$$v$$$ and $$$w$$$ are connected by an edge, and also vertices $$$u$$$ and $$$w$$$ are connected by an edge.After Yae was able to get the sakura petal, she wondered if there was a cyclic route in the tree $$$v_1, v_2, \\ldots, v_n$$$ such that:  the fox can jump from vertex $$$v_i$$$ to vertex $$$v_{i + 1}$$$,  the fox can jump from vertex $$$v_n$$$ to vertex $$$v_1$$$,  all $$$v_i$$$ are pairwise distinct. Help the fox determine if the required traversal exists."
  },
  {
    "title": "The Butcher",
    "url": "https://codeforces.com/problemset/problem/1819/B",
    "description": "Anton plays his favorite game \"Defense of The Ancients 2\" for his favorite hero — The Butcher. Now he wants to make his own dinner. To do this he will take a rectangle of height $$$h$$$ and width $$$w$$$, then make a vertical or horizontal cut so that both resulting parts have integer sides. After that, he will put one of the parts in the box and cut the other again, and so on.More formally, a rectangle of size $$$h \\times w$$$ can be cut into two parts of sizes $$$x \\times w$$$ and $$$(h - x) \\times w$$$, where $$$x$$$ is an integer from $$$1$$$ to $$$(h - 1)$$$, or into two parts of sizes $$$h \\times y$$$ and $$$h \\times (w - y)$$$, where $$$y$$$ is an integer from $$$1$$$ to $$$(w - 1)$$$.He will repeat this operation $$$n - 1$$$ times, and then put the remaining rectangle into the box too. Thus, the box will contain $$$n$$$ rectangles, of which $$$n - 1$$$ rectangles were put in the box as a result of the cuts, and the $$$n$$$-th rectangle is the one that the Butcher has left after all $$$n - 1$$$ cuts.Unfortunately, Butcher forgot the numbers $$$h$$$ and $$$w$$$, but he still has $$$n$$$ rectangles mixed in random order. Note that Butcher didn't rotate the rectangles, but only shuffled them. Now he wants to know all possible pairs $$$(h, w)$$$ from which this set of rectangles can be obtained. And you have to help him do it!It is guaranteed that there exists at least one pair $$$(h, w)$$$ from which this set of rectangles can be obtained."
  },
  {
    "title": "Constructive Problem",
    "url": "https://codeforces.com/problemset/problem/1819/A",
    "description": "As you know, any problem that does not require the use of complex data structures is considered constructive. You are offered to solve one of such problems.You are given an array $$$a$$$ of $$$n$$$ non-negative integers. You are allowed to perform the following operation exactly once: choose some non-empty subsegment $$$a_l, a_{l+1}, \\ldots, a_r$$$ of the array $$$a$$$ and a non-negative integer $$$k$$$, and assign value $$$k$$$ to all elements of the array on the chosen subsegment.The task is to find out whether $$$\\operatorname{MEX}(a)$$$ can be increased by exactly one by performing such an operation. In other words, if before the operation $$$\\operatorname{MEX}(a) = m$$$ held, then after the operation it must hold that $$$\\operatorname{MEX}(a) = m + 1$$$.Recall that $$$\\operatorname{MEX}$$$ of a set of integers $$$c_1, c_2, \\ldots, c_k$$$ is defined as the smallest non-negative integer $$$x$$$ which does not occur in the set $$$c$$$."
  },
  {
    "title": "Indivisible",
    "url": "https://codeforces.com/problemset/problem/1818/B",
    "description": "You're given a positive integer $$$n$$$.Find a permutation $$$a_1, a_2, \\dots, a_n$$$ such that for any $$$1 \\leq l < r \\leq n$$$, the sum $$$a_l + a_{l+1} + \\dots + a_r$$$ is not divisible by $$$r-l+1$$$.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Politics",
    "url": "https://codeforces.com/problemset/problem/1818/A",
    "description": "In a debate club with $$$n$$$ members, including yourself (member $$$1$$$), there are $$$k$$$ opinions to be discussed in sequence. During each discussion, members express their agreement or disagreement with the opinion. Let's define $$$Y$$$ as the number of members who agree and $$$N$$$ as the number of members who disagree. After each discussion, members leave the club based on the following criteria:  If more members agree than disagree ($$$Y > N$$$), all members who disagreed leave the club.  If more members disagree than agree ($$$Y < N$$$), all members who agreed leave the club.  If there is a tie ($$$Y = N$$$), all members leave the club. As the club president, your goal is to stay in the club and maximize the number of members remaining after the meeting. You have access to each member's stance on all $$$k$$$ opinions before the meeting starts, and you can expel any number of members (excluding yourself) before the meeting begins.Determine the maximum number of members, including yourself, who can remain in the club after the meeting. You don't need to provide the specific expulsion strategy but only the maximum number of members that can stay. Ensure that you remain in the club after the meeting as well."
  },
  {
    "title": "Entangled Substrings",
    "url": "https://codeforces.com/problemset/problem/1817/F",
    "description": "Quantum entanglement is when two particles link together in a certain way no matter how far apart they are in space.You are given a string $$$s$$$. A pair of its non-empty substrings $$$(a, b)$$$ is called entangled if there is a (possibly empty) link string $$$c$$$ such that:  Every occurrence of $$$a$$$ in $$$s$$$ is immediately followed by $$$cb$$$;  Every occurrence of $$$b$$$ in $$$s$$$ is immediately preceded by $$$ac$$$. In other words, $$$a$$$ and $$$b$$$ occur in $$$s$$$ only as substrings of $$$acb$$$. Compute the total number of entangled pairs of substrings of $$$s$$$.A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly zero or all) characters from the beginning and several (possibly zero or all) characters from the end."
  },
  {
    "title": "Half-sum",
    "url": "https://codeforces.com/problemset/problem/1817/E",
    "description": "You're given a multiset of non-negative integers $$$\\{a_1, a_2, \\dots, a_n\\}$$$.In one step you take two elements $$$x$$$ and $$$y$$$ of the multiset, remove them and insert their mean value $$$\\frac{x + y}{2}$$$ back into the multiset.You repeat the step described above until you are left with only two numbers $$$A$$$ and $$$B$$$. What is the maximum possible value of their absolute difference $$$|A-B|$$$?Since the answer is not an integer number, output it modulo $$$10^9+7$$$."
  },
  {
    "title": "Toy Machine",
    "url": "https://codeforces.com/problemset/problem/1817/D",
    "description": "There is a toy machine with toys arranged in two rows of $$$n$$$ cells each ($$$n$$$ is odd).  Initial state for $$$n=9$$$. Initially, $$$n-2$$$ toys are placed in the non-corner cells of the top row. The bottom row is initially empty, and its leftmost, rightmost, and central cells are blocked. There are $$$4$$$ buttons to control the toy machine: left, right, up, and down marked by the letters L, R, U, and D correspondingly.When pressing L, R, U, or D, all the toys will be moved simultaneously in the corresponding direction and will only stop if they push into another toy, the wall or a blocked cell. Your goal is to move the $$$k$$$-th toy into the leftmost cell of the top row. The toys are numbered from $$$1$$$ to $$$n-2$$$ from left to right. Given $$$n$$$ and $$$k$$$, find a solution that uses at most $$$1\\,000\\,000$$$ button presses.To test out the toy machine, a web page is available that lets you play the game in real time. "
  },
  {
    "title": "Similar Polynomials",
    "url": "https://codeforces.com/problemset/problem/1817/C",
    "description": "A polynomial $$$A(x)$$$ of degree $$$d$$$ is an expression of the form $$$A(x) = a_0 + a_1 x + a_2 x^2 + \\dots + a_d x^d$$$, where $$$a_i$$$ are integers, and $$$a_d \\neq 0$$$. Two polynomials $$$A(x)$$$ and $$$B(x)$$$ are called similar if there is an integer $$$s$$$ such that for any integer $$$x$$$ it holds that$$$$$$ B(x) \\equiv A(x+s) \\pmod{10^9+7}. $$$$$$For two similar polynomials $$$A(x)$$$ and $$$B(x)$$$ of degree $$$d$$$, you're given their values in the points $$$x=0,1,\\dots, d$$$ modulo $$$10^9+7$$$.Find a value $$$s$$$ such that $$$B(x) \\equiv A(x+s) \\pmod{10^9+7}$$$ for all integers $$$x$$$."
  },
  {
    "title": "Fish Graph",
    "url": "https://codeforces.com/problemset/problem/1817/B",
    "description": "You are given a simple undirected graph with $$$n$$$ nodes and $$$m$$$ edges. Note that the graph is not necessarily connected. The nodes are labeled from $$$1$$$ to $$$n$$$.We define a graph to be a Fish Graph if it contains a simple cycle with a special node $$$u$$$ belonging to the cycle. Apart from the edges in the cycle, the graph should have exactly $$$2$$$ extra edges. Both edges should connect to node $$$u$$$, but they should not be connected to any other node of the cycle. Determine if the graph contains a subgraph that is a Fish Graph, and if so, find any such subgraph.In this problem, we define a subgraph as a graph obtained by taking any subset of the edges of the original graph.     Visualization of example 1. The red edges form one possible subgraph that is a Fish Graph. "
  },
  {
    "title": "Almost Increasing Subsequence",
    "url": "https://codeforces.com/problemset/problem/1817/A",
    "description": "A sequence is almost-increasing if it does not contain three consecutive elements $$$x, y, z$$$ such that $$$x\\ge y\\ge z$$$.You are given an array $$$a_1, a_2, \\dots, a_n$$$ and $$$q$$$ queries.Each query consists of two integers $$$1\\le l\\le r\\le n$$$. For each query, find the length of the longest almost-increasing subsequence of the subarray $$$a_l, a_{l+1}, \\dots, a_r$$$. A subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements without changing the order of the remaining elements."
  },
  {
    "title": "Grid Reconstruction",
    "url": "https://codeforces.com/problemset/problem/1816/B",
    "description": "Consider a $$$2 \\times n$$$ grid, where $$$n$$$ is an even integer. You may place the integers $$$1, 2, \\ldots, 2n$$$ on the grid, using each integer exactly once.A path is a sequence of cells achieved by starting at $$$(1, 1)$$$, then repeatedly walking either downwards or to the right, and stopping when $$$(2, n)$$$ is reached. The path should not extend beyond the grid.The cost of a path is the alternating sum of the numbers written on the cells in a path. That is, let the numbers written on the cells be $$$a_1, a_2, \\ldots, a_k$$$ (in the order that it is visited), the cost of the path is $$$a_1 - a_2 + a_3 - a_4 + \\ldots = \\sum_{i=1}^k a_i \\cdot (-1)^{i+1}$$$.Construct a way to place the integers $$$1, 2, \\ldots, 2n$$$ on the grid, such that the minimum cost over all paths from $$$(1, 1)$$$ to $$$(2, n)$$$ is maximized. If there are multiple such grids that result in the maximum value, output any of them."
  },
  {
    "title": "Ian Visits Mary",
    "url": "https://codeforces.com/problemset/problem/1816/A",
    "description": "Ian and Mary are frogs living on lattice points of the Cartesian coordinate plane, with Ian living on $$$(0,0)$$$ and Mary living on $$$(a,b)$$$. Ian would like to visit Mary by jumping around the Cartesian coordinate plane. Every second, he jumps from his current position $$$(x_p, y_p)$$$ to another lattice point $$$(x_q, y_q)$$$, such that no lattice point other than $$$(x_p, y_p)$$$ and $$$(x_q, y_q)$$$ lies on the segment between point $$$(x_p, y_p)$$$ and point $$$(x_q, y_q)$$$. As Ian wants to meet Mary as soon as possible, he wants to jump towards point $$$(a,b)$$$ using at most $$$2$$$ jumps. Unfortunately, Ian is not good at maths. Can you help him?A lattice point is defined as a point with both the $$$x$$$-coordinate and $$$y$$$-coordinate being integers."
  },
  {
    "title": "OH NO1 (-2-3-4)",
    "url": "https://codeforces.com/problemset/problem/1815/F",
    "description": "You are given an undirected graph with $$$n$$$ vertices and $$$3m$$$ edges. The graph may contain multi-edges, but does not contain self-loops. The graph satisfies the following property: the given edges can be divided into $$$m$$$ groups of $$$3$$$, such that each group is a triangle.A triangle is defined as three edges $$$(a,b)$$$, $$$(b,c)$$$ and $$$(c,a)$$$ for some three distinct vertices $$$a,b,c$$$ ($$$1 \\leq a,b,c \\leq n$$$).Initially, each vertex $$$v$$$ has a non-negative integer weight $$$a_v$$$. For every edge $$$(u,v)$$$ in the graph, you should perform the following operation exactly once:   Choose an integer $$$x$$$ between $$$1$$$ and $$$4$$$. Then increase both $$$a_u$$$ and $$$a_v$$$ by $$$x$$$. After performing all operations, the following requirement should be satisfied: if $$$u$$$ and $$$v$$$ are connected by an edge, then $$$a_u \\ne a_v$$$.It can be proven this is always possible under the constraints of the task. Output a way to do so, by outputting the choice of $$$x$$$ for each edge. It is easy to see that the order of operations does not matter. If there are multiple valid answers, output any.  "
  },
  {
    "title": "Bosco and Particle",
    "url": "https://codeforces.com/problemset/problem/1815/E",
    "description": "Bosco is studying the behaviour of particles. He decided to investigate on the peculiar behaviour of the so-called \"four-one-two\" particle. He does the following:There is a line of length $$$n+1$$$, where the topmost point is position $$$0$$$ and bottommost is position $$$n+1$$$. The particle is initially (at time $$$t=0$$$) at position $$$0$$$ and heading downwards. The particle moves at the speed of $$$1$$$ unit per second. There are $$$n$$$ oscillators at positions $$$1,2,\\ldots,n$$$.Each oscillator can be described by a binary string. The initial state of each oscillator is the first character of its binary string. When the particle hits with an oscillator, the particle reverses its direction if its current state is $$$\\texttt{1}$$$ and continues to move at the same direction if its current state is $$$\\texttt{0}$$$, and that oscillator moves on to the next state (the next state of the last state is defined as the first state). Additionally, the particle always reverses its direction when it is at position $$$0$$$ or $$$n+1$$$ at time $$$t > 0$$$.Bosco would like to know the cycle length of the movement of particle. The cycle length is defined as the minimum value of $$$c$$$ such that for any time $$$t \\ge 0$$$, the position of the particle at time $$$t$$$ is same as the position of the particle at time $$$t+c$$$. It can be proved that such value $$$c$$$ always exists. As he realises the answer might be too large, he asks you to output your answer modulo $$$998244353$$$."
  },
  {
    "title": "XOR Counting",
    "url": "https://codeforces.com/problemset/problem/1815/D",
    "description": "Given two positive integers $$$n$$$ and $$$m$$$. Find the sum of all possible values of $$$a_1\\bigoplus a_2\\bigoplus\\ldots\\bigoplus a_m$$$, where $$$a_1,a_2,\\ldots,a_m$$$ are non-negative integers such that $$$a_1+a_2+\\ldots+a_m=n$$$.Note that all possible values $$$a_1\\bigoplus a_2\\bigoplus\\ldots\\bigoplus a_m$$$ should be counted in the sum exactly once.As the answer may be too large, output your answer modulo $$$998244353$$$.Here, $$$\\bigoplus$$$ denotes the bitwise XOR operation."
  },
  {
    "title": "Between",
    "url": "https://codeforces.com/problemset/problem/1815/C",
    "description": "You are given an integer $$$n$$$, as well as $$$m$$$ pairs of integers $$$(a_i,b_i)$$$, where $$$1\\leq a_i , b_i \\leq n$$$, $$$a_i \\ne b_i$$$.You want to construct a sequence satisfying the following requirements:  All elements in the sequence are integers between $$$1$$$ and $$$n$$$.  There is exactly one element with value $$$1$$$ in the sequence.  For each $$$i$$$ ($$$1 \\le i \\le m$$$), between any two elements (on different positions) in the sequence with value $$$a_i$$$, there is at least one element with value $$$b_i$$$.  The sequence constructed has the maximum length among all possible sequences satisfying the above properties. Sometimes, it is possible that such a sequence can be arbitrarily long, in which case you should output \"INFINITE\". Otherwise, you should output \"FINITE\" and the sequence itself. If there are multiple possible constructions that yield the maximum length, output any."
  },
  {
    "title": "Sum Graph",
    "url": "https://codeforces.com/problemset/problem/1815/B",
    "description": "This is an interactive problem.There is a hidden permutation $$$p_1, p_2, \\dots, p_n$$$. Consider an undirected graph with $$$n$$$ nodes only with no edges. You can make two types of queries:  Specify an integer $$$x$$$ satisfying $$$2 \\le x \\le 2n$$$. For all integers $$$i$$$ ($$$1 \\le i \\le n$$$) such that $$$1 \\le x-i \\le n$$$, an edge between node $$$i$$$ and node $$$x-i$$$ will be added.  Query the number of edges in the shortest path between node $$$p_i$$$ and node $$$p_j$$$. As the answer to this question you will get the number of edges in the shortest path if such a path exists, or $$$-1$$$ if there is no such path. Note that you can make both types of queries in any order.Within $$$2n$$$ queries (including type $$$1$$$ and type $$$2$$$), guess two possible permutations, at least one of which is $$$p_1, p_2, \\dots, p_n$$$. You get accepted if at least one of the permutations is correct. You are allowed to guess the same permutation twice.A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array)."
  },
  {
    "title": "Ian and Array Sorting",
    "url": "https://codeforces.com/problemset/problem/1815/A",
    "description": "To thank Ian, Mary gifted an array $$$a$$$ of length $$$n$$$ to Ian. To make himself look smart, he wants to make the array in non-decreasing order by doing the following finitely many times: he chooses two adjacent elements $$$a_i$$$ and $$$a_{i+1}$$$ ($$$1\\le i\\le n-1$$$), and increases both of them by $$$1$$$ or decreases both of them by $$$1$$$. Note that, the elements of the array can become negative.As a smart person, you notice that, there are some arrays such that Ian cannot make it become non-decreasing order! Therefore, you decide to write a program to determine if it is possible to make the array in non-decreasing order."
  },
  {
    "title": "Communication Towers",
    "url": "https://codeforces.com/problemset/problem/1814/F",
    "description": "There are $$$n$$$ communication towers, numbered from $$$1$$$ to $$$n$$$, and $$$m$$$ bidirectional wires between them. Each tower has a certain set of frequencies that it accepts, the $$$i$$$-th of them accepts frequencies from $$$l_i$$$ to $$$r_i$$$.Let's say that a tower $$$b$$$ is accessible from a tower $$$a$$$, if there exists a frequency $$$x$$$ and a sequence of towers $$$a=v_1, v_2, \\dots, v_k=b$$$, where consecutive towers in the sequence are directly connected by a wire, and each of them accepts frequency $$$x$$$. Note that accessibility is not transitive, i. e if $$$b$$$ is accessible from $$$a$$$ and $$$c$$$ is accessible from $$$b$$$, then $$$c$$$ may not be accessible from $$$a$$$.Your task is to determine the towers that are accessible from the $$$1$$$-st tower."
  }
]